//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesEndpoint
{
        [TestMethod]
        public void UpdateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""8f3c35f1-64c5-4d60-b22b-6f5904af2aee"",
    ""url"": ""/v2/service_instances/8f3c35f1-64c5-4d60-b22b-6f5904af2aee"",
    ""created_at"": ""2015-04-16T12:04:30+00:00"",
    ""updated_at"": ""2015-04-16T12:04:31+00:00""
  },
  ""entity"": {
    ""name"": ""name-1431"",
    ""credentials"": {
      ""creds-key-469"": ""creds-val-469""
    },
    ""service_plan_guid"": ""4ff4dfc6-dbfc-41a3-a3f3-18e61c9fef28"",
    ""space_guid"": ""89ef8180-8ecf-4e16-b392-a9752a110fab"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/89ef8180-8ecf-4e16-b392-a9752a110fab"",
    ""service_plan_url"": ""/v2/service_plans/4ff4dfc6-dbfc-41a3-a3f3-18e61c9fef28"",
    ""service_bindings_url"": ""/v2/service_instances/8f3c35f1-64c5-4d60-b22b-6f5904af2aee/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServiceInstanceRequest value = new UpdateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.UpdateServiceInstance(guid, value).Result;


                Assert.AreEqual("8f3c35f1-64c5-4d60-b22b-6f5904af2aee", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/8f3c35f1-64c5-4d60-b22b-6f5904af2aee", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-04-16T12:04:31+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1431", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("4ff4dfc6-dbfc-41a3-a3f3-18e61c9fef28", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("89ef8180-8ecf-4e16-b392-a9752a110fab", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/89ef8180-8ecf-4e16-b392-a9752a110fab", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/4ff4dfc6-dbfc-41a3-a3f3-18e61c9fef28", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/8f3c35f1-64c5-4d60-b22b-6f5904af2aee/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""69ef9a51-ea6b-4f94-b0f1-651c9e782c14"",
        ""url"": ""/v2/service_instances/69ef9a51-ea6b-4f94-b0f1-651c9e782c14"",
        ""created_at"": ""2015-04-16T12:04:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1419"",
        ""credentials"": {
          ""creds-key-463"": ""creds-val-463""
        },
        ""service_plan_guid"": ""9dd2a027-e205-4125-877c-1b0f1eac89e5"",
        ""space_guid"": ""7f8d3f69-a059-4a3c-8419-0e6f21666189"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/7f8d3f69-a059-4a3c-8419-0e6f21666189"",
        ""service_plan_url"": ""/v2/service_plans/9dd2a027-e205-4125-877c-1b0f1eac89e5"",
        ""service_bindings_url"": ""/v2/service_instances/69ef9a51-ea6b-4f94-b0f1-651c9e782c14/service_bindings""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceInstances.ListAllServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("69ef9a51-ea6b-4f94-b0f1-651c9e782c14", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/69ef9a51-ea6b-4f94-b0f1-651c9e782c14", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1419", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("9dd2a027-e205-4125-877c-1b0f1eac89e5", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("7f8d3f69-a059-4a3c-8419-0e6f21666189", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("/v2/spaces/7f8d3f69-a059-4a3c-8419-0e6f21666189", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/9dd2a027-e205-4125-877c-1b0f1eac89e5", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/69ef9a51-ea6b-4f94-b0f1-651c9e782c14/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void CreateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""b10b1f19-500b-4fb3-89aa-bc727e1d7b10"",
    ""url"": ""/v2/service_instances/b10b1f19-500b-4fb3-89aa-bc727e1d7b10"",
    ""created_at"": ""2015-04-16T12:04:31+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {
      ""creds-key-473"": ""creds-val-473""
    },
    ""service_plan_guid"": ""06f4e5a8-fc14-4d97-9bea-5bc92dec2cfa"",
    ""space_guid"": ""6b65de44-ce3e-444f-988c-b29ef16f2f07"",
    ""gateway_data"": ""CONFIGURATION"",
    ""dashboard_url"": ""http://dashboard.example.com"",
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/6b65de44-ce3e-444f-988c-b29ef16f2f07"",
    ""service_plan_url"": ""/v2/service_plans/06f4e5a8-fc14-4d97-9bea-5bc92dec2cfa"",
    ""service_bindings_url"": ""/v2/service_instances/b10b1f19-500b-4fb3-89aa-bc727e1d7b10/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceInstanceRequest value = new CreateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.CreateServiceInstance(value).Result;


                Assert.AreEqual("b10b1f19-500b-4fb3-89aa-bc727e1d7b10", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/b10b1f19-500b-4fb3-89aa-bc727e1d7b10", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:31+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("06f4e5a8-fc14-4d97-9bea-5bc92dec2cfa", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("6b65de44-ce3e-444f-988c-b29ef16f2f07", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("CONFIGURATION", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("http://dashboard.example.com", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/6b65de44-ce3e-444f-988c-b29ef16f2f07", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/06f4e5a8-fc14-4d97-9bea-5bc92dec2cfa", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/b10b1f19-500b-4fb3-89aa-bc727e1d7b10/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServiceInstances.DeleteServiceInstance(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""91c12f93-1252-45a5-b251-8e2a4451c58d"",
        ""url"": ""/v2/service_bindings/91c12f93-1252-45a5-b251-8e2a4451c58d"",
        ""created_at"": ""2015-04-16T12:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""c61a57c1-ad20-4545-8123-dd2f81f96ee0"",
        ""service_instance_guid"": ""1cd0a0f8-13c9-44a2-8aaf-a96a2cf845a7"",
        ""credentials"": {
          ""creds-key-482"": ""creds-val-482""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/c61a57c1-ad20-4545-8123-dd2f81f96ee0"",
        ""service_instance_url"": ""/v2/service_instances/1cd0a0f8-13c9-44a2-8aaf-a96a2cf845a7""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllServiceBindingsForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("91c12f93-1252-45a5-b251-8e2a4451c58d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/91c12f93-1252-45a5-b251-8e2a4451c58d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:31+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("c61a57c1-ad20-4545-8123-dd2f81f96ee0", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("1cd0a0f8-13c9-44a2-8aaf-a96a2cf845a7", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/c61a57c1-ad20-4545-8123-dd2f81f96ee0", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/service_instances/1cd0a0f8-13c9-44a2-8aaf-a96a2cf845a7", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""changed_count"":1}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? service_plan_guid = Guid.NewGuid();

                MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest value = new MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest();


                var obj = cfClient.ServiceInstances.MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimental(service_plan_guid, value).Result;


                Assert.AreEqual("1", TestUtil.ToTestableString(obj.ChangedCount), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""793f6e72-2f3d-45a5-b2c6-c32fc800b4b8"",
    ""url"": ""/v2/service_instances/793f6e72-2f3d-45a5-b2c6-c32fc800b4b8"",
    ""created_at"": ""2015-04-16T12:04:31+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1436"",
    ""credentials"": {
      ""creds-key-472"": ""creds-val-472""
    },
    ""service_plan_guid"": ""10231b18-66aa-4572-8ff7-53e4b9357518"",
    ""space_guid"": ""546a3a36-2695-41ab-94b3-ff14132e96c3"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/546a3a36-2695-41ab-94b3-ff14132e96c3"",
    ""service_plan_url"": ""/v2/service_plans/10231b18-66aa-4572-8ff7-53e4b9357518"",
    ""service_bindings_url"": ""/v2/service_instances/793f6e72-2f3d-45a5-b2c6-c32fc800b4b8/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrieveServiceInstance(guid).Result;


                Assert.AreEqual("793f6e72-2f3d-45a5-b2c6-c32fc800b4b8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/793f6e72-2f3d-45a5-b2c6-c32fc800b4b8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:31+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1436", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("10231b18-66aa-4572-8ff7-53e4b9357518", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("546a3a36-2695-41ab-94b3-ff14132e96c3", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/546a3a36-2695-41ab-94b3-ff14132e96c3", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/10231b18-66aa-4572-8ff7-53e4b9357518", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/793f6e72-2f3d-45a5-b2c6-c32fc800b4b8/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void RetrievingPermissionsOnServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""manage"":true}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrievingPermissionsOnServiceInstance(guid).Result;


                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);

            }
        }

    }
}