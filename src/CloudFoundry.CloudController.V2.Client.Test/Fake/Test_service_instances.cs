//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesEndpoint
{
        [TestMethod]
        public void UpdateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""36e877a7-2482-43bb-9a02-64b5ffccffc0"",
    ""url"": ""/v2/service_instances/36e877a7-2482-43bb-9a02-64b5ffccffc0"",
    ""created_at"": ""2015-03-25T13:49:00+00:00"",
    ""updated_at"": ""2015-03-25T13:49:00+00:00""
  },
  ""entity"": {
    ""name"": ""name-1926"",
    ""credentials"": {
      ""creds-key-592"": ""creds-val-592""
    },
    ""service_plan_guid"": ""b8808c51-9814-4c89-893f-c4a196affaed"",
    ""space_guid"": ""51a252e8-bce6-4d00-b5d4-3bc8ce4edbe6"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/51a252e8-bce6-4d00-b5d4-3bc8ce4edbe6"",
    ""service_plan_url"": ""/v2/service_plans/b8808c51-9814-4c89-893f-c4a196affaed"",
    ""service_bindings_url"": ""/v2/service_instances/36e877a7-2482-43bb-9a02-64b5ffccffc0/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServiceInstanceRequest value = new UpdateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.UpdateServiceInstance(guid, value).Result;


                Assert.AreEqual("36e877a7-2482-43bb-9a02-64b5ffccffc0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/36e877a7-2482-43bb-9a02-64b5ffccffc0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:49:00+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-03-25T13:49:00+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1926", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("b8808c51-9814-4c89-893f-c4a196affaed", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("51a252e8-bce6-4d00-b5d4-3bc8ce4edbe6", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/51a252e8-bce6-4d00-b5d4-3bc8ce4edbe6", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/b8808c51-9814-4c89-893f-c4a196affaed", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/36e877a7-2482-43bb-9a02-64b5ffccffc0/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dd6efc7b-0421-4164-90a3-190b6de54f48"",
        ""url"": ""/v2/service_instances/dd6efc7b-0421-4164-90a3-190b6de54f48"",
        ""created_at"": ""2015-03-25T13:49:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1931"",
        ""credentials"": {
          ""creds-key-595"": ""creds-val-595""
        },
        ""service_plan_guid"": ""5ea5f528-ba68-47a6-9211-23bfa445b1da"",
        ""space_guid"": ""6a8ed548-f730-49a9-9935-b8b5afaf4b4a"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/6a8ed548-f730-49a9-9935-b8b5afaf4b4a"",
        ""service_plan_url"": ""/v2/service_plans/5ea5f528-ba68-47a6-9211-23bfa445b1da"",
        ""service_bindings_url"": ""/v2/service_instances/dd6efc7b-0421-4164-90a3-190b6de54f48/service_bindings""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceInstances.ListAllServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("dd6efc7b-0421-4164-90a3-190b6de54f48", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/dd6efc7b-0421-4164-90a3-190b6de54f48", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:49:00+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1931", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("5ea5f528-ba68-47a6-9211-23bfa445b1da", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("6a8ed548-f730-49a9-9935-b8b5afaf4b4a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("/v2/spaces/6a8ed548-f730-49a9-9935-b8b5afaf4b4a", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/5ea5f528-ba68-47a6-9211-23bfa445b1da", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/dd6efc7b-0421-4164-90a3-190b6de54f48/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void CreateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""ee65fa63-bbe9-45e1-ab3b-be5ce07daa43"",
    ""url"": ""/v2/service_instances/ee65fa63-bbe9-45e1-ab3b-be5ce07daa43"",
    ""created_at"": ""2015-03-25T13:49:00+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {
      ""creds-key-584"": ""creds-val-584""
    },
    ""service_plan_guid"": ""b4fd0012-7ffb-4197-a7a9-454051b52fbe"",
    ""space_guid"": ""32c553a4-9f07-4b42-b15e-e7a8d0e7d1fd"",
    ""gateway_data"": ""CONFIGURATION"",
    ""dashboard_url"": ""http://dashboard.example.com"",
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/32c553a4-9f07-4b42-b15e-e7a8d0e7d1fd"",
    ""service_plan_url"": ""/v2/service_plans/b4fd0012-7ffb-4197-a7a9-454051b52fbe"",
    ""service_bindings_url"": ""/v2/service_instances/ee65fa63-bbe9-45e1-ab3b-be5ce07daa43/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceInstanceRequest value = new CreateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.CreateServiceInstance(value).Result;


                Assert.AreEqual("ee65fa63-bbe9-45e1-ab3b-be5ce07daa43", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/ee65fa63-bbe9-45e1-ab3b-be5ce07daa43", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:49:00+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("b4fd0012-7ffb-4197-a7a9-454051b52fbe", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("32c553a4-9f07-4b42-b15e-e7a8d0e7d1fd", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("CONFIGURATION", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("http://dashboard.example.com", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/32c553a4-9f07-4b42-b15e-e7a8d0e7d1fd", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/b4fd0012-7ffb-4197-a7a9-454051b52fbe", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/ee65fa63-bbe9-45e1-ab3b-be5ce07daa43/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServiceInstances.DeleteServiceInstance(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""73b7b37f-d8a5-4ef9-85cc-c64d82e7c747"",
        ""url"": ""/v2/service_bindings/73b7b37f-d8a5-4ef9-85cc-c64d82e7c747"",
        ""created_at"": ""2015-03-25T13:49:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""74f0c6ef-00ce-4659-8e78-d00715d44517"",
        ""service_instance_guid"": ""6b14c71a-27be-47bb-9802-bc7e269d98bf"",
        ""credentials"": {
          ""creds-key-577"": ""creds-val-577""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/74f0c6ef-00ce-4659-8e78-d00715d44517"",
        ""service_instance_url"": ""/v2/service_instances/6b14c71a-27be-47bb-9802-bc7e269d98bf""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllServiceBindingsForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("73b7b37f-d8a5-4ef9-85cc-c64d82e7c747", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/73b7b37f-d8a5-4ef9-85cc-c64d82e7c747", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:49:00+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("74f0c6ef-00ce-4659-8e78-d00715d44517", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("6b14c71a-27be-47bb-9802-bc7e269d98bf", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/74f0c6ef-00ce-4659-8e78-d00715d44517", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/service_instances/6b14c71a-27be-47bb-9802-bc7e269d98bf", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""changed_count"":1}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? service_plan_guid = Guid.NewGuid();

                MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest value = new MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest();


                var obj = cfClient.ServiceInstances.MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimental(service_plan_guid, value).Result;


                Assert.AreEqual("1", TestUtil.ToTestableString(obj.ChangedCount), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""8709a1c6-662f-47e4-8074-39352f2a3e19"",
    ""url"": ""/v2/service_instances/8709a1c6-662f-47e4-8074-39352f2a3e19"",
    ""created_at"": ""2015-03-25T13:49:00+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1919"",
    ""credentials"": {
      ""creds-key-589"": ""creds-val-589""
    },
    ""service_plan_guid"": ""5a100178-6968-4078-802a-96fd3a3a0294"",
    ""space_guid"": ""077be4f2-7503-4f11-89dc-bc1bba3262c8"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/077be4f2-7503-4f11-89dc-bc1bba3262c8"",
    ""service_plan_url"": ""/v2/service_plans/5a100178-6968-4078-802a-96fd3a3a0294"",
    ""service_bindings_url"": ""/v2/service_instances/8709a1c6-662f-47e4-8074-39352f2a3e19/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrieveServiceInstance(guid).Result;


                Assert.AreEqual("8709a1c6-662f-47e4-8074-39352f2a3e19", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/8709a1c6-662f-47e4-8074-39352f2a3e19", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:49:00+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1919", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("5a100178-6968-4078-802a-96fd3a3a0294", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("077be4f2-7503-4f11-89dc-bc1bba3262c8", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/077be4f2-7503-4f11-89dc-bc1bba3262c8", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/5a100178-6968-4078-802a-96fd3a3a0294", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/8709a1c6-662f-47e4-8074-39352f2a3e19/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void RetrievingPermissionsOnServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""manage"":true}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrievingPermissionsOnServiceInstance(guid).Result;


                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);

            }
        }

    }
}