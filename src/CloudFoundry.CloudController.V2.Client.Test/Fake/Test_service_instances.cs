//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesEndpoint
{
        [TestMethod]
        public void BindingServiceInstanceToRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""f6a46d54-82a6-40e1-a5fb-242a1dba147a"",
    ""url"": ""/v2/service_instances/1d89a957-c412-42e6-be54-b4788f91f3b4"",
    ""created_at"": ""2016-09-02T11:52:07Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-652"",
    ""credentials"": {
      ""creds-key-12"": ""creds-val-12""
    },
    ""service_plan_guid"": ""f6a46d54-82a6-40e1-a5fb-242a1dba147a"",
    ""space_guid"": ""f6a46d54-82a6-40e1-a5fb-242a1dba147a"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": null,
    ""tags"": [

    ],
    ""space_url"": ""/v2/spaces/959d353f-19f8-4abd-a1c5-6448b89ee350"",
    ""service_plan_url"": ""/v2/service_plans/4a69b14b-9d24-4cae-a2d8-37dba71cda6d"",
    ""service_bindings_url"": ""/v2/service_instances/1d89a957-c412-42e6-be54-b4788f91f3b4/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/1d89a957-c412-42e6-be54-b4788f91f3b4/service_keys"",
    ""routes_url"": ""/v2/service_instances/1d89a957-c412-42e6-be54-b4788f91f3b4/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? service_instance_guid = Guid.NewGuid();

                Guid? route_guid = Guid.NewGuid();

                BindingServiceInstanceToRouteRequest value = new BindingServiceInstanceToRouteRequest();


                var obj = cfClient.ServiceInstances.BindingServiceInstanceToRoute(service_instance_guid, route_guid, value).Result;


                Assert.AreEqual("f6a46d54-82a6-40e1-a5fb-242a1dba147a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/1d89a957-c412-42e6-be54-b4788f91f3b4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:07Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-652", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("f6a46d54-82a6-40e1-a5fb-242a1dba147a", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("f6a46d54-82a6-40e1-a5fb-242a1dba147a", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.LastOperation), true);
                Assert.AreEqual("/v2/spaces/959d353f-19f8-4abd-a1c5-6448b89ee350", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/4a69b14b-9d24-4cae-a2d8-37dba71cda6d", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/1d89a957-c412-42e6-be54-b4788f91f3b4/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/1d89a957-c412-42e6-be54-b4788f91f3b4/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/1d89a957-c412-42e6-be54-b4788f91f3b4/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void RetrievingPermissionsOnServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""manage"": true
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrievingPermissionsOnServiceInstance(guid).Result;


                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);

            }
        }

        [TestMethod]
        public void ListAllRoutesForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1a597ba6-26f2-4744-939e-410d74a787b2"",
        ""url"": ""/v2/routes/582dc993-3128-4a76-9874-aa8e8c4b836e"",
        ""created_at"": ""2016-09-02T11:52:07Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-12"",
        ""path"": """",
        ""domain_guid"": ""1a597ba6-26f2-4744-939e-410d74a787b2"",
        ""space_guid"": ""1a597ba6-26f2-4744-939e-410d74a787b2"",
        ""service_instance_guid"": ""1a597ba6-26f2-4744-939e-410d74a787b2"",
        ""port"": null,
        ""domain_url"": ""/v2/private_domains/09040a7e-3b3c-41dc-8f1a-ff8c2dc0b729"",
        ""space_url"": ""/v2/spaces/1dee9a15-aeea-4863-a3ac-69667a2392e2"",
        ""service_instance_url"": ""/v2/service_instances/278512a7-ea77-4ed2-9fc6-cb6745da022d"",
        ""apps_url"": ""/v2/routes/582dc993-3128-4a76-9874-aa8e8c4b836e/apps"",
        ""route_mappings_url"": ""/v2/routes/582dc993-3128-4a76-9874-aa8e8c4b836e/route_mappings""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllRoutesForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1a597ba6-26f2-4744-939e-410d74a787b2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/582dc993-3128-4a76-9874-aa8e8c4b836e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:07Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("host-12", TestUtil.ToTestableString(obj[0].Host), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Path), true);
                Assert.AreEqual("1a597ba6-26f2-4744-939e-410d74a787b2", TestUtil.ToTestableString(obj[0].DomainGuid), true);
                Assert.AreEqual("1a597ba6-26f2-4744-939e-410d74a787b2", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("1a597ba6-26f2-4744-939e-410d74a787b2", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Port), true);
                Assert.AreEqual("/v2/private_domains/09040a7e-3b3c-41dc-8f1a-ff8c2dc0b729", TestUtil.ToTestableString(obj[0].DomainUrl), true);
                Assert.AreEqual("/v2/spaces/1dee9a15-aeea-4863-a3ac-69667a2392e2", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/service_instances/278512a7-ea77-4ed2-9fc6-cb6745da022d", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);
                Assert.AreEqual("/v2/routes/582dc993-3128-4a76-9874-aa8e8c4b836e/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/routes/582dc993-3128-4a76-9874-aa8e8c4b836e/route_mappings", TestUtil.ToTestableString(obj[0].RouteMappingsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d73e2744-4fe1-4197-bf73-fb989050a8c4"",
        ""url"": ""/v2/service_instances/49c799f2-f5fb-47ce-8b62-e20e80380284"",
        ""created_at"": ""2016-09-02T11:52:08Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-707"",
        ""credentials"": {
          ""creds-key-21"": ""creds-val-21""
        },
        ""service_plan_guid"": ""d73e2744-4fe1-4197-bf73-fb989050a8c4"",
        ""space_guid"": ""d73e2744-4fe1-4197-bf73-fb989050a8c4"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": {
          ""type"": ""create"",
          ""state"": ""succeeded"",
          ""description"": ""service broker-provided description"",
          ""updated_at"": ""2016-09-02T11:52:08Z"",
          ""created_at"": ""2016-09-02T11:52:08Z""
        },
        ""tags"": [
          ""accounting"",
          ""mongodb""
        ],
        ""space_url"": ""/v2/spaces/fd27c08f-729f-43f6-bb7f-7c6c1f30bef3"",
        ""service_plan_url"": ""/v2/service_plans/774277d7-716c-45d9-a35c-8f9b22717c1d"",
        ""service_bindings_url"": ""/v2/service_instances/49c799f2-f5fb-47ce-8b62-e20e80380284/service_bindings"",
        ""service_keys_url"": ""/v2/service_instances/49c799f2-f5fb-47ce-8b62-e20e80380284/service_keys"",
        ""routes_url"": ""/v2/service_instances/49c799f2-f5fb-47ce-8b62-e20e80380284/routes""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceInstances.ListAllServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d73e2744-4fe1-4197-bf73-fb989050a8c4", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/49c799f2-f5fb-47ce-8b62-e20e80380284", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:08Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-707", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("d73e2744-4fe1-4197-bf73-fb989050a8c4", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("d73e2744-4fe1-4197-bf73-fb989050a8c4", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("/v2/spaces/fd27c08f-729f-43f6-bb7f-7c6c1f30bef3", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/774277d7-716c-45d9-a35c-8f9b22717c1d", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/49c799f2-f5fb-47ce-8b62-e20e80380284/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/49c799f2-f5fb-47ce-8b62-e20e80380284/service_keys", TestUtil.ToTestableString(obj[0].ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/49c799f2-f5fb-47ce-8b62-e20e80380284/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""d9b47622-1b8c-43f8-9171-6b1be3bd51c9"",
    ""url"": ""/v2/service_instances/362d8994-8573-406b-9597-152e497fd531"",
    ""created_at"": ""2016-09-02T11:52:08Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-679"",
    ""credentials"": {
      ""creds-key-17"": ""creds-val-17""
    },
    ""service_plan_guid"": ""d9b47622-1b8c-43f8-9171-6b1be3bd51c9"",
    ""space_guid"": ""d9b47622-1b8c-43f8-9171-6b1be3bd51c9"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""succeeded"",
      ""description"": ""service broker-provided description"",
      ""updated_at"": ""2016-09-02T11:52:08Z"",
      ""created_at"": ""2016-09-02T11:52:08Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/84d8a4da-1b4d-42c1-a5ff-804791af0a26"",
    ""service_plan_url"": ""/v2/service_plans/ee9074df-d664-4824-880a-ffbb327dab99"",
    ""service_bindings_url"": ""/v2/service_instances/362d8994-8573-406b-9597-152e497fd531/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/362d8994-8573-406b-9597-152e497fd531/service_keys"",
    ""routes_url"": ""/v2/service_instances/362d8994-8573-406b-9597-152e497fd531/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrieveServiceInstance(guid).Result;


                Assert.AreEqual("d9b47622-1b8c-43f8-9171-6b1be3bd51c9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/362d8994-8573-406b-9597-152e497fd531", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:08Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-679", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("d9b47622-1b8c-43f8-9171-6b1be3bd51c9", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("d9b47622-1b8c-43f8-9171-6b1be3bd51c9", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/84d8a4da-1b4d-42c1-a5ff-804791af0a26", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/ee9074df-d664-4824-880a-ffbb327dab99", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/362d8994-8573-406b-9597-152e497fd531/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/362d8994-8573-406b-9597-152e497fd531/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/362d8994-8573-406b-9597-152e497fd531/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void CreateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""4be4cbef-1a35-4123-947b-581c401650aa"",
    ""url"": ""/v2/service_instances/dd1a7ad4-563b-4f6f-9397-526bfa5e62e8"",
    ""created_at"": ""2016-09-02T11:52:08Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {

    },
    ""service_plan_guid"": ""4be4cbef-1a35-4123-947b-581c401650aa"",
    ""space_guid"": ""4be4cbef-1a35-4123-947b-581c401650aa"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": null,
      ""created_at"": ""2016-09-02T11:52:08Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/5936211d-106a-46be-ace5-84573c96f324"",
    ""service_plan_url"": ""/v2/service_plans/213ac215-7945-44e9-baa7-a835bf67781e"",
    ""service_bindings_url"": ""/v2/service_instances/dd1a7ad4-563b-4f6f-9397-526bfa5e62e8/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/dd1a7ad4-563b-4f6f-9397-526bfa5e62e8/service_keys"",
    ""routes_url"": ""/v2/service_instances/dd1a7ad4-563b-4f6f-9397-526bfa5e62e8/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceInstanceRequest value = new CreateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.CreateServiceInstance(value).Result;


                Assert.AreEqual("4be4cbef-1a35-4123-947b-581c401650aa", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/dd1a7ad4-563b-4f6f-9397-526bfa5e62e8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:08Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("4be4cbef-1a35-4123-947b-581c401650aa", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("4be4cbef-1a35-4123-947b-581c401650aa", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/5936211d-106a-46be-ace5-84573c96f324", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/213ac215-7945-44e9-baa7-a835bf67781e", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/dd1a7ad4-563b-4f6f-9397-526bfa5e62e8/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/dd1a7ad4-563b-4f6f-9397-526bfa5e62e8/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/dd1a7ad4-563b-4f6f-9397-526bfa5e62e8/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceKeysForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dcfb8bf7-95fe-4fa7-b972-a3bbb39ce4d6"",
        ""url"": ""/v2/service_keys/9664bd30-bc55-4884-a87c-73e48c17f3bd"",
        ""created_at"": ""2016-09-02T11:52:07Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""a-service-key"",
        ""service_instance_guid"": ""dcfb8bf7-95fe-4fa7-b972-a3bbb39ce4d6"",
        ""credentials"": {
          ""creds-key-11"": ""creds-val-11""
        },
        ""service_instance_url"": ""/v2/service_instances/064e4748-ba56-40ff-b881-a86f03c7a27c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllServiceKeysForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("dcfb8bf7-95fe-4fa7-b972-a3bbb39ce4d6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_keys/9664bd30-bc55-4884-a87c-73e48c17f3bd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:07Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("a-service-key", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("dcfb8bf7-95fe-4fa7-b972-a3bbb39ce4d6", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("/v2/service_instances/064e4748-ba56-40ff-b881-a86f03c7a27c", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""4c36f0b7-6e84-473a-890a-70f7352a9491"",
    ""url"": ""/v2/service_instances/b64cd597-8fe1-4fb2-a39b-6ea343096c5f"",
    ""created_at"": ""2016-09-02T11:52:08Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-685"",
    ""credentials"": {
      ""creds-key-18"": ""creds-val-18""
    },
    ""service_plan_guid"": ""4c36f0b7-6e84-473a-890a-70f7352a9491"",
    ""space_guid"": ""4c36f0b7-6e84-473a-890a-70f7352a9491"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""delete"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2016-09-02T11:52:08Z"",
      ""created_at"": ""2016-09-02T11:52:08Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/d5068c9f-31d4-4b74-825e-28d32ad1305c"",
    ""service_plan_url"": ""/v2/service_plans/fc3933e5-ec72-4a2c-ab92-d19c4b6bab65"",
    ""service_bindings_url"": ""/v2/service_instances/b64cd597-8fe1-4fb2-a39b-6ea343096c5f/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/b64cd597-8fe1-4fb2-a39b-6ea343096c5f/service_keys"",
    ""routes_url"": ""/v2/service_instances/b64cd597-8fe1-4fb2-a39b-6ea343096c5f/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.DeleteServiceInstance(guid).Result;


                Assert.AreEqual("4c36f0b7-6e84-473a-890a-70f7352a9491", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/b64cd597-8fe1-4fb2-a39b-6ea343096c5f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:08Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-685", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("4c36f0b7-6e84-473a-890a-70f7352a9491", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("4c36f0b7-6e84-473a-890a-70f7352a9491", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/d5068c9f-31d4-4b74-825e-28d32ad1305c", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/fc3933e5-ec72-4a2c-ab92-d19c4b6bab65", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/b64cd597-8fe1-4fb2-a39b-6ea343096c5f/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/b64cd597-8fe1-4fb2-a39b-6ea343096c5f/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/b64cd597-8fe1-4fb2-a39b-6ea343096c5f/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void UnbindingServiceInstanceFromRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? service_instance_guid = Guid.NewGuid();

                Guid? route_guid = Guid.NewGuid();


                cfClient.ServiceInstances.UnbindingServiceInstanceFromRoute(service_instance_guid, route_guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b81d4e1c-4f75-4ab9-a860-3be3839b2efd"",
        ""url"": ""/v2/service_bindings/dffadc0d-cb88-4e0f-ab25-487bcd74baa1"",
        ""created_at"": ""2016-09-02T11:52:07Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""b81d4e1c-4f75-4ab9-a860-3be3839b2efd"",
        ""service_instance_guid"": ""b81d4e1c-4f75-4ab9-a860-3be3839b2efd"",
        ""credentials"": {
          ""creds-key-16"": ""creds-val-16""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""volume_mounts"": [

        ],
        ""app_url"": ""/v2/apps/97afa2eb-9e73-4ab0-97ce-17461f96f736"",
        ""service_instance_url"": ""/v2/service_instances/b03543bc-6552-470e-85df-a94b8c1de8bd""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllServiceBindingsForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b81d4e1c-4f75-4ab9-a860-3be3839b2efd", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/dffadc0d-cb88-4e0f-ab25-487bcd74baa1", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:07Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("b81d4e1c-4f75-4ab9-a860-3be3839b2efd", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("b81d4e1c-4f75-4ab9-a860-3be3839b2efd", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/97afa2eb-9e73-4ab0-97ce-17461f96f736", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/service_instances/b03543bc-6552-470e-85df-a94b8c1de8bd", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void UpdateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""e99d9227-ca6e-4256-a3bb-3ab7e4079595"",
    ""url"": ""/v2/service_instances/860eb8dc-c1b5-417a-aaa0-330de6bdd505"",
    ""created_at"": ""2016-09-02T11:52:08Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-700"",
    ""credentials"": {
      ""creds-key-20"": ""creds-val-20""
    },
    ""service_plan_guid"": ""e99d9227-ca6e-4256-a3bb-3ab7e4079595"",
    ""space_guid"": ""e99d9227-ca6e-4256-a3bb-3ab7e4079595"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""update"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2016-09-02T11:52:08Z"",
      ""created_at"": ""2016-09-02T11:52:08Z""
    },
    ""tags"": [

    ],
    ""space_url"": ""/v2/spaces/c20fee26-8ae1-40da-93fa-5ac1a36ff688"",
    ""service_plan_url"": ""/v2/service_plans/13b8f6e2-4596-42f0-b4ff-a6ba3441ae1b"",
    ""service_bindings_url"": ""/v2/service_instances/860eb8dc-c1b5-417a-aaa0-330de6bdd505/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/860eb8dc-c1b5-417a-aaa0-330de6bdd505/service_keys"",
    ""routes_url"": ""/v2/service_instances/860eb8dc-c1b5-417a-aaa0-330de6bdd505/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServiceInstanceRequest value = new UpdateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.UpdateServiceInstance(guid, value).Result;


                Assert.AreEqual("e99d9227-ca6e-4256-a3bb-3ab7e4079595", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/860eb8dc-c1b5-417a-aaa0-330de6bdd505", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:08Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-700", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("e99d9227-ca6e-4256-a3bb-3ab7e4079595", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("e99d9227-ca6e-4256-a3bb-3ab7e4079595", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/c20fee26-8ae1-40da-93fa-5ac1a36ff688", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/13b8f6e2-4596-42f0-b4ff-a6ba3441ae1b", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/860eb8dc-c1b5-417a-aaa0-330de6bdd505/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/860eb8dc-c1b5-417a-aaa0-330de6bdd505/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/860eb8dc-c1b5-417a-aaa0-330de6bdd505/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

    }
}