//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesEndpoint
{
        [TestMethod]
        public void BindingServiceInstanceToRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""870dd3b3-17f0-4db9-bdb2-83b8f8b6778e"",
    ""url"": ""/v2/service_instances/d673a952-4220-4e84-ae70-9bde81108a19"",
    ""created_at"": ""2016-03-21T10:59:53Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2564"",
    ""credentials"": {
      ""creds-key-68"": ""creds-val-68""
    },
    ""service_plan_guid"": ""870dd3b3-17f0-4db9-bdb2-83b8f8b6778e"",
    ""space_guid"": ""870dd3b3-17f0-4db9-bdb2-83b8f8b6778e"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": null,
    ""tags"": [

    ],
    ""space_url"": ""/v2/spaces/d9521137-77c9-4d1d-9980-99ca9f23bc90"",
    ""service_plan_url"": ""/v2/service_plans/21804683-efe3-4827-af7a-e4325dada960"",
    ""service_bindings_url"": ""/v2/service_instances/d673a952-4220-4e84-ae70-9bde81108a19/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/d673a952-4220-4e84-ae70-9bde81108a19/service_keys"",
    ""routes_url"": ""/v2/service_instances/d673a952-4220-4e84-ae70-9bde81108a19/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? service_instance_guid = Guid.NewGuid();

                Guid? route_guid = Guid.NewGuid();

                BindingServiceInstanceToRouteRequest value = new BindingServiceInstanceToRouteRequest();


                var obj = cfClient.ServiceInstances.BindingServiceInstanceToRoute(service_instance_guid, route_guid, value).Result;


                Assert.AreEqual("870dd3b3-17f0-4db9-bdb2-83b8f8b6778e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/d673a952-4220-4e84-ae70-9bde81108a19", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2564", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("870dd3b3-17f0-4db9-bdb2-83b8f8b6778e", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("870dd3b3-17f0-4db9-bdb2-83b8f8b6778e", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.LastOperation), true);
                Assert.AreEqual("/v2/spaces/d9521137-77c9-4d1d-9980-99ca9f23bc90", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/21804683-efe3-4827-af7a-e4325dada960", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/d673a952-4220-4e84-ae70-9bde81108a19/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/d673a952-4220-4e84-ae70-9bde81108a19/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/d673a952-4220-4e84-ae70-9bde81108a19/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void RetrievingPermissionsOnServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""manage"": true
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrievingPermissionsOnServiceInstance(guid).Result;


                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);

            }
        }

        [TestMethod]
        public void ListAllRoutesForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ac854077-86d7-47a6-ba3e-0bcb30c2dfac"",
        ""url"": ""/v2/routes/9d3cf560-14ec-4102-8a1d-2455e193d508"",
        ""created_at"": ""2016-03-21T10:59:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-25"",
        ""path"": """",
        ""domain_guid"": ""ac854077-86d7-47a6-ba3e-0bcb30c2dfac"",
        ""space_guid"": ""ac854077-86d7-47a6-ba3e-0bcb30c2dfac"",
        ""service_instance_guid"": ""ac854077-86d7-47a6-ba3e-0bcb30c2dfac"",
        ""port"": 0,
        ""domain_url"": ""/v2/domains/c732b07e-e9c6-4ac9-beae-cf926667ee44"",
        ""space_url"": ""/v2/spaces/944ff159-fc30-44df-b222-15252f3b9ba7"",
        ""service_instance_url"": ""/v2/service_instances/7e71a6ee-fa9f-453d-9b78-dbc6583cb0cb"",
        ""apps_url"": ""/v2/routes/9d3cf560-14ec-4102-8a1d-2455e193d508/apps""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllRoutesForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ac854077-86d7-47a6-ba3e-0bcb30c2dfac", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/9d3cf560-14ec-4102-8a1d-2455e193d508", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("host-25", TestUtil.ToTestableString(obj[0].Host), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Path), true);
                Assert.AreEqual("ac854077-86d7-47a6-ba3e-0bcb30c2dfac", TestUtil.ToTestableString(obj[0].DomainGuid), true);
                Assert.AreEqual("ac854077-86d7-47a6-ba3e-0bcb30c2dfac", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("ac854077-86d7-47a6-ba3e-0bcb30c2dfac", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj[0].Port), true);
                Assert.AreEqual("/v2/domains/c732b07e-e9c6-4ac9-beae-cf926667ee44", TestUtil.ToTestableString(obj[0].DomainUrl), true);
                Assert.AreEqual("/v2/spaces/944ff159-fc30-44df-b222-15252f3b9ba7", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/service_instances/7e71a6ee-fa9f-453d-9b78-dbc6583cb0cb", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);
                Assert.AreEqual("/v2/routes/9d3cf560-14ec-4102-8a1d-2455e193d508/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""07ae301b-bc08-4d50-998f-107545b95b8a"",
        ""url"": ""/v2/service_instances/0f309ab7-fdad-4fc4-89ea-0f8ee719e2b2"",
        ""created_at"": ""2016-03-21T10:59:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2526"",
        ""credentials"": {
          ""creds-key-61"": ""creds-val-61""
        },
        ""service_plan_guid"": ""07ae301b-bc08-4d50-998f-107545b95b8a"",
        ""space_guid"": ""07ae301b-bc08-4d50-998f-107545b95b8a"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": {
          ""type"": ""create"",
          ""state"": ""succeeded"",
          ""description"": ""service broker-provided description"",
          ""updated_at"": ""2016-03-21T10:59:52Z"",
          ""created_at"": ""2016-03-21T10:59:52Z""
        },
        ""tags"": [
          ""accounting"",
          ""mongodb""
        ],
        ""space_url"": ""/v2/spaces/9ead61c9-ce76-4767-b04f-8a72ba4f2c4c"",
        ""service_plan_url"": ""/v2/service_plans/e193273c-7217-408f-a22e-23e7548d5e83"",
        ""service_bindings_url"": ""/v2/service_instances/0f309ab7-fdad-4fc4-89ea-0f8ee719e2b2/service_bindings"",
        ""service_keys_url"": ""/v2/service_instances/0f309ab7-fdad-4fc4-89ea-0f8ee719e2b2/service_keys"",
        ""routes_url"": ""/v2/service_instances/0f309ab7-fdad-4fc4-89ea-0f8ee719e2b2/routes""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceInstances.ListAllServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("07ae301b-bc08-4d50-998f-107545b95b8a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/0f309ab7-fdad-4fc4-89ea-0f8ee719e2b2", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2526", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("07ae301b-bc08-4d50-998f-107545b95b8a", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("07ae301b-bc08-4d50-998f-107545b95b8a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("/v2/spaces/9ead61c9-ce76-4767-b04f-8a72ba4f2c4c", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/e193273c-7217-408f-a22e-23e7548d5e83", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/0f309ab7-fdad-4fc4-89ea-0f8ee719e2b2/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/0f309ab7-fdad-4fc4-89ea-0f8ee719e2b2/service_keys", TestUtil.ToTestableString(obj[0].ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/0f309ab7-fdad-4fc4-89ea-0f8ee719e2b2/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""1c2cb76d-94f9-45fd-a3ff-19aa1c068f5a"",
    ""url"": ""/v2/service_instances/5ee5ddea-a543-49da-a8d7-46712a7086db"",
    ""created_at"": ""2016-03-21T10:59:51Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2520"",
    ""credentials"": {
      ""creds-key-60"": ""creds-val-60""
    },
    ""service_plan_guid"": ""1c2cb76d-94f9-45fd-a3ff-19aa1c068f5a"",
    ""space_guid"": ""1c2cb76d-94f9-45fd-a3ff-19aa1c068f5a"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""succeeded"",
      ""description"": ""service broker-provided description"",
      ""updated_at"": ""2016-03-21T10:59:52Z"",
      ""created_at"": ""2016-03-21T10:59:52Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/4002d3ac-18c6-42e5-b5aa-94a9ff1e3c13"",
    ""service_plan_url"": ""/v2/service_plans/4c4883ad-1cf9-4722-b820-1c8a47225308"",
    ""service_bindings_url"": ""/v2/service_instances/5ee5ddea-a543-49da-a8d7-46712a7086db/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/5ee5ddea-a543-49da-a8d7-46712a7086db/service_keys"",
    ""routes_url"": ""/v2/service_instances/5ee5ddea-a543-49da-a8d7-46712a7086db/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrieveServiceInstance(guid).Result;


                Assert.AreEqual("1c2cb76d-94f9-45fd-a3ff-19aa1c068f5a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/5ee5ddea-a543-49da-a8d7-46712a7086db", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2520", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("1c2cb76d-94f9-45fd-a3ff-19aa1c068f5a", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("1c2cb76d-94f9-45fd-a3ff-19aa1c068f5a", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/4002d3ac-18c6-42e5-b5aa-94a9ff1e3c13", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/4c4883ad-1cf9-4722-b820-1c8a47225308", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/5ee5ddea-a543-49da-a8d7-46712a7086db/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/5ee5ddea-a543-49da-a8d7-46712a7086db/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/5ee5ddea-a543-49da-a8d7-46712a7086db/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void CreateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""bf327d94-2d1e-4f36-abc4-b830426f5bda"",
    ""url"": ""/v2/service_instances/5299d536-1a77-43e3-bd04-49c6f47bd67f"",
    ""created_at"": ""2016-03-21T10:59:51Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {

    },
    ""service_plan_guid"": ""bf327d94-2d1e-4f36-abc4-b830426f5bda"",
    ""space_guid"": ""bf327d94-2d1e-4f36-abc4-b830426f5bda"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": null,
      ""created_at"": ""2016-03-21T10:59:51Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/e3dfba17-9cd4-42a7-9f2e-8305c6c06a13"",
    ""service_plan_url"": ""/v2/service_plans/b467e715-7fb4-444a-986e-e8ce2d15661d"",
    ""service_bindings_url"": ""/v2/service_instances/5299d536-1a77-43e3-bd04-49c6f47bd67f/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/5299d536-1a77-43e3-bd04-49c6f47bd67f/service_keys"",
    ""routes_url"": ""/v2/service_instances/5299d536-1a77-43e3-bd04-49c6f47bd67f/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceInstanceRequest value = new CreateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.CreateServiceInstance(value).Result;


                Assert.AreEqual("bf327d94-2d1e-4f36-abc4-b830426f5bda", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/5299d536-1a77-43e3-bd04-49c6f47bd67f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("bf327d94-2d1e-4f36-abc4-b830426f5bda", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("bf327d94-2d1e-4f36-abc4-b830426f5bda", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/e3dfba17-9cd4-42a7-9f2e-8305c6c06a13", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/b467e715-7fb4-444a-986e-e8ce2d15661d", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/5299d536-1a77-43e3-bd04-49c6f47bd67f/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/5299d536-1a77-43e3-bd04-49c6f47bd67f/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/5299d536-1a77-43e3-bd04-49c6f47bd67f/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""2528923d-604e-40da-9d0f-7c389206e457"",
    ""url"": ""/v2/service_instances/28a06a8b-990a-4e3e-a706-c638a7d9a8f7"",
    ""created_at"": ""2016-03-21T10:59:52Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2532"",
    ""credentials"": {
      ""creds-key-62"": ""creds-val-62""
    },
    ""service_plan_guid"": ""2528923d-604e-40da-9d0f-7c389206e457"",
    ""space_guid"": ""2528923d-604e-40da-9d0f-7c389206e457"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""delete"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2016-03-21T10:59:52Z"",
      ""created_at"": ""2016-03-21T10:59:52Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/dd66eff3-9dab-4d22-99d7-6a32e25c7099"",
    ""service_plan_url"": ""/v2/service_plans/01bfcaf6-249a-4e59-a57f-3c170ee2a11d"",
    ""service_bindings_url"": ""/v2/service_instances/28a06a8b-990a-4e3e-a706-c638a7d9a8f7/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/28a06a8b-990a-4e3e-a706-c638a7d9a8f7/service_keys"",
    ""routes_url"": ""/v2/service_instances/28a06a8b-990a-4e3e-a706-c638a7d9a8f7/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.DeleteServiceInstance(guid).Result;


                Assert.AreEqual("2528923d-604e-40da-9d0f-7c389206e457", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/28a06a8b-990a-4e3e-a706-c638a7d9a8f7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2532", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("2528923d-604e-40da-9d0f-7c389206e457", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("2528923d-604e-40da-9d0f-7c389206e457", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/dd66eff3-9dab-4d22-99d7-6a32e25c7099", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/01bfcaf6-249a-4e59-a57f-3c170ee2a11d", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/28a06a8b-990a-4e3e-a706-c638a7d9a8f7/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/28a06a8b-990a-4e3e-a706-c638a7d9a8f7/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/28a06a8b-990a-4e3e-a706-c638a7d9a8f7/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void UnbindingServiceInstanceFromRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? service_instance_guid = Guid.NewGuid();

                Guid? route_guid = Guid.NewGuid();


                cfClient.ServiceInstances.UnbindingServiceInstanceFromRoute(service_instance_guid, route_guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bcb436b5-3626-4a60-b950-337960692c40"",
        ""url"": ""/v2/service_bindings/af1b048c-c4f0-4612-a9ec-d390902d9e18"",
        ""created_at"": ""2016-03-21T10:59:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""bcb436b5-3626-4a60-b950-337960692c40"",
        ""service_instance_guid"": ""bcb436b5-3626-4a60-b950-337960692c40"",
        ""credentials"": {
          ""creds-key-65"": ""creds-val-65""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/6238279f-31d7-4e42-a43c-f3c5d0056fd9"",
        ""service_instance_url"": ""/v2/service_instances/86eeca13-bc7a-422d-94b4-5826e886e9a0""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllServiceBindingsForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("bcb436b5-3626-4a60-b950-337960692c40", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/af1b048c-c4f0-4612-a9ec-d390902d9e18", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("bcb436b5-3626-4a60-b950-337960692c40", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("bcb436b5-3626-4a60-b950-337960692c40", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/6238279f-31d7-4e42-a43c-f3c5d0056fd9", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/service_instances/86eeca13-bc7a-422d-94b4-5826e886e9a0", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void UpdateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""4fb09221-5409-466b-b6b7-baac1eb58562"",
    ""url"": ""/v2/service_instances/abd0589a-440f-4293-a8e5-03c7a8d25c23"",
    ""created_at"": ""2016-03-21T10:59:51Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2504"",
    ""credentials"": {
      ""creds-key-58"": ""creds-val-58""
    },
    ""service_plan_guid"": ""4fb09221-5409-466b-b6b7-baac1eb58562"",
    ""space_guid"": ""4fb09221-5409-466b-b6b7-baac1eb58562"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""update"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2016-03-21T10:59:51Z"",
      ""created_at"": ""2016-03-21T10:59:51Z""
    },
    ""tags"": [

    ],
    ""space_url"": ""/v2/spaces/1f0f553f-85f8-49f3-9692-fd1626fe2a0c"",
    ""service_plan_url"": ""/v2/service_plans/6bfce818-932b-4356-8c66-c5ee5eb925ab"",
    ""service_bindings_url"": ""/v2/service_instances/abd0589a-440f-4293-a8e5-03c7a8d25c23/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/abd0589a-440f-4293-a8e5-03c7a8d25c23/service_keys"",
    ""routes_url"": ""/v2/service_instances/abd0589a-440f-4293-a8e5-03c7a8d25c23/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServiceInstanceRequest value = new UpdateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.UpdateServiceInstance(guid, value).Result;


                Assert.AreEqual("4fb09221-5409-466b-b6b7-baac1eb58562", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/abd0589a-440f-4293-a8e5-03c7a8d25c23", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2504", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("4fb09221-5409-466b-b6b7-baac1eb58562", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("4fb09221-5409-466b-b6b7-baac1eb58562", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/1f0f553f-85f8-49f3-9692-fd1626fe2a0c", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/6bfce818-932b-4356-8c66-c5ee5eb925ab", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/abd0589a-440f-4293-a8e5-03c7a8d25c23/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/abd0589a-440f-4293-a8e5-03c7a8d25c23/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
                Assert.AreEqual("/v2/service_instances/abd0589a-440f-4293-a8e5-03c7a8d25c23/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

    }
}