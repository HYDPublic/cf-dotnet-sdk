//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesEndpoint
{
        [TestMethod]
        public void UpdateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""0af8317c-0431-4aab-ade5-af37736f293f"",
    ""url"": ""/v2/service_instances/0af8317c-0431-4aab-ade5-af37736f293f"",
    ""created_at"": ""2015-04-10T19:41:59+00:00"",
    ""updated_at"": ""2015-04-10T19:41:59+00:00""
  },
  ""entity"": {
    ""name"": ""name-1206"",
    ""credentials"": {
      ""creds-key-275"": ""creds-val-275""
    },
    ""service_plan_guid"": ""17d367cb-312b-48a0-a379-664846978eaa"",
    ""space_guid"": ""c7bb64e6-c0b7-4ad5-9bc8-69c1f44dd779"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/c7bb64e6-c0b7-4ad5-9bc8-69c1f44dd779"",
    ""service_plan_url"": ""/v2/service_plans/17d367cb-312b-48a0-a379-664846978eaa"",
    ""service_bindings_url"": ""/v2/service_instances/0af8317c-0431-4aab-ade5-af37736f293f/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServiceInstanceRequest value = new UpdateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.UpdateServiceInstance(guid, value).Result;


                Assert.AreEqual("0af8317c-0431-4aab-ade5-af37736f293f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/0af8317c-0431-4aab-ade5-af37736f293f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-04-10T19:41:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1206", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("17d367cb-312b-48a0-a379-664846978eaa", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("c7bb64e6-c0b7-4ad5-9bc8-69c1f44dd779", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/c7bb64e6-c0b7-4ad5-9bc8-69c1f44dd779", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/17d367cb-312b-48a0-a379-664846978eaa", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/0af8317c-0431-4aab-ade5-af37736f293f/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""103bdc37-ed0d-41ae-b66d-ad83cb9fb029"",
        ""url"": ""/v2/service_instances/103bdc37-ed0d-41ae-b66d-ad83cb9fb029"",
        ""created_at"": ""2015-04-10T19:41:59+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1199"",
        ""credentials"": {
          ""creds-key-272"": ""creds-val-272""
        },
        ""service_plan_guid"": ""dd42fd9d-9129-4f29-bdc8-8d598fa33971"",
        ""space_guid"": ""ab932efa-f445-4c52-aa7b-f30215480611"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/ab932efa-f445-4c52-aa7b-f30215480611"",
        ""service_plan_url"": ""/v2/service_plans/dd42fd9d-9129-4f29-bdc8-8d598fa33971"",
        ""service_bindings_url"": ""/v2/service_instances/103bdc37-ed0d-41ae-b66d-ad83cb9fb029/service_bindings""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceInstances.ListAllServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("103bdc37-ed0d-41ae-b66d-ad83cb9fb029", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/103bdc37-ed0d-41ae-b66d-ad83cb9fb029", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:59+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1199", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("dd42fd9d-9129-4f29-bdc8-8d598fa33971", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("ab932efa-f445-4c52-aa7b-f30215480611", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("/v2/spaces/ab932efa-f445-4c52-aa7b-f30215480611", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/dd42fd9d-9129-4f29-bdc8-8d598fa33971", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/103bdc37-ed0d-41ae-b66d-ad83cb9fb029/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void CreateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""d261287b-f39a-4828-8780-70aca193961f"",
    ""url"": ""/v2/service_instances/d261287b-f39a-4828-8780-70aca193961f"",
    ""created_at"": ""2015-04-10T19:41:59+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {
      ""creds-key-279"": ""creds-val-279""
    },
    ""service_plan_guid"": ""0e3a0fe4-43ab-4470-8800-9b1071485b59"",
    ""space_guid"": ""11df7c87-03db-42ac-a770-6416e52f46d0"",
    ""gateway_data"": ""CONFIGURATION"",
    ""dashboard_url"": ""http://dashboard.example.com"",
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/11df7c87-03db-42ac-a770-6416e52f46d0"",
    ""service_plan_url"": ""/v2/service_plans/0e3a0fe4-43ab-4470-8800-9b1071485b59"",
    ""service_bindings_url"": ""/v2/service_instances/d261287b-f39a-4828-8780-70aca193961f/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceInstanceRequest value = new CreateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.CreateServiceInstance(value).Result;


                Assert.AreEqual("d261287b-f39a-4828-8780-70aca193961f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/d261287b-f39a-4828-8780-70aca193961f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("0e3a0fe4-43ab-4470-8800-9b1071485b59", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("11df7c87-03db-42ac-a770-6416e52f46d0", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("CONFIGURATION", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("http://dashboard.example.com", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/11df7c87-03db-42ac-a770-6416e52f46d0", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/0e3a0fe4-43ab-4470-8800-9b1071485b59", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/d261287b-f39a-4828-8780-70aca193961f/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServiceInstances.DeleteServiceInstance(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e9e16aca-51c6-4038-9e0e-18c38fb0b97d"",
        ""url"": ""/v2/service_bindings/e9e16aca-51c6-4038-9e0e-18c38fb0b97d"",
        ""created_at"": ""2015-04-10T19:41:59+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""456e1140-3b3e-4d77-b7e9-96306e9e7d43"",
        ""service_instance_guid"": ""e2144c69-24bc-426d-80d6-da2a0b4ac899"",
        ""credentials"": {
          ""creds-key-294"": ""creds-val-294""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/456e1140-3b3e-4d77-b7e9-96306e9e7d43"",
        ""service_instance_url"": ""/v2/service_instances/e2144c69-24bc-426d-80d6-da2a0b4ac899""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllServiceBindingsForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e9e16aca-51c6-4038-9e0e-18c38fb0b97d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/e9e16aca-51c6-4038-9e0e-18c38fb0b97d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:59+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("456e1140-3b3e-4d77-b7e9-96306e9e7d43", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("e2144c69-24bc-426d-80d6-da2a0b4ac899", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/456e1140-3b3e-4d77-b7e9-96306e9e7d43", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/service_instances/e2144c69-24bc-426d-80d6-da2a0b4ac899", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""changed_count"":1}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? service_plan_guid = Guid.NewGuid();

                MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest value = new MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest();


                var obj = cfClient.ServiceInstances.MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimental(service_plan_guid, value).Result;


                Assert.AreEqual("1", TestUtil.ToTestableString(obj.ChangedCount), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""9de6a7c1-f7eb-47f0-8162-9a2c2862a60e"",
    ""url"": ""/v2/service_instances/9de6a7c1-f7eb-47f0-8162-9a2c2862a60e"",
    ""created_at"": ""2015-04-10T19:41:59+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1225"",
    ""credentials"": {
      ""creds-key-284"": ""creds-val-284""
    },
    ""service_plan_guid"": ""ed0086f4-3e32-4331-aedd-80794ab373da"",
    ""space_guid"": ""7df04645-34fe-479e-a24a-8942f20b60bb"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/7df04645-34fe-479e-a24a-8942f20b60bb"",
    ""service_plan_url"": ""/v2/service_plans/ed0086f4-3e32-4331-aedd-80794ab373da"",
    ""service_bindings_url"": ""/v2/service_instances/9de6a7c1-f7eb-47f0-8162-9a2c2862a60e/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrieveServiceInstance(guid).Result;


                Assert.AreEqual("9de6a7c1-f7eb-47f0-8162-9a2c2862a60e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/9de6a7c1-f7eb-47f0-8162-9a2c2862a60e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1225", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("ed0086f4-3e32-4331-aedd-80794ab373da", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("7df04645-34fe-479e-a24a-8942f20b60bb", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/7df04645-34fe-479e-a24a-8942f20b60bb", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/ed0086f4-3e32-4331-aedd-80794ab373da", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/9de6a7c1-f7eb-47f0-8162-9a2c2862a60e/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void RetrievingPermissionsOnServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""manage"":true}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrievingPermissionsOnServiceInstance(guid).Result;


                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);

            }
        }

    }
}