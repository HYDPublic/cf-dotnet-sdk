//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsEndpoint
{
        [TestMethod]
        public void ListServiceBindingDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0fe21ec5-e58d-4ec1-aaf0-82e21dfe1ad4"",
        ""url"": ""/v2/events/0fe21ec5-e58d-4ec1-aaf0-82e21dfe1ad4"",
        ""created_at"": ""2015-05-19T15:27:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-174"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""7028a83e-a604-464e-8a3a-15a5a8c1722f"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-05-19T15:27:14+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""3b22067d-7bcc-451e-87d7-119f80e31db8"",
        ""organization_guid"": ""7f48e541-9f3a-498d-a278-ff718c9c44d3""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("0fe21ec5-e58d-4ec1-aaf0-82e21dfe1ad4", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0fe21ec5-e58d-4ec1-aaf0-82e21dfe1ad4", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-174", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("7028a83e-a604-464e-8a3a-15a5a8c1722f", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("3b22067d-7bcc-451e-87d7-119f80e31db8", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("7f48e541-9f3a-498d-a278-ff718c9c44d3", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2f4bb9a9-8dad-4ed9-bcea-52a6a16ecbbd"",
        ""url"": ""/v2/events/2f4bb9a9-8dad-4ed9-bcea-52a6a16ecbbd"",
        ""created_at"": ""2015-05-19T15:27:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-144"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""fa67fe6e-1230-47e4-bdef-b200da2369c7"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-699"",
        ""timestamp"": ""2015-05-19T15:27:12+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2f4bb9a9-8dad-4ed9-bcea-52a6a16ecbbd", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2f4bb9a9-8dad-4ed9-bcea-52a6a16ecbbd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-144", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("fa67fe6e-1230-47e4-bdef-b200da2369c7", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-699", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""16e6ac39-3357-452e-b76f-c5854235f8bd"",
        ""url"": ""/v2/events/16e6ac39-3357-452e-b76f-c5854235f8bd"",
        ""created_at"": ""2015-05-19T15:27:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-170"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""2cfe8740-0f46-45bb-b67d-a0358b1388a0"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1054"",
        ""timestamp"": ""2015-05-19T15:27:13+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""2cfe8740-0f46-45bb-b67d-a0358b1388a0"",
        ""organization_guid"": ""b9807ee0-42c0-402a-aaa2-5a05156f7900""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("16e6ac39-3357-452e-b76f-c5854235f8bd", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/16e6ac39-3357-452e-b76f-c5854235f8bd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-170", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("2cfe8740-0f46-45bb-b67d-a0358b1388a0", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1054", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("2cfe8740-0f46-45bb-b67d-a0358b1388a0", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("b9807ee0-42c0-402a-aaa2-5a05156f7900", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e84b5b8b-f50d-4c4c-976e-29657ebf77d7"",
        ""url"": ""/v2/events/e84b5b8b-f50d-4c4c-976e-29657ebf77d7"",
        ""created_at"": ""2015-05-19T15:27:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""c1f55ba5-2575-41b1-8516-b4ce907da197"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1249"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-05-19T15:27:14+00:00"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""ab285867-ab04-4f3d-a7b5-5d12e0aa08ba"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e84b5b8b-f50d-4c4c-976e-29657ebf77d7", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e84b5b8b-f50d-4c4c-976e-29657ebf77d7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("c1f55ba5-2575-41b1-8516-b4ce907da197", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1249", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("plan-name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f8a8caf9-2820-4e41-9cd7-e30ef9b6ad6e"",
        ""url"": ""/v2/events/f8a8caf9-2820-4e41-9cd7-e30ef9b6ad6e"",
        ""created_at"": ""2015-05-19T15:27:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-180"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0aebca13-6fa0-446e-9ecf-4b780c40af25"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1195"",
        ""timestamp"": ""2015-05-19T15:27:14+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1195"",
            ""space_guid"": ""b08c35a6-8688-4fac-b118-cd3f09f95f0b""
          }
        },
        ""space_guid"": ""b08c35a6-8688-4fac-b118-cd3f09f95f0b"",
        ""organization_guid"": ""6d5b7bf4-6b64-4fa2-bf51-bf68ff3e4727""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f8a8caf9-2820-4e41-9cd7-e30ef9b6ad6e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f8a8caf9-2820-4e41-9cd7-e30ef9b6ad6e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-180", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0aebca13-6fa0-446e-9ecf-4b780c40af25", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1195", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("b08c35a6-8688-4fac-b118-cd3f09f95f0b", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("6d5b7bf4-6b64-4fa2-bf51-bf68ff3e4727", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e44532d6-22e3-42c1-93f7-e677c1b60f83"",
        ""url"": ""/v2/events/e44532d6-22e3-42c1-93f7-e677c1b60f83"",
        ""created_at"": ""2015-05-19T15:27:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""7cf91937-dcf2-438c-8187-8c9a6607c034"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-674"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-05-19T15:27:11+00:00"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""7cf91937-dcf2-438c-8187-8c9a6607c034"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e44532d6-22e3-42c1-93f7-e677c1b60f83", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e44532d6-22e3-42c1-93f7-e677c1b60f83", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("7cf91937-dcf2-438c-8187-8c9a6607c034", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-674", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7cdb9a5f-16dc-4031-8a98-27d036100f23"",
        ""url"": ""/v2/events/7cdb9a5f-16dc-4031-8a98-27d036100f23"",
        ""created_at"": ""2015-05-19T15:27:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-160"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3ced9dcd-9abf-44f6-b405-6e4ab9c2e070"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-05-19T15:27:13+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7cdb9a5f-16dc-4031-8a98-27d036100f23", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7cdb9a5f-16dc-4031-8a98-27d036100f23", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-160", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("3ced9dcd-9abf-44f6-b405-6e4ab9c2e070", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("pancake broker", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void RetrieveEventTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""0e7f67db-86de-4653-8ab3-d24544ac59e5"",
    ""url"": ""/v2/events/0e7f67db-86de-4653-8ab3-d24544ac59e5"",
    ""created_at"": ""2015-05-19T15:27:11+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-571"",
    ""actor"": ""guid-d60d85fd-20c8-4dd2-86a1-05edaee90077"",
    ""actor_type"": ""name-572"",
    ""actor_name"": ""name-573"",
    ""actee"": ""guid-bf1690cc-491a-4684-8d75-7e1ea70c5627"",
    ""actee_type"": ""name-574"",
    ""actee_name"": ""name-575"",
    ""timestamp"": ""2015-05-19T15:27:11+00:00"",
    ""metadata"": {

    },
    ""space_guid"": ""ac8e7493-8db5-4533-89c9-8f78759e9697"",
    ""organization_guid"": ""f91ee572-8e6b-426b-9de5-4b8df41f259c""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Events.RetrieveEvent(guid).Result;


                Assert.AreEqual("0e7f67db-86de-4653-8ab3-d24544ac59e5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0e7f67db-86de-4653-8ab3-d24544ac59e5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-571", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("guid-d60d85fd-20c8-4dd2-86a1-05edaee90077", TestUtil.ToTestableString(obj.Actor), true);
                Assert.AreEqual("name-572", TestUtil.ToTestableString(obj.ActorType), true);
                Assert.AreEqual("name-573", TestUtil.ToTestableString(obj.ActorName), true);
                Assert.AreEqual("guid-bf1690cc-491a-4684-8d75-7e1ea70c5627", TestUtil.ToTestableString(obj.Actee), true);
                Assert.AreEqual("name-574", TestUtil.ToTestableString(obj.ActeeType), true);
                Assert.AreEqual("name-575", TestUtil.ToTestableString(obj.ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj.Timestamp), true);
                Assert.AreEqual("ac8e7493-8db5-4533-89c9-8f78759e9697", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("f91ee572-8e6b-426b-9de5-4b8df41f259c", TestUtil.ToTestableString(obj.OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a523090f-bfd7-42fd-b332-3e1297aecca9"",
        ""url"": ""/v2/events/a523090f-bfd7-42fd-b332-3e1297aecca9"",
        ""created_at"": ""2015-05-19T15:27:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-140"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9c685abb-8032-43f8-9192-c9e4b8f9054c"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-645"",
        ""timestamp"": ""2015-05-19T15:27:11+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""54c23e28-c12e-45cd-94e8-d52d6d55df24""
          }
        },
        ""space_guid"": ""742b73ad-71d8-4bd1-bd1a-7f6fc526dc13"",
        ""organization_guid"": ""1df87f2b-0f76-4ec1-8ff5-a75ab72308f2""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a523090f-bfd7-42fd-b332-3e1297aecca9", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a523090f-bfd7-42fd-b332-3e1297aecca9", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-140", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9c685abb-8032-43f8-9192-c9e4b8f9054c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-645", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("742b73ad-71d8-4bd1-bd1a-7f6fc526dc13", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("1df87f2b-0f76-4ec1-8ff5-a75ab72308f2", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppExitedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e4cfcfd2-f57c-45df-a6df-a8648cce634b"",
        ""url"": ""/v2/events/e4cfcfd2-f57c-45df-a6df-a8648cce634b"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""f6d5edcd-4d13-483f-93be-a869a8c5fa77"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1326"",
        ""actee"": ""f6d5edcd-4d13-483f-93be-a869a8c5fa77"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1326"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""5e2008fe-3e8f-4e8b-8022-48efda6966f0"",
        ""organization_guid"": ""a1a3ae0a-bdf1-4311-b869-76cd128af40a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppExitedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e4cfcfd2-f57c-45df-a6df-a8648cce634b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e4cfcfd2-f57c-45df-a6df-a8648cce634b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("app.crash", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("f6d5edcd-4d13-483f-93be-a869a8c5fa77", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1326", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("f6d5edcd-4d13-483f-93be-a869a8c5fa77", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1326", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("5e2008fe-3e8f-4e8b-8022-48efda6966f0", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a1a3ae0a-bdf1-4311-b869-76cd128af40a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListEventsAssociatedWithAppSinceJanuary12014Test()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2635d222-b4f5-4aa2-aa52-6b5cd2d73087"",
        ""url"": ""/v2/events/2635d222-b4f5-4aa2-aa52-6b5cd2d73087"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-195"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3c5422a6-0979-417b-8535-a8527e801c48"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1411"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""ed6916e6-15e5-420b-8a1e-cdfaceb7619a"",
        ""organization_guid"": ""f45c8446-1724-47c8-a226-09c09f49c287""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""98799f68-2454-4b09-8cc7-098df002a730"",
        ""url"": ""/v2/events/98799f68-2454-4b09-8cc7-098df002a730"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-195"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3c5422a6-0979-417b-8535-a8527e801c48"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1411"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""ed6916e6-15e5-420b-8a1e-cdfaceb7619a"",
        ""organization_guid"": ""f45c8446-1724-47c8-a226-09c09f49c287""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""b2d75ef2-2b1c-4b03-9bf9-24b9865ecc67"",
        ""url"": ""/v2/events/b2d75ef2-2b1c-4b03-9bf9-24b9865ecc67"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-195"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3c5422a6-0979-417b-8535-a8527e801c48"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1411"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""ed6916e6-15e5-420b-8a1e-cdfaceb7619a"",
        ""organization_guid"": ""f45c8446-1724-47c8-a226-09c09f49c287""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListEventsAssociatedWithAppSinceJanuary12014().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2635d222-b4f5-4aa2-aa52-6b5cd2d73087", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2635d222-b4f5-4aa2-aa52-6b5cd2d73087", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-195", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("3c5422a6-0979-417b-8535-a8527e801c48", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1411", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("ed6916e6-15e5-420b-8a1e-cdfaceb7619a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f45c8446-1724-47c8-a226-09c09f49c287", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("98799f68-2454-4b09-8cc7-098df002a730", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/98799f68-2454-4b09-8cc7-098df002a730", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("uaa-id-195", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("3c5422a6-0979-417b-8535-a8527e801c48", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-1411", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("ed6916e6-15e5-420b-8a1e-cdfaceb7619a", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("f45c8446-1724-47c8-a226-09c09f49c287", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("b2d75ef2-2b1c-4b03-9bf9-24b9865ecc67", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b2d75ef2-2b1c-4b03-9bf9-24b9865ecc67", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("uaa-id-195", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("3c5422a6-0979-417b-8535-a8527e801c48", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-1411", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("ed6916e6-15e5-420b-8a1e-cdfaceb7619a", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("f45c8446-1724-47c8-a226-09c09f49c287", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8195ef7b-d85e-4664-abe3-c3bc3ba15fc7"",
        ""url"": ""/v2/events/8195ef7b-d85e-4664-abe3-c3bc3ba15fc7"",
        ""created_at"": ""2015-05-19T15:27:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-176"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""79808f49-8b48-4f3f-9e7f-e894b0d26201"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-05-19T15:27:14+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""202c32b4-2697-49f5-b4ed-09cba1f2f428"",
            ""organization_guid"": ""c48cdf96-0d11-4bd5-8a9d-be04c31a671a""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""c48cdf96-0d11-4bd5-8a9d-be04c31a671a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8195ef7b-d85e-4664-abe3-c3bc3ba15fc7", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8195ef7b-d85e-4664-abe3-c3bc3ba15fc7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-176", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("79808f49-8b48-4f3f-9e7f-e894b0d26201", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("c48cdf96-0d11-4bd5-8a9d-be04c31a671a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c611134f-63f5-43a9-9f56-abab5cc42c4b"",
        ""url"": ""/v2/events/c611134f-63f5-43a9-9f56-abab5cc42c4b"",
        ""created_at"": ""2015-05-19T15:27:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""5c39e277-9b23-4f72-9af3-c559a60afe0f"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1223"",
        ""actee"": ""439cd23d-986e-4d24-96cf-b22ca18a9d74"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1224"",
        ""timestamp"": ""2015-05-19T15:27:14+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c611134f-63f5-43a9-9f56-abab5cc42c4b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c611134f-63f5-43a9-9f56-abab5cc42c4b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("5c39e277-9b23-4f72-9af3-c559a60afe0f", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1223", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("439cd23d-986e-4d24-96cf-b22ca18a9d74", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1224", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAllEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0ba9252a-5e14-432e-b375-63e312cf5027"",
        ""url"": ""/v2/events/0ba9252a-5e14-432e-b375-63e312cf5027"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1416"",
        ""actor"": ""guid-9f089b7f-61b1-455d-afa0-53f789b78f6e"",
        ""actor_type"": ""name-1417"",
        ""actor_name"": ""name-1418"",
        ""actee"": ""guid-af37bb9e-8ac8-40e5-ad84-9a9d3313d7da"",
        ""actee_type"": ""name-1419"",
        ""actee_name"": ""name-1420"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""15947c8c-da0e-4b2e-8b8b-5dfa0a2e8e4f"",
        ""organization_guid"": ""e3f137fd-8e20-4674-ba1c-04598738c7df""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""4d3a026e-5567-454f-bd89-9099153268be"",
        ""url"": ""/v2/events/4d3a026e-5567-454f-bd89-9099153268be"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1424"",
        ""actor"": ""guid-1c60e246-83a3-4329-bc8a-8b7a03420523"",
        ""actor_type"": ""name-1425"",
        ""actor_name"": ""name-1426"",
        ""actee"": ""guid-fc56bb82-1424-4c99-b0dc-1a66661eb0bc"",
        ""actee_type"": ""name-1427"",
        ""actee_name"": ""name-1428"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""95c455b5-62c8-4de6-af20-0c5bab97700f"",
        ""organization_guid"": ""e9904c0e-39cd-4ee3-9f27-7f1b90847949""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""01b3755d-5a33-4f0d-ba66-5898ab8fda4a"",
        ""url"": ""/v2/events/01b3755d-5a33-4f0d-ba66-5898ab8fda4a"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1432"",
        ""actor"": ""guid-3f82d508-0c39-4564-9a41-9e7722452939"",
        ""actor_type"": ""name-1433"",
        ""actor_name"": ""name-1434"",
        ""actee"": ""guid-41661ee8-f2fc-46fa-892b-aa2fed78618c"",
        ""actee_type"": ""name-1435"",
        ""actee_name"": ""name-1436"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""0ff7584d-0ed8-46ce-8d7a-6d6f08377683"",
        ""organization_guid"": ""4a5a898a-034d-413b-88bb-bccbfdf952b8""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAllEvents().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("0ba9252a-5e14-432e-b375-63e312cf5027", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0ba9252a-5e14-432e-b375-63e312cf5027", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1416", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("guid-9f089b7f-61b1-455d-afa0-53f789b78f6e", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("name-1417", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1418", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid-af37bb9e-8ac8-40e5-ad84-9a9d3313d7da", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("name-1419", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1420", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("15947c8c-da0e-4b2e-8b8b-5dfa0a2e8e4f", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e3f137fd-8e20-4674-ba1c-04598738c7df", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("4d3a026e-5567-454f-bd89-9099153268be", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4d3a026e-5567-454f-bd89-9099153268be", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1424", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("guid-1c60e246-83a3-4329-bc8a-8b7a03420523", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("name-1425", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("name-1426", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("guid-fc56bb82-1424-4c99-b0dc-1a66661eb0bc", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("name-1427", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-1428", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("95c455b5-62c8-4de6-af20-0c5bab97700f", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("e9904c0e-39cd-4ee3-9f27-7f1b90847949", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("01b3755d-5a33-4f0d-ba66-5898ab8fda4a", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/01b3755d-5a33-4f0d-ba66-5898ab8fda4a", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1432", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("guid-3f82d508-0c39-4564-9a41-9e7722452939", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("name-1433", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("name-1434", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("guid-41661ee8-f2fc-46fa-892b-aa2fed78618c", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("name-1435", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-1436", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("0ff7584d-0ed8-46ce-8d7a-6d6f08377683", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("4a5a898a-034d-413b-88bb-bccbfdf952b8", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6aa5d3e0-723a-4691-9bcc-c305a5b46aa0"",
        ""url"": ""/v2/events/6aa5d3e0-723a-4691-9bcc-c305a5b46aa0"",
        ""created_at"": ""2015-05-19T15:27:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""dfed5731-0244-458f-b987-b67c012efa44"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-619"",
        ""actee"": ""959a7f5a-e0e4-4b55-bb74-beb06dca60b9"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-05-19T15:27:11+00:00"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6aa5d3e0-723a-4691-9bcc-c305a5b46aa0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/6aa5d3e0-723a-4691-9bcc-c305a5b46aa0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("dfed5731-0244-458f-b987-b67c012efa44", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-619", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("959a7f5a-e0e4-4b55-bb74-beb06dca60b9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9d6984bd-db34-4ed9-87d9-d214f511243e"",
        ""url"": ""/v2/events/9d6984bd-db34-4ed9-87d9-d214f511243e"",
        ""created_at"": ""2015-05-19T15:27:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-150"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""f75a4db9-f2fa-4d03-9a79-58bf6ff1964a"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-778"",
        ""timestamp"": ""2015-05-19T15:27:12+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""e44ea82c-b839-4bdc-85df-92ef8bdc2c97"",
        ""organization_guid"": ""0479e54f-4c7a-4d49-94d0-cad34b6dfde8""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("9d6984bd-db34-4ed9-87d9-d214f511243e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9d6984bd-db34-4ed9-87d9-d214f511243e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-150", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("f75a4db9-f2fa-4d03-9a79-58bf6ff1964a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-778", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e44ea82c-b839-4bdc-85df-92ef8bdc2c97", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0479e54f-4c7a-4d49-94d0-cad34b6dfde8", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""23a3c68a-98c6-444b-925b-3dca8cfe4e36"",
        ""url"": ""/v2/events/23a3c68a-98c6-444b-925b-3dca8cfe4e36"",
        ""created_at"": ""2015-05-19T15:27:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-146"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""aa058b31-0a65-41ce-984a-ea287554573d"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-724"",
        ""timestamp"": ""2015-05-19T15:27:12+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""c04f838d-8342-4010-bc88-82e6c8b9d214"",
        ""organization_guid"": ""59022d05-90c9-4ff3-b519-21e91d92e346""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("23a3c68a-98c6-444b-925b-3dca8cfe4e36", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/23a3c68a-98c6-444b-925b-3dca8cfe4e36", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-146", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("aa058b31-0a65-41ce-984a-ea287554573d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-724", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("c04f838d-8342-4010-bc88-82e6c8b9d214", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("59022d05-90c9-4ff3-b519-21e91d92e346", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fe57ba5e-eb3b-45c7-b131-7894031dd551"",
        ""url"": ""/v2/events/fe57ba5e-eb3b-45c7-b131-7894031dd551"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""94accb23-595f-49d5-8d02-33e8e0422d28"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1301"",
        ""actee"": ""7d99e42c-c729-4bde-81e7-e548f18bb46f"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("fe57ba5e-eb3b-45c7-b131-7894031dd551", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/fe57ba5e-eb3b-45c7-b131-7894031dd551", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("94accb23-595f-49d5-8d02-33e8e0422d28", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1301", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("7d99e42c-c729-4bde-81e7-e548f18bb46f", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0c65bb2c-ff54-464f-99a3-411a620c9d2b"",
        ""url"": ""/v2/events/0c65bb2c-ff54-464f-99a3-411a620c9d2b"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-191"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""c43c8077-7c03-46f7-a746-0298d388ae6e"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1355"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""c43c8077-7c03-46f7-a746-0298d388ae6e"",
        ""organization_guid"": ""013a966f-d5d3-4188-9011-151e99e94a9d""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("0c65bb2c-ff54-464f-99a3-411a620c9d2b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0c65bb2c-ff54-464f-99a3-411a620c9d2b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-191", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c43c8077-7c03-46f7-a746-0298d388ae6e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1355", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("c43c8077-7c03-46f7-a746-0298d388ae6e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("013a966f-d5d3-4188-9011-151e99e94a9d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c24a20b0-e5b8-4e52-bce7-6cea0b8fcf20"",
        ""url"": ""/v2/events/c24a20b0-e5b8-4e52-bce7-6cea0b8fcf20"",
        ""created_at"": ""2015-05-19T15:27:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-154"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""ad1a010a-3a4d-4c7c-a6fa-26961df1163d"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-838"",
        ""timestamp"": ""2015-05-19T15:27:12+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-838"",
            ""service_plan_guid"": ""4845c31b-1253-43ed-a8b6-7a0ab6284673"",
            ""space_guid"": ""374eae15-a45f-4eec-80c1-f3a9ce0eea3e""
          }
        },
        ""space_guid"": ""374eae15-a45f-4eec-80c1-f3a9ce0eea3e"",
        ""organization_guid"": ""df8fd4de-7263-4a0b-9049-316718d91476""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c24a20b0-e5b8-4e52-bce7-6cea0b8fcf20", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c24a20b0-e5b8-4e52-bce7-6cea0b8fcf20", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-154", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ad1a010a-3a4d-4c7c-a6fa-26961df1163d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-838", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("374eae15-a45f-4eec-80c1-f3a9ce0eea3e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("df8fd4de-7263-4a0b-9049-316718d91476", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b99d6e55-4dcc-46b6-b58e-1378d7be15e8"",
        ""url"": ""/v2/events/b99d6e55-4dcc-46b6-b58e-1378d7be15e8"",
        ""created_at"": ""2015-05-19T15:27:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-178"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""376ad2d5-c786-4d40-b598-45d6fc985da1"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1166"",
        ""timestamp"": ""2015-05-19T15:27:14+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""04001efb-cd71-47d4-80f0-71faaa7dfc6e"",
        ""organization_guid"": ""0f6e8a74-f374-462b-9bee-aed18bd2ffe5""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b99d6e55-4dcc-46b6-b58e-1378d7be15e8", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b99d6e55-4dcc-46b6-b58e-1378d7be15e8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-178", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("376ad2d5-c786-4d40-b598-45d6fc985da1", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1166", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("04001efb-cd71-47d4-80f0-71faaa7dfc6e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0f6e8a74-f374-462b-9bee-aed18bd2ffe5", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""99bfc4e2-513b-43bd-bb83-4fe7077e37f3"",
        ""url"": ""/v2/events/99bfc4e2-513b-43bd-bb83-4fe7077e37f3"",
        ""created_at"": ""2015-05-19T15:27:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""1d5f925e-cd77-47cb-adea-e71275c701c0"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1082"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-05-19T15:27:14+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("99bfc4e2-513b-43bd-bb83-4fe7077e37f3", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/99bfc4e2-513b-43bd-bb83-4fe7077e37f3", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("1d5f925e-cd77-47cb-adea-e71275c701c0", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1082", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a036ea55-ea59-4621-8483-1b28a2b97c69"",
        ""url"": ""/v2/events/a036ea55-ea59-4621-8483-1b28a2b97c69"",
        ""created_at"": ""2015-05-19T15:27:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-148"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""a6ef6813-51f0-4880-b453-2ee3c9e935bd"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-753"",
        ""timestamp"": ""2015-05-19T15:27:12+00:00"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a036ea55-ea59-4621-8483-1b28a2b97c69", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a036ea55-ea59-4621-8483-1b28a2b97c69", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-148", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a6ef6813-51f0-4880-b453-2ee3c9e935bd", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-753", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""577568f9-a8a5-4424-94a7-6abfa8782a67"",
        ""url"": ""/v2/events/577568f9-a8a5-4424-94a7-6abfa8782a67"",
        ""created_at"": ""2015-05-19T15:27:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""3b07dffb-3455-455d-a7b3-8526054bc5a1"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1004"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-05-19T15:27:13+00:00"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("577568f9-a8a5-4424-94a7-6abfa8782a67", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/577568f9-a8a5-4424-94a7-6abfa8782a67", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("3b07dffb-3455-455d-a7b3-8526054bc5a1", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1004", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""59d76939-0c2a-436c-876b-f131269dd8d0"",
        ""url"": ""/v2/events/59d76939-0c2a-436c-876b-f131269dd8d0"",
        ""created_at"": ""2015-05-19T15:27:15+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-193"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9d39017d-fed9-43f0-b4fa-8b8d93c90d15"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1382"",
        ""timestamp"": ""2015-05-19T15:27:15+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""0969c08c-95a5-437f-b398-26c7f06c4265"",
        ""organization_guid"": ""86670aea-78f8-4577-824e-f5942359042d""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("59d76939-0c2a-436c-876b-f131269dd8d0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/59d76939-0c2a-436c-876b-f131269dd8d0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-193", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9d39017d-fed9-43f0-b4fa-8b8d93c90d15", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1382", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:15+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("0969c08c-95a5-437f-b398-26c7f06c4265", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("86670aea-78f8-4577-824e-f5942359042d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""822a1dc2-9697-4aeb-b20e-71f656693f6e"",
        ""url"": ""/v2/events/822a1dc2-9697-4aeb-b20e-71f656693f6e"",
        ""created_at"": ""2015-05-19T15:27:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-152"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""6166cd51-ddbf-4b2b-b2f3-5952df89c45e"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-05-19T15:27:12+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""65787cb8-9fc4-41af-bfbd-a90283842e1d"",
            ""app_guid"": ""4ae4c293-e38a-46ab-bd05-e9eef3ad5995""
          }
        },
        ""space_guid"": ""cee54031-00d5-4143-9618-462449f35de4"",
        ""organization_guid"": ""d57a9394-48ee-43a0-9f5f-adc67f7b90dd""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("822a1dc2-9697-4aeb-b20e-71f656693f6e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/822a1dc2-9697-4aeb-b20e-71f656693f6e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-152", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("6166cd51-ddbf-4b2b-b2f3-5952df89c45e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("cee54031-00d5-4143-9618-462449f35de4", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("d57a9394-48ee-43a0-9f5f-adc67f7b90dd", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c4ea67de-a6dd-4b1a-8146-7fad5a2358bd"",
        ""url"": ""/v2/events/c4ea67de-a6dd-4b1a-8146-7fad5a2358bd"",
        ""created_at"": ""2015-05-19T15:27:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-162"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3e7c5879-2faa-433a-9a57-bf36694596a9"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-947"",
        ""timestamp"": ""2015-05-19T15:27:13+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""12a85f55-9a1d-4288-a153-7e1ea1e99e41"",
        ""organization_guid"": ""b9bf77cf-5343-4777-9f90-8b132e9e37d5""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c4ea67de-a6dd-4b1a-8146-7fad5a2358bd", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c4ea67de-a6dd-4b1a-8146-7fad5a2358bd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-162", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("3e7c5879-2faa-433a-9a57-bf36694596a9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-947", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("12a85f55-9a1d-4288-a153-7e1ea1e99e41", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("b9bf77cf-5343-4777-9f90-8b132e9e37d5", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6464acf9-6504-4f06-85ea-e2f2ee2dcc9b"",
        ""url"": ""/v2/events/6464acf9-6504-4f06-85ea-e2f2ee2dcc9b"",
        ""created_at"": ""2015-05-19T15:27:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-156"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""6764dd3d-dd65-4536-87b8-44bce319aaee"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-05-19T15:27:12+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""0408ae33-6a1f-4b71-9983-57d6f42c1dfb""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6464acf9-6504-4f06-85ea-e2f2ee2dcc9b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/6464acf9-6504-4f06-85ea-e2f2ee2dcc9b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-156", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("6764dd3d-dd65-4536-87b8-44bce319aaee", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:12+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0408ae33-6a1f-4b71-9983-57d6f42c1dfb", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cab4edd0-0803-455f-a9c3-bcd408dccd58"",
        ""url"": ""/v2/events/cab4edd0-0803-455f-a9c3-bcd408dccd58"",
        ""created_at"": ""2015-05-19T15:27:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-164"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""89186982-c9e1-4e0f-9fb4-e974d3c3bda2"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-975"",
        ""timestamp"": ""2015-05-19T15:27:13+00:00"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""d28c91fd-4b9a-4fab-8e2e-c3c2c3cfeb60"",
        ""organization_guid"": ""0c521bd5-d3f3-48e8-bad1-f9229ae234ba""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("cab4edd0-0803-455f-a9c3-bcd408dccd58", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/cab4edd0-0803-455f-a9c3-bcd408dccd58", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-164", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("89186982-c9e1-4e0f-9fb4-e974d3c3bda2", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-975", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("d28c91fd-4b9a-4fab-8e2e-c3c2c3cfeb60", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0c521bd5-d3f3-48e8-bad1-f9229ae234ba", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""096d4ad9-5108-4fd9-bbdf-711bb5e71ed6"",
        ""url"": ""/v2/events/096d4ad9-5108-4fd9-bbdf-711bb5e71ed6"",
        ""created_at"": ""2015-05-19T15:27:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-186"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""599d868e-a695-4df9-a481-d0c7a5107ec6"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1274"",
        ""timestamp"": ""2015-05-19T15:27:14+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""599d868e-a695-4df9-a481-d0c7a5107ec6"",
        ""organization_guid"": ""b77e0d0b-3cd5-4730-85b3-9b76d9f299d4""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("096d4ad9-5108-4fd9-bbdf-711bb5e71ed6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/096d4ad9-5108-4fd9-bbdf-711bb5e71ed6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-186", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("599d868e-a695-4df9-a481-d0c7a5107ec6", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1274", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:14+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("599d868e-a695-4df9-a481-d0c7a5107ec6", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("b77e0d0b-3cd5-4730-85b3-9b76d9f299d4", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""74316a1a-0cfb-4c94-adc0-9a53f8a9b81b"",
        ""url"": ""/v2/events/74316a1a-0cfb-4c94-adc0-9a53f8a9b81b"",
        ""created_at"": ""2015-05-19T15:27:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-158"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""de6d9801-1891-4457-9643-52ff344c71ae"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-05-19T15:27:13+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""039ca651-2bb3-4296-993d-fc833717a41f"",
            ""organization_guid"": ""8fea697a-1cad-4099-9057-e3bcc91592f2""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""8fea697a-1cad-4099-9057-e3bcc91592f2""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("74316a1a-0cfb-4c94-adc0-9a53f8a9b81b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/74316a1a-0cfb-4c94-adc0-9a53f8a9b81b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-158", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("de6d9801-1891-4457-9643-52ff344c71ae", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("8fea697a-1cad-4099-9057-e3bcc91592f2", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7d388c50-a7d2-46d2-bab0-798d071e80d8"",
        ""url"": ""/v2/events/7d388c50-a7d2-46d2-bab0-798d071e80d8"",
        ""created_at"": ""2015-05-19T15:27:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""2f4fd2ac-b698-4911-b4c4-6fa266afb751"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1029"",
        ""actee"": ""f49be638-64eb-4036-8ce8-ca8bb5ac4259"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-46"",
        ""timestamp"": ""2015-05-19T15:27:13+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7d388c50-a7d2-46d2-bab0-798d071e80d8", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7d388c50-a7d2-46d2-bab0-798d071e80d8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("2f4fd2ac-b698-4911-b4c4-6fa266afb751", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1029", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("f49be638-64eb-4036-8ce8-ca8bb5ac4259", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label-46", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-05-19T15:27:13+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

    }
}