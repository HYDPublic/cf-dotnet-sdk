//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsEndpoint
{
        [TestMethod]
        public void ListServiceBindingDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""360c76a5-8d62-4eff-9de3-47871eb239dd"",
        ""url"": ""/v2/events/360c76a5-8d62-4eff-9de3-47871eb239dd"",
        ""created_at"": ""2015-04-10T19:41:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-61"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""6d2a17a8-b225-4194-a3d5-9820a74b86eb"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T19:41:53+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""9746a106-a043-48a0-9091-637b4de46b4e"",
        ""organization_guid"": ""f0cda73d-ef4e-46fa-b71f-83d2b3752eef""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("360c76a5-8d62-4eff-9de3-47871eb239dd", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/360c76a5-8d62-4eff-9de3-47871eb239dd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-61", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("6d2a17a8-b225-4194-a3d5-9820a74b86eb", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("9746a106-a043-48a0-9091-637b4de46b4e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f0cda73d-ef4e-46fa-b71f-83d2b3752eef", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8059eb75-a42b-4a22-a38d-215543f5d074"",
        ""url"": ""/v2/events/8059eb75-a42b-4a22-a38d-215543f5d074"",
        ""created_at"": ""2015-04-10T19:41:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-73"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""07760542-d0a2-4625-95e4-48e322fb2385"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-798"",
        ""timestamp"": ""2015-04-10T19:41:54+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8059eb75-a42b-4a22-a38d-215543f5d074", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8059eb75-a42b-4a22-a38d-215543f5d074", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-73", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("07760542-d0a2-4625-95e4-48e322fb2385", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-798", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2739d757-2c8d-4c46-9717-12ea335a3638"",
        ""url"": ""/v2/events/2739d757-2c8d-4c46-9717-12ea335a3638"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-40"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""163d0d22-5f1c-45eb-90c0-6a20ff28eaaf"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-322"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""163d0d22-5f1c-45eb-90c0-6a20ff28eaaf"",
        ""organization_guid"": ""46bc03d3-d57e-401e-8c0b-6e6b286dea7c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2739d757-2c8d-4c46-9717-12ea335a3638", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2739d757-2c8d-4c46-9717-12ea335a3638", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-40", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("163d0d22-5f1c-45eb-90c0-6a20ff28eaaf", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-322", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("163d0d22-5f1c-45eb-90c0-6a20ff28eaaf", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("46bc03d3-d57e-401e-8c0b-6e6b286dea7c", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e55743b8-7338-43b0-9947-ebdcd94d158b"",
        ""url"": ""/v2/events/e55743b8-7338-43b0-9947-ebdcd94d158b"",
        ""created_at"": ""2015-04-10T19:41:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""6fb6d426-5f49-4cd9-b348-c09031ddd594"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-905"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-04-10T19:41:54+00:00"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""51079f77-169d-4f85-b4d0-fb76d8b322c0"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e55743b8-7338-43b0-9947-ebdcd94d158b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e55743b8-7338-43b0-9947-ebdcd94d158b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("6fb6d426-5f49-4cd9-b348-c09031ddd594", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-905", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("plan-name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""37bb3075-6b24-46f2-83cf-13a4684714f0"",
        ""url"": ""/v2/events/37bb3075-6b24-46f2-83cf-13a4684714f0"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-45"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""ef02f4ce-a934-41c2-a0c6-327020448597"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-407"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-407"",
            ""space_guid"": ""2c5194bb-b3b1-4429-81fb-95d3cebbbc15""
          }
        },
        ""space_guid"": ""2c5194bb-b3b1-4429-81fb-95d3cebbbc15"",
        ""organization_guid"": ""2b1001af-cddc-4c09-805e-5a850362a6cb""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("37bb3075-6b24-46f2-83cf-13a4684714f0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/37bb3075-6b24-46f2-83cf-13a4684714f0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-45", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ef02f4ce-a934-41c2-a0c6-327020448597", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-407", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("2c5194bb-b3b1-4429-81fb-95d3cebbbc15", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("2b1001af-cddc-4c09-805e-5a850362a6cb", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f2084b07-d615-4a33-a238-eaf591c0ae6a"",
        ""url"": ""/v2/events/f2084b07-d615-4a33-a238-eaf591c0ae6a"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""d7c451b5-76c6-434a-8797-fca5a8199833"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-464"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""d7c451b5-76c6-434a-8797-fca5a8199833"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f2084b07-d615-4a33-a238-eaf591c0ae6a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f2084b07-d615-4a33-a238-eaf591c0ae6a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("d7c451b5-76c6-434a-8797-fca5a8199833", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-464", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""78bb7484-cabc-408f-a800-6f8dbcefaa71"",
        ""url"": ""/v2/events/78bb7484-cabc-408f-a800-6f8dbcefaa71"",
        ""created_at"": ""2015-04-10T19:41:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-83"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""8aa1db68-811f-4fdb-a327-9dfec71d973a"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-04-10T19:41:54+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("78bb7484-cabc-408f-a800-6f8dbcefaa71", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/78bb7484-cabc-408f-a800-6f8dbcefaa71", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-83", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("8aa1db68-811f-4fdb-a327-9dfec71d973a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("pancake broker", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void RetrieveEventTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""87418099-2109-4cfa-ae13-f312fe47818c"",
    ""url"": ""/v2/events/87418099-2109-4cfa-ae13-f312fe47818c"",
    ""created_at"": ""2015-04-10T19:41:54+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-956"",
    ""actor"": ""guid-fb9db72f-6a3e-4cc2-9c11-805467606775"",
    ""actor_type"": ""name-957"",
    ""actor_name"": ""name-958"",
    ""actee"": ""guid-eecff298-ba1a-4dd0-9406-8c3591c6b86b"",
    ""actee_type"": ""name-959"",
    ""actee_name"": ""name-960"",
    ""timestamp"": ""2015-04-10T19:41:54+00:00"",
    ""metadata"": {

    },
    ""space_guid"": ""e1762676-2af6-4d7b-95a5-079cbccede44"",
    ""organization_guid"": ""c581bcf2-334e-49b3-ae88-ef8604f4f496""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Events.RetrieveEvent(guid).Result;


                Assert.AreEqual("87418099-2109-4cfa-ae13-f312fe47818c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/87418099-2109-4cfa-ae13-f312fe47818c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-956", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("guid-fb9db72f-6a3e-4cc2-9c11-805467606775", TestUtil.ToTestableString(obj.Actor), true);
                Assert.AreEqual("name-957", TestUtil.ToTestableString(obj.ActorType), true);
                Assert.AreEqual("name-958", TestUtil.ToTestableString(obj.ActorName), true);
                Assert.AreEqual("guid-eecff298-ba1a-4dd0-9406-8c3591c6b86b", TestUtil.ToTestableString(obj.Actee), true);
                Assert.AreEqual("name-959", TestUtil.ToTestableString(obj.ActeeType), true);
                Assert.AreEqual("name-960", TestUtil.ToTestableString(obj.ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj.Timestamp), true);
                Assert.AreEqual("e1762676-2af6-4d7b-95a5-079cbccede44", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("c581bcf2-334e-49b3-ae88-ef8604f4f496", TestUtil.ToTestableString(obj.OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c4ed2713-8801-4752-8684-ac005b53de04"",
        ""url"": ""/v2/events/c4ed2713-8801-4752-8684-ac005b53de04"",
        ""created_at"": ""2015-04-10T19:41:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-69"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""4e1f105b-695d-4813-9242-9fe0be52eace"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-743"",
        ""timestamp"": ""2015-04-10T19:41:53+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""d5c3cf56-1180-41e9-9637-9ca95b6180d3""
          }
        },
        ""space_guid"": ""2e5380a3-8f51-49fa-b91e-a68a42aeaf9a"",
        ""organization_guid"": ""5a955aa4-67bd-4400-936c-07e9167cd2da""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c4ed2713-8801-4752-8684-ac005b53de04", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c4ed2713-8801-4752-8684-ac005b53de04", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-69", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("4e1f105b-695d-4813-9242-9fe0be52eace", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-743", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("2e5380a3-8f51-49fa-b91e-a68a42aeaf9a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("5a955aa4-67bd-4400-936c-07e9167cd2da", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppExitedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6ea015a8-bc34-422d-976f-0894d831809e"",
        ""url"": ""/v2/events/6ea015a8-bc34-422d-976f-0894d831809e"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""6dd8a4df-4f5c-412c-bd34-0a4f4bc3ca1c"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-378"",
        ""actee"": ""6dd8a4df-4f5c-412c-bd34-0a4f4bc3ca1c"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-378"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""3e595ee2-89ef-4fd4-9c27-1c7b8adf7142"",
        ""organization_guid"": ""36251de7-fd2e-4aa5-aab5-eb2821b8445a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppExitedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6ea015a8-bc34-422d-976f-0894d831809e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/6ea015a8-bc34-422d-976f-0894d831809e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("app.crash", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("6dd8a4df-4f5c-412c-bd34-0a4f4bc3ca1c", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-378", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("6dd8a4df-4f5c-412c-bd34-0a4f4bc3ca1c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-378", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("3e595ee2-89ef-4fd4-9c27-1c7b8adf7142", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("36251de7-fd2e-4aa5-aab5-eb2821b8445a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListEventsAssociatedWithAppSinceJanuary12014Test()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c4566fd1-a924-40ef-8378-204f99d18c5f"",
        ""url"": ""/v2/events/c4566fd1-a924-40ef-8378-204f99d18c5f"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-51"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0a7296a6-b9d0-46f8-91a4-f634a7d163a9"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-489"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""69af60a7-9f4c-4142-ac24-03b6b84088c5"",
        ""organization_guid"": ""69211689-5d92-48a2-9b2d-ce797c2fdb87""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ea58263f-3557-4c6b-9bef-2afb9b5605d6"",
        ""url"": ""/v2/events/ea58263f-3557-4c6b-9bef-2afb9b5605d6"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-51"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0a7296a6-b9d0-46f8-91a4-f634a7d163a9"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-489"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""69af60a7-9f4c-4142-ac24-03b6b84088c5"",
        ""organization_guid"": ""69211689-5d92-48a2-9b2d-ce797c2fdb87""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""eb2b55c0-b60d-4ae1-8af7-d80b30ef2597"",
        ""url"": ""/v2/events/eb2b55c0-b60d-4ae1-8af7-d80b30ef2597"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-51"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0a7296a6-b9d0-46f8-91a4-f634a7d163a9"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-489"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""69af60a7-9f4c-4142-ac24-03b6b84088c5"",
        ""organization_guid"": ""69211689-5d92-48a2-9b2d-ce797c2fdb87""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListEventsAssociatedWithAppSinceJanuary12014().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c4566fd1-a924-40ef-8378-204f99d18c5f", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c4566fd1-a924-40ef-8378-204f99d18c5f", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-51", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0a7296a6-b9d0-46f8-91a4-f634a7d163a9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-489", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("69af60a7-9f4c-4142-ac24-03b6b84088c5", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("69211689-5d92-48a2-9b2d-ce797c2fdb87", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("ea58263f-3557-4c6b-9bef-2afb9b5605d6", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ea58263f-3557-4c6b-9bef-2afb9b5605d6", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("uaa-id-51", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("0a7296a6-b9d0-46f8-91a4-f634a7d163a9", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-489", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("69af60a7-9f4c-4142-ac24-03b6b84088c5", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("69211689-5d92-48a2-9b2d-ce797c2fdb87", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("eb2b55c0-b60d-4ae1-8af7-d80b30ef2597", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/eb2b55c0-b60d-4ae1-8af7-d80b30ef2597", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("uaa-id-51", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("0a7296a6-b9d0-46f8-91a4-f634a7d163a9", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-489", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("69af60a7-9f4c-4142-ac24-03b6b84088c5", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("69211689-5d92-48a2-9b2d-ce797c2fdb87", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c16b3eae-1746-4a7c-b050-b65fcf8eedb0"",
        ""url"": ""/v2/events/c16b3eae-1746-4a7c-b050-b65fcf8eedb0"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-55"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""c2f5b6dc-dbee-4aaf-968c-cf6f4dfa102e"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""5bc217af-bd05-4936-aee1-6428c6f73a6d"",
            ""organization_guid"": ""38770704-1171-4729-ad92-d6427c5e27ea""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""38770704-1171-4729-ad92-d6427c5e27ea""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c16b3eae-1746-4a7c-b050-b65fcf8eedb0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c16b3eae-1746-4a7c-b050-b65fcf8eedb0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-55", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c2f5b6dc-dbee-4aaf-968c-cf6f4dfa102e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("38770704-1171-4729-ad92-d6427c5e27ea", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ac6808a8-4476-4b24-9978-c52672e4080d"",
        ""url"": ""/v2/events/ac6808a8-4476-4b24-9978-c52672e4080d"",
        ""created_at"": ""2015-04-10T19:41:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""b4150411-d01c-4f5d-a1d9-6ea0f08861f2"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-772"",
        ""actee"": ""96c7bffb-a686-4db8-a6dd-3d0c231da989"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-773"",
        ""timestamp"": ""2015-04-10T19:41:53+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ac6808a8-4476-4b24-9978-c52672e4080d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ac6808a8-4476-4b24-9978-c52672e4080d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("b4150411-d01c-4f5d-a1d9-6ea0f08861f2", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-772", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("96c7bffb-a686-4db8-a6dd-3d0c231da989", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-773", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAllEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""653c9709-ad27-4593-ad4c-fbca695aefd0"",
        ""url"": ""/v2/events/653c9709-ad27-4593-ad4c-fbca695aefd0"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-111"",
        ""actor"": ""guid-8dbf8791-68a6-4288-9aa4-1283a198b9f3"",
        ""actor_type"": ""name-112"",
        ""actor_name"": ""name-113"",
        ""actee"": ""guid-ad98c218-4298-4fc1-a32f-d6f2d1cc5ded"",
        ""actee_type"": ""name-114"",
        ""actee_name"": ""name-115"",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""7a58507c-7482-4315-8ed0-6525f23bfc34"",
        ""organization_guid"": ""51b39b6b-26af-4041-8008-f2d856baf2f1""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""53bbdf1e-11dc-4e1d-87a5-8cedfb1b95f6"",
        ""url"": ""/v2/events/53bbdf1e-11dc-4e1d-87a5-8cedfb1b95f6"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-119"",
        ""actor"": ""guid-847d73eb-06f5-462a-8b06-1328c96e8ea7"",
        ""actor_type"": ""name-120"",
        ""actor_name"": ""name-121"",
        ""actee"": ""guid-d1417a26-4dcd-4cd3-8364-1cbb1edb68f3"",
        ""actee_type"": ""name-122"",
        ""actee_name"": ""name-123"",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""8e7470d1-ade3-4d96-b91b-1126e5e6badc"",
        ""organization_guid"": ""03a1418f-d836-4a05-b661-f8e873a3f003""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""18318b5e-29f2-4a33-8418-673d3e2ba5c0"",
        ""url"": ""/v2/events/18318b5e-29f2-4a33-8418-673d3e2ba5c0"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-127"",
        ""actor"": ""guid-cde18df3-76ce-4b1c-9118-a0a1582fc14f"",
        ""actor_type"": ""name-128"",
        ""actor_name"": ""name-129"",
        ""actee"": ""guid-3862542c-3cd5-43c1-9c7a-8998544939c3"",
        ""actee_type"": ""name-130"",
        ""actee_name"": ""name-131"",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""e5537354-19fb-438c-81f9-a34b6d8726d3"",
        ""organization_guid"": ""73707859-cb84-4bc0-aa15-a550d491930b""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAllEvents().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("653c9709-ad27-4593-ad4c-fbca695aefd0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/653c9709-ad27-4593-ad4c-fbca695aefd0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-111", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("guid-8dbf8791-68a6-4288-9aa4-1283a198b9f3", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("name-112", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-113", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid-ad98c218-4298-4fc1-a32f-d6f2d1cc5ded", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("name-114", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-115", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("7a58507c-7482-4315-8ed0-6525f23bfc34", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("51b39b6b-26af-4041-8008-f2d856baf2f1", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("53bbdf1e-11dc-4e1d-87a5-8cedfb1b95f6", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/53bbdf1e-11dc-4e1d-87a5-8cedfb1b95f6", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-119", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("guid-847d73eb-06f5-462a-8b06-1328c96e8ea7", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("name-120", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("name-121", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("guid-d1417a26-4dcd-4cd3-8364-1cbb1edb68f3", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("name-122", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-123", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("8e7470d1-ade3-4d96-b91b-1126e5e6badc", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("03a1418f-d836-4a05-b661-f8e873a3f003", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("18318b5e-29f2-4a33-8418-673d3e2ba5c0", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/18318b5e-29f2-4a33-8418-673d3e2ba5c0", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-127", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("guid-cde18df3-76ce-4b1c-9118-a0a1582fc14f", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("name-128", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("name-129", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("guid-3862542c-3cd5-43c1-9c7a-8998544939c3", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("name-130", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-131", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("e5537354-19fb-438c-81f9-a34b6d8726d3", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("73707859-cb84-4bc0-aa15-a550d491930b", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7ab368ea-c9d5-40f4-883f-73e8de61ecbc"",
        ""url"": ""/v2/events/7ab368ea-c9d5-40f4-883f-73e8de61ecbc"",
        ""created_at"": ""2015-04-10T19:41:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""47181440-e67c-45a3-8116-365f9eb89f57"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-602"",
        ""actee"": ""5c42e078-ce1a-4031-ba6b-65bac84d883c"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-04-10T19:41:53+00:00"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7ab368ea-c9d5-40f4-883f-73e8de61ecbc", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7ab368ea-c9d5-40f4-883f-73e8de61ecbc", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("47181440-e67c-45a3-8116-365f9eb89f57", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-602", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5c42e078-ce1a-4031-ba6b-65bac84d883c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""18598a2d-9fa8-4a5d-a00a-2bdbf079b69e"",
        ""url"": ""/v2/events/18598a2d-9fa8-4a5d-a00a-2bdbf079b69e"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-28"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e1ba9b21-d037-4b66-83fc-35009f21085d"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-159"",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""5ba454c9-49c8-43cb-bf68-afe4cb941845"",
        ""organization_guid"": ""44e4f6bc-4ec8-486b-95e4-2e27438108e2""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("18598a2d-9fa8-4a5d-a00a-2bdbf079b69e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/18598a2d-9fa8-4a5d-a00a-2bdbf079b69e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-28", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e1ba9b21-d037-4b66-83fc-35009f21085d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-159", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("5ba454c9-49c8-43cb-bf68-afe4cb941845", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("44e4f6bc-4ec8-486b-95e4-2e27438108e2", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7ee67fd7-57ea-417c-be7f-d26d10cb95b4"",
        ""url"": ""/v2/events/7ee67fd7-57ea-417c-be7f-d26d10cb95b4"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-47"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""f85758bf-8026-4f47-82d2-cd2bda89a4b9"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-435"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""03b33b1f-3bd4-4f04-b802-5975b9a53d5e"",
        ""organization_guid"": ""cdee3539-3064-424f-99b4-e01614a8b747""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7ee67fd7-57ea-417c-be7f-d26d10cb95b4", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7ee67fd7-57ea-417c-be7f-d26d10cb95b4", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-47", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("f85758bf-8026-4f47-82d2-cd2bda89a4b9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-435", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("03b33b1f-3bd4-4f04-b802-5975b9a53d5e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("cdee3539-3064-424f-99b4-e01614a8b747", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5f1a89fe-64de-46b4-bef5-8e1c1c0486b2"",
        ""url"": ""/v2/events/5f1a89fe-64de-46b4-bef5-8e1c1c0486b2"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""96b6e23a-bb20-4b1c-91d2-74e08afe0b3b"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-297"",
        ""actee"": ""2fbfc400-6d05-4bc7-aa4c-6f3a0ad310bd"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5f1a89fe-64de-46b4-bef5-8e1c1c0486b2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5f1a89fe-64de-46b4-bef5-8e1c1c0486b2", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("96b6e23a-bb20-4b1c-91d2-74e08afe0b3b", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-297", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("2fbfc400-6d05-4bc7-aa4c-6f3a0ad310bd", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a890cbd8-4f88-4449-8996-2c7a317b34e7"",
        ""url"": ""/v2/events/a890cbd8-4f88-4449-8996-2c7a317b34e7"",
        ""created_at"": ""2015-04-10T19:41:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-65"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""14b4611b-6901-4d77-99c5-c15558636721"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-685"",
        ""timestamp"": ""2015-04-10T19:41:53+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""14b4611b-6901-4d77-99c5-c15558636721"",
        ""organization_guid"": ""5d6a9ecc-3d90-44a6-9679-a5abfc63877f""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a890cbd8-4f88-4449-8996-2c7a317b34e7", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a890cbd8-4f88-4449-8996-2c7a317b34e7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-65", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("14b4611b-6901-4d77-99c5-c15558636721", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-685", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("14b4611b-6901-4d77-99c5-c15558636721", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("5d6a9ecc-3d90-44a6-9679-a5abfc63877f", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d9d416be-9a87-43c0-8920-b90cc5b7e309"",
        ""url"": ""/v2/events/d9d416be-9a87-43c0-8920-b90cc5b7e309"",
        ""created_at"": ""2015-04-10T19:41:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-77"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d31c19f0-858a-449e-8db9-5b6128f37436"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-848"",
        ""timestamp"": ""2015-04-10T19:41:54+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-848"",
            ""service_plan_guid"": ""07da768f-f7fa-41b5-aa6f-5da7ccca1381"",
            ""space_guid"": ""8d97244f-3d8f-486e-877f-5118ed6e23e8""
          }
        },
        ""space_guid"": ""8d97244f-3d8f-486e-877f-5118ed6e23e8"",
        ""organization_guid"": ""f322b39c-e14f-44c8-bcd2-73bbc9554451""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d9d416be-9a87-43c0-8920-b90cc5b7e309", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d9d416be-9a87-43c0-8920-b90cc5b7e309", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-77", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d31c19f0-858a-449e-8db9-5b6128f37436", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-848", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("8d97244f-3d8f-486e-877f-5118ed6e23e8", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f322b39c-e14f-44c8-bcd2-73bbc9554451", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1371351e-32bc-4129-b543-297383a8b39b"",
        ""url"": ""/v2/events/1371351e-32bc-4129-b543-297383a8b39b"",
        ""created_at"": ""2015-04-10T19:41:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-57"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""cca2c3f5-a61e-43b9-b9a8-09a279abc9e6"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-573"",
        ""timestamp"": ""2015-04-10T19:41:53+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""560cfd9a-0bab-44d7-8e3d-7dc5a24ed535"",
        ""organization_guid"": ""6d6a112b-2cb7-4068-bdeb-aa506fc56f91""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1371351e-32bc-4129-b543-297383a8b39b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/1371351e-32bc-4129-b543-297383a8b39b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-57", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("cca2c3f5-a61e-43b9-b9a8-09a279abc9e6", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-573", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("560cfd9a-0bab-44d7-8e3d-7dc5a24ed535", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("6d6a112b-2cb7-4068-bdeb-aa506fc56f91", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bb656589-7663-4c49-8658-5de5f7fbc7ee"",
        ""url"": ""/v2/events/bb656589-7663-4c49-8658-5de5f7fbc7ee"",
        ""created_at"": ""2015-04-10T19:41:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""5d92061a-4831-498d-a9b8-c57caf1a6401"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-955"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-04-10T19:41:54+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("bb656589-7663-4c49-8658-5de5f7fbc7ee", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/bb656589-7663-4c49-8658-5de5f7fbc7ee", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("5d92061a-4831-498d-a9b8-c57caf1a6401", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-955", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""45dad4ca-0705-476b-8649-c4f852ec72b3"",
        ""url"": ""/v2/events/45dad4ca-0705-476b-8649-c4f852ec72b3"",
        ""created_at"": ""2015-04-10T19:41:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-75"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""c9a47c53-1fc2-4b8e-9c7c-4f22eb937e53"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-823"",
        ""timestamp"": ""2015-04-10T19:41:54+00:00"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("45dad4ca-0705-476b-8649-c4f852ec72b3", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/45dad4ca-0705-476b-8649-c4f852ec72b3", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-75", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c9a47c53-1fc2-4b8e-9c7c-4f22eb937e53", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-823", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""12669947-ae12-4b92-a254-44baff3a559a"",
        ""url"": ""/v2/events/12669947-ae12-4b92-a254-44baff3a559a"",
        ""created_at"": ""2015-04-10T19:41:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""d7409791-0a1c-4be6-874e-05324376e314"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-660"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-04-10T19:41:53+00:00"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("12669947-ae12-4b92-a254-44baff3a559a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/12669947-ae12-4b92-a254-44baff3a559a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("d7409791-0a1c-4be6-874e-05324376e314", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-660", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8e1f695a-9a68-4ca8-bc3d-d5ba1c021f8b"",
        ""url"": ""/v2/events/8e1f695a-9a68-4ca8-bc3d-d5ba1c021f8b"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-42"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""8736d028-b28e-4abe-aac5-874c913cba5a"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-349"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""bd529d27-f6eb-46e6-8da8-e8860638b659"",
        ""organization_guid"": ""f5c69dd4-fadf-4c29-995b-4814a65b6613""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8e1f695a-9a68-4ca8-bc3d-d5ba1c021f8b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8e1f695a-9a68-4ca8-bc3d-d5ba1c021f8b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-42", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("8736d028-b28e-4abe-aac5-874c913cba5a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-349", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("bd529d27-f6eb-46e6-8da8-e8860638b659", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f5c69dd4-fadf-4c29-995b-4814a65b6613", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a70c12c6-756c-4057-a4c0-4382cdd46a25"",
        ""url"": ""/v2/events/a70c12c6-756c-4057-a4c0-4382cdd46a25"",
        ""created_at"": ""2015-04-10T19:41:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-67"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""fef26f85-1128-4e98-a562-66398d6336ae"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T19:41:53+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""b63b8aa9-5135-4e98-80d6-c5515b7bf83d"",
            ""app_guid"": ""9ca61168-4de4-4714-b1a7-4b238ec6af69""
          }
        },
        ""space_guid"": ""c8eacfcb-6f63-4281-8382-da5bac3d5a4c"",
        ""organization_guid"": ""e9ecf89b-3f8e-418a-8231-e21b6116a09c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a70c12c6-756c-4057-a4c0-4382cdd46a25", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a70c12c6-756c-4057-a4c0-4382cdd46a25", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-67", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("fef26f85-1128-4e98-a562-66398d6336ae", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("c8eacfcb-6f63-4281-8382-da5bac3d5a4c", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e9ecf89b-3f8e-418a-8231-e21b6116a09c", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""08aade07-6169-45d5-9217-74c3d8c8cc51"",
        ""url"": ""/v2/events/08aade07-6169-45d5-9217-74c3d8c8cc51"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-30"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""877f00e7-09f9-46d2-8bd6-150343faa12f"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-188"",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""60d52bf4-1528-4105-ba1a-1000b166d4d5"",
        ""organization_guid"": ""0fae3fda-a469-4dbc-bcdc-c47530a49dbe""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("08aade07-6169-45d5-9217-74c3d8c8cc51", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/08aade07-6169-45d5-9217-74c3d8c8cc51", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-30", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("877f00e7-09f9-46d2-8bd6-150343faa12f", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-188", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("60d52bf4-1528-4105-ba1a-1000b166d4d5", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0fae3fda-a469-4dbc-bcdc-c47530a49dbe", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b014f7f6-c385-42d0-b80f-1db8a8beba77"",
        ""url"": ""/v2/events/b014f7f6-c385-42d0-b80f-1db8a8beba77"",
        ""created_at"": ""2015-04-10T19:41:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-79"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""b4dac1c4-ac15-4df9-b7ae-aa8f554826db"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T19:41:54+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""e38e5881-a470-46f1-97b2-1a78bb75d715""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b014f7f6-c385-42d0-b80f-1db8a8beba77", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b014f7f6-c385-42d0-b80f-1db8a8beba77", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-79", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b4dac1c4-ac15-4df9-b7ae-aa8f554826db", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:54+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e38e5881-a470-46f1-97b2-1a78bb75d715", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""92026eb5-3c2a-4def-8a11-73780634e751"",
        ""url"": ""/v2/events/92026eb5-3c2a-4def-8a11-73780634e751"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-34"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""5017dc76-b59c-4c41-9703-768bf0302eee"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-241"",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""55f8b362-ed71-4079-b993-d56bfe1680da"",
        ""organization_guid"": ""c54b7585-01b5-4a7b-b96b-950670b84381""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("92026eb5-3c2a-4def-8a11-73780634e751", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/92026eb5-3c2a-4def-8a11-73780634e751", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-34", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5017dc76-b59c-4c41-9703-768bf0302eee", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-241", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("55f8b362-ed71-4079-b993-d56bfe1680da", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("c54b7585-01b5-4a7b-b96b-950670b84381", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""324abf9c-b92f-4fb1-adcb-ca1df9d38e1d"",
        ""url"": ""/v2/events/324abf9c-b92f-4fb1-adcb-ca1df9d38e1d"",
        ""created_at"": ""2015-04-10T19:41:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-53"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e4a84448-4ca3-4f6c-b1f9-de7981cc2a7c"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-518"",
        ""timestamp"": ""2015-04-10T19:41:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""e4a84448-4ca3-4f6c-b1f9-de7981cc2a7c"",
        ""organization_guid"": ""2fa42d7c-86a2-4ff1-b17e-40308a7e662e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("324abf9c-b92f-4fb1-adcb-ca1df9d38e1d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/324abf9c-b92f-4fb1-adcb-ca1df9d38e1d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-53", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e4a84448-4ca3-4f6c-b1f9-de7981cc2a7c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-518", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e4a84448-4ca3-4f6c-b1f9-de7981cc2a7c", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("2fa42d7c-86a2-4ff1-b17e-40308a7e662e", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b3378387-07c6-4942-a06e-b6dd868e3dfe"",
        ""url"": ""/v2/events/b3378387-07c6-4942-a06e-b6dd868e3dfe"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-36"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0400912f-1f55-4c95-a773-1a704cc0cbb1"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""eaa37cb8-cbff-4ce4-9241-25722e3ec71d"",
            ""organization_guid"": ""024e4208-6439-426f-a27a-457718c108e6""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""024e4208-6439-426f-a27a-457718c108e6""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b3378387-07c6-4942-a06e-b6dd868e3dfe", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b3378387-07c6-4942-a06e-b6dd868e3dfe", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-36", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0400912f-1f55-4c95-a773-1a704cc0cbb1", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("024e4208-6439-426f-a27a-457718c108e6", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""052f54d3-84f2-4a2a-9671-484248ea21a3"",
        ""url"": ""/v2/events/052f54d3-84f2-4a2a-9671-484248ea21a3"",
        ""created_at"": ""2015-04-10T19:41:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""6038be19-2b9f-47b0-a974-0ebf9c1eeecc"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-216"",
        ""actee"": ""de8eea9d-6931-4c56-8a1e-715676499a39"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-10"",
        ""timestamp"": ""2015-04-10T19:41:51+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("052f54d3-84f2-4a2a-9671-484248ea21a3", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/052f54d3-84f2-4a2a-9671-484248ea21a3", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("6038be19-2b9f-47b0-a974-0ebf9c1eeecc", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-216", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("de8eea9d-6931-4c56-8a1e-715676499a39", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label-10", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-04-10T19:41:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

    }
}