//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsEndpoint
{
        [TestMethod]
        public void ListServiceBindingDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7150ec98-8ab2-449e-9914-975019e4067b"",
        ""url"": ""/v2/events/7150ec98-8ab2-449e-9914-975019e4067b"",
        ""created_at"": ""2015-03-25T13:48:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-203"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""b8284c54-4917-4dde-b202-4b8288feac07"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-25T13:48:50+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""286f0a14-bcd2-4c53-a57b-5b1ba3edc240"",
        ""organization_guid"": ""1b06277d-b2a5-4976-9451-c333f91052c3""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7150ec98-8ab2-449e-9914-975019e4067b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7150ec98-8ab2-449e-9914-975019e4067b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-203", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b8284c54-4917-4dde-b202-4b8288feac07", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("286f0a14-bcd2-4c53-a57b-5b1ba3edc240", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("1b06277d-b2a5-4976-9451-c333f91052c3", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e41ee993-667d-45fd-b479-d0606b9ffb9e"",
        ""url"": ""/v2/events/e41ee993-667d-45fd-b479-d0606b9ffb9e"",
        ""created_at"": ""2015-03-25T13:48:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-189"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""bb281c1a-6ae2-4e92-b4cc-7de081d50f10"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-841"",
        ""timestamp"": ""2015-03-25T13:48:49+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e41ee993-667d-45fd-b479-d0606b9ffb9e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e41ee993-667d-45fd-b479-d0606b9ffb9e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-189", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("bb281c1a-6ae2-4e92-b4cc-7de081d50f10", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-841", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8d1b99b4-6fec-4dda-a7ed-c8109e4d2f1b"",
        ""url"": ""/v2/events/8d1b99b4-6fec-4dda-a7ed-c8109e4d2f1b"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-228"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""303a53d0-12ec-466e-9035-da429b03a2aa"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1392"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""303a53d0-12ec-466e-9035-da429b03a2aa"",
        ""organization_guid"": ""a5b516eb-f31e-488c-a33a-9df05712a12a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8d1b99b4-6fec-4dda-a7ed-c8109e4d2f1b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8d1b99b4-6fec-4dda-a7ed-c8109e4d2f1b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-228", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("303a53d0-12ec-466e-9035-da429b03a2aa", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1392", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("303a53d0-12ec-466e-9035-da429b03a2aa", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a5b516eb-f31e-488c-a33a-9df05712a12a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""09dabd2f-ba86-4227-8df7-c7cc1ee759ac"",
        ""url"": ""/v2/events/09dabd2f-ba86-4227-8df7-c7cc1ee759ac"",
        ""created_at"": ""2015-03-25T13:48:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""67618e3d-e4a7-4a99-9dc9-237f7fbb805c"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1198"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-03-25T13:48:51+00:00"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""8ae5d0b2-6dbf-4bac-aae7-547c9125abbe"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("09dabd2f-ba86-4227-8df7-c7cc1ee759ac", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/09dabd2f-ba86-4227-8df7-c7cc1ee759ac", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("67618e3d-e4a7-4a99-9dc9-237f7fbb805c", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1198", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("plan-name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""af37167a-6a92-428d-98ee-cf881507039d"",
        ""url"": ""/v2/events/af37167a-6a92-428d-98ee-cf881507039d"",
        ""created_at"": ""2015-03-25T13:48:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-191"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""f12b549b-dcbf-4d92-be54-fa00c1f2efb8"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-866"",
        ""timestamp"": ""2015-03-25T13:48:49+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-866"",
            ""space_guid"": ""c138b255-ad77-4e77-a97e-b777824a455e""
          }
        },
        ""space_guid"": ""c138b255-ad77-4e77-a97e-b777824a455e"",
        ""organization_guid"": ""7032f0e6-0d4b-41dc-bd72-c1018b88702a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("af37167a-6a92-428d-98ee-cf881507039d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/af37167a-6a92-428d-98ee-cf881507039d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-191", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("f12b549b-dcbf-4d92-be54-fa00c1f2efb8", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-866", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("c138b255-ad77-4e77-a97e-b777824a455e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("7032f0e6-0d4b-41dc-bd72-c1018b88702a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""df4328e6-6ea3-459c-af73-5357c8ed277a"",
        ""url"": ""/v2/events/df4328e6-6ea3-459c-af73-5357c8ed277a"",
        ""created_at"": ""2015-03-25T13:48:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""f8f3e620-aa82-47fe-8206-ebd5f413b7fc"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-736"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-03-25T13:48:49+00:00"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""f8f3e620-aa82-47fe-8206-ebd5f413b7fc"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("df4328e6-6ea3-459c-af73-5357c8ed277a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/df4328e6-6ea3-459c-af73-5357c8ed277a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("f8f3e620-aa82-47fe-8206-ebd5f413b7fc", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-736", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ddbe1929-fb39-4a7d-9534-6c3312647292"",
        ""url"": ""/v2/events/ddbe1929-fb39-4a7d-9534-6c3312647292"",
        ""created_at"": ""2015-03-25T13:48:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-209"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3c0d6b87-0354-4481-b1a2-70f118aa8d5c"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-03-25T13:48:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ddbe1929-fb39-4a7d-9534-6c3312647292", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ddbe1929-fb39-4a7d-9534-6c3312647292", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-209", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("3c0d6b87-0354-4481-b1a2-70f118aa8d5c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("pancake broker", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void RetrieveEventTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""be2f53c6-c503-463a-83b9-6ac276abb7d2"",
    ""url"": ""/v2/events/be2f53c6-c503-463a-83b9-6ac276abb7d2"",
    ""created_at"": ""2015-03-25T13:48:49+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-688"",
    ""actor"": ""guid-1ca312e7-d82f-4dfb-b57a-307b735ccc8e"",
    ""actor_type"": ""name-689"",
    ""actor_name"": ""name-690"",
    ""actee"": ""guid-8ff63a6a-d149-4b36-b9f1-2b4ef4ee7697"",
    ""actee_type"": ""name-691"",
    ""actee_name"": ""name-692"",
    ""timestamp"": ""2015-03-25T13:48:49+00:00"",
    ""metadata"": {

    },
    ""space_guid"": ""ea25c456-3e3a-4a21-ad6c-6513a60be625"",
    ""organization_guid"": ""38b4eab7-3043-4951-b268-c9c37ba798b6""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Events.RetrieveEvent(guid).Result;


                Assert.AreEqual("be2f53c6-c503-463a-83b9-6ac276abb7d2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/be2f53c6-c503-463a-83b9-6ac276abb7d2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-688", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("guid-1ca312e7-d82f-4dfb-b57a-307b735ccc8e", TestUtil.ToTestableString(obj.Actor), true);
                Assert.AreEqual("name-689", TestUtil.ToTestableString(obj.ActorType), true);
                Assert.AreEqual("name-690", TestUtil.ToTestableString(obj.ActorName), true);
                Assert.AreEqual("guid-8ff63a6a-d149-4b36-b9f1-2b4ef4ee7697", TestUtil.ToTestableString(obj.Actee), true);
                Assert.AreEqual("name-691", TestUtil.ToTestableString(obj.ActeeType), true);
                Assert.AreEqual("name-692", TestUtil.ToTestableString(obj.ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj.Timestamp), true);
                Assert.AreEqual("ea25c456-3e3a-4a21-ad6c-6513a60be625", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("38b4eab7-3043-4951-b268-c9c37ba798b6", TestUtil.ToTestableString(obj.OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""218d376d-c5f5-422b-9699-084203c48523"",
        ""url"": ""/v2/events/218d376d-c5f5-422b-9699-084203c48523"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-226"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""250b6fdd-05c1-4cde-8649-c804e673e085"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1363"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""36d423aa-cac4-447e-aa87-0c363da7c239""
          }
        },
        ""space_guid"": ""fd6f756a-51ff-4dcb-a0b5-d1f0a716ee1a"",
        ""organization_guid"": ""ee8d125e-1bbb-47be-9643-4e252229fd12""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("218d376d-c5f5-422b-9699-084203c48523", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/218d376d-c5f5-422b-9699-084203c48523", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-226", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("250b6fdd-05c1-4cde-8649-c804e673e085", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1363", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("fd6f756a-51ff-4dcb-a0b5-d1f0a716ee1a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("ee8d125e-1bbb-47be-9643-4e252229fd12", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppExitedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2a21e774-bb48-410d-a45f-ac7ab4452c26"",
        ""url"": ""/v2/events/2a21e774-bb48-410d-a45f-ac7ab4452c26"",
        ""created_at"": ""2015-03-25T13:48:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""c9dca49c-2258-4e23-b9af-d843a59ee493"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1223"",
        ""actee"": ""c9dca49c-2258-4e23-b9af-d843a59ee493"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1223"",
        ""timestamp"": ""2015-03-25T13:48:51+00:00"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""0aec3f0b-5942-4421-8d26-063dbe4fd177"",
        ""organization_guid"": ""bdae54f8-2460-4b02-8e4d-caf79d82aebc""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppExitedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2a21e774-bb48-410d-a45f-ac7ab4452c26", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2a21e774-bb48-410d-a45f-ac7ab4452c26", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("app.crash", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("c9dca49c-2258-4e23-b9af-d843a59ee493", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1223", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c9dca49c-2258-4e23-b9af-d843a59ee493", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1223", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("0aec3f0b-5942-4421-8d26-063dbe4fd177", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("bdae54f8-2460-4b02-8e4d-caf79d82aebc", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListEventsAssociatedWithAppSinceJanuary12014Test()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""79abfee5-a680-4f73-9b74-3582ed829439"",
        ""url"": ""/v2/events/79abfee5-a680-4f73-9b74-3582ed829439"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-236"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""dc59eb07-9ad9-4389-86e2-062dfd1a83a6"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1499"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""df2b6760-ec59-4051-bb6b-db4b29cdcd05"",
        ""organization_guid"": ""a07ab5e8-31a9-40ed-a2a0-2073dc261991""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ab1f7f6f-cc57-4733-b3b6-6221b429aaaa"",
        ""url"": ""/v2/events/ab1f7f6f-cc57-4733-b3b6-6221b429aaaa"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-236"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""dc59eb07-9ad9-4389-86e2-062dfd1a83a6"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1499"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""df2b6760-ec59-4051-bb6b-db4b29cdcd05"",
        ""organization_guid"": ""a07ab5e8-31a9-40ed-a2a0-2073dc261991""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""330473c3-d86e-4d41-afd4-869115b400df"",
        ""url"": ""/v2/events/330473c3-d86e-4d41-afd4-869115b400df"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-236"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""dc59eb07-9ad9-4389-86e2-062dfd1a83a6"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1499"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""df2b6760-ec59-4051-bb6b-db4b29cdcd05"",
        ""organization_guid"": ""a07ab5e8-31a9-40ed-a2a0-2073dc261991""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListEventsAssociatedWithAppSinceJanuary12014().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("79abfee5-a680-4f73-9b74-3582ed829439", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/79abfee5-a680-4f73-9b74-3582ed829439", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-236", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("dc59eb07-9ad9-4389-86e2-062dfd1a83a6", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1499", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("df2b6760-ec59-4051-bb6b-db4b29cdcd05", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a07ab5e8-31a9-40ed-a2a0-2073dc261991", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("ab1f7f6f-cc57-4733-b3b6-6221b429aaaa", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ab1f7f6f-cc57-4733-b3b6-6221b429aaaa", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("uaa-id-236", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("dc59eb07-9ad9-4389-86e2-062dfd1a83a6", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-1499", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("df2b6760-ec59-4051-bb6b-db4b29cdcd05", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("a07ab5e8-31a9-40ed-a2a0-2073dc261991", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("330473c3-d86e-4d41-afd4-869115b400df", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/330473c3-d86e-4d41-afd4-869115b400df", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("uaa-id-236", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("dc59eb07-9ad9-4389-86e2-062dfd1a83a6", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-1499", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("df2b6760-ec59-4051-bb6b-db4b29cdcd05", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("a07ab5e8-31a9-40ed-a2a0-2073dc261991", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""59ed5ba4-88a9-47f1-a767-f82c73d2023a"",
        ""url"": ""/v2/events/59ed5ba4-88a9-47f1-a767-f82c73d2023a"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-234"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9b336bf1-295f-4309-b5ff-7961d41298e2"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""22c5fcaf-9443-4181-8eef-a7b3d08c85bd"",
            ""organization_guid"": ""90386a42-7d45-4038-828d-6db775e9183f""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""90386a42-7d45-4038-828d-6db775e9183f""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("59ed5ba4-88a9-47f1-a767-f82c73d2023a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/59ed5ba4-88a9-47f1-a767-f82c73d2023a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-234", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9b336bf1-295f-4309-b5ff-7961d41298e2", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("90386a42-7d45-4038-828d-6db775e9183f", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5d267309-d566-4a38-882c-73916a223ade"",
        ""url"": ""/v2/events/5d267309-d566-4a38-882c-73916a223ade"",
        ""created_at"": ""2015-03-25T13:48:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""cd8d0f3c-760e-4c6e-8be0-ccd27101efd1"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-946"",
        ""actee"": ""956d6e20-386c-41b1-8a23-4ccaab889856"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-947"",
        ""timestamp"": ""2015-03-25T13:48:50+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5d267309-d566-4a38-882c-73916a223ade", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5d267309-d566-4a38-882c-73916a223ade", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("cd8d0f3c-760e-4c6e-8be0-ccd27101efd1", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-946", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("956d6e20-386c-41b1-8a23-4ccaab889856", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-947", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAllEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""44406b21-b83d-4fa3-bd77-107edfba5f30"",
        ""url"": ""/v2/events/44406b21-b83d-4fa3-bd77-107edfba5f30"",
        ""created_at"": ""2015-03-25T13:48:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1533"",
        ""actor"": ""guid-357a8544-7c70-46d8-9ab0-61487a3286e4"",
        ""actor_type"": ""name-1534"",
        ""actor_name"": ""name-1535"",
        ""actee"": ""guid-6c808b2e-63a2-4837-a384-bc6cfd693c73"",
        ""actee_type"": ""name-1536"",
        ""actee_name"": ""name-1537"",
        ""timestamp"": ""2015-03-25T13:48:53+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""5ba7e5ef-5875-49a8-9ff0-0931c0eab333"",
        ""organization_guid"": ""4266d845-537c-4314-adb9-f522df512193""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""42f80c6b-f549-410f-ac9a-30e60b2a9a33"",
        ""url"": ""/v2/events/42f80c6b-f549-410f-ac9a-30e60b2a9a33"",
        ""created_at"": ""2015-03-25T13:48:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1541"",
        ""actor"": ""guid-a59766cb-4939-464e-b559-d52281419aa4"",
        ""actor_type"": ""name-1542"",
        ""actor_name"": ""name-1543"",
        ""actee"": ""guid-d564e10e-1d39-4257-bb30-08ef48cc24fd"",
        ""actee_type"": ""name-1544"",
        ""actee_name"": ""name-1545"",
        ""timestamp"": ""2015-03-25T13:48:53+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""3c01b75c-e913-4768-9508-4e666ff23035"",
        ""organization_guid"": ""2bc6c919-ab80-4738-be77-ca713280b518""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""b715de0d-2476-4bc4-88b5-74a3cfeaa20b"",
        ""url"": ""/v2/events/b715de0d-2476-4bc4-88b5-74a3cfeaa20b"",
        ""created_at"": ""2015-03-25T13:48:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1549"",
        ""actor"": ""guid-cae01296-a1c0-4ef5-920a-42b9af314427"",
        ""actor_type"": ""name-1550"",
        ""actor_name"": ""name-1551"",
        ""actee"": ""guid-a4c3d6d5-1df7-409f-bcd3-074b04337903"",
        ""actee_type"": ""name-1552"",
        ""actee_name"": ""name-1553"",
        ""timestamp"": ""2015-03-25T13:48:53+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""b804595c-3a21-48cb-84c0-8b3c2b617a52"",
        ""organization_guid"": ""49d8fa2f-602e-41ab-bb5d-c96d6308be75""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAllEvents().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("44406b21-b83d-4fa3-bd77-107edfba5f30", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/44406b21-b83d-4fa3-bd77-107edfba5f30", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1533", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("guid-357a8544-7c70-46d8-9ab0-61487a3286e4", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("name-1534", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1535", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid-6c808b2e-63a2-4837-a384-bc6cfd693c73", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("name-1536", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1537", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("5ba7e5ef-5875-49a8-9ff0-0931c0eab333", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("4266d845-537c-4314-adb9-f522df512193", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("42f80c6b-f549-410f-ac9a-30e60b2a9a33", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/42f80c6b-f549-410f-ac9a-30e60b2a9a33", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1541", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("guid-a59766cb-4939-464e-b559-d52281419aa4", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("name-1542", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("name-1543", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("guid-d564e10e-1d39-4257-bb30-08ef48cc24fd", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("name-1544", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-1545", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("3c01b75c-e913-4768-9508-4e666ff23035", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("2bc6c919-ab80-4738-be77-ca713280b518", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("b715de0d-2476-4bc4-88b5-74a3cfeaa20b", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b715de0d-2476-4bc4-88b5-74a3cfeaa20b", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1549", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("guid-cae01296-a1c0-4ef5-920a-42b9af314427", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("name-1550", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("name-1551", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("guid-a4c3d6d5-1df7-409f-bcd3-074b04337903", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("name-1552", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-1553", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("b804595c-3a21-48cb-84c0-8b3c2b617a52", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("49d8fa2f-602e-41ab-bb5d-c96d6308be75", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""673dbff4-4a62-4018-9199-834efd693ba6"",
        ""url"": ""/v2/events/673dbff4-4a62-4018-9199-834efd693ba6"",
        ""created_at"": ""2015-03-25T13:48:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""e7dea172-1638-4175-9e22-bb08ec22047e"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-787"",
        ""actee"": ""a1a1c9e5-98da-4e45-a43f-419e5f47fab8"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-03-25T13:48:49+00:00"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("673dbff4-4a62-4018-9199-834efd693ba6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/673dbff4-4a62-4018-9199-834efd693ba6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("e7dea172-1638-4175-9e22-bb08ec22047e", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-787", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a1a1c9e5-98da-4e45-a43f-419e5f47fab8", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4cf9115b-052b-4598-9c78-7a57495955de"",
        ""url"": ""/v2/events/4cf9115b-052b-4598-9c78-7a57495955de"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-238"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""03d2cc2e-150b-4adc-bc75-3797e9e0d268"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1528"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""e24cc6da-f41a-4ba7-8844-75425663e71d"",
        ""organization_guid"": ""693bbbc2-64af-43bd-b2c2-43b03b671eb6""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("4cf9115b-052b-4598-9c78-7a57495955de", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4cf9115b-052b-4598-9c78-7a57495955de", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-238", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("03d2cc2e-150b-4adc-bc75-3797e9e0d268", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1528", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e24cc6da-f41a-4ba7-8844-75425663e71d", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("693bbbc2-64af-43bd-b2c2-43b03b671eb6", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""151ecd1b-8e49-4a7d-a2da-2820f994c387"",
        ""url"": ""/v2/events/151ecd1b-8e49-4a7d-a2da-2820f994c387"",
        ""created_at"": ""2015-03-25T13:48:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-207"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9710f63a-b1a8-40e5-99e8-44f47ee67027"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1091"",
        ""timestamp"": ""2015-03-25T13:48:50+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""abe7f94a-a35a-41cc-9e25-41d65f42d8a7"",
        ""organization_guid"": ""0af323f1-3796-4460-bff1-f98ba5b8b5ce""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("151ecd1b-8e49-4a7d-a2da-2820f994c387", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/151ecd1b-8e49-4a7d-a2da-2820f994c387", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-207", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9710f63a-b1a8-40e5-99e8-44f47ee67027", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1091", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("abe7f94a-a35a-41cc-9e25-41d65f42d8a7", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0af323f1-3796-4460-bff1-f98ba5b8b5ce", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7c0d6e66-04f9-4520-a9a2-751e3cf68ce8"",
        ""url"": ""/v2/events/7c0d6e66-04f9-4520-a9a2-751e3cf68ce8"",
        ""created_at"": ""2015-03-25T13:48:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""7042d2b2-81e9-47f6-9b9b-fcccc3839a98"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-921"",
        ""actee"": ""ac7f03df-d170-4c32-838a-7c2ca9759b42"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-03-25T13:48:50+00:00"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7c0d6e66-04f9-4520-a9a2-751e3cf68ce8", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7c0d6e66-04f9-4520-a9a2-751e3cf68ce8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("7042d2b2-81e9-47f6-9b9b-fcccc3839a98", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-921", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ac7f03df-d170-4c32-838a-7c2ca9759b42", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2a86dc70-face-477e-b412-5231e487f68a"",
        ""url"": ""/v2/events/2a86dc70-face-477e-b412-5231e487f68a"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-232"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""128c6c19-e069-4be3-bc95-94544c6a8330"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1444"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""128c6c19-e069-4be3-bc95-94544c6a8330"",
        ""organization_guid"": ""3d131f4d-7d1d-43d0-b95b-1b12023ec0ce""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2a86dc70-face-477e-b412-5231e487f68a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2a86dc70-face-477e-b412-5231e487f68a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-232", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("128c6c19-e069-4be3-bc95-94544c6a8330", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1444", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("128c6c19-e069-4be3-bc95-94544c6a8330", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("3d131f4d-7d1d-43d0-b95b-1b12023ec0ce", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""871bd912-0069-4f79-983b-ecf7adf49c3b"",
        ""url"": ""/v2/events/871bd912-0069-4f79-983b-ecf7adf49c3b"",
        ""created_at"": ""2015-03-25T13:48:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-218"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""8eac86ae-a103-47e0-8303-e75c634d4a1b"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1252"",
        ""timestamp"": ""2015-03-25T13:48:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1252"",
            ""service_plan_guid"": ""df5beaef-d4cf-419e-b487-751ac81e6127"",
            ""space_guid"": ""03fe6cde-ae16-433a-bdeb-de8be0a98387""
          }
        },
        ""space_guid"": ""03fe6cde-ae16-433a-bdeb-de8be0a98387"",
        ""organization_guid"": ""7ba23fe0-a41c-4fe1-bcc3-1b070acd6a4e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("871bd912-0069-4f79-983b-ecf7adf49c3b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/871bd912-0069-4f79-983b-ecf7adf49c3b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-218", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("8eac86ae-a103-47e0-8303-e75c634d4a1b", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1252", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("03fe6cde-ae16-433a-bdeb-de8be0a98387", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("7ba23fe0-a41c-4fe1-bcc3-1b070acd6a4e", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""26d5a1e4-af20-4423-a0ad-cd90a34c3374"",
        ""url"": ""/v2/events/26d5a1e4-af20-4423-a0ad-cd90a34c3374"",
        ""created_at"": ""2015-03-25T13:48:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-205"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""149d9de4-d039-4390-b369-ae1539c36600"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1062"",
        ""timestamp"": ""2015-03-25T13:48:50+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""db2a2283-3d98-4e87-999b-c499ff508c1b"",
        ""organization_guid"": ""fa2cc7da-1839-4cdf-aee1-df55d576dee0""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("26d5a1e4-af20-4423-a0ad-cd90a34c3374", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/26d5a1e4-af20-4423-a0ad-cd90a34c3374", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-205", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("149d9de4-d039-4390-b369-ae1539c36600", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1062", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("db2a2283-3d98-4e87-999b-c499ff508c1b", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("fa2cc7da-1839-4cdf-aee1-df55d576dee0", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6a5189bf-336a-4afb-8766-e9d8d17b12d5"",
        ""url"": ""/v2/events/6a5189bf-336a-4afb-8766-e9d8d17b12d5"",
        ""created_at"": ""2015-03-25T13:48:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""622a9ae4-bcaa-4a95-8197-351b85bb7c63"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-762"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-03-25T13:48:49+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6a5189bf-336a-4afb-8766-e9d8d17b12d5", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/6a5189bf-336a-4afb-8766-e9d8d17b12d5", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("622a9ae4-bcaa-4a95-8197-351b85bb7c63", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-762", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""baa7355b-034a-409d-bfbd-e2777ca62727"",
        ""url"": ""/v2/events/baa7355b-034a-409d-bfbd-e2777ca62727"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-224"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""8fab41d5-6c05-4742-800e-413b9235ce35"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1338"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("baa7355b-034a-409d-bfbd-e2777ca62727", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/baa7355b-034a-409d-bfbd-e2777ca62727", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-224", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("8fab41d5-6c05-4742-800e-413b9235ce35", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1338", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8813a14f-ecf8-4e19-bda1-ee51d63fb9be"",
        ""url"": ""/v2/events/8813a14f-ecf8-4e19-bda1-ee51d63fb9be"",
        ""created_at"": ""2015-03-25T13:48:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""1f5cf12a-ac43-4f2a-82f7-54ef5611ee80"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1173"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-03-25T13:48:51+00:00"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8813a14f-ecf8-4e19-bda1-ee51d63fb9be", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8813a14f-ecf8-4e19-bda1-ee51d63fb9be", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("1f5cf12a-ac43-4f2a-82f7-54ef5611ee80", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1173", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c1057bfd-ab8c-4d5f-b8c5-8b1a23e7d5c6"",
        ""url"": ""/v2/events/c1057bfd-ab8c-4d5f-b8c5-8b1a23e7d5c6"",
        ""created_at"": ""2015-03-25T13:48:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-220"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""cde028e5-55e6-4ad0-9cf2-d53efb7c8707"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1281"",
        ""timestamp"": ""2015-03-25T13:48:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""8bcb5aad-6030-4556-8d6e-5517bf3fc42a"",
        ""organization_guid"": ""44b4914d-c45b-4556-8635-7470a42c34c5""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c1057bfd-ab8c-4d5f-b8c5-8b1a23e7d5c6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c1057bfd-ab8c-4d5f-b8c5-8b1a23e7d5c6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-220", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("cde028e5-55e6-4ad0-9cf2-d53efb7c8707", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1281", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("8bcb5aad-6030-4556-8d6e-5517bf3fc42a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("44b4914d-c45b-4556-8635-7470a42c34c5", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingCreateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""613be87f-7e2b-432d-b239-c208e8eed1b6"",
        ""url"": ""/v2/events/613be87f-7e2b-432d-b239-c208e8eed1b6"",
        ""created_at"": ""2015-03-25T13:48:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-199"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""8510aa61-2583-4107-8039-9168ba770d8e"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-25T13:48:50+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""b193d4ba-c691-41bd-addb-d8c428210bd3"",
            ""app_guid"": ""110a34dc-3b47-49ae-9060-db98c1893b9f""
          }
        },
        ""space_guid"": ""66e62968-cee9-4fa0-96dd-add76f1e05ec"",
        ""organization_guid"": ""a8d05125-8e4d-4a84-a37e-56923d016209""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingCreateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("613be87f-7e2b-432d-b239-c208e8eed1b6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/613be87f-7e2b-432d-b239-c208e8eed1b6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-199", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("8510aa61-2583-4107-8039-9168ba770d8e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("66e62968-cee9-4fa0-96dd-add76f1e05ec", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a8d05125-8e4d-4a84-a37e-56923d016209", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5a4f97f0-42c4-4677-93c8-612ee619bb05"",
        ""url"": ""/v2/events/5a4f97f0-42c4-4677-93c8-612ee619bb05"",
        ""created_at"": ""2015-03-25T13:48:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-201"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d97cda35-ffae-4791-b430-e6db22d4acd7"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1003"",
        ""timestamp"": ""2015-03-25T13:48:50+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""2f127c9d-8e28-466d-b8d9-586f4e2359d3"",
        ""organization_guid"": ""ffbc098f-50c2-455b-9339-7fb55eda5bb3""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5a4f97f0-42c4-4677-93c8-612ee619bb05", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5a4f97f0-42c4-4677-93c8-612ee619bb05", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-201", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d97cda35-ffae-4791-b430-e6db22d4acd7", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1003", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:50+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("2f127c9d-8e28-466d-b8d9-586f4e2359d3", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("ffbc098f-50c2-455b-9339-7fb55eda5bb3", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b8821e3d-b4be-4ede-a87b-9c4303abb7eb"",
        ""url"": ""/v2/events/b8821e3d-b4be-4ede-a87b-9c4303abb7eb"",
        ""created_at"": ""2015-03-25T13:48:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-187"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""8239db51-1bd7-4108-85af-7c89272711da"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-25T13:48:49+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""4c2a3686-c231-4148-b0ee-04ecea3ab234""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b8821e3d-b4be-4ede-a87b-9c4303abb7eb", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b8821e3d-b4be-4ede-a87b-9c4303abb7eb", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-187", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("8239db51-1bd7-4108-85af-7c89272711da", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("4c2a3686-c231-4148-b0ee-04ecea3ab234", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e6c97c27-f366-42c2-9a73-25b005734f13"",
        ""url"": ""/v2/events/e6c97c27-f366-42c2-9a73-25b005734f13"",
        ""created_at"": ""2015-03-25T13:48:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-211"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""96c3d9e7-5f60-4442-ba18-9031b31ace08"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1144"",
        ""timestamp"": ""2015-03-25T13:48:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""24f24ff1-ac25-4de9-9c11-970776310ad3"",
        ""organization_guid"": ""75ab8ca0-232a-40d0-95b0-d67eb824d0f7""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e6c97c27-f366-42c2-9a73-25b005734f13", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e6c97c27-f366-42c2-9a73-25b005734f13", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-211", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("96c3d9e7-5f60-4442-ba18-9031b31ace08", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1144", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("24f24ff1-ac25-4de9-9c11-970776310ad3", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("75ab8ca0-232a-40d0-95b0-d67eb824d0f7", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7885a9b7-9f2e-4571-8b47-f55b75bc8131"",
        ""url"": ""/v2/events/7885a9b7-9f2e-4571-8b47-f55b75bc8131"",
        ""created_at"": ""2015-03-25T13:48:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-193"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3c5d943e-fde3-4c9f-9e20-626a33db2a31"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-894"",
        ""timestamp"": ""2015-03-25T13:48:49+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""3c5d943e-fde3-4c9f-9e20-626a33db2a31"",
        ""organization_guid"": ""9b91319a-7d33-4d66-b6af-7ff923d74c6e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7885a9b7-9f2e-4571-8b47-f55b75bc8131", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7885a9b7-9f2e-4571-8b47-f55b75bc8131", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-193", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("3c5d943e-fde3-4c9f-9e20-626a33db2a31", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-894", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:49+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("3c5d943e-fde3-4c9f-9e20-626a33db2a31", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("9b91319a-7d33-4d66-b6af-7ff923d74c6e", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityUpdateEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""40fa1751-e0e5-48cc-8e90-641f00cea847"",
        ""url"": ""/v2/events/40fa1751-e0e5-48cc-8e90-641f00cea847"",
        ""created_at"": ""2015-03-25T13:48:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-222"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""1f9ee17e-ebb5-4c97-a99a-393e40ec9815"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-25T13:48:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""3d7d1d3d-2aef-4660-8e18-9a54dfc605c0"",
            ""organization_guid"": ""e0ed3733-d7cd-4c99-888b-9421aa246b6a""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""e0ed3733-d7cd-4c99-888b-9421aa246b6a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityUpdateEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("40fa1751-e0e5-48cc-8e90-641f00cea847", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/40fa1751-e0e5-48cc-8e90-641f00cea847", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-222", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@email.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("1f9ee17e-ebb5-4c97-a99a-393e40ec9815", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:51+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e0ed3733-d7cd-4c99-888b-9421aa246b6a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDeleteEventsExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d9f9f009-f9dd-42dc-a58c-863e767a855e"",
        ""url"": ""/v2/events/d9f9f009-f9dd-42dc-a58c-863e767a855e"",
        ""created_at"": ""2015-03-25T13:48:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""4bda7c9b-5b3c-4ea5-9a99-f5e1f7259ac6"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1419"",
        ""actee"": ""c048e169-ade7-43d5-a422-39b01cf8e498"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-42"",
        ""timestamp"": ""2015-03-25T13:48:52+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDeleteEventsExperimental().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d9f9f009-f9dd-42dc-a58c-863e767a855e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d9f9f009-f9dd-42dc-a58c-863e767a855e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("4bda7c9b-5b3c-4ea5-9a99-f5e1f7259ac6", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1419", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c048e169-ade7-43d5-a422-39b01cf8e498", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label-42", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2015-03-25T13:48:52+00:00", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

    }
}