//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsEndpoint
{
        [TestMethod]
        public void ListAllEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219"",
        ""url"": ""/v2/events/2ba77b40-0dbb-4e52-9bc1-013033eeae22"",
        ""created_at"": ""2016-07-07T09:16:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-112"",
        ""actor"": ""e12397f2-ab1b-492d-9395-1f2b41dfbd99"",
        ""actor_type"": ""name-113"",
        ""actor_name"": ""name-114"",
        ""actee"": ""9df427d2-6e11-45cc-aec5-16038ca578c8"",
        ""actee_type"": ""name-115"",
        ""actee_name"": ""name-116"",
        ""timestamp"": ""2016-07-07T09:16:48Z"",
        ""metadata"": {

        },
        ""space_guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219"",
        ""organization_guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219"",
        ""url"": ""/v2/events/f676d8dc-5cfd-43aa-af4e-496e927ab792"",
        ""created_at"": ""2016-07-07T09:16:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-120"",
        ""actor"": ""b7e4d475-9df9-4de0-904d-bbe3aa1185d6"",
        ""actor_type"": ""name-121"",
        ""actor_name"": ""name-122"",
        ""actee"": ""b3f19aaf-2dac-4920-bd75-d2d544d3f6ec"",
        ""actee_type"": ""name-123"",
        ""actee_name"": ""name-124"",
        ""timestamp"": ""2016-07-07T09:16:48Z"",
        ""metadata"": {

        },
        ""space_guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219"",
        ""organization_guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219"",
        ""url"": ""/v2/events/f7eaad3a-2ab1-468a-ad4e-2fdd96d610fe"",
        ""created_at"": ""2016-07-07T09:16:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-128"",
        ""actor"": ""b74c2381-afb1-4249-845d-76d66bc12c44"",
        ""actor_type"": ""name-129"",
        ""actor_name"": ""name-130"",
        ""actee"": ""1ae18244-1a8a-4141-8840-7cc59ff4e272"",
        ""actee_type"": ""name-131"",
        ""actee_name"": ""name-132"",
        ""timestamp"": ""2016-07-07T09:16:48Z"",
        ""metadata"": {

        },
        ""space_guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219"",
        ""organization_guid"": ""e12bb879-7c28-4be2-9a76-a018fe38c219""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAllEvents().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2ba77b40-0dbb-4e52-9bc1-013033eeae22", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-112", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("e12397f2-ab1b-492d-9395-1f2b41dfbd99", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("name-113", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-114", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9df427d2-6e11-45cc-aec5-16038ca578c8", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("name-115", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-116", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f676d8dc-5cfd-43aa-af4e-496e927ab792", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-120", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("b7e4d475-9df9-4de0-904d-bbe3aa1185d6", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("name-121", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("name-122", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("b3f19aaf-2dac-4920-bd75-d2d544d3f6ec", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("name-123", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-124", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f7eaad3a-2ab1-468a-ad4e-2fdd96d610fe", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-128", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("b74c2381-afb1-4249-845d-76d66bc12c44", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("name-129", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("name-130", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("1ae18244-1a8a-4141-8840-7cc59ff4e272", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("name-131", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-132", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("e12bb879-7c28-4be2-9a76-a018fe38c219", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f309a4f0-c661-400d-8fed-59440512cfb7"",
        ""url"": ""/v2/events/194a6700-c609-4a87-b638-2244853bc1c2"",
        ""created_at"": ""2016-07-07T09:16:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-51"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""9eba5d66-3d98-44bf-89b7-bcbe1078f154"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-527"",
        ""timestamp"": ""2016-07-07T09:16:51Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""f309a4f0-c661-400d-8fed-59440512cfb7"",
        ""organization_guid"": ""f309a4f0-c661-400d-8fed-59440512cfb7""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f309a4f0-c661-400d-8fed-59440512cfb7", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/194a6700-c609-4a87-b638-2244853bc1c2", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-51", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9eba5d66-3d98-44bf-89b7-bcbe1078f154", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-527", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("f309a4f0-c661-400d-8fed-59440512cfb7", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f309a4f0-c661-400d-8fed-59440512cfb7", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d1b56740-d28f-42ce-9420-b6a0741ac3c5"",
        ""url"": ""/v2/events/4c7c7ac0-9bad-474e-81b2-1b441e59f262"",
        ""created_at"": ""2016-07-07T09:16:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-95"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0be14547-e6bb-4164-856c-ee2744d12aad"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1133"",
        ""timestamp"": ""2016-07-07T09:16:54Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""d1b56740-d28f-42ce-9420-b6a0741ac3c5"",
        ""organization_guid"": ""d1b56740-d28f-42ce-9420-b6a0741ac3c5""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d1b56740-d28f-42ce-9420-b6a0741ac3c5", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4c7c7ac0-9bad-474e-81b2-1b441e59f262", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-95", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0be14547-e6bb-4164-856c-ee2744d12aad", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1133", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("d1b56740-d28f-42ce-9420-b6a0741ac3c5", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("d1b56740-d28f-42ce-9420-b6a0741ac3c5", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppExitedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fb7a52bc-1036-48d1-bcf5-6a208ac04555"",
        ""url"": ""/v2/events/d0f465b8-bf80-45dc-83e7-2685b5cdb260"",
        ""created_at"": ""2016-07-07T09:16:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""a7dfe4a5-5baa-4d17-8070-9a7066793c5e"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-212"",
        ""actee"": ""a7dfe4a5-5baa-4d17-8070-9a7066793c5e"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-212"",
        ""timestamp"": ""2016-07-07T09:16:49Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""fb7a52bc-1036-48d1-bcf5-6a208ac04555"",
        ""organization_guid"": ""fb7a52bc-1036-48d1-bcf5-6a208ac04555""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppExitedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("fb7a52bc-1036-48d1-bcf5-6a208ac04555", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d0f465b8-bf80-45dc-83e7-2685b5cdb260", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("app.crash", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("a7dfe4a5-5baa-4d17-8070-9a7066793c5e", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-212", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a7dfe4a5-5baa-4d17-8070-9a7066793c5e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-212", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("fb7a52bc-1036-48d1-bcf5-6a208ac04555", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("fb7a52bc-1036-48d1-bcf5-6a208ac04555", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppSshAuthorizedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""72bd59b8-ab09-4e06-84dc-e27c2bb3ee12"",
        ""url"": ""/v2/events/47da9479-ef48-4493-b372-6a7e1f059078"",
        ""created_at"": ""2016-07-07T09:16:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-authorized"",
        ""actor"": ""uaa-id-65"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c2e9d0d8-4e3a-4e55-a0c7-da15af1cb411"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-715"",
        ""timestamp"": ""2016-07-07T09:16:52Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""72bd59b8-ab09-4e06-84dc-e27c2bb3ee12"",
        ""organization_guid"": ""72bd59b8-ab09-4e06-84dc-e27c2bb3ee12""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppSshAuthorizedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("72bd59b8-ab09-4e06-84dc-e27c2bb3ee12", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/47da9479-ef48-4493-b372-6a7e1f059078", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.ssh-authorized", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-65", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c2e9d0d8-4e3a-4e55-a0c7-da15af1cb411", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-715", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("72bd59b8-ab09-4e06-84dc-e27c2bb3ee12", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("72bd59b8-ab09-4e06-84dc-e27c2bb3ee12", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppSshUnauthorizedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e408adce-dc35-4bab-9005-bf2395b794bb"",
        ""url"": ""/v2/events/d2c4c08b-fe97-4501-870a-de7e9b84885c"",
        ""created_at"": ""2016-07-07T09:16:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-unauthorized"",
        ""actor"": ""uaa-id-71"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""05af4694-4d95-4be3-bc9f-aaf463f9327e"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-799"",
        ""timestamp"": ""2016-07-07T09:16:52Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""e408adce-dc35-4bab-9005-bf2395b794bb"",
        ""organization_guid"": ""e408adce-dc35-4bab-9005-bf2395b794bb""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppSshUnauthorizedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e408adce-dc35-4bab-9005-bf2395b794bb", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d2c4c08b-fe97-4501-870a-de7e9b84885c", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.ssh-unauthorized", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-71", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("05af4694-4d95-4be3-bc9f-aaf463f9327e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-799", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e408adce-dc35-4bab-9005-bf2395b794bb", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e408adce-dc35-4bab-9005-bf2395b794bb", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppStartEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""39c5a895-a1d6-400b-b16e-9443205efdd4"",
        ""url"": ""/v2/events/9967dee9-8de1-47ec-9774-7c6de2bc331d"",
        ""created_at"": ""2016-07-07T09:16:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-45"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""2fb3412e-5943-4e34-9369-295e56bbe2dc"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-441"",
        ""timestamp"": ""2016-07-07T09:16:50Z"",
        ""metadata"": {

        },
        ""space_guid"": ""39c5a895-a1d6-400b-b16e-9443205efdd4"",
        ""organization_guid"": ""39c5a895-a1d6-400b-b16e-9443205efdd4""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppStartEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("39c5a895-a1d6-400b-b16e-9443205efdd4", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9967dee9-8de1-47ec-9774-7c6de2bc331d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-45", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("2fb3412e-5943-4e34-9369-295e56bbe2dc", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("v3-app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-441", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("39c5a895-a1d6-400b-b16e-9443205efdd4", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("39c5a895-a1d6-400b-b16e-9443205efdd4", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppStopEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ec343896-1846-45f5-b201-8d454d59d276"",
        ""url"": ""/v2/events/f31d7d75-aa9f-466e-bb38-77e1e7e3ce2b"",
        ""created_at"": ""2016-07-07T09:16:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-39"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""29a9c733-0f17-4f86-a3ff-33b9a321208e"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-360"",
        ""timestamp"": ""2016-07-07T09:16:50Z"",
        ""metadata"": {

        },
        ""space_guid"": ""ec343896-1846-45f5-b201-8d454d59d276"",
        ""organization_guid"": ""ec343896-1846-45f5-b201-8d454d59d276""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppStopEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ec343896-1846-45f5-b201-8d454d59d276", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f31d7d75-aa9f-466e-bb38-77e1e7e3ce2b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-39", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("29a9c733-0f17-4f86-a3ff-33b9a321208e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("v3-app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-360", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("ec343896-1846-45f5-b201-8d454d59d276", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("ec343896-1846-45f5-b201-8d454d59d276", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f66d1d5a-e73f-43fa-a5e7-b005c01b76c7"",
        ""url"": ""/v2/events/1fffc4e3-cd78-4b1b-baca-b9db45ad8bff"",
        ""created_at"": ""2016-07-07T09:16:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-47"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""f349b1f6-7518-437c-8775-a9dbc085aeed"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-469"",
        ""timestamp"": ""2016-07-07T09:16:50Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""f66d1d5a-e73f-43fa-a5e7-b005c01b76c7"",
        ""organization_guid"": ""f66d1d5a-e73f-43fa-a5e7-b005c01b76c7""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f66d1d5a-e73f-43fa-a5e7-b005c01b76c7", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/1fffc4e3-cd78-4b1b-baca-b9db45ad8bff", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-47", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("f349b1f6-7518-437c-8775-a9dbc085aeed", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-469", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("f66d1d5a-e73f-43fa-a5e7-b005c01b76c7", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f66d1d5a-e73f-43fa-a5e7-b005c01b76c7", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListEventsAssociatedWithAppSinceJanuary12014Test()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c"",
        ""url"": ""/v2/events/d32f4c43-752d-4d0d-ae03-f61feade9173"",
        ""created_at"": ""2016-07-07T09:16:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-49"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1479c8dc-ca65-46df-8396-0ac60b441ccf"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-498"",
        ""timestamp"": ""2016-07-07T09:16:50Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c"",
        ""organization_guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c"",
        ""url"": ""/v2/events/da2b9323-18b2-4c3e-8c0e-7e85d3c96967"",
        ""created_at"": ""2016-07-07T09:16:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-49"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1479c8dc-ca65-46df-8396-0ac60b441ccf"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-498"",
        ""timestamp"": ""2016-07-07T09:16:50Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c"",
        ""organization_guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c"",
        ""url"": ""/v2/events/f919a240-43ba-4ca7-8c1b-f0b4e6137e41"",
        ""created_at"": ""2016-07-07T09:16:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-49"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1479c8dc-ca65-46df-8396-0ac60b441ccf"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-498"",
        ""timestamp"": ""2016-07-07T09:16:50Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c"",
        ""organization_guid"": ""bd77dbb3-157a-48b1-9277-885405024f7c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListEventsAssociatedWithAppSinceJanuary12014().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d32f4c43-752d-4d0d-ae03-f61feade9173", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-49", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("1479c8dc-ca65-46df-8396-0ac60b441ccf", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-498", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/da2b9323-18b2-4c3e-8c0e-7e85d3c96967", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("uaa-id-49", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("1479c8dc-ca65-46df-8396-0ac60b441ccf", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-498", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f919a240-43ba-4ca7-8c1b-f0b4e6137e41", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("uaa-id-49", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("1479c8dc-ca65-46df-8396-0ac60b441ccf", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-498", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("bd77dbb3-157a-48b1-9277-885405024f7c", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""92278f32-a5ef-4917-b66b-27390f602f96"",
        ""url"": ""/v2/events/75cf99b5-1404-4f0a-bf56-88a98f52b40b"",
        ""created_at"": ""2016-07-07T09:16:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-35"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1010de71-624d-4c51-9f31-7bc1344112eb"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-07T09:16:49Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""92278f32-a5ef-4917-b66b-27390f602f96"",
            ""app_guid"": ""92278f32-a5ef-4917-b66b-27390f602f96""
          }
        },
        ""space_guid"": ""92278f32-a5ef-4917-b66b-27390f602f96"",
        ""organization_guid"": ""92278f32-a5ef-4917-b66b-27390f602f96""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("92278f32-a5ef-4917-b66b-27390f602f96", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/75cf99b5-1404-4f0a-bf56-88a98f52b40b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-35", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("1010de71-624d-4c51-9f31-7bc1344112eb", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("92278f32-a5ef-4917-b66b-27390f602f96", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("92278f32-a5ef-4917-b66b-27390f602f96", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""14767246-e6ab-4e23-b4f5-cea47bba6bed"",
        ""url"": ""/v2/events/c430ecef-3638-4d34-9f90-fd31da09e10d"",
        ""created_at"": ""2016-07-07T09:16:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-31"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""37394447-e0eb-480d-97ff-ad4c7d644160"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-07T09:16:49Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""14767246-e6ab-4e23-b4f5-cea47bba6bed"",
        ""organization_guid"": ""14767246-e6ab-4e23-b4f5-cea47bba6bed""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("14767246-e6ab-4e23-b4f5-cea47bba6bed", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c430ecef-3638-4d34-9f90-fd31da09e10d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-31", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("37394447-e0eb-480d-97ff-ad4c7d644160", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("14767246-e6ab-4e23-b4f5-cea47bba6bed", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("14767246-e6ab-4e23-b4f5-cea47bba6bed", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""62fcd991-dcd6-47f9-a6b1-e74c61877acb"",
        ""url"": ""/v2/events/f2db03ae-9a9a-4eaa-a0c0-55225a3f485d"",
        ""created_at"": ""2016-07-07T09:16:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-61"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""de1b7928-4a1b-483d-9cc2-bd596c6d14a7"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2016-07-07T09:16:52Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("62fcd991-dcd6-47f9-a6b1-e74c61877acb", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f2db03ae-9a9a-4eaa-a0c0-55225a3f485d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-61", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("de1b7928-4a1b-483d-9cc2-bd596c6d14a7", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("pancake broker", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e292f98d-58d0-4b79-964c-fe7874f0450c"",
        ""url"": ""/v2/events/0124d67d-e889-4557-b7a6-5cede2568e05"",
        ""created_at"": ""2016-07-07T09:16:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-81"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""95515546-aa9c-4f0b-b967-49e783fa432d"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-939"",
        ""timestamp"": ""2016-07-07T09:16:53Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e292f98d-58d0-4b79-964c-fe7874f0450c", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0124d67d-e889-4557-b7a6-5cede2568e05", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-81", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("95515546-aa9c-4f0b-b967-49e783fa432d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-939", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""872d415a-8158-4c44-90b9-adaad1c441f9"",
        ""url"": ""/v2/events/894d865d-44f0-4414-9ed9-cbd92adbfb60"",
        ""created_at"": ""2016-07-07T09:16:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-41"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d8461b8d-a522-4021-9796-b8f5eee5ef5c"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-388"",
        ""timestamp"": ""2016-07-07T09:16:50Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("872d415a-8158-4c44-90b9-adaad1c441f9", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/894d865d-44f0-4414-9ed9-cbd92adbfb60", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-41", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d8461b8d-a522-4021-9796-b8f5eee5ef5c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-388", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""75cd8bbf-9b33-4f10-a0f4-4b3d86cfd067"",
        ""url"": ""/v2/events/4ea17e00-0bd5-4999-9269-399fb34f3282"",
        ""created_at"": ""2016-07-07T09:16:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""533a8b93-3028-49e0-a8b7-99f6af4396b3"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-640"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2016-07-07T09:16:51Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""75cd8bbf-9b33-4f10-a0f4-4b3d86cfd067"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("75cd8bbf-9b33-4f10-a0f4-4b3d86cfd067", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4ea17e00-0bd5-4999-9269-399fb34f3282", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("533a8b93-3028-49e0-a8b7-99f6af4396b3", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-640", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""32e7fcd9-8c6a-43db-9185-2d32cc53f7e5"",
        ""url"": ""/v2/events/e3d31bbd-abc2-49e0-a925-e7ef18869a2f"",
        ""created_at"": ""2016-07-07T09:16:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""1d83fa84-d033-41f5-85ea-f672f475f286"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-587"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-07-07T09:16:51Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("32e7fcd9-8c6a-43db-9185-2d32cc53f7e5", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e3d31bbd-abc2-49e0-a925-e7ef18869a2f", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("1d83fa84-d033-41f5-85ea-f672f475f286", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-587", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d0135e76-174a-4ba0-a8ab-3a1a16c03859"",
        ""url"": ""/v2/events/36005ba7-ecf7-445d-9aab-a0083c751c03"",
        ""created_at"": ""2016-07-07T09:16:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""7ce3f6f0-0cca-460b-9fa1-77dbe8baa3be"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-886"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-07-07T09:16:53Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d0135e76-174a-4ba0-a8ab-3a1a16c03859", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/36005ba7-ecf7-445d-9aab-a0083c751c03", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("7ce3f6f0-0cca-460b-9fa1-77dbe8baa3be", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-886", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""428e80c8-2aab-4b9e-951c-73d9184d87bc"",
        ""url"": ""/v2/events/0bc37f85-4d92-4617-bb03-e14e3e2b3668"",
        ""created_at"": ""2016-07-07T09:16:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""03a83fbe-7576-44b8-b3eb-62c428bee7f3"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-273"",
        ""actee"": ""be9cff5e-09fb-48f1-ac85-067d8927db37"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-24"",
        ""timestamp"": ""2016-07-07T09:16:49Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("428e80c8-2aab-4b9e-951c-73d9184d87bc", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0bc37f85-4d92-4617-bb03-e14e3e2b3668", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("03a83fbe-7576-44b8-b3eb-62c428bee7f3", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-273", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("be9cff5e-09fb-48f1-ac85-067d8927db37", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label-24", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f1b078d5-3947-47ac-a2a7-9e762712bd2b"",
        ""url"": ""/v2/events/07fc458a-43f8-458d-a8f0-dc69064e70e9"",
        ""created_at"": ""2016-07-07T09:16:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-37"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b1838660-7d89-4b38-b367-cc72e77838cc"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-330"",
        ""timestamp"": ""2016-07-07T09:16:49Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-330"",
            ""service_plan_guid"": ""f1b078d5-3947-47ac-a2a7-9e762712bd2b"",
            ""space_guid"": ""f1b078d5-3947-47ac-a2a7-9e762712bd2b""
          }
        },
        ""space_guid"": ""f1b078d5-3947-47ac-a2a7-9e762712bd2b"",
        ""organization_guid"": ""f1b078d5-3947-47ac-a2a7-9e762712bd2b""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f1b078d5-3947-47ac-a2a7-9e762712bd2b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/07fc458a-43f8-458d-a8f0-dc69064e70e9", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-37", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b1838660-7d89-4b38-b367-cc72e77838cc", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-330", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("f1b078d5-3947-47ac-a2a7-9e762712bd2b", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f1b078d5-3947-47ac-a2a7-9e762712bd2b", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1ff39aeb-b687-400f-a7c1-a70bac7584aa"",
        ""url"": ""/v2/events/054616f4-8551-4217-9ce8-f1be61b24944"",
        ""created_at"": ""2016-07-07T09:16:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-53"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""06bbc443-d73b-4799-b3d5-c468660d2708"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-556"",
        ""timestamp"": ""2016-07-07T09:16:51Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""1ff39aeb-b687-400f-a7c1-a70bac7584aa"",
        ""organization_guid"": ""1ff39aeb-b687-400f-a7c1-a70bac7584aa""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1ff39aeb-b687-400f-a7c1-a70bac7584aa", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/054616f4-8551-4217-9ce8-f1be61b24944", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-53", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("06bbc443-d73b-4799-b3d5-c468660d2708", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-556", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("1ff39aeb-b687-400f-a7c1-a70bac7584aa", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("1ff39aeb-b687-400f-a7c1-a70bac7584aa", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0c0bb562-6654-4e1f-bbe5-e39667562938"",
        ""url"": ""/v2/events/1fa771ab-56eb-464e-a3ff-cf0e331fd0ea"",
        ""created_at"": ""2016-07-07T09:16:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-73"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a695d678-6580-4abb-9e8c-42374ae04695"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-828"",
        ""timestamp"": ""2016-07-07T09:16:52Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""0c0bb562-6654-4e1f-bbe5-e39667562938""
          }
        },
        ""space_guid"": ""0c0bb562-6654-4e1f-bbe5-e39667562938"",
        ""organization_guid"": ""0c0bb562-6654-4e1f-bbe5-e39667562938""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("0c0bb562-6654-4e1f-bbe5-e39667562938", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/1fa771ab-56eb-464e-a3ff-cf0e331fd0ea", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-73", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a695d678-6580-4abb-9e8c-42374ae04695", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-828", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("0c0bb562-6654-4e1f-bbe5-e39667562938", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0c0bb562-6654-4e1f-bbe5-e39667562938", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceKeyCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f13759b7-4491-4e41-aa80-b61860cd9577"",
        ""url"": ""/v2/events/efd53d30-ad89-4b30-97a5-753fbb38da33"",
        ""created_at"": ""2016-07-07T09:16:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.create"",
        ""actor"": ""uaa-id-93"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""40e3a8b8-9024-458c-a31c-19e53f272281"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1108"",
        ""timestamp"": ""2016-07-07T09:16:54Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""f13759b7-4491-4e41-aa80-b61860cd9577"",
            ""name"": ""name-1108""
          }
        },
        ""space_guid"": ""f13759b7-4491-4e41-aa80-b61860cd9577"",
        ""organization_guid"": ""f13759b7-4491-4e41-aa80-b61860cd9577""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceKeyCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f13759b7-4491-4e41-aa80-b61860cd9577", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/efd53d30-ad89-4b30-97a5-753fbb38da33", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_key.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-93", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("40e3a8b8-9024-458c-a31c-19e53f272281", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_key", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1108", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("f13759b7-4491-4e41-aa80-b61860cd9577", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f13759b7-4491-4e41-aa80-b61860cd9577", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceKeyDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b428535d-9c2c-4f04-a543-3c7b83d89348"",
        ""url"": ""/v2/events/7c29bec0-c0e7-4fb1-ba83-7415708e41d8"",
        ""created_at"": ""2016-07-07T09:16:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.delete"",
        ""actor"": ""uaa-id-91"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a136bedd-243c-464e-aa4a-b941a7923e7e"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1077"",
        ""timestamp"": ""2016-07-07T09:16:54Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""b428535d-9c2c-4f04-a543-3c7b83d89348"",
        ""organization_guid"": ""b428535d-9c2c-4f04-a543-3c7b83d89348""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceKeyDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b428535d-9c2c-4f04-a543-3c7b83d89348", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7c29bec0-c0e7-4fb1-ba83-7415708e41d8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_key.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-91", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a136bedd-243c-464e-aa4a-b941a7923e7e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_key", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1077", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("b428535d-9c2c-4f04-a543-3c7b83d89348", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("b428535d-9c2c-4f04-a543-3c7b83d89348", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""239c0b2f-2507-4437-aa62-da4fa9906633"",
        ""url"": ""/v2/events/b584d56e-63c2-4cd7-a525-b31f5de5d433"",
        ""created_at"": ""2016-07-07T09:16:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""98f31558-c924-49ad-901c-dfc4b37b3047"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-964"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2016-07-07T09:16:53Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""239c0b2f-2507-4437-aa62-da4fa9906633"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("239c0b2f-2507-4437-aa62-da4fa9906633", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b584d56e-63c2-4cd7-a525-b31f5de5d433", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("98f31558-c924-49ad-901c-dfc4b37b3047", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-964", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("plan-name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""aa249ed8-ab30-4408-8008-4ed1c985068c"",
        ""url"": ""/v2/events/a2f64d27-9d11-465b-a4dc-031a9fc87885"",
        ""created_at"": ""2016-07-07T09:16:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""9b06957a-9b87-450b-9a9d-f7ec87c06eb7"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-689"",
        ""actee"": ""dec380ad-bf62-4893-9be8-22d017a1dfe1"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-690"",
        ""timestamp"": ""2016-07-07T09:16:52Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("aa249ed8-ab30-4408-8008-4ed1c985068c", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a2f64d27-9d11-465b-a4dc-031a9fc87885", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("9b06957a-9b87-450b-9a9d-f7ec87c06eb7", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-689", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("dec380ad-bf62-4893-9be8-22d017a1dfe1", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-690", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""70173477-ff00-494a-b4de-5895b9842a57"",
        ""url"": ""/v2/events/93334b67-0108-49a4-9445-72a11a7c9bf4"",
        ""created_at"": ""2016-07-07T09:16:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""e6ece6d5-9370-4eb6-bcc7-d9e2ca9f331f"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-989"",
        ""actee"": ""9d8e127c-36dd-4507-9bc8-fe696a537f8d"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2016-07-07T09:16:53Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("70173477-ff00-494a-b4de-5895b9842a57", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/93334b67-0108-49a4-9445-72a11a7c9bf4", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("e6ece6d5-9370-4eb6-bcc7-d9e2ca9f331f", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-989", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9d8e127c-36dd-4507-9bc8-fe696a537f8d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e8537504-38ff-4b98-b1e6-51f1ea9d343d"",
        ""url"": ""/v2/events/22f9e58c-ee74-44b4-b990-82ad61d08cb7"",
        ""created_at"": ""2016-07-07T09:16:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-57"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""769cf7d3-5bda-49bd-b37b-d22a46078263"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-07T09:16:51Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""e8537504-38ff-4b98-b1e6-51f1ea9d343d"",
            ""organization_guid"": ""e8537504-38ff-4b98-b1e6-51f1ea9d343d""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""e8537504-38ff-4b98-b1e6-51f1ea9d343d""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e8537504-38ff-4b98-b1e6-51f1ea9d343d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/22f9e58c-ee74-44b4-b990-82ad61d08cb7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-57", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("769cf7d3-5bda-49bd-b37b-d22a46078263", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e8537504-38ff-4b98-b1e6-51f1ea9d343d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""61a8c5b0-4199-4a9f-8a18-b309b4260a51"",
        ""url"": ""/v2/events/02617012-60dc-4f8f-a6dd-3349b49a5dcb"",
        ""created_at"": ""2016-07-07T09:16:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-43"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d10f7772-fe0d-4070-a18a-8541801163c3"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-07T09:16:50Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""61a8c5b0-4199-4a9f-8a18-b309b4260a51""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("61a8c5b0-4199-4a9f-8a18-b309b4260a51", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/02617012-60dc-4f8f-a6dd-3349b49a5dcb", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-43", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d10f7772-fe0d-4070-a18a-8541801163c3", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("61a8c5b0-4199-4a9f-8a18-b309b4260a51", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cb8592d2-f173-45c8-abb7-8515ae385935"",
        ""url"": ""/v2/events/293d4cca-bc76-4315-99d9-043941bb66e1"",
        ""created_at"": ""2016-07-07T09:16:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-69"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c2453772-e715-44b3-be4c-3da4219d1cdc"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-07T09:16:52Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""cb8592d2-f173-45c8-abb7-8515ae385935"",
            ""organization_guid"": ""cb8592d2-f173-45c8-abb7-8515ae385935""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""cb8592d2-f173-45c8-abb7-8515ae385935""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("cb8592d2-f173-45c8-abb7-8515ae385935", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/293d4cca-bc76-4315-99d9-043941bb66e1", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-69", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c2453772-e715-44b3-be4c-3da4219d1cdc", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("cb8592d2-f173-45c8-abb7-8515ae385935", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f04a975d-7f4a-4c11-a7cf-9a173663ddfe"",
        ""url"": ""/v2/events/f895666d-1838-4724-b7d7-be9638f3428b"",
        ""created_at"": ""2016-07-07T09:16:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""1f137836-6a1a-4a3d-9576-be3e9327a411"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-160"",
        ""actee"": ""a67f5160-d0a7-4f46-8884-4a13dd791db9"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2016-07-07T09:16:48Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f04a975d-7f4a-4c11-a7cf-9a173663ddfe", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f895666d-1838-4724-b7d7-be9638f3428b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("1f137836-6a1a-4a3d-9576-be3e9327a411", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-160", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a67f5160-d0a7-4f46-8884-4a13dd791db9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7723c0fc-64e0-4cf5-8c9b-9eb1aa2d55e6"",
        ""url"": ""/v2/events/e9959bf4-7844-417f-9686-16d7d13dd44b"",
        ""created_at"": ""2016-07-07T09:16:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-75"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""8e8ced3e-81c3-447b-b304-9b1a61f5fbdc"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-858"",
        ""timestamp"": ""2016-07-07T09:16:53Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""7723c0fc-64e0-4cf5-8c9b-9eb1aa2d55e6"",
        ""organization_guid"": ""7723c0fc-64e0-4cf5-8c9b-9eb1aa2d55e6""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7723c0fc-64e0-4cf5-8c9b-9eb1aa2d55e6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e9959bf4-7844-417f-9686-16d7d13dd44b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-75", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("8e8ced3e-81c3-447b-b304-9b1a61f5fbdc", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-858", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("7723c0fc-64e0-4cf5-8c9b-9eb1aa2d55e6", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("7723c0fc-64e0-4cf5-8c9b-9eb1aa2d55e6", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""41214237-80a6-4e5a-94b4-8fb407b9d1db"",
        ""url"": ""/v2/events/530d9314-e8b3-4332-9b41-3451190eead1"",
        ""created_at"": ""2016-07-07T09:16:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-67"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e60c6528-740a-4d41-9ecd-3adf408b0618"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-744"",
        ""timestamp"": ""2016-07-07T09:16:52Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""41214237-80a6-4e5a-94b4-8fb407b9d1db"",
        ""organization_guid"": ""41214237-80a6-4e5a-94b4-8fb407b9d1db""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("41214237-80a6-4e5a-94b4-8fb407b9d1db", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/530d9314-e8b3-4332-9b41-3451190eead1", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-67", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e60c6528-740a-4d41-9ecd-3adf408b0618", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-744", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("41214237-80a6-4e5a-94b4-8fb407b9d1db", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("41214237-80a6-4e5a-94b4-8fb407b9d1db", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ef601858-d88b-4fce-b621-3c90e870ec42"",
        ""url"": ""/v2/events/4425a7a4-1a87-461b-aa67-1892e75ed4df"",
        ""created_at"": ""2016-07-07T09:16:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-28"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""393c806b-c327-4bb1-aa25-3304e61d5158"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-185"",
        ""timestamp"": ""2016-07-07T09:16:48Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""ef601858-d88b-4fce-b621-3c90e870ec42"",
        ""organization_guid"": ""ef601858-d88b-4fce-b621-3c90e870ec42""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ef601858-d88b-4fce-b621-3c90e870ec42", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4425a7a4-1a87-461b-aa67-1892e75ed4df", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-28", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("393c806b-c327-4bb1-aa25-3304e61d5158", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-185", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("ef601858-d88b-4fce-b621-3c90e870ec42", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("ef601858-d88b-4fce-b621-3c90e870ec42", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""98030435-cce5-4959-93b0-ca523018aa4f"",
        ""url"": ""/v2/events/d04ab40b-385d-4086-9c8d-a6f13c5ce55a"",
        ""created_at"": ""2016-07-07T09:16:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-89"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ac2fe9c9-cf73-485a-83ac-95b5fa223110"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1043"",
        ""timestamp"": ""2016-07-07T09:16:54Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1043"",
            ""space_guid"": ""98030435-cce5-4959-93b0-ca523018aa4f""
          }
        },
        ""space_guid"": ""98030435-cce5-4959-93b0-ca523018aa4f"",
        ""organization_guid"": ""98030435-cce5-4959-93b0-ca523018aa4f""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("98030435-cce5-4959-93b0-ca523018aa4f", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d04ab40b-385d-4086-9c8d-a6f13c5ce55a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-89", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ac2fe9c9-cf73-485a-83ac-95b5fa223110", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1043", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("98030435-cce5-4959-93b0-ca523018aa4f", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("98030435-cce5-4959-93b0-ca523018aa4f", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""da6df8e5-56dc-4924-b97f-41b5c672d03e"",
        ""url"": ""/v2/events/2c46dac4-7a4d-4051-af68-0580c991da11"",
        ""created_at"": ""2016-07-07T09:16:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-79"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1009e1c0-ca4e-426e-b00b-718cc5433c46"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-911"",
        ""timestamp"": ""2016-07-07T09:16:53Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""da6df8e5-56dc-4924-b97f-41b5c672d03e"",
        ""organization_guid"": ""da6df8e5-56dc-4924-b97f-41b5c672d03e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("da6df8e5-56dc-4924-b97f-41b5c672d03e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2c46dac4-7a4d-4051-af68-0580c991da11", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-79", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("1009e1c0-ca4e-426e-b00b-718cc5433c46", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-911", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("da6df8e5-56dc-4924-b97f-41b5c672d03e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("da6df8e5-56dc-4924-b97f-41b5c672d03e", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4a0dfc31-3ee8-49a4-b6d7-e1dff647956a"",
        ""url"": ""/v2/events/50ce571e-1394-4ef0-9fe5-e9598f656794"",
        ""created_at"": ""2016-07-07T09:16:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-87"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""68d4407d-14bf-4792-9b70-e4be145a0651"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1015"",
        ""timestamp"": ""2016-07-07T09:16:53Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""4a0dfc31-3ee8-49a4-b6d7-e1dff647956a"",
        ""organization_guid"": ""4a0dfc31-3ee8-49a4-b6d7-e1dff647956a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("4a0dfc31-3ee8-49a4-b6d7-e1dff647956a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/50ce571e-1394-4ef0-9fe5-e9598f656794", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-87", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("68d4407d-14bf-4792-9b70-e4be145a0651", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1015", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("4a0dfc31-3ee8-49a4-b6d7-e1dff647956a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("4a0dfc31-3ee8-49a4-b6d7-e1dff647956a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void RetrieveEventTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""74874cc8-137b-4229-ab22-0586272142d9"",
    ""url"": ""/v2/events/ecd5cf14-5c10-41de-8ce8-b6542363458a"",
    ""created_at"": ""2016-07-07T09:16:54Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-1138"",
    ""actor"": ""2ff4e411-ec20-4861-9942-566109233c7c"",
    ""actor_type"": ""name-1139"",
    ""actor_name"": ""name-1140"",
    ""actee"": ""d03ab7ba-389d-46d7-b670-dc648c091fd4"",
    ""actee_type"": ""name-1141"",
    ""actee_name"": ""name-1142"",
    ""timestamp"": ""2016-07-07T09:16:54Z"",
    ""metadata"": {

    },
    ""space_guid"": ""74874cc8-137b-4229-ab22-0586272142d9"",
    ""organization_guid"": ""74874cc8-137b-4229-ab22-0586272142d9""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Events.RetrieveEvent(guid).Result;


                Assert.AreEqual("74874cc8-137b-4229-ab22-0586272142d9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ecd5cf14-5c10-41de-8ce8-b6542363458a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1138", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("2ff4e411-ec20-4861-9942-566109233c7c", TestUtil.ToTestableString(obj.Actor), true);
                Assert.AreEqual("name-1139", TestUtil.ToTestableString(obj.ActorType), true);
                Assert.AreEqual("name-1140", TestUtil.ToTestableString(obj.ActorName), true);
                Assert.AreEqual("d03ab7ba-389d-46d7-b670-dc648c091fd4", TestUtil.ToTestableString(obj.Actee), true);
                Assert.AreEqual("name-1141", TestUtil.ToTestableString(obj.ActeeType), true);
                Assert.AreEqual("name-1142", TestUtil.ToTestableString(obj.ActeeName), true);
                Assert.AreEqual("2016-07-07T09:16:54Z", TestUtil.ToTestableString(obj.Timestamp), true);
                Assert.AreEqual("74874cc8-137b-4229-ab22-0586272142d9", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("74874cc8-137b-4229-ab22-0586272142d9", TestUtil.ToTestableString(obj.OrganizationGuid), true);

            }
        }

    }
}