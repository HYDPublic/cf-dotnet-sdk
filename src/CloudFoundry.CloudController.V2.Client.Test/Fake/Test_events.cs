//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsEndpoint
{
        [TestMethod]
        public void ListAppCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a9fad891-15ad-43eb-94cf-e72d381b1761"",
        ""url"": ""/v2/events/bd0760a4-90a2-4319-98f9-d825e2c3a47d"",
        ""created_at"": ""2016-03-30T10:15:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-179"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6bbc9c09-7fc3-4454-8d72-006bb96fe695"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-704"",
        ""timestamp"": ""2016-03-30T10:15:17Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""a9fad891-15ad-43eb-94cf-e72d381b1761"",
        ""organization_guid"": ""a9fad891-15ad-43eb-94cf-e72d381b1761""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a9fad891-15ad-43eb-94cf-e72d381b1761", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/bd0760a4-90a2-4319-98f9-d825e2c3a47d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-179", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("6bbc9c09-7fc3-4454-8d72-006bb96fe695", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-704", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("a9fad891-15ad-43eb-94cf-e72d381b1761", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a9fad891-15ad-43eb-94cf-e72d381b1761", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""11087e75-f1e2-4fbd-b7ec-64bc6793bc78"",
        ""url"": ""/v2/events/f684e0ee-8ab2-4646-b7ee-9866471fe3c7"",
        ""created_at"": ""2016-03-30T10:15:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""cb42e7da-15ba-440e-9836-70693f446fa7"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1008"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-03-30T10:15:19Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("11087e75-f1e2-4fbd-b7ec-64bc6793bc78", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f684e0ee-8ab2-4646-b7ee-9866471fe3c7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("cb42e7da-15ba-440e-9836-70693f446fa7", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1008", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ac7c4767-9b3a-4ea4-862e-2c3e353dcc08"",
        ""url"": ""/v2/events/71b0266d-f8f0-45ab-92cd-a68c8a361854"",
        ""created_at"": ""2016-03-30T10:15:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-183"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d170e17d-a05e-4b43-b7d9-02bc2ff1419c"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-763"",
        ""timestamp"": ""2016-03-30T10:15:18Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ac7c4767-9b3a-4ea4-862e-2c3e353dcc08", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/71b0266d-f8f0-45ab-92cd-a68c8a361854", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-183", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d170e17d-a05e-4b43-b7d9-02bc2ff1419c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-763", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""84f14aa6-94ff-45ba-b9f7-473dbfb4afdf"",
        ""url"": ""/v2/events/52ccf55e-ff88-436e-8281-54ccd4199f1a"",
        ""created_at"": ""2016-03-30T10:15:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-211"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0a995fbe-0751-4100-88fa-f8ed9c12aa46"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-30T10:15:20Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""84f14aa6-94ff-45ba-b9f7-473dbfb4afdf""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("84f14aa6-94ff-45ba-b9f7-473dbfb4afdf", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/52ccf55e-ff88-436e-8281-54ccd4199f1a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-211", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0a995fbe-0751-4100-88fa-f8ed9c12aa46", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("84f14aa6-94ff-45ba-b9f7-473dbfb4afdf", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a5bb9f2e-9373-4d8a-bbe8-a30660abdca9"",
        ""url"": ""/v2/events/cf0ee1af-9fc2-4cc2-ad5f-688d6b32fd59"",
        ""created_at"": ""2016-03-30T10:15:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-229"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""cf7e38a3-c2cc-4aa6-9e42-324b594881f5"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1397"",
        ""timestamp"": ""2016-03-30T10:15:22Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""a5bb9f2e-9373-4d8a-bbe8-a30660abdca9"",
        ""organization_guid"": ""a5bb9f2e-9373-4d8a-bbe8-a30660abdca9""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a5bb9f2e-9373-4d8a-bbe8-a30660abdca9", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/cf0ee1af-9fc2-4cc2-ad5f-688d6b32fd59", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-229", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("cf7e38a3-c2cc-4aa6-9e42-324b594881f5", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1397", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("a5bb9f2e-9373-4d8a-bbe8-a30660abdca9", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a5bb9f2e-9373-4d8a-bbe8-a30660abdca9", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppSshAuthorizedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8752dfe9-2b16-423e-958d-c72f202d5397"",
        ""url"": ""/v2/events/5a16d59f-438e-4026-a774-9d9aa5a38a80"",
        ""created_at"": ""2016-03-30T10:15:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-authorized"",
        ""actor"": ""uaa-id-231"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""876875b3-1f2d-4752-8418-eec4afea8926"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1424"",
        ""timestamp"": ""2016-03-30T10:15:22Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""8752dfe9-2b16-423e-958d-c72f202d5397"",
        ""organization_guid"": ""8752dfe9-2b16-423e-958d-c72f202d5397""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppSshAuthorizedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8752dfe9-2b16-423e-958d-c72f202d5397", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5a16d59f-438e-4026-a774-9d9aa5a38a80", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.ssh-authorized", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-231", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("876875b3-1f2d-4752-8418-eec4afea8926", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1424", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("8752dfe9-2b16-423e-958d-c72f202d5397", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("8752dfe9-2b16-423e-958d-c72f202d5397", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""52019cfe-7499-4b30-8dd4-70d8473e0c90"",
        ""url"": ""/v2/events/2e4e698c-f935-4713-a571-fdf83a11530e"",
        ""created_at"": ""2016-03-30T10:15:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-244"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""088eeb33-63a6-49a2-a6d9-dd53363b2508"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1621"",
        ""timestamp"": ""2016-03-30T10:15:23Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1621"",
            ""space_guid"": ""52019cfe-7499-4b30-8dd4-70d8473e0c90""
          }
        },
        ""space_guid"": ""52019cfe-7499-4b30-8dd4-70d8473e0c90"",
        ""organization_guid"": ""52019cfe-7499-4b30-8dd4-70d8473e0c90""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("52019cfe-7499-4b30-8dd4-70d8473e0c90", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2e4e698c-f935-4713-a571-fdf83a11530e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:23Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-244", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("088eeb33-63a6-49a2-a6d9-dd53363b2508", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1621", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:23Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("52019cfe-7499-4b30-8dd4-70d8473e0c90", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("52019cfe-7499-4b30-8dd4-70d8473e0c90", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e85bff12-8614-457c-a2d6-18c3e7fd08ac"",
        ""url"": ""/v2/events/a34ff9fe-43d8-4a52-abe6-904f6c7b4f64"",
        ""created_at"": ""2016-03-30T10:15:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-199"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a1fdb577-783a-4b13-8eaf-9dc629167b0b"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-977"",
        ""timestamp"": ""2016-03-30T10:15:19Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""e85bff12-8614-457c-a2d6-18c3e7fd08ac"",
        ""organization_guid"": ""e85bff12-8614-457c-a2d6-18c3e7fd08ac""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e85bff12-8614-457c-a2d6-18c3e7fd08ac", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a34ff9fe-43d8-4a52-abe6-904f6c7b4f64", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-199", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a1fdb577-783a-4b13-8eaf-9dc629167b0b", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-977", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e85bff12-8614-457c-a2d6-18c3e7fd08ac", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e85bff12-8614-457c-a2d6-18c3e7fd08ac", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""858b572f-447c-49bc-ad8b-43559a76d029"",
        ""url"": ""/v2/events/b91393c7-8626-4b8c-b618-de23e0c7946e"",
        ""created_at"": ""2016-03-30T10:15:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""d2ec2405-da17-4a1b-a454-7ea7236fa4cf"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-679"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2016-03-30T10:15:17Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""858b572f-447c-49bc-ad8b-43559a76d029"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("858b572f-447c-49bc-ad8b-43559a76d029", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b91393c7-8626-4b8c-b618-de23e0c7946e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("d2ec2405-da17-4a1b-a454-7ea7236fa4cf", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-679", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b750f9b2-79c7-4e53-bef1-e84340a71be3"",
        ""url"": ""/v2/events/7752c225-0cc1-43d0-911f-cb25c3856595"",
        ""created_at"": ""2016-03-30T10:15:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-235"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""235071ec-18b6-44d1-8594-201855338440"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1477"",
        ""timestamp"": ""2016-03-30T10:15:22Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""b750f9b2-79c7-4e53-bef1-e84340a71be3""
          }
        },
        ""space_guid"": ""b750f9b2-79c7-4e53-bef1-e84340a71be3"",
        ""organization_guid"": ""b750f9b2-79c7-4e53-bef1-e84340a71be3""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b750f9b2-79c7-4e53-bef1-e84340a71be3", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/7752c225-0cc1-43d0-911f-cb25c3856595", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-235", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("235071ec-18b6-44d1-8594-201855338440", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1477", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("b750f9b2-79c7-4e53-bef1-e84340a71be3", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("b750f9b2-79c7-4e53-bef1-e84340a71be3", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppStopEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e8d3af3d-c419-4d2b-b34d-4261eee4b643"",
        ""url"": ""/v2/events/fc0214f4-cf4c-4e00-82a7-7bc25f975e06"",
        ""created_at"": ""2016-03-30T10:15:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-237"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7b861de1-1bfd-44f1-bf24-689dbf443c6f"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-1507"",
        ""timestamp"": ""2016-03-30T10:15:22Z"",
        ""metadata"": {

        },
        ""space_guid"": ""e8d3af3d-c419-4d2b-b34d-4261eee4b643"",
        ""organization_guid"": ""e8d3af3d-c419-4d2b-b34d-4261eee4b643""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppStopEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e8d3af3d-c419-4d2b-b34d-4261eee4b643", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/fc0214f4-cf4c-4e00-82a7-7bc25f975e06", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-237", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("7b861de1-1bfd-44f1-bf24-689dbf443c6f", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("v3-app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1507", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e8d3af3d-c419-4d2b-b34d-4261eee4b643", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e8d3af3d-c419-4d2b-b34d-4261eee4b643", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void RetrieveEventTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""6bd300b7-0a7a-43b9-a52c-a2d2c46209fc"",
    ""url"": ""/v2/events/791bfefb-e4fe-4aeb-93da-744bcdb58e4b"",
    ""created_at"": ""2016-03-30T10:15:23Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-1625"",
    ""actor"": ""197095fd-95c4-4db5-bb4e-314faf744dc9"",
    ""actor_type"": ""name-1626"",
    ""actor_name"": ""name-1627"",
    ""actee"": ""aa8241b8-ae29-479a-92dd-8dc053455b05"",
    ""actee_type"": ""name-1628"",
    ""actee_name"": ""name-1629"",
    ""timestamp"": ""2016-03-30T10:15:23Z"",
    ""metadata"": {

    },
    ""space_guid"": ""6bd300b7-0a7a-43b9-a52c-a2d2c46209fc"",
    ""organization_guid"": ""6bd300b7-0a7a-43b9-a52c-a2d2c46209fc""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Events.RetrieveEvent(guid).Result;


                Assert.AreEqual("6bd300b7-0a7a-43b9-a52c-a2d2c46209fc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/791bfefb-e4fe-4aeb-93da-744bcdb58e4b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:23Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1625", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("197095fd-95c4-4db5-bb4e-314faf744dc9", TestUtil.ToTestableString(obj.Actor), true);
                Assert.AreEqual("name-1626", TestUtil.ToTestableString(obj.ActorType), true);
                Assert.AreEqual("name-1627", TestUtil.ToTestableString(obj.ActorName), true);
                Assert.AreEqual("aa8241b8-ae29-479a-92dd-8dc053455b05", TestUtil.ToTestableString(obj.Actee), true);
                Assert.AreEqual("name-1628", TestUtil.ToTestableString(obj.ActeeType), true);
                Assert.AreEqual("name-1629", TestUtil.ToTestableString(obj.ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:23Z", TestUtil.ToTestableString(obj.Timestamp), true);
                Assert.AreEqual("6bd300b7-0a7a-43b9-a52c-a2d2c46209fc", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("6bd300b7-0a7a-43b9-a52c-a2d2c46209fc", TestUtil.ToTestableString(obj.OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""144ed26c-f485-46a5-a0ea-5d0bc1852580"",
        ""url"": ""/v2/events/aa4f8cde-7ff5-45e0-8dfb-a37223f8bb2c"",
        ""created_at"": ""2016-03-30T10:15:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.update"",
        ""actor"": ""uaa-id-175"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d8ee23c8-3f90-402f-abe1-9dc7ab632e2a"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-6"",
        ""timestamp"": ""2016-03-30T10:15:17Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""144ed26c-f485-46a5-a0ea-5d0bc1852580"",
            ""space_guid"": ""144ed26c-f485-46a5-a0ea-5d0bc1852580""
          }
        },
        ""space_guid"": ""144ed26c-f485-46a5-a0ea-5d0bc1852580"",
        ""organization_guid"": ""144ed26c-f485-46a5-a0ea-5d0bc1852580""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("144ed26c-f485-46a5-a0ea-5d0bc1852580", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/aa4f8cde-7ff5-45e0-8dfb-a37223f8bb2c", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-175", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d8ee23c8-3f90-402f-abe1-9dc7ab632e2a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-6", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("144ed26c-f485-46a5-a0ea-5d0bc1852580", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("144ed26c-f485-46a5-a0ea-5d0bc1852580", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""daa19842-b5b4-46eb-8781-6fa7d439ab9c"",
        ""url"": ""/v2/events/2012ae43-518c-480b-8e63-0cf167fb638a"",
        ""created_at"": ""2016-03-30T10:15:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""8a1d43a0-e02a-4b34-9adc-5472b6232849"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1596"",
        ""actee"": ""e9619f81-c87e-44fc-90eb-55e05c73bdec"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2016-03-30T10:15:23Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("daa19842-b5b4-46eb-8781-6fa7d439ab9c", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2012ae43-518c-480b-8e63-0cf167fb638a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:23Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("8a1d43a0-e02a-4b34-9adc-5472b6232849", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1596", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e9619f81-c87e-44fc-90eb-55e05c73bdec", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:23Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7f4a0b0d-d4b0-4b2d-818b-c4b53c15764b"",
        ""url"": ""/v2/events/c8e5abbc-028d-4061-9513-c1872571b1dd"",
        ""created_at"": ""2016-03-30T10:15:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""189e6180-a3b3-43eb-a7c7-64346fe813a7"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1228"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-03-30T10:15:21Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7f4a0b0d-d4b0-4b2d-818b-c4b53c15764b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c8e5abbc-028d-4061-9513-c1872571b1dd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("189e6180-a3b3-43eb-a7c7-64346fe813a7", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1228", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""341ab66e-753d-428e-bddd-0dd922ad508b"",
        ""url"": ""/v2/events/db70bfcc-2c6f-45ad-924e-fa53a9fb9179"",
        ""created_at"": ""2016-03-30T10:15:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-187"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ce09b53f-3549-4e6f-8272-c55eb744f2f4"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-815"",
        ""timestamp"": ""2016-03-30T10:15:18Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""341ab66e-753d-428e-bddd-0dd922ad508b"",
        ""organization_guid"": ""341ab66e-753d-428e-bddd-0dd922ad508b""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("341ab66e-753d-428e-bddd-0dd922ad508b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/db70bfcc-2c6f-45ad-924e-fa53a9fb9179", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-187", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ce09b53f-3549-4e6f-8272-c55eb744f2f4", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-815", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("341ab66e-753d-428e-bddd-0dd922ad508b", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("341ab66e-753d-428e-bddd-0dd922ad508b", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d99e1785-173c-45e8-a940-5c2a79716736"",
        ""url"": ""/v2/events/e59244e2-cf6d-4277-a267-280d6e30b8e0"",
        ""created_at"": ""2016-03-30T10:15:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-191"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5bea14d3-d073-42b4-85da-1a53b40c1006"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-30T10:15:18Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""d99e1785-173c-45e8-a940-5c2a79716736"",
            ""organization_guid"": ""d99e1785-173c-45e8-a940-5c2a79716736""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""d99e1785-173c-45e8-a940-5c2a79716736""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d99e1785-173c-45e8-a940-5c2a79716736", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e59244e2-cf6d-4277-a267-280d6e30b8e0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-191", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5bea14d3-d073-42b4-85da-1a53b40c1006", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("d99e1785-173c-45e8-a940-5c2a79716736", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c84d4726-a29c-42fc-884e-82d0cfa56aeb"",
        ""url"": ""/v2/events/6ef8cd0d-c09d-4594-8abd-8c94241b9104"",
        ""created_at"": ""2016-03-30T10:15:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-207"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""82f08120-81c3-4c5e-a0c9-d5e1ddaa5a91"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1095"",
        ""timestamp"": ""2016-03-30T10:15:20Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c84d4726-a29c-42fc-884e-82d0cfa56aeb", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/6ef8cd0d-c09d-4594-8abd-8c94241b9104", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-207", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("82f08120-81c3-4c5e-a0c9-d5e1ddaa5a91", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1095", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9234e1c4-8e5d-492b-88ac-a9c49e483397"",
        ""url"": ""/v2/events/90a2370a-2839-4253-92c3-cd23336ec7bc"",
        ""created_at"": ""2016-03-30T10:15:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-225"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5f777b08-621a-4248-8c16-04a45a0ee337"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-30T10:15:21Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""9234e1c4-8e5d-492b-88ac-a9c49e483397"",
            ""app_guid"": ""9234e1c4-8e5d-492b-88ac-a9c49e483397""
          }
        },
        ""space_guid"": ""9234e1c4-8e5d-492b-88ac-a9c49e483397"",
        ""organization_guid"": ""9234e1c4-8e5d-492b-88ac-a9c49e483397""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("9234e1c4-8e5d-492b-88ac-a9c49e483397", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/90a2370a-2839-4253-92c3-cd23336ec7bc", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-225", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5f777b08-621a-4248-8c16-04a45a0ee337", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("9234e1c4-8e5d-492b-88ac-a9c49e483397", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("9234e1c4-8e5d-492b-88ac-a9c49e483397", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""16903ddb-50fe-4637-b9e0-21b430d6daed"",
        ""url"": ""/v2/events/d007b8b7-d356-4cc5-a157-fad13bfb574d"",
        ""created_at"": ""2016-03-30T10:15:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""b1844748-a577-4c21-a3b3-38bc5a60a1c9"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-895"",
        ""actee"": ""0f884fb5-6a57-4a07-b588-2bfaae25ad5a"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-896"",
        ""timestamp"": ""2016-03-30T10:15:18Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("16903ddb-50fe-4637-b9e0-21b430d6daed", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d007b8b7-d356-4cc5-a157-fad13bfb574d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("b1844748-a577-4c21-a3b3-38bc5a60a1c9", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-895", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0f884fb5-6a57-4a07-b588-2bfaae25ad5a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-896", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppExitedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""80d03773-b31b-49d8-86a9-92a0ac9593fa"",
        ""url"": ""/v2/events/8fefa036-3f79-42b8-9d85-54042e5474dd"",
        ""created_at"": ""2016-03-30T10:15:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""7d423ca2-c49c-42ee-82d2-a137d1f3e4cb"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1567"",
        ""actee"": ""7d423ca2-c49c-42ee-82d2-a137d1f3e4cb"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1567"",
        ""timestamp"": ""2016-03-30T10:15:23Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""80d03773-b31b-49d8-86a9-92a0ac9593fa"",
        ""organization_guid"": ""80d03773-b31b-49d8-86a9-92a0ac9593fa""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppExitedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("80d03773-b31b-49d8-86a9-92a0ac9593fa", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8fefa036-3f79-42b8-9d85-54042e5474dd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:23Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("app.crash", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("7d423ca2-c49c-42ee-82d2-a137d1f3e4cb", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1567", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("7d423ca2-c49c-42ee-82d2-a137d1f3e4cb", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1567", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:23Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("80d03773-b31b-49d8-86a9-92a0ac9593fa", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("80d03773-b31b-49d8-86a9-92a0ac9593fa", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceKeyDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6eb018c0-0ef2-4f5c-a6ad-5eea8e2c685f"",
        ""url"": ""/v2/events/869703af-8ae4-4381-aa44-2e9bfb341d5b"",
        ""created_at"": ""2016-03-30T10:15:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.delete"",
        ""actor"": ""uaa-id-203"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c48819a8-7060-4445-9757-340b4cfb3811"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1039"",
        ""timestamp"": ""2016-03-30T10:15:19Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""6eb018c0-0ef2-4f5c-a6ad-5eea8e2c685f"",
        ""organization_guid"": ""6eb018c0-0ef2-4f5c-a6ad-5eea8e2c685f""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceKeyDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6eb018c0-0ef2-4f5c-a6ad-5eea8e2c685f", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/869703af-8ae4-4381-aa44-2e9bfb341d5b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_key.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-203", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c48819a8-7060-4445-9757-340b4cfb3811", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_key", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1039", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("6eb018c0-0ef2-4f5c-a6ad-5eea8e2c685f", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("6eb018c0-0ef2-4f5c-a6ad-5eea8e2c685f", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""230bc19f-4b75-462b-a31a-e89cbd0973be"",
        ""url"": ""/v2/events/fc10ecd1-dfe4-40b3-8f19-56e4bead841f"",
        ""created_at"": ""2016-03-30T10:15:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-213"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b027d17a-051a-4975-bde6-51f77b40a8ed"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1173"",
        ""timestamp"": ""2016-03-30T10:15:20Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""230bc19f-4b75-462b-a31a-e89cbd0973be"",
        ""organization_guid"": ""230bc19f-4b75-462b-a31a-e89cbd0973be""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("230bc19f-4b75-462b-a31a-e89cbd0973be", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/fc10ecd1-dfe4-40b3-8f19-56e4bead841f", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-213", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b027d17a-051a-4975-bde6-51f77b40a8ed", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1173", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("230bc19f-4b75-462b-a31a-e89cbd0973be", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("230bc19f-4b75-462b-a31a-e89cbd0973be", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3c7f6738-2c12-4fdd-85f2-e331fba37de3"",
        ""url"": ""/v2/events/97a5fa04-5959-41a8-b68f-8927b13e7a79"",
        ""created_at"": ""2016-03-30T10:15:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-227"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""bbd8977b-14e1-4818-98a5-95232b6a3486"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1369"",
        ""timestamp"": ""2016-03-30T10:15:21Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""3c7f6738-2c12-4fdd-85f2-e331fba37de3"",
        ""organization_guid"": ""3c7f6738-2c12-4fdd-85f2-e331fba37de3""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("3c7f6738-2c12-4fdd-85f2-e331fba37de3", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/97a5fa04-5959-41a8-b68f-8927b13e7a79", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-227", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("bbd8977b-14e1-4818-98a5-95232b6a3486", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1369", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("3c7f6738-2c12-4fdd-85f2-e331fba37de3", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("3c7f6738-2c12-4fdd-85f2-e331fba37de3", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppStartEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b2ce2cbd-d0a6-4e8b-9168-abcebf597051"",
        ""url"": ""/v2/events/3f4f720e-a8c8-4ec5-a21d-3a3675e2a570"",
        ""created_at"": ""2016-03-30T10:15:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-171"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""99af747a-71d0-43f2-b279-015f5a8eb6c0"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-595"",
        ""timestamp"": ""2016-03-30T10:15:17Z"",
        ""metadata"": {

        },
        ""space_guid"": ""b2ce2cbd-d0a6-4e8b-9168-abcebf597051"",
        ""organization_guid"": ""b2ce2cbd-d0a6-4e8b-9168-abcebf597051""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppStartEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b2ce2cbd-d0a6-4e8b-9168-abcebf597051", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/3f4f720e-a8c8-4ec5-a21d-3a3675e2a570", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-171", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("99af747a-71d0-43f2-b279-015f5a8eb6c0", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("v3-app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-595", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("b2ce2cbd-d0a6-4e8b-9168-abcebf597051", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("b2ce2cbd-d0a6-4e8b-9168-abcebf597051", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceKeyCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1054b7a1-1539-4f2a-9cbd-6db66a6d6695"",
        ""url"": ""/v2/events/f08f82f9-8651-4116-ba41-305ab5c59516"",
        ""created_at"": ""2016-03-30T10:15:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.create"",
        ""actor"": ""uaa-id-205"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7c4ae7eb-b920-49d1-9bbd-965a58c5d74c"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1070"",
        ""timestamp"": ""2016-03-30T10:15:20Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""1054b7a1-1539-4f2a-9cbd-6db66a6d6695"",
            ""name"": ""name-1070""
          }
        },
        ""space_guid"": ""1054b7a1-1539-4f2a-9cbd-6db66a6d6695"",
        ""organization_guid"": ""1054b7a1-1539-4f2a-9cbd-6db66a6d6695""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceKeyCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1054b7a1-1539-4f2a-9cbd-6db66a6d6695", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f08f82f9-8651-4116-ba41-305ab5c59516", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_key.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-205", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("7c4ae7eb-b920-49d1-9bbd-965a58c5d74c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_key", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1070", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("1054b7a1-1539-4f2a-9cbd-6db66a6d6695", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("1054b7a1-1539-4f2a-9cbd-6db66a6d6695", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAllEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a"",
        ""url"": ""/v2/events/0684c886-4b3d-470a-b4a8-162195095dd7"",
        ""created_at"": ""2016-03-30T10:15:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-518"",
        ""actor"": ""bc30f38b-3437-453a-8840-a2e67fef0c3b"",
        ""actor_type"": ""name-519"",
        ""actor_name"": ""name-520"",
        ""actee"": ""2bf8503a-333c-4f75-8a99-34ec02ee46d7"",
        ""actee_type"": ""name-521"",
        ""actee_name"": ""name-522"",
        ""timestamp"": ""2016-03-30T10:15:16Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a"",
        ""organization_guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a"",
        ""url"": ""/v2/events/cdf370f9-0bc4-4786-a4e3-20c78eb7c989"",
        ""created_at"": ""2016-03-30T10:15:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-526"",
        ""actor"": ""0fa4ccd3-90fa-4d20-ab8d-ec1cf842ff0f"",
        ""actor_type"": ""name-527"",
        ""actor_name"": ""name-528"",
        ""actee"": ""0e955929-1088-4804-bf1a-a9de4d7b9f70"",
        ""actee_type"": ""name-529"",
        ""actee_name"": ""name-530"",
        ""timestamp"": ""2016-03-30T10:15:16Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a"",
        ""organization_guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a"",
        ""url"": ""/v2/events/9dcccfcd-efc8-46e7-8f0b-f66004e1a88d"",
        ""created_at"": ""2016-03-30T10:15:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-534"",
        ""actor"": ""3c305688-b725-4d32-95d6-1f41140407b2"",
        ""actor_type"": ""name-535"",
        ""actor_name"": ""name-536"",
        ""actee"": ""dca95b9c-41f0-4ed7-a445-95d62b6dcfb6"",
        ""actee_type"": ""name-537"",
        ""actee_name"": ""name-538"",
        ""timestamp"": ""2016-03-30T10:15:16Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a"",
        ""organization_guid"": ""1b4db096-777e-4cd6-943e-3d88da66fb3a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAllEvents().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0684c886-4b3d-470a-b4a8-162195095dd7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:16Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-518", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("bc30f38b-3437-453a-8840-a2e67fef0c3b", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("name-519", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-520", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("2bf8503a-333c-4f75-8a99-34ec02ee46d7", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("name-521", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-522", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:16Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/cdf370f9-0bc4-4786-a4e3-20c78eb7c989", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:16Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-526", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("0fa4ccd3-90fa-4d20-ab8d-ec1cf842ff0f", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("name-527", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("name-528", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("0e955929-1088-4804-bf1a-a9de4d7b9f70", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("name-529", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-530", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:16Z", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9dcccfcd-efc8-46e7-8f0b-f66004e1a88d", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:16Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-534", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("3c305688-b725-4d32-95d6-1f41140407b2", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("name-535", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("name-536", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("dca95b9c-41f0-4ed7-a445-95d62b6dcfb6", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("name-537", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-538", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:16Z", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("1b4db096-777e-4cd6-943e-3d88da66fb3a", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e657677e-3b90-4e3f-995a-4bff0e3a9775"",
        ""url"": ""/v2/events/8357499a-360a-405a-9447-46b9dc891898"",
        ""created_at"": ""2016-03-30T10:15:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.create"",
        ""actor"": ""uaa-id-223"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b14d3164-ce00-48c5-866e-6ba67fd5c98d"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-8"",
        ""timestamp"": ""2016-03-30T10:15:21Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""e657677e-3b90-4e3f-995a-4bff0e3a9775"",
            ""space_guid"": ""e657677e-3b90-4e3f-995a-4bff0e3a9775""
          }
        },
        ""space_guid"": ""e657677e-3b90-4e3f-995a-4bff0e3a9775"",
        ""organization_guid"": ""e657677e-3b90-4e3f-995a-4bff0e3a9775""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e657677e-3b90-4e3f-995a-4bff0e3a9775", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8357499a-360a-405a-9447-46b9dc891898", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-223", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b14d3164-ce00-48c5-866e-6ba67fd5c98d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-8", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e657677e-3b90-4e3f-995a-4bff0e3a9775", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e657677e-3b90-4e3f-995a-4bff0e3a9775", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6b0a812d-6d75-4ec7-a251-113e848dcac9"",
        ""url"": ""/v2/events/8264e9fd-15fd-44c4-918f-376eeca0293f"",
        ""created_at"": ""2016-03-30T10:15:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-221"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ebb166c7-9030-4216-892b-e5ff0b9f6544"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-30T10:15:21Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""6b0a812d-6d75-4ec7-a251-113e848dcac9"",
            ""organization_guid"": ""6b0a812d-6d75-4ec7-a251-113e848dcac9""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""6b0a812d-6d75-4ec7-a251-113e848dcac9""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6b0a812d-6d75-4ec7-a251-113e848dcac9", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8264e9fd-15fd-44c4-918f-376eeca0293f", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-221", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ebb166c7-9030-4216-892b-e5ff0b9f6544", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("6b0a812d-6d75-4ec7-a251-113e848dcac9", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListEventsAssociatedWithAppSinceJanuary12014Test()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3"",
        ""url"": ""/v2/events/9d2228c4-08d8-4df6-bd4d-747b29f4d5a1"",
        ""created_at"": ""2016-03-30T10:15:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-173"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""48fcba3f-9fc1-4061-87be-9386ff0179a2"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-623"",
        ""timestamp"": ""2016-03-30T10:15:17Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3"",
        ""organization_guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3"",
        ""url"": ""/v2/events/39746783-d11b-4f1e-88c0-389dcf8ed1a8"",
        ""created_at"": ""2016-03-30T10:15:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-173"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""48fcba3f-9fc1-4061-87be-9386ff0179a2"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-623"",
        ""timestamp"": ""2016-03-30T10:15:17Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3"",
        ""organization_guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3"",
        ""url"": ""/v2/events/40f18ef9-417d-4d77-bf2a-e7377d46863a"",
        ""created_at"": ""2016-03-30T10:15:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-173"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""48fcba3f-9fc1-4061-87be-9386ff0179a2"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-623"",
        ""timestamp"": ""2016-03-30T10:15:17Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3"",
        ""organization_guid"": ""d44b79e2-0051-4135-9857-c197513d3dc3""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListEventsAssociatedWithAppSinceJanuary12014().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9d2228c4-08d8-4df6-bd4d-747b29f4d5a1", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-173", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("48fcba3f-9fc1-4061-87be-9386ff0179a2", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-623", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/39746783-d11b-4f1e-88c0-389dcf8ed1a8", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("uaa-id-173", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("48fcba3f-9fc1-4061-87be-9386ff0179a2", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-623", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/40f18ef9-417d-4d77-bf2a-e7377d46863a", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("uaa-id-173", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("48fcba3f-9fc1-4061-87be-9386ff0179a2", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-623", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:17Z", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("d44b79e2-0051-4135-9857-c197513d3dc3", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a124f719-81d6-4444-8aad-5a0d7a9bc36c"",
        ""url"": ""/v2/events/86287ded-0299-4884-a173-36aff27a6af8"",
        ""created_at"": ""2016-03-30T10:15:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-181"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""80389a54-ee05-48da-a04d-0be40da9d563"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-733"",
        ""timestamp"": ""2016-03-30T10:15:18Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-733"",
            ""service_plan_guid"": ""a124f719-81d6-4444-8aad-5a0d7a9bc36c"",
            ""space_guid"": ""a124f719-81d6-4444-8aad-5a0d7a9bc36c""
          }
        },
        ""space_guid"": ""a124f719-81d6-4444-8aad-5a0d7a9bc36c"",
        ""organization_guid"": ""a124f719-81d6-4444-8aad-5a0d7a9bc36c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a124f719-81d6-4444-8aad-5a0d7a9bc36c", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/86287ded-0299-4884-a173-36aff27a6af8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-181", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("80389a54-ee05-48da-a04d-0be40da9d563", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-733", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("a124f719-81d6-4444-8aad-5a0d7a9bc36c", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a124f719-81d6-4444-8aad-5a0d7a9bc36c", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6cf70414-9355-40a5-b735-6535ca14d6e3"",
        ""url"": ""/v2/events/a1cde82d-420b-4d55-91a9-32640f3f1331"",
        ""created_at"": ""2016-03-30T10:15:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""49d9e708-092e-4a13-91f2-03826554ddbf"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1120"",
        ""actee"": ""ef468303-1dec-4d2e-81d6-4dcf560a937a"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-24"",
        ""timestamp"": ""2016-03-30T10:15:20Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6cf70414-9355-40a5-b735-6535ca14d6e3", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a1cde82d-420b-4d55-91a9-32640f3f1331", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("49d9e708-092e-4a13-91f2-03826554ddbf", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1120", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ef468303-1dec-4d2e-81d6-4dcf560a937a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label-24", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8940902e-efff-4363-9e7e-ff2eaa5ec3fb"",
        ""url"": ""/v2/events/59dcad4c-63eb-464f-81da-3c4c63993abe"",
        ""created_at"": ""2016-03-30T10:15:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""43cd9b65-db21-4514-bdfa-708fdffd6848"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-842"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2016-03-30T10:15:18Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""8940902e-efff-4363-9e7e-ff2eaa5ec3fb"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8940902e-efff-4363-9e7e-ff2eaa5ec3fb", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/59dcad4c-63eb-464f-81da-3c4c63993abe", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("43cd9b65-db21-4514-bdfa-708fdffd6848", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-842", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("plan-name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""384d8464-b247-4aad-bdf5-772fbd417792"",
        ""url"": ""/v2/events/65192f50-6c11-4377-8518-3ce5002fd7d3"",
        ""created_at"": ""2016-03-30T10:15:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-233"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""890dc4ad-1722-45cd-88a1-deef9db09c42"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2016-03-30T10:15:22Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("384d8464-b247-4aad-bdf5-772fbd417792", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/65192f50-6c11-4377-8518-3ce5002fd7d3", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-233", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("890dc4ad-1722-45cd-88a1-deef9db09c42", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("pancake broker", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce6d9ef8-b976-4dc8-8c6d-8164d3797d01"",
        ""url"": ""/v2/events/f50d55dd-f1ad-440d-9203-b2f70c3d0ad7"",
        ""created_at"": ""2016-03-30T10:15:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""db6fea5b-bb02-4335-bb8a-d0da5c34506f"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1201"",
        ""actee"": ""d7096525-8446-4fca-b7a4-dd0ea9e43ed9"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2016-03-30T10:15:20Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ce6d9ef8-b976-4dc8-8c6d-8164d3797d01", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f50d55dd-f1ad-440d-9203-b2f70c3d0ad7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("db6fea5b-bb02-4335-bb8a-d0da5c34506f", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1201", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d7096525-8446-4fca-b7a4-dd0ea9e43ed9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:20Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""32e6f157-9bea-43c4-a686-961b16c4e0b2"",
        ""url"": ""/v2/events/b55321b5-e87d-4f99-a68a-0b1b13bf12ec"",
        ""created_at"": ""2016-03-30T10:15:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.delete-request"",
        ""actor"": ""uaa-id-197"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d2747c8b-519e-45d3-a6cc-ee0a7d1bc88b"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-7"",
        ""timestamp"": ""2016-03-30T10:15:19Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""32e6f157-9bea-43c4-a686-961b16c4e0b2"",
        ""organization_guid"": ""32e6f157-9bea-43c4-a686-961b16c4e0b2""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("32e6f157-9bea-43c4-a686-961b16c4e0b2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b55321b5-e87d-4f99-a68a-0b1b13bf12ec", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-197", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d2747c8b-519e-45d3-a6cc-ee0a7d1bc88b", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-7", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("32e6f157-9bea-43c4-a686-961b16c4e0b2", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("32e6f157-9bea-43c4-a686-961b16c4e0b2", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""45c3cd8d-2d15-4af2-a609-780f382e83c5"",
        ""url"": ""/v2/events/84edd850-7356-4ecb-8c40-29db46ed48e5"",
        ""created_at"": ""2016-03-30T10:15:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-239"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5680de6d-0e7c-4535-b3c7-edbdb933c75a"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-30T10:15:22Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""45c3cd8d-2d15-4af2-a609-780f382e83c5"",
        ""organization_guid"": ""45c3cd8d-2d15-4af2-a609-780f382e83c5""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("45c3cd8d-2d15-4af2-a609-780f382e83c5", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/84edd850-7356-4ecb-8c40-29db46ed48e5", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-239", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5680de6d-0e7c-4535-b3c7-edbdb933c75a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:22Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("45c3cd8d-2d15-4af2-a609-780f382e83c5", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("45c3cd8d-2d15-4af2-a609-780f382e83c5", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5a62936e-a2d5-4e44-8e7b-4d2e36b81cf2"",
        ""url"": ""/v2/events/310d9395-db00-4674-80b4-821fae670c50"",
        ""created_at"": ""2016-03-30T10:15:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-169"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""727d5450-f514-4ba8-b6bb-d3f5d5fd7645"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-566"",
        ""timestamp"": ""2016-03-30T10:15:16Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""5a62936e-a2d5-4e44-8e7b-4d2e36b81cf2"",
        ""organization_guid"": ""5a62936e-a2d5-4e44-8e7b-4d2e36b81cf2""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5a62936e-a2d5-4e44-8e7b-4d2e36b81cf2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/310d9395-db00-4674-80b4-821fae670c50", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:16Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-169", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("727d5450-f514-4ba8-b6bb-d3f5d5fd7645", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-566", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:16Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("5a62936e-a2d5-4e44-8e7b-4d2e36b81cf2", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("5a62936e-a2d5-4e44-8e7b-4d2e36b81cf2", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppSshUnauthorizedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5410b517-e9f3-4b80-9c3c-08de43790b58"",
        ""url"": ""/v2/events/171266bb-a611-4bba-895b-0ccff9d9b75f"",
        ""created_at"": ""2016-03-30T10:15:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-unauthorized"",
        ""actor"": ""uaa-id-219"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ed370aec-4f77-49a7-ae22-20f91f7f2684"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1253"",
        ""timestamp"": ""2016-03-30T10:15:21Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""5410b517-e9f3-4b80-9c3c-08de43790b58"",
        ""organization_guid"": ""5410b517-e9f3-4b80-9c3c-08de43790b58""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppSshUnauthorizedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5410b517-e9f3-4b80-9c3c-08de43790b58", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/171266bb-a611-4bba-895b-0ccff9d9b75f", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.ssh-unauthorized", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-219", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ed370aec-4f77-49a7-ae22-20f91f7f2684", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1253", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:21Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("5410b517-e9f3-4b80-9c3c-08de43790b58", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("5410b517-e9f3-4b80-9c3c-08de43790b58", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8dff0adc-0934-4179-8d91-ae73724d000e"",
        ""url"": ""/v2/events/0136ed5d-91e0-4e13-a4d7-bb20d578f3d0"",
        ""created_at"": ""2016-03-30T10:15:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-185"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""05cb00e5-5c01-4441-9f3f-5e2ce83c6da4"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-788"",
        ""timestamp"": ""2016-03-30T10:15:18Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""8dff0adc-0934-4179-8d91-ae73724d000e"",
        ""organization_guid"": ""8dff0adc-0934-4179-8d91-ae73724d000e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8dff0adc-0934-4179-8d91-ae73724d000e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0136ed5d-91e0-4e13-a4d7-bb20d578f3d0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-185", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("05cb00e5-5c01-4441-9f3f-5e2ce83c6da4", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-788", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:18Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("8dff0adc-0934-4179-8d91-ae73724d000e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("8dff0adc-0934-4179-8d91-ae73724d000e", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1e1351bf-d7d4-4784-a580-0a5cf8ad5f85"",
        ""url"": ""/v2/events/fb2915c0-9934-4660-9b3e-23964e3e3a36"",
        ""created_at"": ""2016-03-30T10:15:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-195"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""bf4c88ca-304e-4aa5-bd62-51dacf519110"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-921"",
        ""timestamp"": ""2016-03-30T10:15:19Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""1e1351bf-d7d4-4784-a580-0a5cf8ad5f85"",
        ""organization_guid"": ""1e1351bf-d7d4-4784-a580-0a5cf8ad5f85""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1e1351bf-d7d4-4784-a580-0a5cf8ad5f85", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/fb2915c0-9934-4660-9b3e-23964e3e3a36", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-195", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("bf4c88ca-304e-4aa5-bd62-51dacf519110", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-921", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-03-30T10:15:19Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("1e1351bf-d7d4-4784-a580-0a5cf8ad5f85", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("1e1351bf-d7d4-4784-a580-0a5cf8ad5f85", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

    }
}