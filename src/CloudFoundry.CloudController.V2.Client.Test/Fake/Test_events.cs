//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsEndpoint
{
        [TestMethod]
        public void ListAppCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0c53d163-1782-45b2-9ba0-5870fadb5a24"",
        ""url"": ""/v2/events/a954987e-bbfc-4d71-8587-79494a42d386"",
        ""created_at"": ""2016-07-27T14:02:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-327"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""214d8f4f-5d24-491f-a3d5-59da43b6ab8e"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-2122"",
        ""timestamp"": ""2016-07-27T14:02:53Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""0c53d163-1782-45b2-9ba0-5870fadb5a24"",
        ""organization_guid"": ""0c53d163-1782-45b2-9ba0-5870fadb5a24""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("0c53d163-1782-45b2-9ba0-5870fadb5a24", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a954987e-bbfc-4d71-8587-79494a42d386", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-327", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("214d8f4f-5d24-491f-a3d5-59da43b6ab8e", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-2122", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("0c53d163-1782-45b2-9ba0-5870fadb5a24", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0c53d163-1782-45b2-9ba0-5870fadb5a24", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8f008abe-b444-46eb-8715-441d256abb53"",
        ""url"": ""/v2/events/d3f9f034-73ca-42b2-8511-7a79f76cafd6"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""9dfc1a91-edf3-46ab-b9a9-17d33810360a"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1169"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8f008abe-b444-46eb-8715-441d256abb53", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d3f9f034-73ca-42b2-8511-7a79f76cafd6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("9dfc1a91-edf3-46ab-b9a9-17d33810360a", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1169", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceUnbindRouteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d08ee0c2-54cf-4c51-903f-2d8e44b0495a"",
        ""url"": ""/v2/events/4e09686d-3da9-435f-bf9a-166bb19ff71d"",
        ""created_at"": ""2016-07-27T14:02:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.unbind_route"",
        ""actor"": ""uaa-id-278"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""671020ee-d279-4779-9e76-d4918f32e083"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1428"",
        ""timestamp"": ""2016-07-27T14:02:49Z"",
        ""metadata"": {
          ""request"": {
            ""route_guid"": ""d08ee0c2-54cf-4c51-903f-2d8e44b0495a"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""d08ee0c2-54cf-4c51-903f-2d8e44b0495a"",
        ""organization_guid"": ""d08ee0c2-54cf-4c51-903f-2d8e44b0495a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceUnbindRouteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d08ee0c2-54cf-4c51-903f-2d8e44b0495a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4e09686d-3da9-435f-bf9a-166bb19ff71d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.unbind_route", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-278", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("671020ee-d279-4779-9e76-d4918f32e083", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1428", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("d08ee0c2-54cf-4c51-903f-2d8e44b0495a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("d08ee0c2-54cf-4c51-903f-2d8e44b0495a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""89d3e245-b583-46a2-85a9-e0b5c49ce397"",
        ""url"": ""/v2/events/9119a5b9-7450-4c38-a05d-af4ab7d23779"",
        ""created_at"": ""2016-07-27T14:02:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-276"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d7b15e8b-1b7a-46b6-8e2b-79aed924d773"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1400"",
        ""timestamp"": ""2016-07-27T14:02:49Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("89d3e245-b583-46a2-85a9-e0b5c49ce397", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9119a5b9-7450-4c38-a05d-af4ab7d23779", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-276", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d7b15e8b-1b7a-46b6-8e2b-79aed924d773", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1400", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5a5a0ea9-799f-4aab-b0a6-572d232536d0"",
        ""url"": ""/v2/events/fff4850b-f9c8-4b9c-ab0a-ab5aca2f92db"",
        ""created_at"": ""2016-07-27T14:02:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-323"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e933f1dc-c941-4390-8dad-912fdfb61c1c"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-27T14:02:53Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""5a5a0ea9-799f-4aab-b0a6-572d232536d0""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5a5a0ea9-799f-4aab-b0a6-572d232536d0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/fff4850b-f9c8-4b9c-ab0a-ab5aca2f92db", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-323", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e933f1dc-c941-4390-8dad-912fdfb61c1c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("5a5a0ea9-799f-4aab-b0a6-572d232536d0", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0bde25a8-de40-490d-a8b5-fe1d9da8ec39"",
        ""url"": ""/v2/events/d2cccc04-ab5e-4090-826c-4178db19dd38"",
        ""created_at"": ""2016-07-27T14:02:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-315"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d002704f-b1e9-4f44-a35d-3ebfc12d83df"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1956"",
        ""timestamp"": ""2016-07-27T14:02:52Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""0bde25a8-de40-490d-a8b5-fe1d9da8ec39"",
        ""organization_guid"": ""0bde25a8-de40-490d-a8b5-fe1d9da8ec39""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("0bde25a8-de40-490d-a8b5-fe1d9da8ec39", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d2cccc04-ab5e-4090-826c-4178db19dd38", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-315", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d002704f-b1e9-4f44-a35d-3ebfc12d83df", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1956", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("0bde25a8-de40-490d-a8b5-fe1d9da8ec39", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0bde25a8-de40-490d-a8b5-fe1d9da8ec39", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppSshAuthorizedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""68be47ec-0542-409e-b3ba-67fb4d946f32"",
        ""url"": ""/v2/events/d3ebed6f-a494-4363-8664-732274b1059e"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-authorized"",
        ""actor"": ""uaa-id-268"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a69950dc-73dd-4256-bdb7-77522d45fb9b"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1284"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""68be47ec-0542-409e-b3ba-67fb4d946f32"",
        ""organization_guid"": ""68be47ec-0542-409e-b3ba-67fb4d946f32""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppSshAuthorizedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("68be47ec-0542-409e-b3ba-67fb4d946f32", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d3ebed6f-a494-4363-8664-732274b1059e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.ssh-authorized", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-268", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a69950dc-73dd-4256-bdb7-77522d45fb9b", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1284", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("68be47ec-0542-409e-b3ba-67fb4d946f32", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("68be47ec-0542-409e-b3ba-67fb4d946f32", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""10f939f7-b07d-4682-977a-6ff909f908dd"",
        ""url"": ""/v2/events/82b9ed1b-9bef-4519-b1f8-9553db73fbc2"",
        ""created_at"": ""2016-07-27T14:02:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-321"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5cb07b18-4b50-43a3-8c31-dcaf1750fcba"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-2035"",
        ""timestamp"": ""2016-07-27T14:02:53Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-2035"",
            ""space_guid"": ""10f939f7-b07d-4682-977a-6ff909f908dd""
          }
        },
        ""space_guid"": ""10f939f7-b07d-4682-977a-6ff909f908dd"",
        ""organization_guid"": ""10f939f7-b07d-4682-977a-6ff909f908dd""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("10f939f7-b07d-4682-977a-6ff909f908dd", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/82b9ed1b-9bef-4519-b1f8-9553db73fbc2", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-321", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5cb07b18-4b50-43a3-8c31-dcaf1750fcba", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-2035", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("10f939f7-b07d-4682-977a-6ff909f908dd", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("10f939f7-b07d-4682-977a-6ff909f908dd", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d72d5df4-8fd9-4f8c-9309-70f859acd554"",
        ""url"": ""/v2/events/ce456d76-b00a-4e37-8d4a-0abe261cfee5"",
        ""created_at"": ""2016-07-27T14:02:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-307"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""283c4f5d-3744-4c7e-85e1-9f51f79ad7d8"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1843"",
        ""timestamp"": ""2016-07-27T14:02:52Z"",
        ""metadata"": {
          ""request"": {
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""d72d5df4-8fd9-4f8c-9309-70f859acd554"",
        ""organization_guid"": ""d72d5df4-8fd9-4f8c-9309-70f859acd554""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d72d5df4-8fd9-4f8c-9309-70f859acd554", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ce456d76-b00a-4e37-8d4a-0abe261cfee5", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-307", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("283c4f5d-3744-4c7e-85e1-9f51f79ad7d8", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1843", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("d72d5df4-8fd9-4f8c-9309-70f859acd554", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("d72d5df4-8fd9-4f8c-9309-70f859acd554", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4ba08925-5a79-408f-a1d4-aad4c82447ec"",
        ""url"": ""/v2/events/f5fdd314-697d-4a22-89ee-dbc3ed87340a"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""d076549f-9036-476c-9c92-0793f5acfa15"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1342"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""4ba08925-5a79-408f-a1d4-aad4c82447ec"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("4ba08925-5a79-408f-a1d4-aad4c82447ec", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f5fdd314-697d-4a22-89ee-dbc3ed87340a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("d076549f-9036-476c-9c92-0793f5acfa15", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1342", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a01d72db-2659-4d0a-9e38-69f7abda1f55"",
        ""url"": ""/v2/events/3bc9066e-67f4-4ac5-b873-5f8eec6cc124"",
        ""created_at"": ""2016-07-27T14:02:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-313"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""2d2db318-7458-47e1-8625-083d0919d9ea"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1926"",
        ""timestamp"": ""2016-07-27T14:02:52Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""a01d72db-2659-4d0a-9e38-69f7abda1f55"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""a01d72db-2659-4d0a-9e38-69f7abda1f55"",
        ""organization_guid"": ""a01d72db-2659-4d0a-9e38-69f7abda1f55""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a01d72db-2659-4d0a-9e38-69f7abda1f55", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/3bc9066e-67f4-4ac5-b873-5f8eec6cc124", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-313", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("2d2db318-7458-47e1-8625-083d0919d9ea", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1926", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("a01d72db-2659-4d0a-9e38-69f7abda1f55", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a01d72db-2659-4d0a-9e38-69f7abda1f55", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceBindRouteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""212e1ae5-a92d-4021-8dc4-da2edbc434cc"",
        ""url"": ""/v2/events/b96dee12-d8af-4dfc-8e42-7348b5c24459"",
        ""created_at"": ""2016-07-27T14:02:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.bind_route"",
        ""actor"": ""uaa-id-282"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""57c14b85-7276-4e1e-852c-bb56e8e70cf7"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1488"",
        ""timestamp"": ""2016-07-27T14:02:49Z"",
        ""metadata"": {
          ""request"": {
            ""route_guid"": ""212e1ae5-a92d-4021-8dc4-da2edbc434cc"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""212e1ae5-a92d-4021-8dc4-da2edbc434cc"",
        ""organization_guid"": ""212e1ae5-a92d-4021-8dc4-da2edbc434cc""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceBindRouteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("212e1ae5-a92d-4021-8dc4-da2edbc434cc", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b96dee12-d8af-4dfc-8e42-7348b5c24459", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.bind_route", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-282", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("57c14b85-7276-4e1e-852c-bb56e8e70cf7", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1488", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("212e1ae5-a92d-4021-8dc4-da2edbc434cc", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("212e1ae5-a92d-4021-8dc4-da2edbc434cc", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppStopEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0d9111cd-d3c3-4c50-ace4-62ad967c2e8f"",
        ""url"": ""/v2/events/8bdd6fb1-d8c1-424b-8276-2dba9ad90bbb"",
        ""created_at"": ""2016-07-27T14:02:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-252"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b97adbfa-45bd-424b-ae77-52b629dde379"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-1054"",
        ""timestamp"": ""2016-07-27T14:02:47Z"",
        ""metadata"": {

        },
        ""space_guid"": ""0d9111cd-d3c3-4c50-ace4-62ad967c2e8f"",
        ""organization_guid"": ""0d9111cd-d3c3-4c50-ace4-62ad967c2e8f""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppStopEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("0d9111cd-d3c3-4c50-ace4-62ad967c2e8f", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8bdd6fb1-d8c1-424b-8276-2dba9ad90bbb", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-252", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b97adbfa-45bd-424b-ae77-52b629dde379", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("v3-app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1054", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("0d9111cd-d3c3-4c50-ace4-62ad967c2e8f", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("0d9111cd-d3c3-4c50-ace4-62ad967c2e8f", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void RetrieveEventTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""1d3212ac-b02e-404e-8c1c-6571e3c6c105"",
    ""url"": ""/v2/events/ae90af39-7138-4079-8267-e121357ad9f4"",
    ""created_at"": ""2016-07-27T14:02:53Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-2128"",
    ""actor"": ""066d7550-0bfa-48f4-8b88-75cb3950fe11"",
    ""actor_type"": ""name-2129"",
    ""actor_name"": ""name-2130"",
    ""actee"": ""47bf81e8-4298-4063-b9fd-29d14106ad73"",
    ""actee_type"": ""name-2131"",
    ""actee_name"": ""name-2132"",
    ""timestamp"": ""2016-07-27T14:02:53Z"",
    ""metadata"": {

    },
    ""space_guid"": ""1d3212ac-b02e-404e-8c1c-6571e3c6c105"",
    ""organization_guid"": ""1d3212ac-b02e-404e-8c1c-6571e3c6c105""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Events.RetrieveEvent(guid).Result;


                Assert.AreEqual("1d3212ac-b02e-404e-8c1c-6571e3c6c105", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ae90af39-7138-4079-8267-e121357ad9f4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2128", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("066d7550-0bfa-48f4-8b88-75cb3950fe11", TestUtil.ToTestableString(obj.Actor), true);
                Assert.AreEqual("name-2129", TestUtil.ToTestableString(obj.ActorType), true);
                Assert.AreEqual("name-2130", TestUtil.ToTestableString(obj.ActorName), true);
                Assert.AreEqual("47bf81e8-4298-4063-b9fd-29d14106ad73", TestUtil.ToTestableString(obj.Actee), true);
                Assert.AreEqual("name-2131", TestUtil.ToTestableString(obj.ActeeType), true);
                Assert.AreEqual("name-2132", TestUtil.ToTestableString(obj.ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj.Timestamp), true);
                Assert.AreEqual("1d3212ac-b02e-404e-8c1c-6571e3c6c105", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("1d3212ac-b02e-404e-8c1c-6571e3c6c105", TestUtil.ToTestableString(obj.OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""37b7b970-8bde-40fd-ae09-a0ba88175c66"",
        ""url"": ""/v2/events/2c2f5944-7b14-4b78-87fd-196c64e6cba0"",
        ""created_at"": ""2016-07-27T14:02:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.update"",
        ""actor"": ""uaa-id-297"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e0cb6a02-147c-40d1-a3bf-b41e1c84b2fc"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-26"",
        ""timestamp"": ""2016-07-27T14:02:51Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""37b7b970-8bde-40fd-ae09-a0ba88175c66"",
            ""space_guid"": ""37b7b970-8bde-40fd-ae09-a0ba88175c66""
          }
        },
        ""space_guid"": ""37b7b970-8bde-40fd-ae09-a0ba88175c66"",
        ""organization_guid"": ""37b7b970-8bde-40fd-ae09-a0ba88175c66""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("37b7b970-8bde-40fd-ae09-a0ba88175c66", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2c2f5944-7b14-4b78-87fd-196c64e6cba0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-297", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e0cb6a02-147c-40d1-a3bf-b41e1c84b2fc", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-26", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("37b7b970-8bde-40fd-ae09-a0ba88175c66", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("37b7b970-8bde-40fd-ae09-a0ba88175c66", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4c1bb541-e790-4b80-9074-104e68f783a4"",
        ""url"": ""/v2/events/43331b7e-2bd7-4675-ba1e-859e2342d155"",
        ""created_at"": ""2016-07-27T14:02:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""6812fdd4-ef96-421e-ae89-1989b5cd0ba3"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1983"",
        ""actee"": ""7e8003d6-f93b-42e8-851f-490105455a33"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2016-07-27T14:02:52Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("4c1bb541-e790-4b80-9074-104e68f783a4", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/43331b7e-2bd7-4675-ba1e-859e2342d155", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("6812fdd4-ef96-421e-ae89-1989b5cd0ba3", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1983", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("7e8003d6-f93b-42e8-851f-490105455a33", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b8a4bfd6-56e5-4f70-9080-6de85e9cd0c7"",
        ""url"": ""/v2/events/1dc49eb1-15a3-4de3-afd2-4913cc3572d7"",
        ""created_at"": ""2016-07-27T14:02:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""95062346-41bb-4073-a43e-a244c30a4ad4"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1110"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-07-27T14:02:47Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b8a4bfd6-56e5-4f70-9080-6de85e9cd0c7", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/1dc49eb1-15a3-4de3-afd2-4913cc3572d7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("95062346-41bb-4073-a43e-a244c30a4ad4", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1110", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bde8227e-b1f0-4bf2-a5d9-88b03f0d965e"",
        ""url"": ""/v2/events/8b776483-eb77-4fb9-b69d-ab6a7360b2be"",
        ""created_at"": ""2016-07-27T14:02:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-289"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c57c92e5-7c83-40d0-8927-4b625226566d"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1600"",
        ""timestamp"": ""2016-07-27T14:02:50Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""bde8227e-b1f0-4bf2-a5d9-88b03f0d965e"",
        ""organization_guid"": ""bde8227e-b1f0-4bf2-a5d9-88b03f0d965e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("bde8227e-b1f0-4bf2-a5d9-88b03f0d965e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8b776483-eb77-4fb9-b69d-ab6a7360b2be", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-289", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c57c92e5-7c83-40d0-8927-4b625226566d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1600", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("bde8227e-b1f0-4bf2-a5d9-88b03f0d965e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("bde8227e-b1f0-4bf2-a5d9-88b03f0d965e", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3aeeaf2c-9e49-4bd5-97f3-46d8af987b6e"",
        ""url"": ""/v2/events/53c74ef6-c88c-44f2-9ecf-a5b529976051"",
        ""created_at"": ""2016-07-27T14:02:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-248"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""acddbebf-f990-4d48-a1a9-f3e87d446a12"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-27T14:02:47Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""3aeeaf2c-9e49-4bd5-97f3-46d8af987b6e"",
            ""organization_guid"": ""3aeeaf2c-9e49-4bd5-97f3-46d8af987b6e""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""3aeeaf2c-9e49-4bd5-97f3-46d8af987b6e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("3aeeaf2c-9e49-4bd5-97f3-46d8af987b6e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/53c74ef6-c88c-44f2-9ecf-a5b529976051", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-248", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("acddbebf-f990-4d48-a1a9-f3e87d446a12", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("3aeeaf2c-9e49-4bd5-97f3-46d8af987b6e", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""13a7f506-366f-4976-a648-f74b91ef2919"",
        ""url"": ""/v2/events/90c246cf-bb7e-4f8c-8775-adbe47df8c2c"",
        ""created_at"": ""2016-07-27T14:02:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-285"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""3f426d25-ba6a-4fcb-b2b6-e6c7a8ad3a2d"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1545"",
        ""timestamp"": ""2016-07-27T14:02:50Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("13a7f506-366f-4976-a648-f74b91ef2919", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/90c246cf-bb7e-4f8c-8775-adbe47df8c2c", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-285", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("3f426d25-ba6a-4fcb-b2b6-e6c7a8ad3a2d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1545", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c6a881d1-dc64-4ab4-8418-151a1b632774"",
        ""url"": ""/v2/events/91386881-29e1-4d8a-a599-ba4b9ff63c24"",
        ""created_at"": ""2016-07-27T14:02:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-274"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""bb135c56-7362-4d23-8226-0c87e0e96ea8"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-27T14:02:49Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""c6a881d1-dc64-4ab4-8418-151a1b632774"",
            ""app_guid"": ""c6a881d1-dc64-4ab4-8418-151a1b632774""
          }
        },
        ""space_guid"": ""c6a881d1-dc64-4ab4-8418-151a1b632774"",
        ""organization_guid"": ""c6a881d1-dc64-4ab4-8418-151a1b632774""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c6a881d1-dc64-4ab4-8418-151a1b632774", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/91386881-29e1-4d8a-a599-ba4b9ff63c24", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-274", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("bb135c56-7362-4d23-8226-0c87e0e96ea8", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("c6a881d1-dc64-4ab4-8418-151a1b632774", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("c6a881d1-dc64-4ab4-8418-151a1b632774", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d3dba076-6485-403b-9d36-1ac837055626"",
        ""url"": ""/v2/events/944aa9c1-688f-4c8a-980d-3b0ed8cfd872"",
        ""created_at"": ""2016-07-27T14:02:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""180880c4-050d-4d34-9017-34e8411a1506"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1028"",
        ""actee"": ""1e09219e-ed75-451f-b11e-ac299fe31f0d"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1029"",
        ""timestamp"": ""2016-07-27T14:02:47Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d3dba076-6485-403b-9d36-1ac837055626", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/944aa9c1-688f-4c8a-980d-3b0ed8cfd872", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("180880c4-050d-4d34-9017-34e8411a1506", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1028", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("1e09219e-ed75-451f-b11e-ac299fe31f0d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1029", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppExitedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7fe8fac2-34b4-4b00-9cf5-e6591e9fb0eb"",
        ""url"": ""/v2/events/548585af-beda-4f74-b187-88311f98dce0"",
        ""created_at"": ""2016-07-27T14:02:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""78683a23-7d14-476c-94da-95a34bd16496"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1515"",
        ""actee"": ""78683a23-7d14-476c-94da-95a34bd16496"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1515"",
        ""timestamp"": ""2016-07-27T14:02:50Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""7fe8fac2-34b4-4b00-9cf5-e6591e9fb0eb"",
        ""organization_guid"": ""7fe8fac2-34b4-4b00-9cf5-e6591e9fb0eb""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppExitedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7fe8fac2-34b4-4b00-9cf5-e6591e9fb0eb", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/548585af-beda-4f74-b187-88311f98dce0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("app.crash", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("78683a23-7d14-476c-94da-95a34bd16496", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1515", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("78683a23-7d14-476c-94da-95a34bd16496", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1515", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("7fe8fac2-34b4-4b00-9cf5-e6591e9fb0eb", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("7fe8fac2-34b4-4b00-9cf5-e6591e9fb0eb", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceKeyDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""23b2aaf7-a58c-4aca-8747-8a73fdc2dbe2"",
        ""url"": ""/v2/events/4382c42b-77c3-4830-8ed6-8b18e60ab359"",
        ""created_at"": ""2016-07-27T14:02:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.delete"",
        ""actor"": ""uaa-id-325"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7cc91ad4-7f48-40fa-8f8d-1275d0ef5dfa"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-2097"",
        ""timestamp"": ""2016-07-27T14:02:53Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""23b2aaf7-a58c-4aca-8747-8a73fdc2dbe2"",
        ""organization_guid"": ""23b2aaf7-a58c-4aca-8747-8a73fdc2dbe2""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceKeyDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("23b2aaf7-a58c-4aca-8747-8a73fdc2dbe2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4382c42b-77c3-4830-8ed6-8b18e60ab359", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_key.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-325", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("7cc91ad4-7f48-40fa-8f8d-1275d0ef5dfa", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_key", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-2097", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("23b2aaf7-a58c-4aca-8747-8a73fdc2dbe2", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("23b2aaf7-a58c-4aca-8747-8a73fdc2dbe2", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6765ff22-86e8-454c-84c4-a7810acb1641"",
        ""url"": ""/v2/events/ae08da9d-e100-4984-94bc-e28fab56383e"",
        ""created_at"": ""2016-07-27T14:02:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-309"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1b0a9bf5-0b44-40aa-9a99-c4b076a8737d"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1873"",
        ""timestamp"": ""2016-07-27T14:02:52Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""6765ff22-86e8-454c-84c4-a7810acb1641"",
        ""organization_guid"": ""6765ff22-86e8-454c-84c4-a7810acb1641""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6765ff22-86e8-454c-84c4-a7810acb1641", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ae08da9d-e100-4984-94bc-e28fab56383e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-309", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("1b0a9bf5-0b44-40aa-9a99-c4b076a8737d", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1873", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("6765ff22-86e8-454c-84c4-a7810acb1641", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("6765ff22-86e8-454c-84c4-a7810acb1641", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4c1542ee-fc10-457c-8820-07cc5f8a9095"",
        ""url"": ""/v2/events/9ebacbea-197f-4af5-98cd-d5bc2491ab40"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-270"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""46165096-0f3b-42ac-b023-9a1dd6701bba"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1314"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""4c1542ee-fc10-457c-8820-07cc5f8a9095"",
        ""organization_guid"": ""4c1542ee-fc10-457c-8820-07cc5f8a9095""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("4c1542ee-fc10-457c-8820-07cc5f8a9095", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9ebacbea-197f-4af5-98cd-d5bc2491ab40", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-270", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("46165096-0f3b-42ac-b023-9a1dd6701bba", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1314", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("4c1542ee-fc10-457c-8820-07cc5f8a9095", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("4c1542ee-fc10-457c-8820-07cc5f8a9095", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppStartEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f07c5370-efb5-406e-ab7b-433696ea030d"",
        ""url"": ""/v2/events/e1030356-6c86-422f-a7a1-220820a651b5"",
        ""created_at"": ""2016-07-27T14:02:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-293"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b9b56daa-5155-4fed-927d-dcd2f248d55f"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-1655"",
        ""timestamp"": ""2016-07-27T14:02:50Z"",
        ""metadata"": {

        },
        ""space_guid"": ""f07c5370-efb5-406e-ab7b-433696ea030d"",
        ""organization_guid"": ""f07c5370-efb5-406e-ab7b-433696ea030d""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppStartEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f07c5370-efb5-406e-ab7b-433696ea030d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e1030356-6c86-422f-a7a1-220820a651b5", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-293", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b9b56daa-5155-4fed-927d-dcd2f248d55f", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("v3-app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1655", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("f07c5370-efb5-406e-ab7b-433696ea030d", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f07c5370-efb5-406e-ab7b-433696ea030d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceKeyCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""30b5b5bb-7599-48fb-9582-0bbc0dd66dec"",
        ""url"": ""/v2/events/c5484b66-4555-40de-8336-7349b603cb00"",
        ""created_at"": ""2016-07-27T14:02:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.create"",
        ""actor"": ""uaa-id-295"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4f82b17b-452f-4a5a-b3c8-1917ca49349a"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1689"",
        ""timestamp"": ""2016-07-27T14:02:51Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""30b5b5bb-7599-48fb-9582-0bbc0dd66dec"",
            ""name"": ""name-1689""
          }
        },
        ""space_guid"": ""30b5b5bb-7599-48fb-9582-0bbc0dd66dec"",
        ""organization_guid"": ""30b5b5bb-7599-48fb-9582-0bbc0dd66dec""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceKeyCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("30b5b5bb-7599-48fb-9582-0bbc0dd66dec", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c5484b66-4555-40de-8336-7349b603cb00", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_key.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-295", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("4f82b17b-452f-4a5a-b3c8-1917ca49349a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_key", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1689", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("30b5b5bb-7599-48fb-9582-0bbc0dd66dec", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("30b5b5bb-7599-48fb-9582-0bbc0dd66dec", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAllEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303"",
        ""url"": ""/v2/events/baa1075f-83e7-48dc-b726-2764015069eb"",
        ""created_at"": ""2016-07-27T14:02:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-2152"",
        ""actor"": ""ffa67750-ff81-448f-9aae-d24403950f71"",
        ""actor_type"": ""name-2153"",
        ""actor_name"": ""name-2154"",
        ""actee"": ""15786af3-8a1f-4896-81ec-f5825eb63c35"",
        ""actee_type"": ""name-2155"",
        ""actee_name"": ""name-2156"",
        ""timestamp"": ""2016-07-27T14:02:53Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303"",
        ""organization_guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303"",
        ""url"": ""/v2/events/4024859d-1055-4b5f-a1c4-001ea6b1bb78"",
        ""created_at"": ""2016-07-27T14:02:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-2160"",
        ""actor"": ""31fede30-4405-4ecf-9303-ef86e6bede49"",
        ""actor_type"": ""name-2161"",
        ""actor_name"": ""name-2162"",
        ""actee"": ""f7abfdde-c844-4826-808c-2e70a882b6ef"",
        ""actee_type"": ""name-2163"",
        ""actee_name"": ""name-2164"",
        ""timestamp"": ""2016-07-27T14:02:53Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303"",
        ""organization_guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303"",
        ""url"": ""/v2/events/60cd4cf1-e0a2-4a13-88dd-28b5a3ce1a4a"",
        ""created_at"": ""2016-07-27T14:02:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-2168"",
        ""actor"": ""67629ac7-f3cc-4f4f-9a5d-0f3169bdc882"",
        ""actor_type"": ""name-2169"",
        ""actor_name"": ""name-2170"",
        ""actee"": ""fffe8c5f-44eb-4573-8ed8-9ee8be57c115"",
        ""actee_type"": ""name-2171"",
        ""actee_name"": ""name-2172"",
        ""timestamp"": ""2016-07-27T14:02:53Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303"",
        ""organization_guid"": ""1505cc58-9131-4dc4-947f-aafaa9ec5303""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAllEvents().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/baa1075f-83e7-48dc-b726-2764015069eb", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2152", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("ffa67750-ff81-448f-9aae-d24403950f71", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("name-2153", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-2154", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("15786af3-8a1f-4896-81ec-f5825eb63c35", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("name-2155", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-2156", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4024859d-1055-4b5f-a1c4-001ea6b1bb78", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2160", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("31fede30-4405-4ecf-9303-ef86e6bede49", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("name-2161", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("name-2162", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("f7abfdde-c844-4826-808c-2e70a882b6ef", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("name-2163", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-2164", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/60cd4cf1-e0a2-4a13-88dd-28b5a3ce1a4a", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2168", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("67629ac7-f3cc-4f4f-9a5d-0f3169bdc882", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("name-2169", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("name-2170", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("fffe8c5f-44eb-4573-8ed8-9ee8be57c115", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("name-2171", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-2172", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:53Z", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("1505cc58-9131-4dc4-947f-aafaa9ec5303", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""51cdfb52-af72-4522-97a2-6bd7b3a349d6"",
        ""url"": ""/v2/events/3a64ce4a-3d70-455b-ac64-1ed8aac406cd"",
        ""created_at"": ""2016-07-27T14:02:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.create"",
        ""actor"": ""uaa-id-254"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""660ffe88-0fff-4601-8310-089abb09225c"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-23"",
        ""timestamp"": ""2016-07-27T14:02:47Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""51cdfb52-af72-4522-97a2-6bd7b3a349d6"",
            ""space_guid"": ""51cdfb52-af72-4522-97a2-6bd7b3a349d6""
          }
        },
        ""space_guid"": ""51cdfb52-af72-4522-97a2-6bd7b3a349d6"",
        ""organization_guid"": ""51cdfb52-af72-4522-97a2-6bd7b3a349d6""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("51cdfb52-af72-4522-97a2-6bd7b3a349d6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/3a64ce4a-3d70-455b-ac64-1ed8aac406cd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-254", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("660ffe88-0fff-4601-8310-089abb09225c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-23", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("51cdfb52-af72-4522-97a2-6bd7b3a349d6", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("51cdfb52-af72-4522-97a2-6bd7b3a349d6", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dfed8ea6-aa69-4eff-8a7a-679ec1b6beeb"",
        ""url"": ""/v2/events/038a36ab-b42a-4934-afdb-62742a1b14a7"",
        ""created_at"": ""2016-07-27T14:02:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-291"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5b0f772e-624d-41e7-8cec-9d2ded824b39"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-27T14:02:50Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""dfed8ea6-aa69-4eff-8a7a-679ec1b6beeb"",
            ""organization_guid"": ""dfed8ea6-aa69-4eff-8a7a-679ec1b6beeb""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""dfed8ea6-aa69-4eff-8a7a-679ec1b6beeb""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("dfed8ea6-aa69-4eff-8a7a-679ec1b6beeb", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/038a36ab-b42a-4934-afdb-62742a1b14a7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-291", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5b0f772e-624d-41e7-8cec-9d2ded824b39", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("dfed8ea6-aa69-4eff-8a7a-679ec1b6beeb", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListEventsAssociatedWithAppSinceJanuary12014Test()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9"",
        ""url"": ""/v2/events/211f2ac8-1c02-4538-a5b9-a9d12a2d0933"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-262"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a1934f1b-8e7f-4d48-a2c3-761201b42c3f"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1194"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9"",
        ""organization_guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9"",
        ""url"": ""/v2/events/f0b61b57-a6cf-4121-bd34-8fba9ac11ee5"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-262"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a1934f1b-8e7f-4d48-a2c3-761201b42c3f"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1194"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9"",
        ""organization_guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9"",
        ""url"": ""/v2/events/ee195f1f-af9c-4860-b880-9a0d63fab4ce"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-262"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a1934f1b-8e7f-4d48-a2c3-761201b42c3f"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1194"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9"",
        ""organization_guid"": ""c0ddf9b0-7f43-40a4-926c-e748716585e9""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListEventsAssociatedWithAppSinceJanuary12014().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/211f2ac8-1c02-4538-a5b9-a9d12a2d0933", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-262", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a1934f1b-8e7f-4d48-a2c3-761201b42c3f", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1194", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f0b61b57-a6cf-4121-bd34-8fba9ac11ee5", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("uaa-id-262", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("a1934f1b-8e7f-4d48-a2c3-761201b42c3f", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-1194", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ee195f1f-af9c-4860-b880-9a0d63fab4ce", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("uaa-id-262", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("a1934f1b-8e7f-4d48-a2c3-761201b42c3f", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-1194", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("c0ddf9b0-7f43-40a4-926c-e748716585e9", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7f2d88fe-9cad-4062-84ef-be66143e32bc"",
        ""url"": ""/v2/events/aee4179d-2e29-4734-b50f-899a28cff629"",
        ""created_at"": ""2016-07-27T14:02:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-287"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""30e4a8e3-a5e1-4dc8-9777-d21db32a89d9"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1570"",
        ""timestamp"": ""2016-07-27T14:02:50Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1570"",
            ""service_plan_guid"": ""7f2d88fe-9cad-4062-84ef-be66143e32bc"",
            ""space_guid"": ""7f2d88fe-9cad-4062-84ef-be66143e32bc"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""7f2d88fe-9cad-4062-84ef-be66143e32bc"",
        ""organization_guid"": ""7f2d88fe-9cad-4062-84ef-be66143e32bc""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7f2d88fe-9cad-4062-84ef-be66143e32bc", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/aee4179d-2e29-4734-b50f-899a28cff629", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-287", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("30e4a8e3-a5e1-4dc8-9777-d21db32a89d9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1570", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:50Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("7f2d88fe-9cad-4062-84ef-be66143e32bc", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("7f2d88fe-9cad-4062-84ef-be66143e32bc", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ebf4cee3-1869-488a-b89a-33bb4bf702ca"",
        ""url"": ""/v2/events/939e0468-fb96-484d-b92d-27b3b53153f5"",
        ""created_at"": ""2016-07-27T14:02:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""568e8364-4e88-46ed-a2b3-7113cf846af2"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1901"",
        ""actee"": ""8741dc6d-c925-4892-bf47-87d791d640c2"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-55"",
        ""timestamp"": ""2016-07-27T14:02:52Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ebf4cee3-1869-488a-b89a-33bb4bf702ca", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/939e0468-fb96-484d-b92d-27b3b53153f5", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("568e8364-4e88-46ed-a2b3-7113cf846af2", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1901", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("8741dc6d-c925-4892-bf47-87d791d640c2", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label-55", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""088da68c-2c8b-49c5-8de4-7a826cea25ef"",
        ""url"": ""/v2/events/fa4e3757-60ad-48e6-a044-c9dada400315"",
        ""created_at"": ""2016-07-27T14:02:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""1361b106-75d5-4ba3-ba48-2f60fbd271d1"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1818"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2016-07-27T14:02:51Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""088da68c-2c8b-49c5-8de4-7a826cea25ef"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("088da68c-2c8b-49c5-8de4-7a826cea25ef", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/fa4e3757-60ad-48e6-a044-c9dada400315", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("1361b106-75d5-4ba3-ba48-2f60fbd271d1", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1818", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("plan-name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6ae858ae-b525-47f1-bfe1-74edd1a5b9a8"",
        ""url"": ""/v2/events/9b9e5155-f096-47b6-a9bd-3c38372d1799"",
        ""created_at"": ""2016-07-27T14:02:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-301"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""f25d86b2-97c0-4441-91ec-54e40d364ad1"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2016-07-27T14:02:51Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6ae858ae-b525-47f1-bfe1-74edd1a5b9a8", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9b9e5155-f096-47b6-a9bd-3c38372d1799", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-301", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("f25d86b2-97c0-4441-91ec-54e40d364ad1", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("pancake broker", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f1dbd13d-a852-459d-be51-196d8625a5aa"",
        ""url"": ""/v2/events/924c3c3d-0a79-4a6b-b608-5857ba73d08f"",
        ""created_at"": ""2016-07-27T14:02:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""24d38e5c-b71a-4361-9d3a-fa2df1b7adb6"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1792"",
        ""actee"": ""6d92bf80-fa35-4146-b85c-90f72c299c08"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2016-07-27T14:02:51Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f1dbd13d-a852-459d-be51-196d8625a5aa", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/924c3c3d-0a79-4a6b-b608-5857ba73d08f", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("24d38e5c-b71a-4361-9d3a-fa2df1b7adb6", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1792", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("6d92bf80-fa35-4146-b85c-90f72c299c08", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e7e1cef4-8afb-44e9-96c7-e06cb7dbd951"",
        ""url"": ""/v2/events/93ad10a8-b1f2-4b9b-89d0-095636f38c6b"",
        ""created_at"": ""2016-07-27T14:02:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.delete-request"",
        ""actor"": ""uaa-id-319"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""65e14d76-7ff6-47e4-a476-a722a0046336"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-27"",
        ""timestamp"": ""2016-07-27T14:02:52Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""e7e1cef4-8afb-44e9-96c7-e06cb7dbd951"",
        ""organization_guid"": ""e7e1cef4-8afb-44e9-96c7-e06cb7dbd951""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e7e1cef4-8afb-44e9-96c7-e06cb7dbd951", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/93ad10a8-b1f2-4b9b-89d0-095636f38c6b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-319", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("65e14d76-7ff6-47e4-a476-a722a0046336", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-27", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:52Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e7e1cef4-8afb-44e9-96c7-e06cb7dbd951", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e7e1cef4-8afb-44e9-96c7-e06cb7dbd951", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8ae1ff14-8072-470e-9238-7b094a7bfc02"",
        ""url"": ""/v2/events/c5deb9f4-6c87-4760-94ed-4abde5dae8fb"",
        ""created_at"": ""2016-07-27T14:02:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-258"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""57aaeeb6-f888-4bb6-9b6d-24071f228caa"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-07-27T14:02:47Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""8ae1ff14-8072-470e-9238-7b094a7bfc02"",
        ""organization_guid"": ""8ae1ff14-8072-470e-9238-7b094a7bfc02""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8ae1ff14-8072-470e-9238-7b094a7bfc02", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c5deb9f4-6c87-4760-94ed-4abde5dae8fb", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-258", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("57aaeeb6-f888-4bb6-9b6d-24071f228caa", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:47Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("8ae1ff14-8072-470e-9238-7b094a7bfc02", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("8ae1ff14-8072-470e-9238-7b094a7bfc02", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2c9ba759-8439-417b-a737-5e65418ef859"",
        ""url"": ""/v2/events/a5a679f2-1895-4738-8f3b-03f48bd25e7c"",
        ""created_at"": ""2016-07-27T14:02:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-280"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""65a79d03-7bf8-48d2-9611-4e6c3f7cc197"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1455"",
        ""timestamp"": ""2016-07-27T14:02:49Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""2c9ba759-8439-417b-a737-5e65418ef859"",
        ""organization_guid"": ""2c9ba759-8439-417b-a737-5e65418ef859""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2c9ba759-8439-417b-a737-5e65418ef859", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a5a679f2-1895-4738-8f3b-03f48bd25e7c", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-280", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("65a79d03-7bf8-48d2-9611-4e6c3f7cc197", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1455", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:49Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("2c9ba759-8439-417b-a737-5e65418ef859", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("2c9ba759-8439-417b-a737-5e65418ef859", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppSshUnauthorizedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""19a86bc8-f26d-429c-a35d-f5787bb42a00"",
        ""url"": ""/v2/events/12d2cf87-0a71-4d7d-97de-72c18b4b1236"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-unauthorized"",
        ""actor"": ""uaa-id-266"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""42ebf760-5213-4480-8376-1fb4cf1149b5"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1254"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""19a86bc8-f26d-429c-a35d-f5787bb42a00"",
        ""organization_guid"": ""19a86bc8-f26d-429c-a35d-f5787bb42a00""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppSshUnauthorizedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("19a86bc8-f26d-429c-a35d-f5787bb42a00", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/12d2cf87-0a71-4d7d-97de-72c18b4b1236", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.ssh-unauthorized", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-266", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("42ebf760-5213-4480-8376-1fb4cf1149b5", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1254", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("19a86bc8-f26d-429c-a35d-f5787bb42a00", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("19a86bc8-f26d-429c-a35d-f5787bb42a00", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bf9872e1-560c-4e6f-9c8b-68f98d08d3ff"",
        ""url"": ""/v2/events/b8a71280-2b59-40f8-afe7-4b93387ab3c7"",
        ""created_at"": ""2016-07-27T14:02:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-299"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b103cf81-61cb-44a0-8fc0-f01483d5ca52"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1741"",
        ""timestamp"": ""2016-07-27T14:02:51Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""bf9872e1-560c-4e6f-9c8b-68f98d08d3ff"",
        ""organization_guid"": ""bf9872e1-560c-4e6f-9c8b-68f98d08d3ff""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("bf9872e1-560c-4e6f-9c8b-68f98d08d3ff", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b8a71280-2b59-40f8-afe7-4b93387ab3c7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-299", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b103cf81-61cb-44a0-8fc0-f01483d5ca52", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1741", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:51Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("bf9872e1-560c-4e6f-9c8b-68f98d08d3ff", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("bf9872e1-560c-4e6f-9c8b-68f98d08d3ff", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7cde142f-ca0a-4107-b85a-edffb74207f5"",
        ""url"": ""/v2/events/905aea13-0d68-46c2-8118-60559951a74e"",
        ""created_at"": ""2016-07-27T14:02:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-264"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0da9a515-871e-49aa-88ec-31fe7572ca63"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1224"",
        ""timestamp"": ""2016-07-27T14:02:48Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""7cde142f-ca0a-4107-b85a-edffb74207f5"",
        ""organization_guid"": ""7cde142f-ca0a-4107-b85a-edffb74207f5""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7cde142f-ca0a-4107-b85a-edffb74207f5", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/905aea13-0d68-46c2-8118-60559951a74e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-264", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0da9a515-871e-49aa-88ec-31fe7572ca63", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1224", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-07-27T14:02:48Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("7cde142f-ca0a-4107-b85a-edffb74207f5", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("7cde142f-ca0a-4107-b85a-edffb74207f5", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

    }
}