//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class RoutesEndpoint
{
        [TestMethod]
        public void CreateRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""50443a86-3ae1-4240-9b1e-a984fdb85d9f"",
    ""url"": ""/v2/routes/50443a86-3ae1-4240-9b1e-a984fdb85d9f"",
    ""created_at"": ""2015-03-25T13:48:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": """",
    ""domain_guid"": ""d9661ef6-675e-4e26-a430-e125f1bd4725"",
    ""space_guid"": ""b6581c63-19ef-43ca-8679-8dbacdc05f74"",
    ""domain_url"": ""/v2/domains/d9661ef6-675e-4e26-a430-e125f1bd4725"",
    ""space_url"": ""/v2/spaces/b6581c63-19ef-43ca-8679-8dbacdc05f74"",
    ""apps_url"": ""/v2/routes/50443a86-3ae1-4240-9b1e-a984fdb85d9f/apps""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateRouteRequest value = new CreateRouteRequest();


                var obj = cfClient.Routes.CreateRoute(value).Result;


                Assert.AreEqual("50443a86-3ae1-4240-9b1e-a984fdb85d9f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/50443a86-3ae1-4240-9b1e-a984fdb85d9f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Host), true);
                Assert.AreEqual("d9661ef6-675e-4e26-a430-e125f1bd4725", TestUtil.ToTestableString(obj.DomainGuid), true);
                Assert.AreEqual("b6581c63-19ef-43ca-8679-8dbacdc05f74", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("/v2/domains/d9661ef6-675e-4e26-a430-e125f1bd4725", TestUtil.ToTestableString(obj.DomainUrl), true);
                Assert.AreEqual("/v2/spaces/b6581c63-19ef-43ca-8679-8dbacdc05f74", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/routes/50443a86-3ae1-4240-9b1e-a984fdb85d9f/apps", TestUtil.ToTestableString(obj.AppsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllRoutesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""af8f861a-43c4-484d-8ef7-e97e2f18726f"",
        ""url"": ""/v2/routes/af8f861a-43c4-484d-8ef7-e97e2f18726f"",
        ""created_at"": ""2015-03-25T13:48:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-17"",
        ""domain_guid"": ""471692af-53f2-425d-bf2e-40a7629d6e8a"",
        ""space_guid"": ""6db243a5-db04-4c6f-8de0-12f7f9c7822f"",
        ""domain_url"": ""/v2/domains/471692af-53f2-425d-bf2e-40a7629d6e8a"",
        ""space_url"": ""/v2/spaces/6db243a5-db04-4c6f-8de0-12f7f9c7822f"",
        ""apps_url"": ""/v2/routes/af8f861a-43c4-484d-8ef7-e97e2f18726f/apps""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Routes.ListAllRoutes().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("af8f861a-43c4-484d-8ef7-e97e2f18726f", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/af8f861a-43c4-484d-8ef7-e97e2f18726f", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("host-17", TestUtil.ToTestableString(obj[0].Host), true);
                Assert.AreEqual("471692af-53f2-425d-bf2e-40a7629d6e8a", TestUtil.ToTestableString(obj[0].DomainGuid), true);
                Assert.AreEqual("6db243a5-db04-4c6f-8de0-12f7f9c7822f", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("/v2/domains/471692af-53f2-425d-bf2e-40a7629d6e8a", TestUtil.ToTestableString(obj[0].DomainUrl), true);
                Assert.AreEqual("/v2/spaces/6db243a5-db04-4c6f-8de0-12f7f9c7822f", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/routes/af8f861a-43c4-484d-8ef7-e97e2f18726f/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);

            }
        }

        [TestMethod]
        public void AssociateAppWithRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""5baf3cb0-4b12-42fd-9339-c91d088b64b3"",
    ""url"": ""/v2/routes/5baf3cb0-4b12-42fd-9339-c91d088b64b3"",
    ""created_at"": ""2015-03-25T13:48:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-9"",
    ""domain_guid"": ""3f97bfd9-908e-43e9-a7fd-18f1d1ef5db4"",
    ""space_guid"": ""8aac30c4-0065-4ff0-8ffe-920f18b1a8f6"",
    ""domain_url"": ""/v2/domains/3f97bfd9-908e-43e9-a7fd-18f1d1ef5db4"",
    ""space_url"": ""/v2/spaces/8aac30c4-0065-4ff0-8ffe-920f18b1a8f6"",
    ""apps_url"": ""/v2/routes/5baf3cb0-4b12-42fd-9339-c91d088b64b3/apps""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? app_guid = Guid.NewGuid();


                var obj = cfClient.Routes.AssociateAppWithRoute(guid, app_guid).Result;


                Assert.AreEqual("5baf3cb0-4b12-42fd-9339-c91d088b64b3", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/5baf3cb0-4b12-42fd-9339-c91d088b64b3", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("host-9", TestUtil.ToTestableString(obj.Host), true);
                Assert.AreEqual("3f97bfd9-908e-43e9-a7fd-18f1d1ef5db4", TestUtil.ToTestableString(obj.DomainGuid), true);
                Assert.AreEqual("8aac30c4-0065-4ff0-8ffe-920f18b1a8f6", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("/v2/domains/3f97bfd9-908e-43e9-a7fd-18f1d1ef5db4", TestUtil.ToTestableString(obj.DomainUrl), true);
                Assert.AreEqual("/v2/spaces/8aac30c4-0065-4ff0-8ffe-920f18b1a8f6", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/routes/5baf3cb0-4b12-42fd-9339-c91d088b64b3/apps", TestUtil.ToTestableString(obj.AppsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllAppsForRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""29244f10-af10-4da1-9d4a-5308731063d3"",
        ""url"": ""/v2/apps/29244f10-af10-4da1-9d4a-5308731063d3"",
        ""created_at"": ""2015-03-25T13:48:53+00:00"",
        ""updated_at"": ""2015-03-25T13:48:53+00:00""
      },
      ""entity"": {
        ""name"": ""name-1572"",
        ""production"": false,
        ""space_guid"": ""798bfc0c-3625-432a-ab3f-db87197de806"",
        ""stack_guid"": ""f69fdfb4-f02d-4a23-845b-c91e2355ddfc"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""2592e315-c6d7-4d70-bc5f-1a50ae76fae7"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-03-25T13:48:53+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/798bfc0c-3625-432a-ab3f-db87197de806"",
        ""stack_url"": ""/v2/stacks/f69fdfb4-f02d-4a23-845b-c91e2355ddfc"",
        ""events_url"": ""/v2/apps/29244f10-af10-4da1-9d4a-5308731063d3/events"",
        ""service_bindings_url"": ""/v2/apps/29244f10-af10-4da1-9d4a-5308731063d3/service_bindings"",
        ""routes_url"": ""/v2/apps/29244f10-af10-4da1-9d4a-5308731063d3/routes""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Routes.ListAllAppsForRoute(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("29244f10-af10-4da1-9d4a-5308731063d3", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/apps/29244f10-af10-4da1-9d4a-5308731063d3", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1572", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj[0].Production), true);
                Assert.AreEqual("798bfc0c-3625-432a-ab3f-db87197de806", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f69fdfb4-f02d-4a23-845b-c91e2355ddfc", TestUtil.ToTestableString(obj[0].StackGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Buildpack), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DetectedBuildpack), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EnvironmentJson), true);
                Assert.AreEqual("1024", TestUtil.ToTestableString(obj[0].Memory), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj[0].Instances), true);
                Assert.AreEqual("1024", TestUtil.ToTestableString(obj[0].DiskQuota), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj[0].State), true);
                Assert.AreEqual("2592e315-c6d7-4d70-bc5f-1a50ae76fae7", TestUtil.ToTestableString(obj[0].Version), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Command), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj[0].Console), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Debug), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].StagingTaskId), true);
                Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj[0].PackageState), true);
                Assert.AreEqual("port", TestUtil.ToTestableString(obj[0].HealthCheckType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].HealthCheckTimeout), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].StagingFailedReason), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DockerImage), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj[0].PackageUpdatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DetectedStartCommand), true);
                Assert.AreEqual("/v2/spaces/798bfc0c-3625-432a-ab3f-db87197de806", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/stacks/f69fdfb4-f02d-4a23-845b-c91e2355ddfc", TestUtil.ToTestableString(obj[0].StackUrl), true);
                Assert.AreEqual("/v2/apps/29244f10-af10-4da1-9d4a-5308731063d3/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/apps/29244f10-af10-4da1-9d4a-5308731063d3/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/apps/29244f10-af10-4da1-9d4a-5308731063d3/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);

            }
        }

        [TestMethod]
        public void CheckRouteExistsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? domain_guid = Guid.NewGuid();

                dynamic host = null;


                cfClient.Routes.CheckRouteExists(domain_guid, host).Wait();

            }
        }

        [TestMethod]
        public void DeleteRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.Routes.DeleteRoute(guid).Wait();

            }
        }

        [TestMethod]
        public void RemoveAppFromRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""087d0d20-e104-4021-9486-8decbd8a132b"",
    ""url"": ""/v2/routes/087d0d20-e104-4021-9486-8decbd8a132b"",
    ""created_at"": ""2015-03-25T13:48:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-10"",
    ""domain_guid"": ""797ff657-9f1c-4aa4-852b-dee97458551b"",
    ""space_guid"": ""26ba382b-b872-4e03-8a37-e2445a4af7e7"",
    ""domain_url"": ""/v2/domains/797ff657-9f1c-4aa4-852b-dee97458551b"",
    ""space_url"": ""/v2/spaces/26ba382b-b872-4e03-8a37-e2445a4af7e7"",
    ""apps_url"": ""/v2/routes/087d0d20-e104-4021-9486-8decbd8a132b/apps""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? app_guid = Guid.NewGuid();


                var obj = cfClient.Routes.RemoveAppFromRoute(guid, app_guid).Result;


                Assert.AreEqual("087d0d20-e104-4021-9486-8decbd8a132b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/087d0d20-e104-4021-9486-8decbd8a132b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("host-10", TestUtil.ToTestableString(obj.Host), true);
                Assert.AreEqual("797ff657-9f1c-4aa4-852b-dee97458551b", TestUtil.ToTestableString(obj.DomainGuid), true);
                Assert.AreEqual("26ba382b-b872-4e03-8a37-e2445a4af7e7", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("/v2/domains/797ff657-9f1c-4aa4-852b-dee97458551b", TestUtil.ToTestableString(obj.DomainUrl), true);
                Assert.AreEqual("/v2/spaces/26ba382b-b872-4e03-8a37-e2445a4af7e7", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/routes/087d0d20-e104-4021-9486-8decbd8a132b/apps", TestUtil.ToTestableString(obj.AppsUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""91d82243-0a3b-4b06-9d48-0820a7a23901"",
    ""url"": ""/v2/routes/91d82243-0a3b-4b06-9d48-0820a7a23901"",
    ""created_at"": ""2015-03-25T13:48:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-15"",
    ""domain_guid"": ""83178a4b-0e7b-45bc-a4d6-e220c365dd03"",
    ""space_guid"": ""8654150d-446b-4af3-97fb-28faf360e4b6"",
    ""domain_url"": ""/v2/domains/83178a4b-0e7b-45bc-a4d6-e220c365dd03"",
    ""space_url"": ""/v2/spaces/8654150d-446b-4af3-97fb-28faf360e4b6"",
    ""apps_url"": ""/v2/routes/91d82243-0a3b-4b06-9d48-0820a7a23901/apps""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Routes.RetrieveRoute(guid).Result;


                Assert.AreEqual("91d82243-0a3b-4b06-9d48-0820a7a23901", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/91d82243-0a3b-4b06-9d48-0820a7a23901", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("host-15", TestUtil.ToTestableString(obj.Host), true);
                Assert.AreEqual("83178a4b-0e7b-45bc-a4d6-e220c365dd03", TestUtil.ToTestableString(obj.DomainGuid), true);
                Assert.AreEqual("8654150d-446b-4af3-97fb-28faf360e4b6", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("/v2/domains/83178a4b-0e7b-45bc-a4d6-e220c365dd03", TestUtil.ToTestableString(obj.DomainUrl), true);
                Assert.AreEqual("/v2/spaces/8654150d-446b-4af3-97fb-28faf360e4b6", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/routes/91d82243-0a3b-4b06-9d48-0820a7a23901/apps", TestUtil.ToTestableString(obj.AppsUrl), true);

            }
        }

        [TestMethod]
        public void UpdateRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""227b8704-6510-479b-b820-5d741f0ad60f"",
    ""url"": ""/v2/routes/227b8704-6510-479b-b820-5d741f0ad60f"",
    ""created_at"": ""2015-03-25T13:48:53+00:00"",
    ""updated_at"": ""2015-03-25T13:48:53+00:00""
  },
  ""entity"": {
    ""host"": ""new_host"",
    ""domain_guid"": ""b7aa5e0d-6c3c-4e0c-b193-9e190dd34aff"",
    ""space_guid"": ""e233da66-5cbf-4565-8fa3-fef4e27e8759"",
    ""domain_url"": ""/v2/domains/b7aa5e0d-6c3c-4e0c-b193-9e190dd34aff"",
    ""space_url"": ""/v2/spaces/e233da66-5cbf-4565-8fa3-fef4e27e8759"",
    ""apps_url"": ""/v2/routes/227b8704-6510-479b-b820-5d741f0ad60f/apps""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateRouteRequest value = new UpdateRouteRequest();


                var obj = cfClient.Routes.UpdateRoute(guid, value).Result;


                Assert.AreEqual("227b8704-6510-479b-b820-5d741f0ad60f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/227b8704-6510-479b-b820-5d741f0ad60f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-03-25T13:48:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("new_host", TestUtil.ToTestableString(obj.Host), true);
                Assert.AreEqual("b7aa5e0d-6c3c-4e0c-b193-9e190dd34aff", TestUtil.ToTestableString(obj.DomainGuid), true);
                Assert.AreEqual("e233da66-5cbf-4565-8fa3-fef4e27e8759", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("/v2/domains/b7aa5e0d-6c3c-4e0c-b193-9e190dd34aff", TestUtil.ToTestableString(obj.DomainUrl), true);
                Assert.AreEqual("/v2/spaces/e233da66-5cbf-4565-8fa3-fef4e27e8759", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/routes/227b8704-6510-479b-b820-5d741f0ad60f/apps", TestUtil.ToTestableString(obj.AppsUrl), true);

            }
        }

    }
}