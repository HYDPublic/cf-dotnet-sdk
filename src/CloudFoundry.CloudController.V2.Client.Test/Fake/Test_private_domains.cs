//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class PrivateDomainsEndpoint
{
        [TestMethod]
        public void FilterPrivateDomainsByNameTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""15710236-fd8e-43c8-ad49-3eee7ab73fe2"",
        ""url"": ""/v2/private_domains/15710236-fd8e-43c8-ad49-3eee7ab73fe2"",
        ""created_at"": ""2015-03-25T13:48:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""my-domain.com"",
        ""owning_organization_guid"": ""83d0bb83-a412-4d5c-acca-b90d2f30b091"",
        ""owning_organization_url"": ""/v2/organizations/83d0bb83-a412-4d5c-acca-b90d2f30b091""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.PrivateDomains.FilterPrivateDomainsByName().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("15710236-fd8e-43c8-ad49-3eee7ab73fe2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/15710236-fd8e-43c8-ad49-3eee7ab73fe2", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:56+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-domain.com", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("83d0bb83-a412-4d5c-acca-b90d2f30b091", TestUtil.ToTestableString(obj[0].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/83d0bb83-a412-4d5c-acca-b90d2f30b091", TestUtil.ToTestableString(obj[0].OwningOrganizationUrl), true);

            }
        }

        [TestMethod]
        public void RetrievePrivateDomainTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""45ba0d70-2f75-4784-8188-695a8e128ac4"",
    ""url"": ""/v2/private_domains/45ba0d70-2f75-4784-8188-695a8e128ac4"",
    ""created_at"": ""2015-03-25T13:48:55+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""vcap.me"",
    ""owning_organization_guid"": ""b46ad09f-13b4-4b5e-9b86-70bda0435e5f"",
    ""owning_organization_url"": ""/v2/organizations/b46ad09f-13b4-4b5e-9b86-70bda0435e5f""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.PrivateDomains.RetrievePrivateDomain(guid).Result;


                Assert.AreEqual("45ba0d70-2f75-4784-8188-695a8e128ac4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/45ba0d70-2f75-4784-8188-695a8e128ac4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("b46ad09f-13b4-4b5e-9b86-70bda0435e5f", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/b46ad09f-13b4-4b5e-9b86-70bda0435e5f", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);

            }
        }

        [TestMethod]
        public void CreatePrivateDomainOwnedByGivenOrganizationTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""840e6c7f-f8e6-4219-a982-a91c796be8e6"",
    ""url"": ""/v2/private_domains/840e6c7f-f8e6-4219-a982-a91c796be8e6"",
    ""created_at"": ""2015-03-25T13:48:56+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""ad6fe204-7c30-4f10-87b5-f68671693930"",
    ""owning_organization_url"": ""/v2/organizations/ad6fe204-7c30-4f10-87b5-f68671693930""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatePrivateDomainOwnedByGivenOrganizationRequest value = new CreatePrivateDomainOwnedByGivenOrganizationRequest();


                var obj = cfClient.PrivateDomains.CreatePrivateDomainOwnedByGivenOrganization(value).Result;


                Assert.AreEqual("840e6c7f-f8e6-4219-a982-a91c796be8e6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/840e6c7f-f8e6-4219-a982-a91c796be8e6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:56+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("ad6fe204-7c30-4f10-87b5-f68671693930", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/ad6fe204-7c30-4f10-87b5-f68671693930", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeletePrivateDomainTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.PrivateDomains.DeletePrivateDomain(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllPrivateDomainsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""45ba0d70-2f75-4784-8188-695a8e128ac4"",
        ""url"": ""/v2/private_domains/45ba0d70-2f75-4784-8188-695a8e128ac4"",
        ""created_at"": ""2015-03-25T13:48:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""b46ad09f-13b4-4b5e-9b86-70bda0435e5f"",
        ""owning_organization_url"": ""/v2/organizations/b46ad09f-13b4-4b5e-9b86-70bda0435e5f""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""326d6d67-8a25-49c5-b588-fd71e516fb4a"",
        ""url"": ""/v2/private_domains/326d6d67-8a25-49c5-b588-fd71e516fb4a"",
        ""created_at"": ""2015-03-25T13:48:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-31.example.com"",
        ""owning_organization_guid"": ""3fcbd01f-f7d7-4b35-9048-3ca99955cf62"",
        ""owning_organization_url"": ""/v2/organizations/3fcbd01f-f7d7-4b35-9048-3ca99955cf62""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f4cfee25-51ff-407c-a94a-cbc703be10df"",
        ""url"": ""/v2/private_domains/f4cfee25-51ff-407c-a94a-cbc703be10df"",
        ""created_at"": ""2015-03-25T13:48:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-32.example.com"",
        ""owning_organization_guid"": ""72d33b51-ebd0-45fa-90cf-e9a62cf7cc2c"",
        ""owning_organization_url"": ""/v2/organizations/72d33b51-ebd0-45fa-90cf-e9a62cf7cc2c""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""14ca52fd-d9b9-45b5-ada9-5dddabf9f298"",
        ""url"": ""/v2/private_domains/14ca52fd-d9b9-45b5-ada9-5dddabf9f298"",
        ""created_at"": ""2015-03-25T13:48:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-33.example.com"",
        ""owning_organization_guid"": ""51216fde-ef6a-42f4-bad0-218bbe048718"",
        ""owning_organization_url"": ""/v2/organizations/51216fde-ef6a-42f4-bad0-218bbe048718""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.PrivateDomains.ListAllPrivateDomains().Result;

                Assert.AreEqual("4", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("45ba0d70-2f75-4784-8188-695a8e128ac4", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/45ba0d70-2f75-4784-8188-695a8e128ac4", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:55+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("b46ad09f-13b4-4b5e-9b86-70bda0435e5f", TestUtil.ToTestableString(obj[0].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/b46ad09f-13b4-4b5e-9b86-70bda0435e5f", TestUtil.ToTestableString(obj[0].OwningOrganizationUrl), true);
                Assert.AreEqual("326d6d67-8a25-49c5-b588-fd71e516fb4a", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/326d6d67-8a25-49c5-b588-fd71e516fb4a", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:56+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-31.example.com", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("3fcbd01f-f7d7-4b35-9048-3ca99955cf62", TestUtil.ToTestableString(obj[1].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/3fcbd01f-f7d7-4b35-9048-3ca99955cf62", TestUtil.ToTestableString(obj[1].OwningOrganizationUrl), true);
                Assert.AreEqual("f4cfee25-51ff-407c-a94a-cbc703be10df", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/f4cfee25-51ff-407c-a94a-cbc703be10df", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:56+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-32.example.com", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("72d33b51-ebd0-45fa-90cf-e9a62cf7cc2c", TestUtil.ToTestableString(obj[2].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/72d33b51-ebd0-45fa-90cf-e9a62cf7cc2c", TestUtil.ToTestableString(obj[2].OwningOrganizationUrl), true);
                Assert.AreEqual("14ca52fd-d9b9-45b5-ada9-5dddabf9f298", TestUtil.ToTestableString(obj[3].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/14ca52fd-d9b9-45b5-ada9-5dddabf9f298", TestUtil.ToTestableString(obj[3].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:56+00:00", TestUtil.ToTestableString(obj[3].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-33.example.com", TestUtil.ToTestableString(obj[3].Name), true);
                Assert.AreEqual("51216fde-ef6a-42f4-bad0-218bbe048718", TestUtil.ToTestableString(obj[3].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/51216fde-ef6a-42f4-bad0-218bbe048718", TestUtil.ToTestableString(obj[3].OwningOrganizationUrl), true);

            }
        }

    }
}