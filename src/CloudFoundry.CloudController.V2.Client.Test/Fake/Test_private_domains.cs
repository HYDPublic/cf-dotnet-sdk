//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class PrivateDomainsEndpoint
{
        [TestMethod]
        public void RetrievePrivateDomainTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""c57e7975-fecf-4d86-aa39-eb747504bb08"",
    ""url"": ""/v2/private_domains/8ad24ef4-bbcb-495e-8178-e64daedbb8e4"",
    ""created_at"": ""2016-05-26T11:34:21Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""vcap.me"",
    ""owning_organization_guid"": ""c57e7975-fecf-4d86-aa39-eb747504bb08"",
    ""owning_organization_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703"",
    ""shared_organizations_url"": ""/v2/private_domains/8ad24ef4-bbcb-495e-8178-e64daedbb8e4/shared_organizations""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.PrivateDomains.RetrievePrivateDomain(guid).Result;


                Assert.AreEqual("c57e7975-fecf-4d86-aa39-eb747504bb08", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/8ad24ef4-bbcb-495e-8178-e64daedbb8e4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-26T11:34:21Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("c57e7975-fecf-4d86-aa39-eb747504bb08", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/private_domains/8ad24ef4-bbcb-495e-8178-e64daedbb8e4/shared_organizations", TestUtil.ToTestableString(obj.SharedOrganizationsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllPrivateDomainsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""88846c85-581c-4f61-a076-d779a286fac2"",
        ""url"": ""/v2/private_domains/8ad24ef4-bbcb-495e-8178-e64daedbb8e4"",
        ""created_at"": ""2016-05-26T11:34:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""88846c85-581c-4f61-a076-d779a286fac2"",
        ""owning_organization_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703"",
        ""shared_organizations_url"": ""/v2/private_domains/8ad24ef4-bbcb-495e-8178-e64daedbb8e4/shared_organizations""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""88846c85-581c-4f61-a076-d779a286fac2"",
        ""url"": ""/v2/private_domains/45bdf198-0bae-4161-a054-b727b7940d8b"",
        ""created_at"": ""2016-05-26T11:34:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-20.example.com"",
        ""owning_organization_guid"": ""88846c85-581c-4f61-a076-d779a286fac2"",
        ""owning_organization_url"": ""/v2/organizations/c27142c7-74a2-4814-9ad2-63996201dc74"",
        ""shared_organizations_url"": ""/v2/private_domains/45bdf198-0bae-4161-a054-b727b7940d8b/shared_organizations""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""88846c85-581c-4f61-a076-d779a286fac2"",
        ""url"": ""/v2/private_domains/d603a9b3-c1a3-4538-a3e2-164971fa4ec2"",
        ""created_at"": ""2016-05-26T11:34:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-21.example.com"",
        ""owning_organization_guid"": ""88846c85-581c-4f61-a076-d779a286fac2"",
        ""owning_organization_url"": ""/v2/organizations/0f38c54e-c4ef-443a-8c43-7108954b4181"",
        ""shared_organizations_url"": ""/v2/private_domains/d603a9b3-c1a3-4538-a3e2-164971fa4ec2/shared_organizations""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""88846c85-581c-4f61-a076-d779a286fac2"",
        ""url"": ""/v2/private_domains/ec6c2204-b0ee-42b2-aa70-eb60f6f8460b"",
        ""created_at"": ""2016-05-26T11:34:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-22.example.com"",
        ""owning_organization_guid"": ""88846c85-581c-4f61-a076-d779a286fac2"",
        ""owning_organization_url"": ""/v2/organizations/63044d73-9777-4d33-8aa9-25f0e81a2118"",
        ""shared_organizations_url"": ""/v2/private_domains/ec6c2204-b0ee-42b2-aa70-eb60f6f8460b/shared_organizations""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.PrivateDomains.ListAllPrivateDomains().Result;

                Assert.AreEqual("4", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("88846c85-581c-4f61-a076-d779a286fac2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/8ad24ef4-bbcb-495e-8178-e64daedbb8e4", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-26T11:34:21Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("88846c85-581c-4f61-a076-d779a286fac2", TestUtil.ToTestableString(obj[0].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703", TestUtil.ToTestableString(obj[0].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/private_domains/8ad24ef4-bbcb-495e-8178-e64daedbb8e4/shared_organizations", TestUtil.ToTestableString(obj[0].SharedOrganizationsUrl), true);
                Assert.AreEqual("88846c85-581c-4f61-a076-d779a286fac2", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/45bdf198-0bae-4161-a054-b727b7940d8b", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-20.example.com", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("88846c85-581c-4f61-a076-d779a286fac2", TestUtil.ToTestableString(obj[1].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/c27142c7-74a2-4814-9ad2-63996201dc74", TestUtil.ToTestableString(obj[1].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/private_domains/45bdf198-0bae-4161-a054-b727b7940d8b/shared_organizations", TestUtil.ToTestableString(obj[1].SharedOrganizationsUrl), true);
                Assert.AreEqual("88846c85-581c-4f61-a076-d779a286fac2", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/d603a9b3-c1a3-4538-a3e2-164971fa4ec2", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-21.example.com", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("88846c85-581c-4f61-a076-d779a286fac2", TestUtil.ToTestableString(obj[2].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/0f38c54e-c4ef-443a-8c43-7108954b4181", TestUtil.ToTestableString(obj[2].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/private_domains/d603a9b3-c1a3-4538-a3e2-164971fa4ec2/shared_organizations", TestUtil.ToTestableString(obj[2].SharedOrganizationsUrl), true);
                Assert.AreEqual("88846c85-581c-4f61-a076-d779a286fac2", TestUtil.ToTestableString(obj[3].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/ec6c2204-b0ee-42b2-aa70-eb60f6f8460b", TestUtil.ToTestableString(obj[3].EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(obj[3].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-22.example.com", TestUtil.ToTestableString(obj[3].Name), true);
                Assert.AreEqual("88846c85-581c-4f61-a076-d779a286fac2", TestUtil.ToTestableString(obj[3].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/63044d73-9777-4d33-8aa9-25f0e81a2118", TestUtil.ToTestableString(obj[3].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/private_domains/ec6c2204-b0ee-42b2-aa70-eb60f6f8460b/shared_organizations", TestUtil.ToTestableString(obj[3].SharedOrganizationsUrl), true);

            }
        }

        [TestMethod]
        public void DeletePrivateDomainTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.PrivateDomains.DeletePrivateDomain(guid).Wait();

            }
        }

        [TestMethod]
        public void CreatePrivateDomainOwnedByGivenOrganizationTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""d0c37d59-358b-4f3d-bec7-1676e94fbf50"",
    ""url"": ""/v2/private_domains/97968679-6c99-487f-9ae7-fb8603eaf480"",
    ""created_at"": ""2016-05-26T11:34:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""d0c37d59-358b-4f3d-bec7-1676e94fbf50"",
    ""owning_organization_url"": ""/v2/organizations/1c2e3ecf-18de-436a-94a3-f37644a8bfad"",
    ""shared_organizations_url"": ""/v2/private_domains/97968679-6c99-487f-9ae7-fb8603eaf480/shared_organizations""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatePrivateDomainOwnedByGivenOrganizationRequest value = new CreatePrivateDomainOwnedByGivenOrganizationRequest();


                var obj = cfClient.PrivateDomains.CreatePrivateDomainOwnedByGivenOrganization(value).Result;


                Assert.AreEqual("d0c37d59-358b-4f3d-bec7-1676e94fbf50", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/97968679-6c99-487f-9ae7-fb8603eaf480", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("d0c37d59-358b-4f3d-bec7-1676e94fbf50", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/1c2e3ecf-18de-436a-94a3-f37644a8bfad", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/private_domains/97968679-6c99-487f-9ae7-fb8603eaf480/shared_organizations", TestUtil.ToTestableString(obj.SharedOrganizationsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSharedOrganizationsForPrivateDomainTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""33e9671b-bc3c-442d-a952-36fe0cb355b0"",
        ""url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672"",
        ""created_at"": ""2016-05-26T11:34:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-271"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""33e9671b-bc3c-442d-a952-36fe0cb355b0"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/6bad2c47-e396-423a-aa5f-348e4e20893a"",
        ""spaces_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/spaces"",
        ""domains_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/domains"",
        ""private_domains_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/private_domains"",
        ""users_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/users"",
        ""managers_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/managers"",
        ""billing_managers_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/billing_managers"",
        ""auditors_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/auditors"",
        ""app_events_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/space_quota_definitions""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.PrivateDomains.ListAllSharedOrganizationsForPrivateDomain(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("33e9671b-bc3c-442d-a952-36fe0cb355b0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-26T11:34:27Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-271", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj[0].BillingEnabled), true);
                Assert.AreEqual("33e9671b-bc3c-442d-a952-36fe0cb355b0", TestUtil.ToTestableString(obj[0].QuotaDefinitionGuid), true);
                Assert.AreEqual("active", TestUtil.ToTestableString(obj[0].Status), true);
                Assert.AreEqual("/v2/quota_definitions/6bad2c47-e396-423a-aa5f-348e4e20893a", TestUtil.ToTestableString(obj[0].QuotaDefinitionUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/spaces", TestUtil.ToTestableString(obj[0].SpacesUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/private_domains", TestUtil.ToTestableString(obj[0].PrivateDomainsUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/users", TestUtil.ToTestableString(obj[0].UsersUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/billing_managers", TestUtil.ToTestableString(obj[0].BillingManagersUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/organizations/6c9eaa4b-f952-4e3c-b4ca-ab02c3434672/space_quota_definitions", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionsUrl), true);

            }
        }

        [TestMethod]
        public void FilterPrivateDomainsByNameTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1e622cbc-c2ee-423d-819d-d6754a8b7d5e"",
        ""url"": ""/v2/private_domains/5b00d039-5d11-419f-8edb-f31e7daa31ec"",
        ""created_at"": ""2016-05-26T11:34:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""my-domain.com"",
        ""owning_organization_guid"": ""1e622cbc-c2ee-423d-819d-d6754a8b7d5e"",
        ""owning_organization_url"": ""/v2/organizations/947d6ff8-f315-408f-b1c8-30c713be79bf"",
        ""shared_organizations_url"": ""/v2/private_domains/5b00d039-5d11-419f-8edb-f31e7daa31ec/shared_organizations""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.PrivateDomains.FilterPrivateDomainsByName().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1e622cbc-c2ee-423d-819d-d6754a8b7d5e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/5b00d039-5d11-419f-8edb-f31e7daa31ec", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-domain.com", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("1e622cbc-c2ee-423d-819d-d6754a8b7d5e", TestUtil.ToTestableString(obj[0].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/947d6ff8-f315-408f-b1c8-30c713be79bf", TestUtil.ToTestableString(obj[0].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/private_domains/5b00d039-5d11-419f-8edb-f31e7daa31ec/shared_organizations", TestUtil.ToTestableString(obj[0].SharedOrganizationsUrl), true);

            }
        }

    }
}