//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedEndpoint
{
        [TestMethod]
        public void ListAllSpacesForDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""46d0bd48-d2bf-42d1-bd34-5622ef0458c9"",
        ""url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9"",
        ""created_at"": ""2015-04-10T20:04:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-3"",
        ""organization_guid"": ""13f0b30f-78f0-4123-8cfd-516e7762e5d8"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/13f0b30f-78f0-4123-8cfd-516e7762e5d8"",
        ""developers_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/developers"",
        ""managers_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/managers"",
        ""auditors_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/auditors"",
        ""apps_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/apps"",
        ""routes_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/routes"",
        ""domains_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/domains"",
        ""service_instances_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/service_instances"",
        ""app_events_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/app_events"",
        ""events_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/events"",
        ""security_groups_url"": ""/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.ListAllSpacesForDomainDeprecated(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("46d0bd48-d2bf-42d1-bd34-5622ef0458c9", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:20+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-3", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("13f0b30f-78f0-4123-8cfd-516e7762e5d8", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("/v2/organizations/13f0b30f-78f0-4123-8cfd-516e7762e5d8", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/46d0bd48-d2bf-42d1-bd34-5622ef0458c9/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllDomainsDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c694df60-c1f2-422d-bb89-77f340b60835"",
        ""url"": ""/v2/domains/c694df60-c1f2-422d-bb89-77f340b60835"",
        ""created_at"": ""2015-04-10T20:04:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8ca1c475-a21f-4160-82b4-2a9094ef5c78"",
        ""url"": ""/v2/domains/8ca1c475-a21f-4160-82b4-2a9094ef5c78"",
        ""created_at"": ""2015-04-10T20:04:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""02aaae75-d8cb-444a-a655-82ebb145c3e1"",
        ""url"": ""/v2/domains/02aaae75-d8cb-444a-a655-82ebb145c3e1"",
        ""created_at"": ""2015-04-10T20:04:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""4c62f66d-6edd-44d4-ba3a-63a7b756095c"",
        ""owning_organization_url"": ""/v2/organizations/4c62f66d-6edd-44d4-ba3a-63a7b756095c"",
        ""spaces_url"": ""/v2/domains/02aaae75-d8cb-444a-a655-82ebb145c3e1/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c4f5a3f0-f7e7-4acb-8128-7f09e808f30a"",
        ""url"": ""/v2/domains/c4f5a3f0-f7e7-4acb-8128-7f09e808f30a"",
        ""created_at"": ""2015-04-10T20:04:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-2.example.com""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.DomainsDeprecated.ListAllDomainsDeprecated().Result;

                Assert.AreEqual("4", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c694df60-c1f2-422d-bb89-77f340b60835", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/c694df60-c1f2-422d-bb89-77f340b60835", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:20+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("8ca1c475-a21f-4160-82b4-2a9094ef5c78", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/8ca1c475-a21f-4160-82b4-2a9094ef5c78", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:20+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("02aaae75-d8cb-444a-a655-82ebb145c3e1", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/02aaae75-d8cb-444a-a655-82ebb145c3e1", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:20+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("4c62f66d-6edd-44d4-ba3a-63a7b756095c", TestUtil.ToTestableString(obj[2].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/4c62f66d-6edd-44d4-ba3a-63a7b756095c", TestUtil.ToTestableString(obj[2].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/02aaae75-d8cb-444a-a655-82ebb145c3e1/spaces", TestUtil.ToTestableString(obj[2].SpacesUrl), true);
                Assert.AreEqual("c4f5a3f0-f7e7-4acb-8128-7f09e808f30a", TestUtil.ToTestableString(obj[3].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/c4f5a3f0-f7e7-4acb-8128-7f09e808f30a", TestUtil.ToTestableString(obj[3].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:20+00:00", TestUtil.ToTestableString(obj[3].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-2.example.com", TestUtil.ToTestableString(obj[3].Name), true);

            }
        }

        [TestMethod]
        public void DeleteDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.DomainsDeprecated.DeleteDomainDeprecated(guid).Wait();

            }
        }

        [TestMethod]
        public void CreatesDomainOwnedByGivenOrganizationDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""b9510606-a7ba-4718-91b4-4ae10d615006"",
    ""url"": ""/v2/domains/b9510606-a7ba-4718-91b4-4ae10d615006"",
    ""created_at"": ""2015-04-10T20:04:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""0cc013ba-cfee-4179-99f8-9ca830a50487"",
    ""owning_organization_url"": ""/v2/organizations/0cc013ba-cfee-4179-99f8-9ca830a50487"",
    ""spaces_url"": ""/v2/domains/b9510606-a7ba-4718-91b4-4ae10d615006/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesDomainOwnedByGivenOrganizationDeprecatedRequest value = new CreatesDomainOwnedByGivenOrganizationDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesDomainOwnedByGivenOrganizationDeprecated(value).Result;


                Assert.AreEqual("b9510606-a7ba-4718-91b4-4ae10d615006", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/b9510606-a7ba-4718-91b4-4ae10d615006", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("0cc013ba-cfee-4179-99f8-9ca830a50487", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/0cc013ba-cfee-4179-99f8-9ca830a50487", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/b9510606-a7ba-4718-91b4-4ae10d615006/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""5aa08fac-336d-481c-88fe-ed60cf2abee5"",
    ""url"": ""/v2/domains/5aa08fac-336d-481c-88fe-ed60cf2abee5"",
    ""created_at"": ""2015-04-10T20:04:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-3.example.com""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.RetrieveDomainDeprecated(guid).Result;


                Assert.AreEqual("5aa08fac-336d-481c-88fe-ed60cf2abee5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/5aa08fac-336d-481c-88fe-ed60cf2abee5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-3.example.com", TestUtil.ToTestableString(obj.Name), true);

            }
        }

        [TestMethod]
        public void CreatesSharedDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""6cd0c0a5-e38a-493f-84e8-8ae6e4ce1bd0"",
    ""url"": ""/v2/domains/6cd0c0a5-e38a-493f-84e8-8ae6e4ce1bd0"",
    ""created_at"": ""2015-04-10T20:04:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesSharedDomainDeprecatedRequest value = new CreatesSharedDomainDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesSharedDomainDeprecated(value).Result;


                Assert.AreEqual("6cd0c0a5-e38a-493f-84e8-8ae6e4ce1bd0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/6cd0c0a5-e38a-493f-84e8-8ae6e4ce1bd0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);

            }
        }

    }
}