//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedEndpoint
{
        [TestMethod]
        public void ListAllSpacesForDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5be48a0d-bf98-481d-beb0-220ca8f8dee9"",
        ""url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9"",
        ""created_at"": ""2015-07-28T12:59:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2056"",
        ""organization_guid"": ""3aa0e2d3-7ee6-4a37-94b1-2574db90b64b"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/3aa0e2d3-7ee6-4a37-94b1-2574db90b64b"",
        ""developers_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/developers"",
        ""managers_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/managers"",
        ""auditors_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/auditors"",
        ""apps_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/apps"",
        ""routes_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/routes"",
        ""domains_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/domains"",
        ""service_instances_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/service_instances"",
        ""app_events_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/app_events"",
        ""events_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/events"",
        ""security_groups_url"": ""/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.ListAllSpacesForDomainDeprecated(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5be48a0d-bf98-481d-beb0-220ca8f8dee9", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-2056", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("3aa0e2d3-7ee6-4a37-94b1-2574db90b64b", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("/v2/organizations/3aa0e2d3-7ee6-4a37-94b1-2574db90b64b", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/5be48a0d-bf98-481d-beb0-220ca8f8dee9/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllDomainsDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e28126af-0fa3-44ca-9403-97a9957e6100"",
        ""url"": ""/v2/domains/e28126af-0fa3-44ca-9403-97a9957e6100"",
        ""created_at"": ""2015-07-28T12:59:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""75f23b10-f305-41aa-95de-4f9a7689fc66"",
        ""url"": ""/v2/domains/75f23b10-f305-41aa-95de-4f9a7689fc66"",
        ""created_at"": ""2015-07-28T12:59:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""50a96196-3687-4aa1-9ab3-7b274acb9938"",
        ""url"": ""/v2/domains/50a96196-3687-4aa1-9ab3-7b274acb9938"",
        ""created_at"": ""2015-07-28T12:59:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""a8cf4891-0f96-447a-92f8-53704b1b053b"",
        ""owning_organization_url"": ""/v2/organizations/a8cf4891-0f96-447a-92f8-53704b1b053b"",
        ""spaces_url"": ""/v2/domains/50a96196-3687-4aa1-9ab3-7b274acb9938/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c582fc5c-c3e2-479b-972a-494c95482e5d"",
        ""url"": ""/v2/domains/c582fc5c-c3e2-479b-972a-494c95482e5d"",
        ""created_at"": ""2015-07-28T12:59:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-64.example.com""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.DomainsDeprecated.ListAllDomainsDeprecated().Result;

                Assert.AreEqual("4", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e28126af-0fa3-44ca-9403-97a9957e6100", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/e28126af-0fa3-44ca-9403-97a9957e6100", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-28T12:59:11Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("75f23b10-f305-41aa-95de-4f9a7689fc66", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/75f23b10-f305-41aa-95de-4f9a7689fc66", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-28T12:59:11Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("50a96196-3687-4aa1-9ab3-7b274acb9938", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/50a96196-3687-4aa1-9ab3-7b274acb9938", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-28T12:59:11Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("a8cf4891-0f96-447a-92f8-53704b1b053b", TestUtil.ToTestableString(obj[2].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/a8cf4891-0f96-447a-92f8-53704b1b053b", TestUtil.ToTestableString(obj[2].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/50a96196-3687-4aa1-9ab3-7b274acb9938/spaces", TestUtil.ToTestableString(obj[2].SpacesUrl), true);
                Assert.AreEqual("c582fc5c-c3e2-479b-972a-494c95482e5d", TestUtil.ToTestableString(obj[3].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/c582fc5c-c3e2-479b-972a-494c95482e5d", TestUtil.ToTestableString(obj[3].EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj[3].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-64.example.com", TestUtil.ToTestableString(obj[3].Name), true);

            }
        }

        [TestMethod]
        public void DeleteDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.DomainsDeprecated.DeleteDomainDeprecated(guid).Wait();

            }
        }

        [TestMethod]
        public void CreatesDomainOwnedByGivenOrganizationDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""2469a542-d90e-4828-a948-547033bc1d0a"",
    ""url"": ""/v2/domains/2469a542-d90e-4828-a948-547033bc1d0a"",
    ""created_at"": ""2015-07-28T12:59:13Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""c77587cb-1eb9-47a5-9ac6-531136502f60"",
    ""shared_organizations"": [

    ],
    ""owning_organization_url"": ""/v2/organizations/c77587cb-1eb9-47a5-9ac6-531136502f60"",
    ""spaces_url"": ""/v2/domains/2469a542-d90e-4828-a948-547033bc1d0a/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesDomainOwnedByGivenOrganizationDeprecatedRequest value = new CreatesDomainOwnedByGivenOrganizationDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesDomainOwnedByGivenOrganizationDeprecated(value).Result;


                Assert.AreEqual("2469a542-d90e-4828-a948-547033bc1d0a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/2469a542-d90e-4828-a948-547033bc1d0a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("c77587cb-1eb9-47a5-9ac6-531136502f60", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/c77587cb-1eb9-47a5-9ac6-531136502f60", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/2469a542-d90e-4828-a948-547033bc1d0a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""56abc3c7-563e-4b21-b752-b1de1774a28d"",
    ""url"": ""/v2/domains/56abc3c7-563e-4b21-b752-b1de1774a28d"",
    ""created_at"": ""2015-07-28T12:59:13Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-60.example.com""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.RetrieveDomainDeprecated(guid).Result;


                Assert.AreEqual("56abc3c7-563e-4b21-b752-b1de1774a28d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/56abc3c7-563e-4b21-b752-b1de1774a28d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-60.example.com", TestUtil.ToTestableString(obj.Name), true);

            }
        }

        [TestMethod]
        public void CreatesSharedDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""2e931365-4161-4bfa-8328-06353da770f2"",
    ""url"": ""/v2/domains/2e931365-4161-4bfa-8328-06353da770f2"",
    ""created_at"": ""2015-07-28T12:59:13Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null,
    ""shared_organizations"": [

    ]
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesSharedDomainDeprecatedRequest value = new CreatesSharedDomainDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesSharedDomainDeprecated(value).Result;


                Assert.AreEqual("2e931365-4161-4bfa-8328-06353da770f2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/2e931365-4161-4bfa-8328-06353da770f2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);

            }
        }

    }
}