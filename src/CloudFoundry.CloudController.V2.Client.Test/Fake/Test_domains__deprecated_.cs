//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedEndpoint
{
        [TestMethod]
        public void DeleteDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.DomainsDeprecated.DeleteDomainDeprecated(guid).Wait();

            }
        }

        [TestMethod]
        public void CreateDomainOwnedByGivenOrganizationDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""1f1de474-6569-4a3e-8028-0a2b3b9c43cd"",
    ""url"": ""/v2/private_domains/8bbfeb8d-abed-46ac-9a29-7d02d16ae116"",
    ""created_at"": ""2016-10-12T12:29:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""1f1de474-6569-4a3e-8028-0a2b3b9c43cd"",
    ""owning_organization_url"": ""/v2/organizations/8cf09aa2-c959-481c-b533-7455b74e6a1a"",
    ""spaces_url"": ""/v2/domains/8bbfeb8d-abed-46ac-9a29-7d02d16ae116/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateDomainOwnedByGivenOrganizationDeprecatedRequest value = new CreateDomainOwnedByGivenOrganizationDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreateDomainOwnedByGivenOrganizationDeprecated(value).Result;


                Assert.AreEqual("1f1de474-6569-4a3e-8028-0a2b3b9c43cd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/8bbfeb8d-abed-46ac-9a29-7d02d16ae116", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("1f1de474-6569-4a3e-8028-0a2b3b9c43cd", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/8cf09aa2-c959-481c-b533-7455b74e6a1a", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/8bbfeb8d-abed-46ac-9a29-7d02d16ae116/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSpacesForDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""81683525-60e3-4c7e-aec4-cd4148fc4553"",
        ""url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2"",
        ""created_at"": ""2016-10-12T12:29:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1018"",
        ""organization_guid"": ""81683525-60e3-4c7e-aec4-cd4148fc4553"",
        ""space_quota_definition_guid"": null,
        ""isolation_segment_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/bdb05453-6f46-4003-bbdd-8119a1d5495e"",
        ""developers_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/developers"",
        ""managers_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/managers"",
        ""auditors_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/auditors"",
        ""apps_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/apps"",
        ""routes_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/routes"",
        ""domains_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/domains"",
        ""service_instances_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/service_instances"",
        ""app_events_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/app_events"",
        ""events_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/events"",
        ""security_groups_url"": ""/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.ListAllSpacesForDomainDeprecated(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("81683525-60e3-4c7e-aec4-cd4148fc4553", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:28Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1018", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("81683525-60e3-4c7e-aec4-cd4148fc4553", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].IsolationSegmentGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj[0].AllowSsh), true);
                Assert.AreEqual("/v2/organizations/bdb05453-6f46-4003-bbdd-8119a1d5495e", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/c9c2e8d2-55e5-4a8a-bc4c-54682e71f2d2/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""507d1463-de65-48bf-bd08-6073d77a32db"",
    ""url"": ""/v2/shared_domains/dd673239-4732-4439-a035-8bb4e9f00004"",
    ""created_at"": ""2016-10-12T12:29:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-69.example.com"",
    ""router_group_guid"": null,
    ""router_group_type"": null
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.RetrieveDomainDeprecated(guid).Result;


                Assert.AreEqual("507d1463-de65-48bf-bd08-6073d77a32db", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/shared_domains/dd673239-4732-4439-a035-8bb4e9f00004", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-69.example.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupType), true);

            }
        }

        [TestMethod]
        public void CreateSharedDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""07706b03-ad93-4937-a2d8-3a529e350e6b"",
    ""url"": ""/v2/shared_domains/11e307b8-6e99-45a8-9267-a5c986ca3545"",
    ""created_at"": ""2016-10-12T12:29:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""router_group_guid"": null,
    ""router_group_type"": null
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateSharedDomainDeprecatedRequest value = new CreateSharedDomainDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreateSharedDomainDeprecated(value).Result;


                Assert.AreEqual("07706b03-ad93-4937-a2d8-3a529e350e6b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/shared_domains/11e307b8-6e99-45a8-9267-a5c986ca3545", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupType), true);

            }
        }

        [TestMethod]
        public void ListAllDomainsDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4971f91e-b9ba-4732-991a-f9fd55c2dd7a"",
        ""url"": ""/v2/shared_domains/6204e598-a470-4de1-9bdb-0d7c2dbb8b7f"",
        ""created_at"": ""2016-10-12T12:29:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""4971f91e-b9ba-4732-991a-f9fd55c2dd7a"",
        ""url"": ""/v2/shared_domains/a3ecfafc-35a2-44dd-bece-fb7d4c8b9d30"",
        ""created_at"": ""2016-10-12T12:29:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""4971f91e-b9ba-4732-991a-f9fd55c2dd7a"",
        ""url"": ""/v2/private_domains/e044bc75-82d4-439b-949a-e68880132b51"",
        ""created_at"": ""2016-10-12T12:29:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""4971f91e-b9ba-4732-991a-f9fd55c2dd7a"",
        ""owning_organization_url"": ""/v2/organizations/6163736e-2a7e-4a1d-bae5-cc9b76852746"",
        ""spaces_url"": ""/v2/domains/e044bc75-82d4-439b-949a-e68880132b51/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""4971f91e-b9ba-4732-991a-f9fd55c2dd7a"",
        ""url"": ""/v2/shared_domains/56c1958a-32e6-4b12-8fc4-ca64e128d2e4"",
        ""created_at"": ""2016-10-12T12:29:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-70.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.DomainsDeprecated.ListAllDomainsDeprecated().Result;

                Assert.AreEqual("4", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("4971f91e-b9ba-4732-991a-f9fd55c2dd7a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/shared_domains/6204e598-a470-4de1-9bdb-0d7c2dbb8b7f", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:19Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].RouterGroupGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].RouterGroupType), true);
                Assert.AreEqual("4971f91e-b9ba-4732-991a-f9fd55c2dd7a", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/shared_domains/a3ecfafc-35a2-44dd-bece-fb7d4c8b9d30", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:19Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].RouterGroupGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].RouterGroupType), true);
                Assert.AreEqual("4971f91e-b9ba-4732-991a-f9fd55c2dd7a", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/e044bc75-82d4-439b-949a-e68880132b51", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:19Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("4971f91e-b9ba-4732-991a-f9fd55c2dd7a", TestUtil.ToTestableString(obj[2].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/6163736e-2a7e-4a1d-bae5-cc9b76852746", TestUtil.ToTestableString(obj[2].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/e044bc75-82d4-439b-949a-e68880132b51/spaces", TestUtil.ToTestableString(obj[2].SpacesUrl), true);
                Assert.AreEqual("4971f91e-b9ba-4732-991a-f9fd55c2dd7a", TestUtil.ToTestableString(obj[3].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/shared_domains/56c1958a-32e6-4b12-8fc4-ca64e128d2e4", TestUtil.ToTestableString(obj[3].EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:28Z", TestUtil.ToTestableString(obj[3].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-70.example.com", TestUtil.ToTestableString(obj[3].Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].RouterGroupGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].RouterGroupType), true);

            }
        }

    }
}