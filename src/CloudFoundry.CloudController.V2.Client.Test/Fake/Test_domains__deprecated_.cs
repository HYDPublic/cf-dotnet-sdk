//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedEndpoint
{
        [TestMethod]
        public void ListAllSpacesForDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da"",
        ""url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da"",
        ""created_at"": ""2015-03-25T13:48:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1831"",
        ""organization_guid"": ""1491ff75-ab06-473f-9c2b-6d7d3df67ce4"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/1491ff75-ab06-473f-9c2b-6d7d3df67ce4"",
        ""developers_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/developers"",
        ""managers_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/managers"",
        ""auditors_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/auditors"",
        ""apps_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/apps"",
        ""routes_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/routes"",
        ""domains_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/domains"",
        ""service_instances_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/service_instances"",
        ""app_events_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/app_events"",
        ""events_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/events"",
        ""security_groups_url"": ""/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.ListAllSpacesForDomainDeprecated(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:58+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1831", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("1491ff75-ab06-473f-9c2b-6d7d3df67ce4", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("/v2/organizations/1491ff75-ab06-473f-9c2b-6d7d3df67ce4", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/e8b9cc7d-4f45-4d8a-b7c3-8e24ac2157da/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllDomainsDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""de2ac534-0f0a-4a85-83a1-b5f495a012f6"",
        ""url"": ""/v2/domains/de2ac534-0f0a-4a85-83a1-b5f495a012f6"",
        ""created_at"": ""2015-03-25T13:48:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ce1467f4-e038-4958-8877-96a260e79cf6"",
        ""url"": ""/v2/domains/ce1467f4-e038-4958-8877-96a260e79cf6"",
        ""created_at"": ""2015-03-25T13:48:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""4c2bb95c-b7b3-4899-a15f-e6e8cd5da30d"",
        ""url"": ""/v2/domains/4c2bb95c-b7b3-4899-a15f-e6e8cd5da30d"",
        ""created_at"": ""2015-03-25T13:48:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""b2171b18-5567-4bb9-a847-8ab18b239068"",
        ""owning_organization_url"": ""/v2/organizations/b2171b18-5567-4bb9-a847-8ab18b239068"",
        ""spaces_url"": ""/v2/domains/4c2bb95c-b7b3-4899-a15f-e6e8cd5da30d/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""3f2ff061-9841-41ae-a4ea-9bf9abac0342"",
        ""url"": ""/v2/domains/3f2ff061-9841-41ae-a4ea-9bf9abac0342"",
        ""created_at"": ""2015-03-25T13:48:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-54.example.com""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.DomainsDeprecated.ListAllDomainsDeprecated().Result;

                Assert.AreEqual("4", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("de2ac534-0f0a-4a85-83a1-b5f495a012f6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/de2ac534-0f0a-4a85-83a1-b5f495a012f6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:57+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("ce1467f4-e038-4958-8877-96a260e79cf6", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/ce1467f4-e038-4958-8877-96a260e79cf6", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:57+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("4c2bb95c-b7b3-4899-a15f-e6e8cd5da30d", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/4c2bb95c-b7b3-4899-a15f-e6e8cd5da30d", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:57+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("b2171b18-5567-4bb9-a847-8ab18b239068", TestUtil.ToTestableString(obj[2].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/b2171b18-5567-4bb9-a847-8ab18b239068", TestUtil.ToTestableString(obj[2].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/4c2bb95c-b7b3-4899-a15f-e6e8cd5da30d/spaces", TestUtil.ToTestableString(obj[2].SpacesUrl), true);
                Assert.AreEqual("3f2ff061-9841-41ae-a4ea-9bf9abac0342", TestUtil.ToTestableString(obj[3].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/3f2ff061-9841-41ae-a4ea-9bf9abac0342", TestUtil.ToTestableString(obj[3].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:58+00:00", TestUtil.ToTestableString(obj[3].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-54.example.com", TestUtil.ToTestableString(obj[3].Name), true);

            }
        }

        [TestMethod]
        public void DeleteDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.DomainsDeprecated.DeleteDomainDeprecated(guid).Wait();

            }
        }

        [TestMethod]
        public void CreatesDomainOwnedByGivenOrganizationDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""b0a4267d-0473-4680-974f-e285aac041dd"",
    ""url"": ""/v2/domains/b0a4267d-0473-4680-974f-e285aac041dd"",
    ""created_at"": ""2015-03-25T13:48:58+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""b0d44650-f8a9-41fb-899f-04eb96fe1221"",
    ""owning_organization_url"": ""/v2/organizations/b0d44650-f8a9-41fb-899f-04eb96fe1221"",
    ""spaces_url"": ""/v2/domains/b0a4267d-0473-4680-974f-e285aac041dd/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesDomainOwnedByGivenOrganizationDeprecatedRequest value = new CreatesDomainOwnedByGivenOrganizationDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesDomainOwnedByGivenOrganizationDeprecated(value).Result;


                Assert.AreEqual("b0a4267d-0473-4680-974f-e285aac041dd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/b0a4267d-0473-4680-974f-e285aac041dd", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("b0d44650-f8a9-41fb-899f-04eb96fe1221", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/b0d44650-f8a9-41fb-899f-04eb96fe1221", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/b0a4267d-0473-4680-974f-e285aac041dd/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""e3e458e9-8afe-4e83-a797-93271132aa89"",
    ""url"": ""/v2/domains/e3e458e9-8afe-4e83-a797-93271132aa89"",
    ""created_at"": ""2015-03-25T13:48:58+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-51.example.com""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.RetrieveDomainDeprecated(guid).Result;


                Assert.AreEqual("e3e458e9-8afe-4e83-a797-93271132aa89", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/e3e458e9-8afe-4e83-a797-93271132aa89", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-51.example.com", TestUtil.ToTestableString(obj.Name), true);

            }
        }

        [TestMethod]
        public void CreatesSharedDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""3be4edc3-631d-42d8-aa20-efefe36d56bc"",
    ""url"": ""/v2/domains/3be4edc3-631d-42d8-aa20-efefe36d56bc"",
    ""created_at"": ""2015-03-25T13:48:58+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesSharedDomainDeprecatedRequest value = new CreatesSharedDomainDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesSharedDomainDeprecated(value).Result;


                Assert.AreEqual("3be4edc3-631d-42d8-aa20-efefe36d56bc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/3be4edc3-631d-42d8-aa20-efefe36d56bc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);

            }
        }

    }
}