//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedEndpoint
{
        [TestMethod]
        public void ListAllSpacesForDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b1d91486-87ed-4564-81a1-b136e44897e4"",
        ""url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4"",
        ""created_at"": ""2015-05-19T15:27:02+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-45"",
        ""organization_guid"": ""83dd98e9-984c-4536-a2cb-98f5bea84766"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/83dd98e9-984c-4536-a2cb-98f5bea84766"",
        ""developers_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/developers"",
        ""managers_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/managers"",
        ""auditors_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/auditors"",
        ""apps_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/apps"",
        ""routes_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/routes"",
        ""domains_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/domains"",
        ""service_instances_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/service_instances"",
        ""app_events_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/app_events"",
        ""events_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/events"",
        ""security_groups_url"": ""/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.ListAllSpacesForDomainDeprecated(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b1d91486-87ed-4564-81a1-b136e44897e4", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:02+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-45", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("83dd98e9-984c-4536-a2cb-98f5bea84766", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("/v2/organizations/83dd98e9-984c-4536-a2cb-98f5bea84766", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/b1d91486-87ed-4564-81a1-b136e44897e4/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllDomainsDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ad290d09-347f-4c1a-9f82-214fb4a7e26d"",
        ""url"": ""/v2/domains/ad290d09-347f-4c1a-9f82-214fb4a7e26d"",
        ""created_at"": ""2015-05-19T15:27:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""7a17bcd2-4f46-4dcd-bd7d-94243fc82451"",
        ""url"": ""/v2/domains/7a17bcd2-4f46-4dcd-bd7d-94243fc82451"",
        ""created_at"": ""2015-05-19T15:27:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""dcc5affe-ca40-4927-a24f-9e34fff1ac83"",
        ""url"": ""/v2/domains/dcc5affe-ca40-4927-a24f-9e34fff1ac83"",
        ""created_at"": ""2015-05-19T15:27:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""24babb2a-12cf-4eb6-971e-1bdb417683d2"",
        ""owning_organization_url"": ""/v2/organizations/24babb2a-12cf-4eb6-971e-1bdb417683d2"",
        ""spaces_url"": ""/v2/domains/dcc5affe-ca40-4927-a24f-9e34fff1ac83/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""9daf3cd9-8a49-4a8c-b2a0-557f6bcc9694"",
        ""url"": ""/v2/domains/9daf3cd9-8a49-4a8c-b2a0-557f6bcc9694"",
        ""created_at"": ""2015-05-19T15:27:03+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-7.example.com""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.DomainsDeprecated.ListAllDomainsDeprecated().Result;

                Assert.AreEqual("4", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ad290d09-347f-4c1a-9f82-214fb4a7e26d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/ad290d09-347f-4c1a-9f82-214fb4a7e26d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:00+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("7a17bcd2-4f46-4dcd-bd7d-94243fc82451", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/7a17bcd2-4f46-4dcd-bd7d-94243fc82451", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:00+00:00", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("dcc5affe-ca40-4927-a24f-9e34fff1ac83", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/dcc5affe-ca40-4927-a24f-9e34fff1ac83", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:00+00:00", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("24babb2a-12cf-4eb6-971e-1bdb417683d2", TestUtil.ToTestableString(obj[2].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/24babb2a-12cf-4eb6-971e-1bdb417683d2", TestUtil.ToTestableString(obj[2].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/dcc5affe-ca40-4927-a24f-9e34fff1ac83/spaces", TestUtil.ToTestableString(obj[2].SpacesUrl), true);
                Assert.AreEqual("9daf3cd9-8a49-4a8c-b2a0-557f6bcc9694", TestUtil.ToTestableString(obj[3].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/9daf3cd9-8a49-4a8c-b2a0-557f6bcc9694", TestUtil.ToTestableString(obj[3].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:03+00:00", TestUtil.ToTestableString(obj[3].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-7.example.com", TestUtil.ToTestableString(obj[3].Name), true);

            }
        }

        [TestMethod]
        public void DeleteDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.DomainsDeprecated.DeleteDomainDeprecated(guid).Wait();

            }
        }

        [TestMethod]
        public void CreatesDomainOwnedByGivenOrganizationDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""e155b9f1-861c-4ef7-b8dc-53459c967f97"",
    ""url"": ""/v2/domains/e155b9f1-861c-4ef7-b8dc-53459c967f97"",
    ""created_at"": ""2015-05-19T15:27:02+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""cfeb63b7-5ae5-4325-98a0-01ce3bcdb132"",
    ""owning_organization_url"": ""/v2/organizations/cfeb63b7-5ae5-4325-98a0-01ce3bcdb132"",
    ""spaces_url"": ""/v2/domains/e155b9f1-861c-4ef7-b8dc-53459c967f97/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesDomainOwnedByGivenOrganizationDeprecatedRequest value = new CreatesDomainOwnedByGivenOrganizationDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesDomainOwnedByGivenOrganizationDeprecated(value).Result;


                Assert.AreEqual("e155b9f1-861c-4ef7-b8dc-53459c967f97", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/e155b9f1-861c-4ef7-b8dc-53459c967f97", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:02+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("cfeb63b7-5ae5-4325-98a0-01ce3bcdb132", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/cfeb63b7-5ae5-4325-98a0-01ce3bcdb132", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/e155b9f1-861c-4ef7-b8dc-53459c967f97/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""9456cf45-606a-4ebd-a7f9-2cccb1bac200"",
    ""url"": ""/v2/domains/9456cf45-606a-4ebd-a7f9-2cccb1bac200"",
    ""created_at"": ""2015-05-19T15:27:02+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-3.example.com""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.RetrieveDomainDeprecated(guid).Result;


                Assert.AreEqual("9456cf45-606a-4ebd-a7f9-2cccb1bac200", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/9456cf45-606a-4ebd-a7f9-2cccb1bac200", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:02+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-3.example.com", TestUtil.ToTestableString(obj.Name), true);

            }
        }

        [TestMethod]
        public void CreatesSharedDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""6ac42073-0c49-43a7-b991-06d3130d4e53"",
    ""url"": ""/v2/domains/6ac42073-0c49-43a7-b991-06d3130d4e53"",
    ""created_at"": ""2015-05-19T15:27:02+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesSharedDomainDeprecatedRequest value = new CreatesSharedDomainDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesSharedDomainDeprecated(value).Result;


                Assert.AreEqual("6ac42073-0c49-43a7-b991-06d3130d4e53", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/6ac42073-0c49-43a7-b991-06d3130d4e53", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:02+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);

            }
        }

    }
}