//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class RoutesMappingEndpoint
{
        [TestMethod]
        public void RetrieveRouteMappingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""04d93932-9dfb-4915-b3d3-f0a3e64c35bb"",
    ""url"": ""/v2/route_mappings/bb6167f3-d14a-4ef0-aa0d-619c469751f3"",
    ""created_at"": ""2016-03-30T10:15:27Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_port"": 8888,
    ""app_guid"": ""04d93932-9dfb-4915-b3d3-f0a3e64c35bb"",
    ""route_guid"": ""04d93932-9dfb-4915-b3d3-f0a3e64c35bb"",
    ""app_url"": ""/v2/apps/7745cd7e-ad7f-4af1-8bfd-d6cefb74317e"",
    ""route_url"": ""/v2/routes/86bdd27c-d6ca-4792-b853-a225e7215770""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.RoutesMapping.RetrieveRouteMapping(guid).Result;


                Assert.AreEqual("04d93932-9dfb-4915-b3d3-f0a3e64c35bb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/bb6167f3-d14a-4ef0-aa0d-619c469751f3", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj.AppPort), true);
                Assert.AreEqual("04d93932-9dfb-4915-b3d3-f0a3e64c35bb", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("04d93932-9dfb-4915-b3d3-f0a3e64c35bb", TestUtil.ToTestableString(obj.RouteGuid), true);
                Assert.AreEqual("/v2/apps/7745cd7e-ad7f-4af1-8bfd-d6cefb74317e", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/routes/86bdd27c-d6ca-4792-b853-a225e7215770", TestUtil.ToTestableString(obj.RouteUrl), true);

            }
        }

        [TestMethod]
        public void DeleteRouteMappingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.RoutesMapping.DeleteRouteMapping(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllRouteMappingsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ed662734-457a-41e8-ac91-319ac54f656b"",
        ""url"": ""/v2/route_mappings/80e5c386-f78d-49f6-a506-2063b9553eda"",
        ""created_at"": ""2016-03-30T10:15:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_port"": 8888,
        ""app_guid"": ""ed662734-457a-41e8-ac91-319ac54f656b"",
        ""route_guid"": ""ed662734-457a-41e8-ac91-319ac54f656b"",
        ""app_url"": ""/v2/apps/19e5f571-6166-4066-9edb-adbf3bccf4b3"",
        ""route_url"": ""/v2/routes/457b6d61-facc-4acc-b5d0-c106e836047b""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.RoutesMapping.ListAllRouteMappings().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ed662734-457a-41e8-ac91-319ac54f656b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/80e5c386-f78d-49f6-a506-2063b9553eda", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:28Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj[0].AppPort), true);
                Assert.AreEqual("ed662734-457a-41e8-ac91-319ac54f656b", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("ed662734-457a-41e8-ac91-319ac54f656b", TestUtil.ToTestableString(obj[0].RouteGuid), true);
                Assert.AreEqual("/v2/apps/19e5f571-6166-4066-9edb-adbf3bccf4b3", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/routes/457b6d61-facc-4acc-b5d0-c106e836047b", TestUtil.ToTestableString(obj[0].RouteUrl), true);

            }
        }

        [TestMethod]
        public void MappingAppAndRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""01a5e871-0432-4501-8ee4-ae3bfa1c3ecd"",
    ""url"": ""/v2/route_mappings/bfadc5f4-039d-472f-ba10-6b4d0828f9ce"",
    ""created_at"": ""2016-03-30T10:15:27Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_port"": 8888,
    ""app_guid"": ""01a5e871-0432-4501-8ee4-ae3bfa1c3ecd"",
    ""route_guid"": ""01a5e871-0432-4501-8ee4-ae3bfa1c3ecd"",
    ""app_url"": ""/v2/apps/9a1886da-63f3-41e6-9fc7-9e8b602ebbcf"",
    ""route_url"": ""/v2/routes/2e5677c5-a0f6-46ec-8f7c-60c71c2b0c57""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                MappingAppAndRouteRequest value = new MappingAppAndRouteRequest();


                var obj = cfClient.RoutesMapping.MappingAppAndRoute(value).Result;


                Assert.AreEqual("01a5e871-0432-4501-8ee4-ae3bfa1c3ecd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/bfadc5f4-039d-472f-ba10-6b4d0828f9ce", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj.AppPort), true);
                Assert.AreEqual("01a5e871-0432-4501-8ee4-ae3bfa1c3ecd", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("01a5e871-0432-4501-8ee4-ae3bfa1c3ecd", TestUtil.ToTestableString(obj.RouteGuid), true);
                Assert.AreEqual("/v2/apps/9a1886da-63f3-41e6-9fc7-9e8b602ebbcf", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/routes/2e5677c5-a0f6-46ec-8f7c-60c71c2b0c57", TestUtil.ToTestableString(obj.RouteUrl), true);

            }
        }

    }
}