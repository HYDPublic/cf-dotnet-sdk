//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class RoutesMappingEndpoint
{
        [TestMethod]
        public void RetrieveRouteMappingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""17cdbfa5-90d7-4289-a3df-5797810c4e1c"",
    ""url"": ""/v2/route_mappings/9c1939f7-8795-4400-ab50-400d3b70095f"",
    ""created_at"": ""2016-09-02T11:52:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_port"": 8888,
    ""app_guid"": ""17cdbfa5-90d7-4289-a3df-5797810c4e1c"",
    ""route_guid"": ""17cdbfa5-90d7-4289-a3df-5797810c4e1c"",
    ""app_url"": ""/v2/apps/8fb07b50-48a5-48e9-bd93-9afb7fb22c42"",
    ""route_url"": ""/v2/routes/c4a6a96f-eca3-45a9-88f4-118166a79e0b""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.RoutesMapping.RetrieveRouteMapping(guid).Result;


                Assert.AreEqual("17cdbfa5-90d7-4289-a3df-5797810c4e1c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/9c1939f7-8795-4400-ab50-400d3b70095f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj.AppPort), true);
                Assert.AreEqual("17cdbfa5-90d7-4289-a3df-5797810c4e1c", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("17cdbfa5-90d7-4289-a3df-5797810c4e1c", TestUtil.ToTestableString(obj.RouteGuid), true);
                Assert.AreEqual("/v2/apps/8fb07b50-48a5-48e9-bd93-9afb7fb22c42", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/routes/c4a6a96f-eca3-45a9-88f4-118166a79e0b", TestUtil.ToTestableString(obj.RouteUrl), true);

            }
        }

        [TestMethod]
        public void DeleteRouteMappingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.RoutesMapping.DeleteRouteMapping(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllRouteMappingsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f9cad94f-a917-469d-8c09-af8f4fa9cd42"",
        ""url"": ""/v2/route_mappings/888f1f3b-3221-4022-a9e6-3574b75c0de2"",
        ""created_at"": ""2016-09-02T11:52:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_port"": 8888,
        ""app_guid"": ""f9cad94f-a917-469d-8c09-af8f4fa9cd42"",
        ""route_guid"": ""f9cad94f-a917-469d-8c09-af8f4fa9cd42"",
        ""app_url"": ""/v2/apps/51a616de-6191-4f6f-927a-192c0c87c5a3"",
        ""route_url"": ""/v2/routes/5b58ab91-ffd3-4959-b6a5-7d48ad1e220d""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.RoutesMapping.ListAllRouteMappings().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f9cad94f-a917-469d-8c09-af8f4fa9cd42", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/888f1f3b-3221-4022-a9e6-3574b75c0de2", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:29Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj[0].AppPort), true);
                Assert.AreEqual("f9cad94f-a917-469d-8c09-af8f4fa9cd42", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("f9cad94f-a917-469d-8c09-af8f4fa9cd42", TestUtil.ToTestableString(obj[0].RouteGuid), true);
                Assert.AreEqual("/v2/apps/51a616de-6191-4f6f-927a-192c0c87c5a3", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/routes/5b58ab91-ffd3-4959-b6a5-7d48ad1e220d", TestUtil.ToTestableString(obj[0].RouteUrl), true);

            }
        }

        [TestMethod]
        public void MappingAppAndRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""a1d87f14-db81-4ad1-b65f-35ade2172970"",
    ""url"": ""/v2/route_mappings/1d6bdeef-3b1f-41e3-8d24-9b99055f8622"",
    ""created_at"": ""2016-09-02T11:52:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_port"": 8888,
    ""app_guid"": ""a1d87f14-db81-4ad1-b65f-35ade2172970"",
    ""route_guid"": ""a1d87f14-db81-4ad1-b65f-35ade2172970"",
    ""app_url"": ""/v2/apps/5c7de19e-e7b2-49ce-9741-13058d1cf0d5"",
    ""route_url"": ""/v2/routes/067f8c6e-efd1-4455-8227-77c30f1427d8""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                MappingAppAndRouteRequest value = new MappingAppAndRouteRequest();


                var obj = cfClient.RoutesMapping.MappingAppAndRoute(value).Result;


                Assert.AreEqual("a1d87f14-db81-4ad1-b65f-35ade2172970", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/1d6bdeef-3b1f-41e3-8d24-9b99055f8622", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj.AppPort), true);
                Assert.AreEqual("a1d87f14-db81-4ad1-b65f-35ade2172970", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("a1d87f14-db81-4ad1-b65f-35ade2172970", TestUtil.ToTestableString(obj.RouteGuid), true);
                Assert.AreEqual("/v2/apps/5c7de19e-e7b2-49ce-9741-13058d1cf0d5", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/routes/067f8c6e-efd1-4455-8227-77c30f1427d8", TestUtil.ToTestableString(obj.RouteUrl), true);

            }
        }

        [TestMethod]
        public void UpdateRouteMappingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""c921499d-17f3-4931-ab2b-8e2ad98a5c54"",
    ""url"": ""/v2/route_mappings/4f1b6bba-45fc-4c3c-b36b-046e5c663be2"",
    ""created_at"": ""2016-09-02T11:52:29Z"",
    ""updated_at"": ""2016-09-02T11:52:29Z""
  },
  ""entity"": {
    ""app_port"": 8889,
    ""app_guid"": ""c921499d-17f3-4931-ab2b-8e2ad98a5c54"",
    ""route_guid"": ""c921499d-17f3-4931-ab2b-8e2ad98a5c54"",
    ""app_url"": ""/v2/apps/fd0b064b-2012-4748-9164-674475c1f7f1"",
    ""route_url"": ""/v2/routes/d4737cf7-12ff-429d-933d-e3d7d9aa15db""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateRouteMappingRequest value = new UpdateRouteMappingRequest();


                var obj = cfClient.RoutesMapping.UpdateRouteMapping(guid, value).Result;


                Assert.AreEqual("c921499d-17f3-4931-ab2b-8e2ad98a5c54", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/4f1b6bba-45fc-4c3c-b36b-046e5c663be2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:52:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-09-02T11:52:29Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8889", TestUtil.ToTestableString(obj.AppPort), true);
                Assert.AreEqual("c921499d-17f3-4931-ab2b-8e2ad98a5c54", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("c921499d-17f3-4931-ab2b-8e2ad98a5c54", TestUtil.ToTestableString(obj.RouteGuid), true);
                Assert.AreEqual("/v2/apps/fd0b064b-2012-4748-9164-674475c1f7f1", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/routes/d4737cf7-12ff-429d-933d-e3d7d9aa15db", TestUtil.ToTestableString(obj.RouteUrl), true);

            }
        }

    }
}