//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class RoutesMappingEndpoint
{
        [TestMethod]
        public void RetrieveRouteMappingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""48ea12cd-0df9-4b37-af02-8a780982b18c"",
    ""url"": ""/v2/route_mappings/881c2063-049a-42b6-8e2a-961d9af7fbd9"",
    ""created_at"": ""2016-03-21T10:59:54Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_port"": 8888,
    ""app_guid"": ""48ea12cd-0df9-4b37-af02-8a780982b18c"",
    ""route_guid"": ""48ea12cd-0df9-4b37-af02-8a780982b18c"",
    ""app_url"": ""/v2/apps/d5d6c0c2-0fd0-4eda-9a20-be38eb262825"",
    ""route_url"": ""/v2/routes/80ee4296-a186-47b2-9dcc-7ef048e79b34""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.RoutesMapping.RetrieveRouteMapping(guid).Result;


                Assert.AreEqual("48ea12cd-0df9-4b37-af02-8a780982b18c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/881c2063-049a-42b6-8e2a-961d9af7fbd9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj.AppPort), true);
                Assert.AreEqual("48ea12cd-0df9-4b37-af02-8a780982b18c", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("48ea12cd-0df9-4b37-af02-8a780982b18c", TestUtil.ToTestableString(obj.RouteGuid), true);
                Assert.AreEqual("/v2/apps/d5d6c0c2-0fd0-4eda-9a20-be38eb262825", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/routes/80ee4296-a186-47b2-9dcc-7ef048e79b34", TestUtil.ToTestableString(obj.RouteUrl), true);

            }
        }

        [TestMethod]
        public void DeleteRouteMappingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.RoutesMapping.DeleteRouteMapping(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllRouteMappingsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3f1f25f6-ae5d-47da-8ba3-c75923f1625d"",
        ""url"": ""/v2/route_mappings/ae13b404-721b-4fc0-98e8-a705b4812c0d"",
        ""created_at"": ""2016-03-21T10:59:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_port"": 8888,
        ""app_guid"": ""3f1f25f6-ae5d-47da-8ba3-c75923f1625d"",
        ""route_guid"": ""3f1f25f6-ae5d-47da-8ba3-c75923f1625d"",
        ""app_url"": ""/v2/apps/4f865ad5-64ef-4ee7-a4f0-b03a317b04d6"",
        ""route_url"": ""/v2/routes/f0b34090-825b-4f23-b342-992174b20ace""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.RoutesMapping.ListAllRouteMappings().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("3f1f25f6-ae5d-47da-8ba3-c75923f1625d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/ae13b404-721b-4fc0-98e8-a705b4812c0d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:54Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj[0].AppPort), true);
                Assert.AreEqual("3f1f25f6-ae5d-47da-8ba3-c75923f1625d", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("3f1f25f6-ae5d-47da-8ba3-c75923f1625d", TestUtil.ToTestableString(obj[0].RouteGuid), true);
                Assert.AreEqual("/v2/apps/4f865ad5-64ef-4ee7-a4f0-b03a317b04d6", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/routes/f0b34090-825b-4f23-b342-992174b20ace", TestUtil.ToTestableString(obj[0].RouteUrl), true);

            }
        }

        [TestMethod]
        public void MappingAppAndRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""304c2a52-da65-49dd-a4af-793f61cf96bf"",
    ""url"": ""/v2/route_mappings/1afd7aea-56e2-4e5b-80ef-4e84a7119c33"",
    ""created_at"": ""2016-03-21T10:59:54Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_port"": 8888,
    ""app_guid"": ""304c2a52-da65-49dd-a4af-793f61cf96bf"",
    ""route_guid"": ""304c2a52-da65-49dd-a4af-793f61cf96bf"",
    ""app_url"": ""/v2/apps/723d17db-5c09-4cc1-b7a1-793cbbf6517d"",
    ""route_url"": ""/v2/routes/deac5948-9e9e-447e-a3bb-a8002c5ca86b""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                MappingAppAndRouteRequest value = new MappingAppAndRouteRequest();


                var obj = cfClient.RoutesMapping.MappingAppAndRoute(value).Result;


                Assert.AreEqual("304c2a52-da65-49dd-a4af-793f61cf96bf", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/route_mappings/1afd7aea-56e2-4e5b-80ef-4e84a7119c33", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8888", TestUtil.ToTestableString(obj.AppPort), true);
                Assert.AreEqual("304c2a52-da65-49dd-a4af-793f61cf96bf", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("304c2a52-da65-49dd-a4af-793f61cf96bf", TestUtil.ToTestableString(obj.RouteGuid), true);
                Assert.AreEqual("/v2/apps/723d17db-5c09-4cc1-b7a1-793cbbf6517d", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/routes/deac5948-9e9e-447e-a3bb-a8002c5ca86b", TestUtil.ToTestableString(obj.RouteUrl), true);

            }
        }

    }
}