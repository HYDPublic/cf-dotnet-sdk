//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsEndpoint
{
        [TestMethod]
        public void UpdateSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""5dca81a8-939b-47a0-ab03-ff69299b9ce1"",
    ""url"": ""/v2/space_quota_definitions/5dca81a8-939b-47a0-ab03-ff69299b9ce1"",
    ""created_at"": ""2015-03-25T13:48:43+00:00"",
    ""updated_at"": ""2015-03-25T13:48:43+00:00""
  },
  ""entity"": {
    ""name"": ""name-340"",
    ""organization_guid"": ""e3a56c43-cf37-4dee-abee-c9af8879d29c"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/e3a56c43-cf37-4dee-abee-c9af8879d29c"",
    ""spaces_url"": ""/v2/space_quota_definitions/5dca81a8-939b-47a0-ab03-ff69299b9ce1/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateSpaceQuotaDefinitionRequest value = new UpdateSpaceQuotaDefinitionRequest();


                var obj = cfClient.SpaceQuotaDefinitions.UpdateSpaceQuotaDefinition(guid, value).Result;


                Assert.AreEqual("5dca81a8-939b-47a0-ab03-ff69299b9ce1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/5dca81a8-939b-47a0-ab03-ff69299b9ce1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-340", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("e3a56c43-cf37-4dee-abee-c9af8879d29c", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/e3a56c43-cf37-4dee-abee-c9af8879d29c", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/5dca81a8-939b-47a0-ab03-ff69299b9ce1/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void CreateSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""7028702c-2edf-4235-be58-ffdb4e005824"",
    ""url"": ""/v2/space_quota_definitions/7028702c-2edf-4235-be58-ffdb4e005824"",
    ""created_at"": ""2015-03-25T13:48:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""e6797c9a-56e3-4b2a-b07a-50f31b54f3fe"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 5,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/e6797c9a-56e3-4b2a-b07a-50f31b54f3fe"",
    ""spaces_url"": ""/v2/space_quota_definitions/7028702c-2edf-4235-be58-ffdb4e005824/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateSpaceQuotaDefinitionRequest value = new CreateSpaceQuotaDefinitionRequest();


                var obj = cfClient.SpaceQuotaDefinitions.CreateSpaceQuotaDefinition(value).Result;


                Assert.AreEqual("7028702c-2edf-4235-be58-ffdb4e005824", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/7028702c-2edf-4235-be58-ffdb4e005824", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("e6797c9a-56e3-4b2a-b07a-50f31b54f3fe", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/e6797c9a-56e3-4b2a-b07a-50f31b54f3fe", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/7028702c-2edf-4235-be58-ffdb4e005824/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSpacesForSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""604de2e5-23d7-45af-90b2-b367c6f94915"",
        ""url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915"",
        ""created_at"": ""2015-03-25T13:48:43+00:00"",
        ""updated_at"": ""2015-03-25T13:48:43+00:00""
      },
      ""entity"": {
        ""name"": ""name-327"",
        ""organization_guid"": ""966504b1-8eb7-49d7-82f3-14dc04c76bc7"",
        ""space_quota_definition_guid"": ""669a385c-9312-43ad-ad4c-db8209d3fb53"",
        ""organization_url"": ""/v2/organizations/966504b1-8eb7-49d7-82f3-14dc04c76bc7"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/669a385c-9312-43ad-ad4c-db8209d3fb53"",
        ""developers_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/developers"",
        ""managers_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/managers"",
        ""auditors_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/auditors"",
        ""apps_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/apps"",
        ""routes_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/routes"",
        ""domains_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/domains"",
        ""service_instances_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/service_instances"",
        ""app_events_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/app_events"",
        ""events_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/events"",
        ""security_groups_url"": ""/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.ListAllSpacesForSpaceQuotaDefinition(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("604de2e5-23d7-45af-90b2-b367c6f94915", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-327", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("966504b1-8eb7-49d7-82f3-14dc04c76bc7", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("669a385c-9312-43ad-ad4c-db8209d3fb53", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("/v2/organizations/966504b1-8eb7-49d7-82f3-14dc04c76bc7", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/669a385c-9312-43ad-ad4c-db8209d3fb53", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/604de2e5-23d7-45af-90b2-b367c6f94915/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void AssociateSpaceWithSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""97297239-035c-4e42-bbc9-fbf575b6244b"",
    ""url"": ""/v2/space_quota_definitions/97297239-035c-4e42-bbc9-fbf575b6244b"",
    ""created_at"": ""2015-03-25T13:48:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-314"",
    ""organization_guid"": ""f7398e96-a54b-49b2-a3b4-0c6cef4139ac"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/f7398e96-a54b-49b2-a3b4-0c6cef4139ac"",
    ""spaces_url"": ""/v2/space_quota_definitions/97297239-035c-4e42-bbc9-fbf575b6244b/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? space_guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.AssociateSpaceWithSpaceQuotaDefinition(guid, space_guid).Result;


                Assert.AreEqual("97297239-035c-4e42-bbc9-fbf575b6244b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/97297239-035c-4e42-bbc9-fbf575b6244b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-314", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("f7398e96-a54b-49b2-a3b4-0c6cef4139ac", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/f7398e96-a54b-49b2-a3b4-0c6cef4139ac", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/97297239-035c-4e42-bbc9-fbf575b6244b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""3cf1a3fc-b78e-4790-9849-b476ea6728e5"",
    ""url"": ""/v2/space_quota_definitions/3cf1a3fc-b78e-4790-9849-b476ea6728e5"",
    ""created_at"": ""2015-03-25T13:48:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-337"",
    ""organization_guid"": ""52a102cc-5e9a-4a22-898f-a9fe65a5e99d"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/52a102cc-5e9a-4a22-898f-a9fe65a5e99d"",
    ""spaces_url"": ""/v2/space_quota_definitions/3cf1a3fc-b78e-4790-9849-b476ea6728e5/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.RetrieveSpaceQuotaDefinition(guid).Result;


                Assert.AreEqual("3cf1a3fc-b78e-4790-9849-b476ea6728e5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/3cf1a3fc-b78e-4790-9849-b476ea6728e5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-337", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("52a102cc-5e9a-4a22-898f-a9fe65a5e99d", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/52a102cc-5e9a-4a22-898f-a9fe65a5e99d", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/3cf1a3fc-b78e-4790-9849-b476ea6728e5/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void DeleteSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.SpaceQuotaDefinitions.DeleteSpaceQuotaDefinition(guid).Wait();

            }
        }

        [TestMethod]
        public void RemoveSpaceFromSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""234fd85a-9fe4-4ecb-9df0-52b0279f0b92"",
    ""url"": ""/v2/space_quota_definitions/234fd85a-9fe4-4ecb-9df0-52b0279f0b92"",
    ""created_at"": ""2015-03-25T13:48:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-319"",
    ""organization_guid"": ""1fa571e2-9f83-4c97-8040-76c68000dbb9"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/1fa571e2-9f83-4c97-8040-76c68000dbb9"",
    ""spaces_url"": ""/v2/space_quota_definitions/234fd85a-9fe4-4ecb-9df0-52b0279f0b92/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? space_guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.RemoveSpaceFromSpaceQuotaDefinition(guid, space_guid).Result;


                Assert.AreEqual("234fd85a-9fe4-4ecb-9df0-52b0279f0b92", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/234fd85a-9fe4-4ecb-9df0-52b0279f0b92", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-319", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("1fa571e2-9f83-4c97-8040-76c68000dbb9", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/1fa571e2-9f83-4c97-8040-76c68000dbb9", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/234fd85a-9fe4-4ecb-9df0-52b0279f0b92/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSpaceQuotaDefinitionsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f7efbf06-7564-4635-952c-73c333f025e0"",
        ""url"": ""/v2/space_quota_definitions/f7efbf06-7564-4635-952c-73c333f025e0"",
        ""created_at"": ""2015-03-25T13:48:43+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-343"",
        ""organization_guid"": ""2c337762-eb19-48af-9647-a5ccefb8dc7d"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/2c337762-eb19-48af-9647-a5ccefb8dc7d"",
        ""spaces_url"": ""/v2/space_quota_definitions/f7efbf06-7564-4635-952c-73c333f025e0/spaces""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.SpaceQuotaDefinitions.ListAllSpaceQuotaDefinitions().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f7efbf06-7564-4635-952c-73c333f025e0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/f7efbf06-7564-4635-952c-73c333f025e0", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-343", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("2c337762-eb19-48af-9647-a5ccefb8dc7d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj[0].NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj[0].TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj[0].TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj[0].MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj[0].InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/2c337762-eb19-48af-9647-a5ccefb8dc7d", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/f7efbf06-7564-4635-952c-73c333f025e0/spaces", TestUtil.ToTestableString(obj[0].SpacesUrl), true);

            }
        }

    }
}