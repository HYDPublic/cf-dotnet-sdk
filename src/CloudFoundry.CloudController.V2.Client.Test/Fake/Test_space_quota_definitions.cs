//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsEndpoint
{
        [TestMethod]
        public void UpdateSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""6e441788-d421-4fe7-abed-3b53de816f26"",
    ""url"": ""/v2/space_quota_definitions/6e441788-d421-4fe7-abed-3b53de816f26"",
    ""created_at"": ""2015-04-10T19:42:07+00:00"",
    ""updated_at"": ""2015-04-10T19:42:07+00:00""
  },
  ""entity"": {
    ""name"": ""name-1819"",
    ""organization_guid"": ""6b4a67ae-78fa-4d02-9a22-e6385ac7af2a"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/6b4a67ae-78fa-4d02-9a22-e6385ac7af2a"",
    ""spaces_url"": ""/v2/space_quota_definitions/6e441788-d421-4fe7-abed-3b53de816f26/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateSpaceQuotaDefinitionRequest value = new UpdateSpaceQuotaDefinitionRequest();


                var obj = cfClient.SpaceQuotaDefinitions.UpdateSpaceQuotaDefinition(guid, value).Result;


                Assert.AreEqual("6e441788-d421-4fe7-abed-3b53de816f26", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/6e441788-d421-4fe7-abed-3b53de816f26", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:42:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-04-10T19:42:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1819", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("6b4a67ae-78fa-4d02-9a22-e6385ac7af2a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/6b4a67ae-78fa-4d02-9a22-e6385ac7af2a", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/6e441788-d421-4fe7-abed-3b53de816f26/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void CreateSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""4ea27040-2a01-42c8-b9e3-d69991b7e2b5"",
    ""url"": ""/v2/space_quota_definitions/4ea27040-2a01-42c8-b9e3-d69991b7e2b5"",
    ""created_at"": ""2015-04-10T19:42:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""f6decc83-1e77-464b-aa04-98b70e8dbf39"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 5,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/f6decc83-1e77-464b-aa04-98b70e8dbf39"",
    ""spaces_url"": ""/v2/space_quota_definitions/4ea27040-2a01-42c8-b9e3-d69991b7e2b5/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateSpaceQuotaDefinitionRequest value = new CreateSpaceQuotaDefinitionRequest();


                var obj = cfClient.SpaceQuotaDefinitions.CreateSpaceQuotaDefinition(value).Result;


                Assert.AreEqual("4ea27040-2a01-42c8-b9e3-d69991b7e2b5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/4ea27040-2a01-42c8-b9e3-d69991b7e2b5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("f6decc83-1e77-464b-aa04-98b70e8dbf39", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/f6decc83-1e77-464b-aa04-98b70e8dbf39", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/4ea27040-2a01-42c8-b9e3-d69991b7e2b5/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSpacesForSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""94f2462e-5d0d-4bda-b48b-4c3127ca44bd"",
        ""url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd"",
        ""created_at"": ""2015-04-10T19:42:07+00:00"",
        ""updated_at"": ""2015-04-10T19:42:07+00:00""
      },
      ""entity"": {
        ""name"": ""name-1825"",
        ""organization_guid"": ""04968a4e-69a4-48c5-b63e-f91bfbd09057"",
        ""space_quota_definition_guid"": ""a61dc685-beb3-4c48-8c3b-4c20d5025c90"",
        ""organization_url"": ""/v2/organizations/04968a4e-69a4-48c5-b63e-f91bfbd09057"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/a61dc685-beb3-4c48-8c3b-4c20d5025c90"",
        ""developers_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/developers"",
        ""managers_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/managers"",
        ""auditors_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/auditors"",
        ""apps_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/apps"",
        ""routes_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/routes"",
        ""domains_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/domains"",
        ""service_instances_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/service_instances"",
        ""app_events_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/app_events"",
        ""events_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/events"",
        ""security_groups_url"": ""/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.ListAllSpacesForSpaceQuotaDefinition(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("94f2462e-5d0d-4bda-b48b-4c3127ca44bd", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:42:07+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-04-10T19:42:07+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1825", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("04968a4e-69a4-48c5-b63e-f91bfbd09057", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("a61dc685-beb3-4c48-8c3b-4c20d5025c90", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("/v2/organizations/04968a4e-69a4-48c5-b63e-f91bfbd09057", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/a61dc685-beb3-4c48-8c3b-4c20d5025c90", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/94f2462e-5d0d-4bda-b48b-4c3127ca44bd/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void AssociateSpaceWithSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""bb97a3a8-ecfb-44fd-8c40-c8ff3a4ad999"",
    ""url"": ""/v2/space_quota_definitions/bb97a3a8-ecfb-44fd-8c40-c8ff3a4ad999"",
    ""created_at"": ""2015-04-10T19:42:07+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1832"",
    ""organization_guid"": ""b685f1bf-edd8-4a4f-bd34-cdd5b7e70cb5"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/b685f1bf-edd8-4a4f-bd34-cdd5b7e70cb5"",
    ""spaces_url"": ""/v2/space_quota_definitions/bb97a3a8-ecfb-44fd-8c40-c8ff3a4ad999/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? space_guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.AssociateSpaceWithSpaceQuotaDefinition(guid, space_guid).Result;


                Assert.AreEqual("bb97a3a8-ecfb-44fd-8c40-c8ff3a4ad999", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/bb97a3a8-ecfb-44fd-8c40-c8ff3a4ad999", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:42:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1832", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("b685f1bf-edd8-4a4f-bd34-cdd5b7e70cb5", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/b685f1bf-edd8-4a4f-bd34-cdd5b7e70cb5", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/bb97a3a8-ecfb-44fd-8c40-c8ff3a4ad999/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""2f8141cd-aba6-4495-aebd-836cd9270f9a"",
    ""url"": ""/v2/space_quota_definitions/2f8141cd-aba6-4495-aebd-836cd9270f9a"",
    ""created_at"": ""2015-04-10T19:42:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1845"",
    ""organization_guid"": ""80d86f10-ce83-4f6c-9eb7-c59662d6161c"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/80d86f10-ce83-4f6c-9eb7-c59662d6161c"",
    ""spaces_url"": ""/v2/space_quota_definitions/2f8141cd-aba6-4495-aebd-836cd9270f9a/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.RetrieveSpaceQuotaDefinition(guid).Result;


                Assert.AreEqual("2f8141cd-aba6-4495-aebd-836cd9270f9a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/2f8141cd-aba6-4495-aebd-836cd9270f9a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1845", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("80d86f10-ce83-4f6c-9eb7-c59662d6161c", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/80d86f10-ce83-4f6c-9eb7-c59662d6161c", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/2f8141cd-aba6-4495-aebd-836cd9270f9a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void DeleteSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.SpaceQuotaDefinitions.DeleteSpaceQuotaDefinition(guid).Wait();

            }
        }

        [TestMethod]
        public void RemoveSpaceFromSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""b15d702b-31a3-4fcd-ae42-86a59a8de0ba"",
    ""url"": ""/v2/space_quota_definitions/b15d702b-31a3-4fcd-ae42-86a59a8de0ba"",
    ""created_at"": ""2015-04-10T19:42:07+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1827"",
    ""organization_guid"": ""74dd3ee9-9e82-4870-a8d8-43d6e46026d1"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/74dd3ee9-9e82-4870-a8d8-43d6e46026d1"",
    ""spaces_url"": ""/v2/space_quota_definitions/b15d702b-31a3-4fcd-ae42-86a59a8de0ba/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? space_guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.RemoveSpaceFromSpaceQuotaDefinition(guid, space_guid).Result;


                Assert.AreEqual("b15d702b-31a3-4fcd-ae42-86a59a8de0ba", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/b15d702b-31a3-4fcd-ae42-86a59a8de0ba", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:42:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1827", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("74dd3ee9-9e82-4870-a8d8-43d6e46026d1", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/74dd3ee9-9e82-4870-a8d8-43d6e46026d1", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/b15d702b-31a3-4fcd-ae42-86a59a8de0ba/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSpaceQuotaDefinitionsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9d3e3e15-6261-401c-ba3a-f6fe0f59565b"",
        ""url"": ""/v2/space_quota_definitions/9d3e3e15-6261-401c-ba3a-f6fe0f59565b"",
        ""created_at"": ""2015-04-10T19:42:07+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1816"",
        ""organization_guid"": ""05090489-620d-4e5b-a267-fe7632b45bf6"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/05090489-620d-4e5b-a267-fe7632b45bf6"",
        ""spaces_url"": ""/v2/space_quota_definitions/9d3e3e15-6261-401c-ba3a-f6fe0f59565b/spaces""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.SpaceQuotaDefinitions.ListAllSpaceQuotaDefinitions().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("9d3e3e15-6261-401c-ba3a-f6fe0f59565b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/9d3e3e15-6261-401c-ba3a-f6fe0f59565b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T19:42:07+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1816", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("05090489-620d-4e5b-a267-fe7632b45bf6", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj[0].NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj[0].TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj[0].TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj[0].MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj[0].InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/05090489-620d-4e5b-a267-fe7632b45bf6", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/9d3e3e15-6261-401c-ba3a-f6fe0f59565b/spaces", TestUtil.ToTestableString(obj[0].SpacesUrl), true);

            }
        }

    }
}