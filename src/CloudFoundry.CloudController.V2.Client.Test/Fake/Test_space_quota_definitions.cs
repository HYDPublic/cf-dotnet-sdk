//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsEndpoint
{
        [TestMethod]
        public void UpdateSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""162eeaf0-96ea-4219-9e29-f94806012070"",
    ""url"": ""/v2/space_quota_definitions/162eeaf0-96ea-4219-9e29-f94806012070"",
    ""created_at"": ""2015-04-16T12:04:30+00:00"",
    ""updated_at"": ""2015-04-16T12:04:30+00:00""
  },
  ""entity"": {
    ""name"": ""name-1408"",
    ""organization_guid"": ""bbed56ce-e42e-4325-8a1c-16f098f1728f"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/bbed56ce-e42e-4325-8a1c-16f098f1728f"",
    ""spaces_url"": ""/v2/space_quota_definitions/162eeaf0-96ea-4219-9e29-f94806012070/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateSpaceQuotaDefinitionRequest value = new UpdateSpaceQuotaDefinitionRequest();


                var obj = cfClient.SpaceQuotaDefinitions.UpdateSpaceQuotaDefinition(guid, value).Result;


                Assert.AreEqual("162eeaf0-96ea-4219-9e29-f94806012070", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/162eeaf0-96ea-4219-9e29-f94806012070", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1408", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("bbed56ce-e42e-4325-8a1c-16f098f1728f", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/bbed56ce-e42e-4325-8a1c-16f098f1728f", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/162eeaf0-96ea-4219-9e29-f94806012070/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void CreateSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""8a7e4271-fc9e-4c51-84ae-2cf08009f77c"",
    ""url"": ""/v2/space_quota_definitions/8a7e4271-fc9e-4c51-84ae-2cf08009f77c"",
    ""created_at"": ""2015-04-16T12:04:30+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""ad363c15-4b85-4287-8c8a-63fad41f8dec"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 5,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/ad363c15-4b85-4287-8c8a-63fad41f8dec"",
    ""spaces_url"": ""/v2/space_quota_definitions/8a7e4271-fc9e-4c51-84ae-2cf08009f77c/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateSpaceQuotaDefinitionRequest value = new CreateSpaceQuotaDefinitionRequest();


                var obj = cfClient.SpaceQuotaDefinitions.CreateSpaceQuotaDefinition(value).Result;


                Assert.AreEqual("8a7e4271-fc9e-4c51-84ae-2cf08009f77c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/8a7e4271-fc9e-4c51-84ae-2cf08009f77c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("ad363c15-4b85-4287-8c8a-63fad41f8dec", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/ad363c15-4b85-4287-8c8a-63fad41f8dec", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/8a7e4271-fc9e-4c51-84ae-2cf08009f77c/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSpacesForSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""98aecf25-00a2-46fe-9a39-93314a34c810"",
        ""url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810"",
        ""created_at"": ""2015-04-16T12:04:30+00:00"",
        ""updated_at"": ""2015-04-16T12:04:30+00:00""
      },
      ""entity"": {
        ""name"": ""name-1396"",
        ""organization_guid"": ""4bc725ac-1f10-46ea-b8f8-2149eaffce08"",
        ""space_quota_definition_guid"": ""ca8c0c64-71a5-4d72-9d2a-1db125e532fb"",
        ""organization_url"": ""/v2/organizations/4bc725ac-1f10-46ea-b8f8-2149eaffce08"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/ca8c0c64-71a5-4d72-9d2a-1db125e532fb"",
        ""developers_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/developers"",
        ""managers_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/managers"",
        ""auditors_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/auditors"",
        ""apps_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/apps"",
        ""routes_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/routes"",
        ""domains_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/domains"",
        ""service_instances_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/service_instances"",
        ""app_events_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/app_events"",
        ""events_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/events"",
        ""security_groups_url"": ""/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.ListAllSpacesForSpaceQuotaDefinition(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("98aecf25-00a2-46fe-9a39-93314a34c810", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1396", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("4bc725ac-1f10-46ea-b8f8-2149eaffce08", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("ca8c0c64-71a5-4d72-9d2a-1db125e532fb", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("/v2/organizations/4bc725ac-1f10-46ea-b8f8-2149eaffce08", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/ca8c0c64-71a5-4d72-9d2a-1db125e532fb", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/98aecf25-00a2-46fe-9a39-93314a34c810/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void AssociateSpaceWithSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""7bb8428e-01e0-45ca-80a1-7a255a843565"",
    ""url"": ""/v2/space_quota_definitions/7bb8428e-01e0-45ca-80a1-7a255a843565"",
    ""created_at"": ""2015-04-16T12:04:30+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1403"",
    ""organization_guid"": ""3cc4db21-211f-42e4-945e-bd34708f2840"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/3cc4db21-211f-42e4-945e-bd34708f2840"",
    ""spaces_url"": ""/v2/space_quota_definitions/7bb8428e-01e0-45ca-80a1-7a255a843565/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? space_guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.AssociateSpaceWithSpaceQuotaDefinition(guid, space_guid).Result;


                Assert.AreEqual("7bb8428e-01e0-45ca-80a1-7a255a843565", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/7bb8428e-01e0-45ca-80a1-7a255a843565", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1403", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("3cc4db21-211f-42e4-945e-bd34708f2840", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/3cc4db21-211f-42e4-945e-bd34708f2840", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/7bb8428e-01e0-45ca-80a1-7a255a843565/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""17717495-3d52-4a2f-88c4-a4da43254a54"",
    ""url"": ""/v2/space_quota_definitions/17717495-3d52-4a2f-88c4-a4da43254a54"",
    ""created_at"": ""2015-04-16T12:04:30+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1411"",
    ""organization_guid"": ""18ec5374-1e7f-422b-95ef-1b17550b3a26"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/18ec5374-1e7f-422b-95ef-1b17550b3a26"",
    ""spaces_url"": ""/v2/space_quota_definitions/17717495-3d52-4a2f-88c4-a4da43254a54/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.RetrieveSpaceQuotaDefinition(guid).Result;


                Assert.AreEqual("17717495-3d52-4a2f-88c4-a4da43254a54", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/17717495-3d52-4a2f-88c4-a4da43254a54", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1411", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("18ec5374-1e7f-422b-95ef-1b17550b3a26", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/18ec5374-1e7f-422b-95ef-1b17550b3a26", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/17717495-3d52-4a2f-88c4-a4da43254a54/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void DeleteSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.SpaceQuotaDefinitions.DeleteSpaceQuotaDefinition(guid).Wait();

            }
        }

        [TestMethod]
        public void RemoveSpaceFromSpaceQuotaDefinitionTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""f36a615f-cb4b-4124-af86-e0f5acd44780"",
    ""url"": ""/v2/space_quota_definitions/f36a615f-cb4b-4124-af86-e0f5acd44780"",
    ""created_at"": ""2015-04-16T12:04:30+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1398"",
    ""organization_guid"": ""334a3ad2-e908-40b3-90ac-721f2995c87c"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/334a3ad2-e908-40b3-90ac-721f2995c87c"",
    ""spaces_url"": ""/v2/space_quota_definitions/f36a615f-cb4b-4124-af86-e0f5acd44780/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? space_guid = Guid.NewGuid();


                var obj = cfClient.SpaceQuotaDefinitions.RemoveSpaceFromSpaceQuotaDefinition(guid, space_guid).Result;


                Assert.AreEqual("f36a615f-cb4b-4124-af86-e0f5acd44780", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/f36a615f-cb4b-4124-af86-e0f5acd44780", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1398", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("334a3ad2-e908-40b3-90ac-721f2995c87c", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/334a3ad2-e908-40b3-90ac-721f2995c87c", TestUtil.ToTestableString(obj.OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/f36a615f-cb4b-4124-af86-e0f5acd44780/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSpaceQuotaDefinitionsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a2b3fb5b-b193-4dde-a8e2-4ffa8fe08d8c"",
        ""url"": ""/v2/space_quota_definitions/a2b3fb5b-b193-4dde-a8e2-4ffa8fe08d8c"",
        ""created_at"": ""2015-04-16T12:04:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1390"",
        ""organization_guid"": ""68b9c051-7b78-4f70-9929-26494d0bcc18"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/68b9c051-7b78-4f70-9929-26494d0bcc18"",
        ""spaces_url"": ""/v2/space_quota_definitions/a2b3fb5b-b193-4dde-a8e2-4ffa8fe08d8c/spaces""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.SpaceQuotaDefinitions.ListAllSpaceQuotaDefinitions().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a2b3fb5b-b193-4dde-a8e2-4ffa8fe08d8c", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/a2b3fb5b-b193-4dde-a8e2-4ffa8fe08d8c", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-16T12:04:30+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1390", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("68b9c051-7b78-4f70-9929-26494d0bcc18", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj[0].NonBasicServicesAllowed), true);
                Assert.AreEqual("60", TestUtil.ToTestableString(obj[0].TotalServices), true);
                Assert.AreEqual("1000", TestUtil.ToTestableString(obj[0].TotalRoutes), true);
                Assert.AreEqual("20480", TestUtil.ToTestableString(obj[0].MemoryLimit), true);
                Assert.AreEqual("-1", TestUtil.ToTestableString(obj[0].InstanceMemoryLimit), true);
                Assert.AreEqual("/v2/organizations/68b9c051-7b78-4f70-9929-26494d0bcc18", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/space_quota_definitions/a2b3fb5b-b193-4dde-a8e2-4ffa8fe08d8c/spaces", TestUtil.ToTestableString(obj[0].SpacesUrl), true);

            }
        }

    }
}