//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UserProvidedServiceInstancesEndpoint
{
        [TestMethod]
        public void RetrieveUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""ffaa0713-fd44-4806-8a68-22036505b6a9"",
    ""url"": ""/v2/user_provided_service_instances/c819aa2d-7597-4055-8869-72218625f15d"",
    ""created_at"": ""2016-03-21T10:59:35Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-821"",
    ""credentials"": {
      ""creds-key-17"": ""creds-val-17""
    },
    ""space_guid"": ""ffaa0713-fd44-4806-8a68-22036505b6a9"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-44"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/ff6cb344-9da2-43f8-bb72-c0d09e6a5930"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/c819aa2d-7597-4055-8869-72218625f15d/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/c819aa2d-7597-4055-8869-72218625f15d/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.UserProvidedServiceInstances.RetrieveUserProvidedServiceInstance(guid).Result;


                Assert.AreEqual("ffaa0713-fd44-4806-8a68-22036505b6a9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/c819aa2d-7597-4055-8869-72218625f15d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-821", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("ffaa0713-fd44-4806-8a68-22036505b6a9", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("https://foo.com/url-44", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
                Assert.AreEqual("/v2/spaces/ff6cb344-9da2-43f8-bb72-c0d09e6a5930", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/c819aa2d-7597-4055-8869-72218625f15d/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/c819aa2d-7597-4055-8869-72218625f15d/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void UpdateUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""8781c74d-d58d-4510-93aa-36d71f61533b"",
    ""url"": ""/v2/user_provided_service_instances/79759dc3-45ba-4e4e-a895-1f5d19996623"",
    ""created_at"": ""2016-03-21T10:59:35Z"",
    ""updated_at"": ""2016-03-21T10:59:35Z""
  },
  ""entity"": {
    ""name"": ""name-836"",
    ""credentials"": {
      ""somekey"": ""somenewvalue""
    },
    ""space_guid"": ""8781c74d-d58d-4510-93aa-36d71f61533b"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-47"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/8fb1f657-efa2-4535-b00a-fe34cd73d5f4"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/79759dc3-45ba-4e4e-a895-1f5d19996623/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/79759dc3-45ba-4e4e-a895-1f5d19996623/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateUserProvidedServiceInstanceRequest value = new UpdateUserProvidedServiceInstanceRequest();


                var obj = cfClient.UserProvidedServiceInstances.UpdateUserProvidedServiceInstance(guid, value).Result;


                Assert.AreEqual("8781c74d-d58d-4510-93aa-36d71f61533b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/79759dc3-45ba-4e4e-a895-1f5d19996623", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-836", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("8781c74d-d58d-4510-93aa-36d71f61533b", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("https://foo.com/url-47", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
                Assert.AreEqual("/v2/spaces/8fb1f657-efa2-4535-b00a-fe34cd73d5f4", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/79759dc3-45ba-4e4e-a895-1f5d19996623/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/79759dc3-45ba-4e4e-a895-1f5d19996623/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void DeleteUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.UserProvidedServiceInstances.DeleteUserProvidedServiceInstance(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllRoutesForUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e32e3875-43cd-4fbc-adbf-b5c5ae6a873e"",
        ""url"": ""/v2/routes/0b8399b6-ac4d-4866-a8dc-8e277ee76140"",
        ""created_at"": ""2016-03-21T10:59:34Z"",
        ""updated_at"": ""2016-03-21T10:59:34Z""
      },
      ""entity"": {
        ""host"": ""host-19"",
        ""path"": """",
        ""domain_guid"": ""e32e3875-43cd-4fbc-adbf-b5c5ae6a873e"",
        ""space_guid"": ""e32e3875-43cd-4fbc-adbf-b5c5ae6a873e"",
        ""service_instance_guid"": ""e32e3875-43cd-4fbc-adbf-b5c5ae6a873e"",
        ""port"": 0,
        ""domain_url"": ""/v2/domains/f8c2280e-33d4-43a4-9489-1c704127eaff"",
        ""space_url"": ""/v2/spaces/fe06ea9e-ea03-4d89-ab22-179632222fe5"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/7fae6969-b5a7-424c-a6bf-53ab899c1eca"",
        ""apps_url"": ""/v2/routes/0b8399b6-ac4d-4866-a8dc-8e277ee76140/apps""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.UserProvidedServiceInstances.ListAllRoutesForUserProvidedServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e32e3875-43cd-4fbc-adbf-b5c5ae6a873e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/0b8399b6-ac4d-4866-a8dc-8e277ee76140", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:34Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-03-21T10:59:34Z", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("host-19", TestUtil.ToTestableString(obj[0].Host), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Path), true);
                Assert.AreEqual("e32e3875-43cd-4fbc-adbf-b5c5ae6a873e", TestUtil.ToTestableString(obj[0].DomainGuid), true);
                Assert.AreEqual("e32e3875-43cd-4fbc-adbf-b5c5ae6a873e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e32e3875-43cd-4fbc-adbf-b5c5ae6a873e", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj[0].Port), true);
                Assert.AreEqual("/v2/domains/f8c2280e-33d4-43a4-9489-1c704127eaff", TestUtil.ToTestableString(obj[0].DomainUrl), true);
                Assert.AreEqual("/v2/spaces/fe06ea9e-ea03-4d89-ab22-179632222fe5", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/7fae6969-b5a7-424c-a6bf-53ab899c1eca", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);
                Assert.AreEqual("/v2/routes/0b8399b6-ac4d-4866-a8dc-8e277ee76140/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllUserProvidedServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce3f33d8-4238-4bec-b8bc-bc00b436373f"",
        ""url"": ""/v2/user_provided_service_instances/ff617efb-e6d0-41d3-b686-644e72fd7252"",
        ""created_at"": ""2016-03-21T10:59:34Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-817"",
        ""credentials"": {
          ""creds-key-16"": ""creds-val-16""
        },
        ""space_guid"": ""ce3f33d8-4238-4bec-b8bc-bc00b436373f"",
        ""type"": ""user_provided_service_instance"",
        ""syslog_drain_url"": ""https://foo.com/url-43"",
        ""route_service_url"": null,
        ""space_url"": ""/v2/spaces/6ac434a0-0c3f-4d25-a470-3b689ac0f5ee"",
        ""service_bindings_url"": ""/v2/user_provided_service_instances/ff617efb-e6d0-41d3-b686-644e72fd7252/service_bindings"",
        ""routes_url"": ""/v2/user_provided_service_instances/ff617efb-e6d0-41d3-b686-644e72fd7252/routes""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.UserProvidedServiceInstances.ListAllUserProvidedServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ce3f33d8-4238-4bec-b8bc-bc00b436373f", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/ff617efb-e6d0-41d3-b686-644e72fd7252", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:34Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-817", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("ce3f33d8-4238-4bec-b8bc-bc00b436373f", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("https://foo.com/url-43", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].RouteServiceUrl), true);
                Assert.AreEqual("/v2/spaces/6ac434a0-0c3f-4d25-a470-3b689ac0f5ee", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/ff617efb-e6d0-41d3-b686-644e72fd7252/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/ff617efb-e6d0-41d3-b686-644e72fd7252/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);

            }
        }

        [TestMethod]
        public void RemoveRouteFromUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? route_guid = Guid.NewGuid();


                cfClient.UserProvidedServiceInstances.RemoveRouteFromUserProvidedServiceInstance(guid, route_guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""76bc7473-d1b7-4ce2-8313-33bb863f54d6"",
        ""url"": ""/v2/service_bindings/0cd4ddec-97a4-4369-a5b3-6055163cdbf5"",
        ""created_at"": ""2016-03-21T10:59:34Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""76bc7473-d1b7-4ce2-8313-33bb863f54d6"",
        ""service_instance_guid"": ""76bc7473-d1b7-4ce2-8313-33bb863f54d6"",
        ""credentials"": {
          ""creds-key-15"": ""creds-val-15""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/9c60b46e-5f68-4389-98cd-d8f048771816"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/24415cc3-9063-4d4b-8176-2d4c03619517""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.UserProvidedServiceInstances.ListAllServiceBindingsForUserProvidedServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("76bc7473-d1b7-4ce2-8313-33bb863f54d6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/0cd4ddec-97a4-4369-a5b3-6055163cdbf5", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:34Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("76bc7473-d1b7-4ce2-8313-33bb863f54d6", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("76bc7473-d1b7-4ce2-8313-33bb863f54d6", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/9c60b46e-5f68-4389-98cd-d8f048771816", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/24415cc3-9063-4d4b-8176-2d4c03619517", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void AssociateRouteWithUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""9bfca3cb-9662-441d-87ef-87f718ab28d6"",
    ""url"": ""/v2/user_provided_service_instances/7a224227-fddc-4da1-bb75-73ee78c86922"",
    ""created_at"": ""2016-03-21T10:59:34Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-803"",
    ""credentials"": {
      ""creds-key-12"": ""creds-val-12""
    },
    ""space_guid"": ""9bfca3cb-9662-441d-87ef-87f718ab28d6"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-37"",
    ""route_service_url"": ""https://foo.com/url-36"",
    ""space_url"": ""/v2/spaces/4ad40340-db16-46ef-9841-32388c65c044"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/7a224227-fddc-4da1-bb75-73ee78c86922/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/7a224227-fddc-4da1-bb75-73ee78c86922/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                Guid? route_guid = Guid.NewGuid();


                var obj = cfClient.UserProvidedServiceInstances.AssociateRouteWithUserProvidedServiceInstance(guid, route_guid).Result;


                Assert.AreEqual("9bfca3cb-9662-441d-87ef-87f718ab28d6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/7a224227-fddc-4da1-bb75-73ee78c86922", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:34Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-803", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("9bfca3cb-9662-441d-87ef-87f718ab28d6", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("https://foo.com/url-37", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("https://foo.com/url-36", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
                Assert.AreEqual("/v2/spaces/4ad40340-db16-46ef-9841-32388c65c044", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/7a224227-fddc-4da1-bb75-73ee78c86922/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/7a224227-fddc-4da1-bb75-73ee78c86922/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

        [TestMethod]
        public void CreateUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""1e3bc543-737d-497d-9e16-690be422bc01"",
    ""url"": ""/v2/user_provided_service_instances/a8738020-8943-448a-bf9f-6dac644e67e9"",
    ""created_at"": ""2016-03-21T10:59:35Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-user-provided-instance"",
    ""credentials"": {
      ""somekey"": ""somevalue""
    },
    ""space_guid"": ""1e3bc543-737d-497d-9e16-690be422bc01"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""syslog://example.com"",
    ""route_service_url"": ""https://logger.example.com"",
    ""space_url"": ""/v2/spaces/2fac8a88-a7eb-4ec2-92a4-6040e637dff8"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/a8738020-8943-448a-bf9f-6dac644e67e9/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/a8738020-8943-448a-bf9f-6dac644e67e9/routes""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateUserProvidedServiceInstanceRequest value = new CreateUserProvidedServiceInstanceRequest();


                var obj = cfClient.UserProvidedServiceInstances.CreateUserProvidedServiceInstance(value).Result;


                Assert.AreEqual("1e3bc543-737d-497d-9e16-690be422bc01", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/a8738020-8943-448a-bf9f-6dac644e67e9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-user-provided-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("1e3bc543-737d-497d-9e16-690be422bc01", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("syslog://example.com", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("https://logger.example.com", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
                Assert.AreEqual("/v2/spaces/2fac8a88-a7eb-4ec2-92a4-6040e637dff8", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/a8738020-8943-448a-bf9f-6dac644e67e9/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/a8738020-8943-448a-bf9f-6dac644e67e9/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);

            }
        }

    }
}