//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UserProvidedServiceInstancesEndpoint
{
        [TestMethod]
        public void DeleteUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.UserProvidedServiceInstances.DeleteUserProvidedServiceInstance(guid).Wait();

            }
        }

        [TestMethod]
        public void CreateUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""f2aeb58f-5974-409d-b2e2-f4b7af39044a"",
    ""url"": ""/v2/user_provided_service_instances/f2aeb58f-5974-409d-b2e2-f4b7af39044a"",
    ""created_at"": ""2015-04-10T20:04:41+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-user-provided-instance"",
    ""credentials"": {
      ""somekey"": ""somevalue""
    },
    ""space_guid"": ""69e4e28c-74ce-4b4c-9b93-f802e57d97e3"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""syslog://example.com"",
    ""space_url"": ""/v2/spaces/69e4e28c-74ce-4b4c-9b93-f802e57d97e3"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/f2aeb58f-5974-409d-b2e2-f4b7af39044a/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateUserProvidedServiceInstanceRequest value = new CreateUserProvidedServiceInstanceRequest();


                var obj = cfClient.UserProvidedServiceInstances.CreateUserProvidedServiceInstance(value).Result;


                Assert.AreEqual("f2aeb58f-5974-409d-b2e2-f4b7af39044a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/f2aeb58f-5974-409d-b2e2-f4b7af39044a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:41+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-user-provided-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("69e4e28c-74ce-4b4c-9b93-f802e57d97e3", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("syslog://example.com", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/spaces/69e4e28c-74ce-4b4c-9b93-f802e57d97e3", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/f2aeb58f-5974-409d-b2e2-f4b7af39044a/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""a5d8a2f9-45ec-43b5-80cc-86ef2eae4b0e"",
    ""url"": ""/v2/user_provided_service_instances/a5d8a2f9-45ec-43b5-80cc-86ef2eae4b0e"",
    ""created_at"": ""2015-04-10T20:04:40+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1704"",
    ""credentials"": {
      ""creds-key-456"": ""creds-val-456""
    },
    ""space_guid"": ""df57b88c-97d1-45fb-9d69-29e0333540bb"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-97"",
    ""space_url"": ""/v2/spaces/df57b88c-97d1-45fb-9d69-29e0333540bb"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/a5d8a2f9-45ec-43b5-80cc-86ef2eae4b0e/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.UserProvidedServiceInstances.RetrieveUserProvidedServiceInstance(guid).Result;


                Assert.AreEqual("a5d8a2f9-45ec-43b5-80cc-86ef2eae4b0e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/a5d8a2f9-45ec-43b5-80cc-86ef2eae4b0e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:40+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1704", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("df57b88c-97d1-45fb-9d69-29e0333540bb", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("https://foo.com/url-97", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/spaces/df57b88c-97d1-45fb-9d69-29e0333540bb", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/a5d8a2f9-45ec-43b5-80cc-86ef2eae4b0e/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1b6a4b9e-e2fc-466a-acf5-a57de62c7758"",
        ""url"": ""/v2/service_bindings/1b6a4b9e-e2fc-466a-acf5-a57de62c7758"",
        ""created_at"": ""2015-04-10T20:04:40+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""1c044e83-da94-4b2d-84a4-0d34b71b59c7"",
        ""service_instance_guid"": ""881113d6-c340-45f6-ad00-906f89bb2f4e"",
        ""credentials"": {
          ""creds-key-450"": ""creds-val-450""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/1c044e83-da94-4b2d-84a4-0d34b71b59c7"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/881113d6-c340-45f6-ad00-906f89bb2f4e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.UserProvidedServiceInstances.ListAllServiceBindingsForUserProvidedServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1b6a4b9e-e2fc-466a-acf5-a57de62c7758", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/1b6a4b9e-e2fc-466a-acf5-a57de62c7758", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:40+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("1c044e83-da94-4b2d-84a4-0d34b71b59c7", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("881113d6-c340-45f6-ad00-906f89bb2f4e", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/1c044e83-da94-4b2d-84a4-0d34b71b59c7", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/881113d6-c340-45f6-ad00-906f89bb2f4e", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void ListAllUserProvidedServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7b38ebd2-8ec3-4b73-9500-1ebc3e2ddf04"",
        ""url"": ""/v2/user_provided_service_instances/7b38ebd2-8ec3-4b73-9500-1ebc3e2ddf04"",
        ""created_at"": ""2015-04-10T20:04:40+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1700"",
        ""credentials"": {
          ""creds-key-453"": ""creds-val-453""
        },
        ""space_guid"": ""7fe82ca6-5288-4fea-8ff7-db34dc0be8a7"",
        ""type"": ""user_provided_service_instance"",
        ""syslog_drain_url"": ""https://foo.com/url-96"",
        ""space_url"": ""/v2/spaces/7fe82ca6-5288-4fea-8ff7-db34dc0be8a7"",
        ""service_bindings_url"": ""/v2/user_provided_service_instances/7b38ebd2-8ec3-4b73-9500-1ebc3e2ddf04/service_bindings""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.UserProvidedServiceInstances.ListAllUserProvidedServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7b38ebd2-8ec3-4b73-9500-1ebc3e2ddf04", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/7b38ebd2-8ec3-4b73-9500-1ebc3e2ddf04", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:40+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1700", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("7fe82ca6-5288-4fea-8ff7-db34dc0be8a7", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("https://foo.com/url-96", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/spaces/7fe82ca6-5288-4fea-8ff7-db34dc0be8a7", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/7b38ebd2-8ec3-4b73-9500-1ebc3e2ddf04/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void UpdateUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""e7e19a20-736f-46fb-a512-3da946537a9f"",
    ""url"": ""/v2/user_provided_service_instances/e7e19a20-736f-46fb-a512-3da946537a9f"",
    ""created_at"": ""2015-04-10T20:04:40+00:00"",
    ""updated_at"": ""2015-04-10T20:04:41+00:00""
  },
  ""entity"": {
    ""name"": ""name-1708"",
    ""credentials"": {
      ""somekey"": ""somenewvalue""
    },
    ""space_guid"": ""320b1116-9f2e-4e89-920e-53bd6bae1caf"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-98"",
    ""space_url"": ""/v2/spaces/320b1116-9f2e-4e89-920e-53bd6bae1caf"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/e7e19a20-736f-46fb-a512-3da946537a9f/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateUserProvidedServiceInstanceRequest value = new UpdateUserProvidedServiceInstanceRequest();


                var obj = cfClient.UserProvidedServiceInstances.UpdateUserProvidedServiceInstance(guid, value).Result;


                Assert.AreEqual("e7e19a20-736f-46fb-a512-3da946537a9f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/e7e19a20-736f-46fb-a512-3da946537a9f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-04-10T20:04:40+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-04-10T20:04:41+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1708", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("320b1116-9f2e-4e89-920e-53bd6bae1caf", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("https://foo.com/url-98", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/spaces/320b1116-9f2e-4e89-920e-53bd6bae1caf", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/e7e19a20-736f-46fb-a512-3da946537a9f/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

    }
}