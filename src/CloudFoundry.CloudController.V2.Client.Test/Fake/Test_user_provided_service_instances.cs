//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UserProvidedServiceInstancesEndpoint
{
        [TestMethod]
        public void DeleteUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.UserProvidedServiceInstances.DeleteUserProvidedServiceInstance(guid).Wait();

            }
        }

        [TestMethod]
        public void CreateUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""712f807b-1e0a-4b27-b2ac-c0b778fbdd77"",
    ""url"": ""/v2/user_provided_service_instances/712f807b-1e0a-4b27-b2ac-c0b778fbdd77"",
    ""created_at"": ""2015-03-25T13:48:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-user-provided-instance"",
    ""credentials"": {
      ""somekey"": ""somevalue""
    },
    ""space_guid"": ""3c256d5b-497d-423f-8515-f2f2154388b8"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""syslog://example.com"",
    ""space_url"": ""/v2/spaces/3c256d5b-497d-423f-8515-f2f2154388b8"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/712f807b-1e0a-4b27-b2ac-c0b778fbdd77/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateUserProvidedServiceInstanceRequest value = new CreateUserProvidedServiceInstanceRequest();


                var obj = cfClient.UserProvidedServiceInstances.CreateUserProvidedServiceInstance(value).Result;


                Assert.AreEqual("712f807b-1e0a-4b27-b2ac-c0b778fbdd77", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/712f807b-1e0a-4b27-b2ac-c0b778fbdd77", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-user-provided-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("3c256d5b-497d-423f-8515-f2f2154388b8", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("syslog://example.com", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/spaces/3c256d5b-497d-423f-8515-f2f2154388b8", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/712f807b-1e0a-4b27-b2ac-c0b778fbdd77/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""fa1011ef-accc-47e0-bc9e-5e91fb8f445e"",
    ""url"": ""/v2/user_provided_service_instances/fa1011ef-accc-47e0-bc9e-5e91fb8f445e"",
    ""created_at"": ""2015-03-25T13:48:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-302"",
    ""credentials"": {
      ""creds-key-168"": ""creds-val-168""
    },
    ""space_guid"": ""559df9f7-f19a-402b-a30c-be572b66b70c"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-15"",
    ""space_url"": ""/v2/spaces/559df9f7-f19a-402b-a30c-be572b66b70c"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/fa1011ef-accc-47e0-bc9e-5e91fb8f445e/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.UserProvidedServiceInstances.RetrieveUserProvidedServiceInstance(guid).Result;


                Assert.AreEqual("fa1011ef-accc-47e0-bc9e-5e91fb8f445e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/fa1011ef-accc-47e0-bc9e-5e91fb8f445e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-302", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("559df9f7-f19a-402b-a30c-be572b66b70c", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("https://foo.com/url-15", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/spaces/559df9f7-f19a-402b-a30c-be572b66b70c", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/fa1011ef-accc-47e0-bc9e-5e91fb8f445e/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""326ab1b2-56bb-4f44-960c-670afceb7ffc"",
        ""url"": ""/v2/service_bindings/326ab1b2-56bb-4f44-960c-670afceb7ffc"",
        ""created_at"": ""2015-03-25T13:48:42+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""33b83802-e681-4835-ac69-7941f8c89e45"",
        ""service_instance_guid"": ""976d2e52-b181-4bb3-8fbf-ffdb877a000f"",
        ""credentials"": {
          ""creds-key-159"": ""creds-val-159""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/33b83802-e681-4835-ac69-7941f8c89e45"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/976d2e52-b181-4bb3-8fbf-ffdb877a000f""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.UserProvidedServiceInstances.ListAllServiceBindingsForUserProvidedServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("326ab1b2-56bb-4f44-960c-670afceb7ffc", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/326ab1b2-56bb-4f44-960c-670afceb7ffc", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:42+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("33b83802-e681-4835-ac69-7941f8c89e45", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("976d2e52-b181-4bb3-8fbf-ffdb877a000f", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/33b83802-e681-4835-ac69-7941f8c89e45", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/976d2e52-b181-4bb3-8fbf-ffdb877a000f", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void ListAllUserProvidedServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""226f3a2d-5e96-49a0-bcdf-6fb0e1cdb1be"",
        ""url"": ""/v2/user_provided_service_instances/226f3a2d-5e96-49a0-bcdf-6fb0e1cdb1be"",
        ""created_at"": ""2015-03-25T13:48:43+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-310"",
        ""credentials"": {
          ""creds-key-174"": ""creds-val-174""
        },
        ""space_guid"": ""8b7a58df-384e-4f67-8d05-8d602ff6af96"",
        ""type"": ""user_provided_service_instance"",
        ""syslog_drain_url"": ""https://foo.com/url-17"",
        ""space_url"": ""/v2/spaces/8b7a58df-384e-4f67-8d05-8d602ff6af96"",
        ""service_bindings_url"": ""/v2/user_provided_service_instances/226f3a2d-5e96-49a0-bcdf-6fb0e1cdb1be/service_bindings""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.UserProvidedServiceInstances.ListAllUserProvidedServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("226f3a2d-5e96-49a0-bcdf-6fb0e1cdb1be", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/226f3a2d-5e96-49a0-bcdf-6fb0e1cdb1be", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-310", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("8b7a58df-384e-4f67-8d05-8d602ff6af96", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("https://foo.com/url-17", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/spaces/8b7a58df-384e-4f67-8d05-8d602ff6af96", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/226f3a2d-5e96-49a0-bcdf-6fb0e1cdb1be/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);

            }
        }

        [TestMethod]
        public void UpdateUserProvidedServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""1f2725d3-c02a-445c-ac8e-34cba06f9e41"",
    ""url"": ""/v2/user_provided_service_instances/1f2725d3-c02a-445c-ac8e-34cba06f9e41"",
    ""created_at"": ""2015-03-25T13:48:43+00:00"",
    ""updated_at"": ""2015-03-25T13:48:43+00:00""
  },
  ""entity"": {
    ""name"": ""name-306"",
    ""credentials"": {
      ""somekey"": ""somenewvalue""
    },
    ""space_guid"": ""97a4fda2-cb03-4365-a323-e7fa9961c152"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-16"",
    ""space_url"": ""/v2/spaces/97a4fda2-cb03-4365-a323-e7fa9961c152"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/1f2725d3-c02a-445c-ac8e-34cba06f9e41/service_bindings""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateUserProvidedServiceInstanceRequest value = new UpdateUserProvidedServiceInstanceRequest();


                var obj = cfClient.UserProvidedServiceInstances.UpdateUserProvidedServiceInstance(guid, value).Result;


                Assert.AreEqual("1f2725d3-c02a-445c-ac8e-34cba06f9e41", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/user_provided_service_instances/1f2725d3-c02a-445c-ac8e-34cba06f9e41", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-03-25T13:48:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-306", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("97a4fda2-cb03-4365-a323-e7fa9961c152", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("https://foo.com/url-16", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/spaces/97a4fda2-cb03-4365-a323-e7fa9961c152", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/1f2725d3-c02a-445c-ac8e-34cba06f9e41/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);

            }
        }

    }
}