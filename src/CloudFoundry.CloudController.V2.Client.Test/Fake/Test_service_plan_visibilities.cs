//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlanVisibilitiesEndpoint
{
        [TestMethod]
        public void UpdateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""70c3e9c8-d2ec-4c64-a205-fd3e1c963f4b"",
    ""url"": ""/v2/service_plan_visibilities/89fd2d84-a080-44af-ac25-a0ad446625d9"",
    ""created_at"": ""2016-09-02T11:51:56Z"",
    ""updated_at"": ""2016-09-02T11:51:56Z""
  },
  ""entity"": {
    ""service_plan_guid"": ""70c3e9c8-d2ec-4c64-a205-fd3e1c963f4b"",
    ""organization_guid"": ""70c3e9c8-d2ec-4c64-a205-fd3e1c963f4b"",
    ""service_plan_url"": ""/v2/service_plans/8bcb4dd3-e64c-453d-9137-0e42876f868e"",
    ""organization_url"": ""/v2/organizations/fba721f9-38b1-4aa0-b607-2fd249250ab1""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServicePlanVisibilityRequest value = new UpdateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.UpdateServicePlanVisibility(guid, value).Result;


                Assert.AreEqual("70c3e9c8-d2ec-4c64-a205-fd3e1c963f4b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/89fd2d84-a080-44af-ac25-a0ad446625d9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:51:56Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-09-02T11:51:56Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("70c3e9c8-d2ec-4c64-a205-fd3e1c963f4b", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("70c3e9c8-d2ec-4c64-a205-fd3e1c963f4b", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/8bcb4dd3-e64c-453d-9137-0e42876f868e", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/fba721f9-38b1-4aa0-b607-2fd249250ab1", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2cb089f3-b2e8-4215-bec2-eeff5ec3e2ef"",
        ""url"": ""/v2/service_plan_visibilities/b4fa6c01-63a4-4c87-b595-162ddf9feaa3"",
        ""created_at"": ""2016-09-02T11:51:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""service_plan_guid"": ""2cb089f3-b2e8-4215-bec2-eeff5ec3e2ef"",
        ""organization_guid"": ""2cb089f3-b2e8-4215-bec2-eeff5ec3e2ef"",
        ""service_plan_url"": ""/v2/service_plans/5f627f9d-8ecf-4246-b59f-83638f8d2885"",
        ""organization_url"": ""/v2/organizations/90c79de6-07d6-4631-bcbb-9b83c5dc21fb""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServicePlanVisibilities.ListAllServicePlanVisibilities().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2cb089f3-b2e8-4215-bec2-eeff5ec3e2ef", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/b4fa6c01-63a4-4c87-b595-162ddf9feaa3", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:51:56Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("2cb089f3-b2e8-4215-bec2-eeff5ec3e2ef", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("2cb089f3-b2e8-4215-bec2-eeff5ec3e2ef", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/5f627f9d-8ecf-4246-b59f-83638f8d2885", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/90c79de6-07d6-4631-bcbb-9b83c5dc21fb", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""718d8463-e31b-44a9-bb1e-90eb8ab60817"",
    ""url"": ""/v2/service_plan_visibilities/1357102d-4e99-4935-a4e4-8baafe91ef28"",
    ""created_at"": ""2016-09-02T11:51:56Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""718d8463-e31b-44a9-bb1e-90eb8ab60817"",
    ""organization_guid"": ""718d8463-e31b-44a9-bb1e-90eb8ab60817"",
    ""service_plan_url"": ""/v2/service_plans/e306865a-0c99-4612-981d-27b612ec39e7"",
    ""organization_url"": ""/v2/organizations/824d0bf3-8dad-407d-90c6-e29659f1ad75""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServicePlanVisibilities.RetrieveServicePlanVisibility(guid).Result;


                Assert.AreEqual("718d8463-e31b-44a9-bb1e-90eb8ab60817", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/1357102d-4e99-4935-a4e4-8baafe91ef28", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:51:56Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("718d8463-e31b-44a9-bb1e-90eb8ab60817", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("718d8463-e31b-44a9-bb1e-90eb8ab60817", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/e306865a-0c99-4612-981d-27b612ec39e7", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/824d0bf3-8dad-407d-90c6-e29659f1ad75", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServicePlanVisibilities.DeleteServicePlanVisibilities(guid).Wait();

            }
        }

        [TestMethod]
        public void CreateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""18d64ecd-66ab-4f90-9e82-7a9654ac6df6"",
    ""url"": ""/v2/service_plan_visibilities/3650a05e-9554-4dc9-8a49-831f66fd58aa"",
    ""created_at"": ""2016-09-02T11:51:56Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""18d64ecd-66ab-4f90-9e82-7a9654ac6df6"",
    ""organization_guid"": ""18d64ecd-66ab-4f90-9e82-7a9654ac6df6"",
    ""service_plan_url"": ""/v2/service_plans/4ad304fe-e98f-4731-9f94-4e05b93883fb"",
    ""organization_url"": ""/v2/organizations/62ac37bf-8386-40c0-8371-00e9c12ac888""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServicePlanVisibilityRequest value = new CreateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.CreateServicePlanVisibility(value).Result;


                Assert.AreEqual("18d64ecd-66ab-4f90-9e82-7a9654ac6df6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/3650a05e-9554-4dc9-8a49-831f66fd58aa", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-09-02T11:51:56Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("18d64ecd-66ab-4f90-9e82-7a9654ac6df6", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("18d64ecd-66ab-4f90-9e82-7a9654ac6df6", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/4ad304fe-e98f-4731-9f94-4e05b93883fb", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/62ac37bf-8386-40c0-8371-00e9c12ac888", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

    }
}