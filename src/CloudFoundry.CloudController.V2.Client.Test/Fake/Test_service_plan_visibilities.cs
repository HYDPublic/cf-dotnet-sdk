//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlanVisibilitiesEndpoint
{
        [TestMethod]
        public void ListAllServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""17db77b1-4a31-45c2-a735-5821bc5101b1"",
        ""url"": ""/v2/service_plan_visibilities/17db77b1-4a31-45c2-a735-5821bc5101b1"",
        ""created_at"": ""2015-03-25T13:48:38+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""service_plan_guid"": ""660b2ea7-c6ac-4d7a-a57b-b1a2a9519d40"",
        ""organization_guid"": ""93931306-e81a-4f11-97d5-48254c3eebce"",
        ""service_plan_url"": ""/v2/service_plans/660b2ea7-c6ac-4d7a-a57b-b1a2a9519d40"",
        ""organization_url"": ""/v2/organizations/93931306-e81a-4f11-97d5-48254c3eebce""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServicePlanVisibilities.ListAllServicePlanVisibilities().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("17db77b1-4a31-45c2-a735-5821bc5101b1", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/17db77b1-4a31-45c2-a735-5821bc5101b1", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:38+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("660b2ea7-c6ac-4d7a-a57b-b1a2a9519d40", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("93931306-e81a-4f11-97d5-48254c3eebce", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/660b2ea7-c6ac-4d7a-a57b-b1a2a9519d40", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/93931306-e81a-4f11-97d5-48254c3eebce", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void CreateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""2b6a9a21-6cd8-4489-8238-55955ea5e9ff"",
    ""url"": ""/v2/service_plan_visibilities/2b6a9a21-6cd8-4489-8238-55955ea5e9ff"",
    ""created_at"": ""2015-03-25T13:48:38+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""0e81b0e4-f889-4cae-abfd-7adea8b62bea"",
    ""organization_guid"": ""497a33cd-4fe5-4077-9203-4ab07a12e939"",
    ""service_plan_url"": ""/v2/service_plans/0e81b0e4-f889-4cae-abfd-7adea8b62bea"",
    ""organization_url"": ""/v2/organizations/497a33cd-4fe5-4077-9203-4ab07a12e939""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServicePlanVisibilityRequest value = new CreateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.CreateServicePlanVisibility(value).Result;


                Assert.AreEqual("2b6a9a21-6cd8-4489-8238-55955ea5e9ff", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/2b6a9a21-6cd8-4489-8238-55955ea5e9ff", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:38+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("0e81b0e4-f889-4cae-abfd-7adea8b62bea", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("497a33cd-4fe5-4077-9203-4ab07a12e939", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/0e81b0e4-f889-4cae-abfd-7adea8b62bea", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/497a33cd-4fe5-4077-9203-4ab07a12e939", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServicePlanVisibilities.DeleteServicePlanVisibilities(guid).Wait();

            }
        }

        [TestMethod]
        public void UpdateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""5b1c0876-99aa-4ed8-9320-949263367ba0"",
    ""url"": ""/v2/service_plan_visibilities/5b1c0876-99aa-4ed8-9320-949263367ba0"",
    ""created_at"": ""2015-03-25T13:48:38+00:00"",
    ""updated_at"": ""2015-03-25T13:48:38+00:00""
  },
  ""entity"": {
    ""service_plan_guid"": ""87fe422e-d310-4f9e-8dd3-905beda3315d"",
    ""organization_guid"": ""6d269eeb-4688-4948-ab06-434a2cfea891"",
    ""service_plan_url"": ""/v2/service_plans/87fe422e-d310-4f9e-8dd3-905beda3315d"",
    ""organization_url"": ""/v2/organizations/6d269eeb-4688-4948-ab06-434a2cfea891""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServicePlanVisibilityRequest value = new UpdateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.UpdateServicePlanVisibility(guid, value).Result;


                Assert.AreEqual("5b1c0876-99aa-4ed8-9320-949263367ba0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/5b1c0876-99aa-4ed8-9320-949263367ba0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:38+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-03-25T13:48:38+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("87fe422e-d310-4f9e-8dd3-905beda3315d", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("6d269eeb-4688-4948-ab06-434a2cfea891", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/87fe422e-d310-4f9e-8dd3-905beda3315d", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/6d269eeb-4688-4948-ab06-434a2cfea891", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""c5a2e92f-e6d4-4911-879c-8a430d5c22f6"",
    ""url"": ""/v2/service_plan_visibilities/c5a2e92f-e6d4-4911-879c-8a430d5c22f6"",
    ""created_at"": ""2015-03-25T13:48:38+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""26b54db5-6524-4ef2-b798-74f34805b4a4"",
    ""organization_guid"": ""0ad603ac-7f19-4aab-a169-a41e6a70a098"",
    ""service_plan_url"": ""/v2/service_plans/26b54db5-6524-4ef2-b798-74f34805b4a4"",
    ""organization_url"": ""/v2/organizations/0ad603ac-7f19-4aab-a169-a41e6a70a098""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServicePlanVisibilities.RetrieveServicePlanVisibility(guid).Result;


                Assert.AreEqual("c5a2e92f-e6d4-4911-879c-8a430d5c22f6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/c5a2e92f-e6d4-4911-879c-8a430d5c22f6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-03-25T13:48:38+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("26b54db5-6524-4ef2-b798-74f34805b4a4", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("0ad603ac-7f19-4aab-a169-a41e6a70a098", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/26b54db5-6524-4ef2-b798-74f34805b4a4", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/0ad603ac-7f19-4aab-a169-a41e6a70a098", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

    }
}