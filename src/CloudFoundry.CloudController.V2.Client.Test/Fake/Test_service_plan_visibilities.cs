//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlanVisibilitiesEndpoint
{
        [TestMethod]
        public void UpdateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""7b2f6d88-61c3-41c8-9eba-229955588b8b"",
    ""url"": ""/v2/service_plan_visibilities/d5b88561-95f9-453c-8382-046167258d08"",
    ""created_at"": ""2016-03-30T10:15:12Z"",
    ""updated_at"": ""2016-03-30T10:15:12Z""
  },
  ""entity"": {
    ""service_plan_guid"": ""7b2f6d88-61c3-41c8-9eba-229955588b8b"",
    ""organization_guid"": ""7b2f6d88-61c3-41c8-9eba-229955588b8b"",
    ""service_plan_url"": ""/v2/service_plans/3b4e6f98-e490-4f30-b6f3-302825a5e2cb"",
    ""organization_url"": ""/v2/organizations/2b530f60-1ed3-4315-95b0-936f8037d5eb""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServicePlanVisibilityRequest value = new UpdateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.UpdateServicePlanVisibility(guid, value).Result;


                Assert.AreEqual("7b2f6d88-61c3-41c8-9eba-229955588b8b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/d5b88561-95f9-453c-8382-046167258d08", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:12Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:12Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("7b2f6d88-61c3-41c8-9eba-229955588b8b", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("7b2f6d88-61c3-41c8-9eba-229955588b8b", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/3b4e6f98-e490-4f30-b6f3-302825a5e2cb", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/2b530f60-1ed3-4315-95b0-936f8037d5eb", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2a4047a6-3a52-46ca-9914-39b2a6902b70"",
        ""url"": ""/v2/service_plan_visibilities/5306f0a3-a0dd-4e1c-8ae9-5e17214910d8"",
        ""created_at"": ""2016-03-30T10:15:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""service_plan_guid"": ""2a4047a6-3a52-46ca-9914-39b2a6902b70"",
        ""organization_guid"": ""2a4047a6-3a52-46ca-9914-39b2a6902b70"",
        ""service_plan_url"": ""/v2/service_plans/20b65676-0f27-4ba3-b8c9-9f46fb06681b"",
        ""organization_url"": ""/v2/organizations/e02eadff-429f-4014-a7b0-ee0846acf831""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServicePlanVisibilities.ListAllServicePlanVisibilities().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2a4047a6-3a52-46ca-9914-39b2a6902b70", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/5306f0a3-a0dd-4e1c-8ae9-5e17214910d8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:12Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("2a4047a6-3a52-46ca-9914-39b2a6902b70", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("2a4047a6-3a52-46ca-9914-39b2a6902b70", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/20b65676-0f27-4ba3-b8c9-9f46fb06681b", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/e02eadff-429f-4014-a7b0-ee0846acf831", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""8073dd3c-6bbd-4d06-be24-daf7d59a1a8c"",
    ""url"": ""/v2/service_plan_visibilities/8aa0f74f-f4f4-4626-abca-3526bce5de8e"",
    ""created_at"": ""2016-03-30T10:15:12Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""8073dd3c-6bbd-4d06-be24-daf7d59a1a8c"",
    ""organization_guid"": ""8073dd3c-6bbd-4d06-be24-daf7d59a1a8c"",
    ""service_plan_url"": ""/v2/service_plans/09816d24-2589-4711-9cc3-d4072ec100e2"",
    ""organization_url"": ""/v2/organizations/08f36c4e-b6f9-4a97-b034-afb5b8e1c618""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServicePlanVisibilities.RetrieveServicePlanVisibility(guid).Result;


                Assert.AreEqual("8073dd3c-6bbd-4d06-be24-daf7d59a1a8c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/8aa0f74f-f4f4-4626-abca-3526bce5de8e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:12Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8073dd3c-6bbd-4d06-be24-daf7d59a1a8c", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("8073dd3c-6bbd-4d06-be24-daf7d59a1a8c", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/09816d24-2589-4711-9cc3-d4072ec100e2", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/08f36c4e-b6f9-4a97-b034-afb5b8e1c618", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServicePlanVisibilities.DeleteServicePlanVisibilities(guid).Wait();

            }
        }

        [TestMethod]
        public void CreateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""d2b43325-8754-4524-8193-2d13ca29446d"",
    ""url"": ""/v2/service_plan_visibilities/7dff3b61-25dc-40eb-9927-1c6c8b222970"",
    ""created_at"": ""2016-03-30T10:15:11Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""d2b43325-8754-4524-8193-2d13ca29446d"",
    ""organization_guid"": ""d2b43325-8754-4524-8193-2d13ca29446d"",
    ""service_plan_url"": ""/v2/service_plans/0dc22934-6438-484b-b939-f9457e39f166"",
    ""organization_url"": ""/v2/organizations/99708d4a-b491-4437-aa7d-8c54b3aaed82""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServicePlanVisibilityRequest value = new CreateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.CreateServicePlanVisibility(value).Result;


                Assert.AreEqual("d2b43325-8754-4524-8193-2d13ca29446d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/7dff3b61-25dc-40eb-9927-1c6c8b222970", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-03-30T10:15:11Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("d2b43325-8754-4524-8193-2d13ca29446d", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("d2b43325-8754-4524-8193-2d13ca29446d", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/0dc22934-6438-484b-b939-f9457e39f166", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/99708d4a-b491-4437-aa7d-8c54b3aaed82", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

    }
}