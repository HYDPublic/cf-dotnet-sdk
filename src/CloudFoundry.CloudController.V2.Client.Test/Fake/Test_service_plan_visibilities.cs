//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlanVisibilitiesEndpoint
{
        [TestMethod]
        public void ListAllServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""996ea4ab-dce5-4435-86dc-254278b3a092"",
        ""url"": ""/v2/service_plan_visibilities/996ea4ab-dce5-4435-86dc-254278b3a092"",
        ""created_at"": ""2015-05-19T15:27:17+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""service_plan_guid"": ""823d3b61-c76a-4171-9749-9b54a016ad49"",
        ""organization_guid"": ""ecc731e3-1766-4778-babb-04dd4de13fa4"",
        ""service_plan_url"": ""/v2/service_plans/823d3b61-c76a-4171-9749-9b54a016ad49"",
        ""organization_url"": ""/v2/organizations/ecc731e3-1766-4778-babb-04dd4de13fa4""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServicePlanVisibilities.ListAllServicePlanVisibilities().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("996ea4ab-dce5-4435-86dc-254278b3a092", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/996ea4ab-dce5-4435-86dc-254278b3a092", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:17+00:00", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("823d3b61-c76a-4171-9749-9b54a016ad49", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("ecc731e3-1766-4778-babb-04dd4de13fa4", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/823d3b61-c76a-4171-9749-9b54a016ad49", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/ecc731e3-1766-4778-babb-04dd4de13fa4", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void CreateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""3377bef9-96f0-43d8-8f8b-6e1d5413f1b4"",
    ""url"": ""/v2/service_plan_visibilities/3377bef9-96f0-43d8-8f8b-6e1d5413f1b4"",
    ""created_at"": ""2015-05-19T15:27:17+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""58a891e4-d654-4615-949c-ced64d4eeaea"",
    ""organization_guid"": ""eb1ef59e-164e-4fec-90f9-7663e805969c"",
    ""service_plan_url"": ""/v2/service_plans/58a891e4-d654-4615-949c-ced64d4eeaea"",
    ""organization_url"": ""/v2/organizations/eb1ef59e-164e-4fec-90f9-7663e805969c""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServicePlanVisibilityRequest value = new CreateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.CreateServicePlanVisibility(value).Result;


                Assert.AreEqual("3377bef9-96f0-43d8-8f8b-6e1d5413f1b4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/3377bef9-96f0-43d8-8f8b-6e1d5413f1b4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("58a891e4-d654-4615-949c-ced64d4eeaea", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("eb1ef59e-164e-4fec-90f9-7663e805969c", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/58a891e4-d654-4615-949c-ced64d4eeaea", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/eb1ef59e-164e-4fec-90f9-7663e805969c", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServicePlanVisibilities.DeleteServicePlanVisibilities(guid).Wait();

            }
        }

        [TestMethod]
        public void UpdateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""05ac4ad7-04f9-46f5-b1eb-6e5e730a7ca2"",
    ""url"": ""/v2/service_plan_visibilities/05ac4ad7-04f9-46f5-b1eb-6e5e730a7ca2"",
    ""created_at"": ""2015-05-19T15:27:17+00:00"",
    ""updated_at"": ""2015-05-19T15:27:17+00:00""
  },
  ""entity"": {
    ""service_plan_guid"": ""8f27baee-b294-429b-95a9-aff944ccb8cb"",
    ""organization_guid"": ""caa27166-5727-41d8-8396-430af42f7aa6"",
    ""service_plan_url"": ""/v2/service_plans/8f27baee-b294-429b-95a9-aff944ccb8cb"",
    ""organization_url"": ""/v2/organizations/caa27166-5727-41d8-8396-430af42f7aa6""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServicePlanVisibilityRequest value = new UpdateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.UpdateServicePlanVisibility(guid, value).Result;


                Assert.AreEqual("05ac4ad7-04f9-46f5-b1eb-6e5e730a7ca2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/05ac4ad7-04f9-46f5-b1eb-6e5e730a7ca2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-05-19T15:27:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("8f27baee-b294-429b-95a9-aff944ccb8cb", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("caa27166-5727-41d8-8396-430af42f7aa6", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/8f27baee-b294-429b-95a9-aff944ccb8cb", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/caa27166-5727-41d8-8396-430af42f7aa6", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""0e284fe0-92a1-48af-abbc-4ef15976e9b2"",
    ""url"": ""/v2/service_plan_visibilities/0e284fe0-92a1-48af-abbc-4ef15976e9b2"",
    ""created_at"": ""2015-05-19T15:27:17+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""7be2a61b-caa8-4908-a4aa-2968edf327fc"",
    ""organization_guid"": ""8a0c42a3-df63-4a03-9f18-d2dfd6ed4b52"",
    ""service_plan_url"": ""/v2/service_plans/7be2a61b-caa8-4908-a4aa-2968edf327fc"",
    ""organization_url"": ""/v2/organizations/8a0c42a3-df63-4a03-9f18-d2dfd6ed4b52""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServicePlanVisibilities.RetrieveServicePlanVisibility(guid).Result;


                Assert.AreEqual("0e284fe0-92a1-48af-abbc-4ef15976e9b2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/0e284fe0-92a1-48af-abbc-4ef15976e9b2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-05-19T15:27:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("7be2a61b-caa8-4908-a4aa-2968edf327fc", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("8a0c42a3-df63-4a03-9f18-d2dfd6ed4b52", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/7be2a61b-caa8-4908-a4aa-2968edf327fc", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/8a0c42a3-df63-4a03-9f18-d2dfd6ed4b52", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

    }
}