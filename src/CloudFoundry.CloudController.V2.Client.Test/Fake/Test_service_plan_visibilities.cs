//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlanVisibilitiesEndpoint
{
        [TestMethod]
        public void CreateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""3812bf50-e9e2-470e-b447-cb42930ee127"",
    ""url"": ""/v2/service_plan_visibilities/3a4d041d-a1a7-434a-930c-c4abe064c570"",
    ""created_at"": ""2016-07-07T09:16:47Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""3812bf50-e9e2-470e-b447-cb42930ee127"",
    ""organization_guid"": ""3812bf50-e9e2-470e-b447-cb42930ee127"",
    ""service_plan_url"": ""/v2/service_plans/a2d4c138-5b37-4195-9021-6b3b2b97ad00"",
    ""organization_url"": ""/v2/organizations/a876dbd8-4215-4867-9cec-e35167aff94a""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServicePlanVisibilityRequest value = new CreateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.CreateServicePlanVisibility(value).Result;


                Assert.AreEqual("3812bf50-e9e2-470e-b447-cb42930ee127", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/3a4d041d-a1a7-434a-930c-c4abe064c570", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("3812bf50-e9e2-470e-b447-cb42930ee127", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("3812bf50-e9e2-470e-b447-cb42930ee127", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/a2d4c138-5b37-4195-9021-6b3b2b97ad00", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/a876dbd8-4215-4867-9cec-e35167aff94a", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServicePlanVisibilities.DeleteServicePlanVisibilities(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""91fbcc5f-a0a7-45db-ad6f-30a1fd6c0e4d"",
        ""url"": ""/v2/service_plan_visibilities/88b93bb7-6287-4985-9c94-9f1ec3abe04d"",
        ""created_at"": ""2016-07-07T09:16:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""service_plan_guid"": ""91fbcc5f-a0a7-45db-ad6f-30a1fd6c0e4d"",
        ""organization_guid"": ""91fbcc5f-a0a7-45db-ad6f-30a1fd6c0e4d"",
        ""service_plan_url"": ""/v2/service_plans/ba264da4-12b0-45f7-9898-48f00d085bc7"",
        ""organization_url"": ""/v2/organizations/635e22f8-6795-4d2d-83e6-6c291b954f05""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServicePlanVisibilities.ListAllServicePlanVisibilities().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("91fbcc5f-a0a7-45db-ad6f-30a1fd6c0e4d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/88b93bb7-6287-4985-9c94-9f1ec3abe04d", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:47Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("91fbcc5f-a0a7-45db-ad6f-30a1fd6c0e4d", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("91fbcc5f-a0a7-45db-ad6f-30a1fd6c0e4d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/ba264da4-12b0-45f7-9898-48f00d085bc7", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/635e22f8-6795-4d2d-83e6-6c291b954f05", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""3ffc4339-5f51-466a-8914-fbb400965212"",
    ""url"": ""/v2/service_plan_visibilities/b090d2f9-f10b-498b-9ad5-3146bba0e0ef"",
    ""created_at"": ""2016-07-07T09:16:46Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""3ffc4339-5f51-466a-8914-fbb400965212"",
    ""organization_guid"": ""3ffc4339-5f51-466a-8914-fbb400965212"",
    ""service_plan_url"": ""/v2/service_plans/fed323da-da89-4549-9f9d-9fcc3aff12ed"",
    ""organization_url"": ""/v2/organizations/702a12b0-9682-4538-8f48-3b3527b8fc16""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServicePlanVisibilities.RetrieveServicePlanVisibility(guid).Result;


                Assert.AreEqual("3ffc4339-5f51-466a-8914-fbb400965212", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/b090d2f9-f10b-498b-9ad5-3146bba0e0ef", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:46Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("3ffc4339-5f51-466a-8914-fbb400965212", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("3ffc4339-5f51-466a-8914-fbb400965212", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/fed323da-da89-4549-9f9d-9fcc3aff12ed", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/702a12b0-9682-4538-8f48-3b3527b8fc16", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void UpdateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""40880c33-11d0-434f-a778-bccff8914260"",
    ""url"": ""/v2/service_plan_visibilities/129134dd-92d9-4710-a494-b48bd904b4ff"",
    ""created_at"": ""2016-07-07T09:16:46Z"",
    ""updated_at"": ""2016-07-07T09:16:46Z""
  },
  ""entity"": {
    ""service_plan_guid"": ""40880c33-11d0-434f-a778-bccff8914260"",
    ""organization_guid"": ""40880c33-11d0-434f-a778-bccff8914260"",
    ""service_plan_url"": ""/v2/service_plans/e824e573-5da8-402d-bbbd-318d2211ab35"",
    ""organization_url"": ""/v2/organizations/7cd23e01-dcd0-424f-8a19-98dfa724ec99""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServicePlanVisibilityRequest value = new UpdateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.UpdateServicePlanVisibility(guid, value).Result;


                Assert.AreEqual("40880c33-11d0-434f-a778-bccff8914260", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/129134dd-92d9-4710-a494-b48bd904b4ff", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-07-07T09:16:46Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-07-07T09:16:46Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("40880c33-11d0-434f-a778-bccff8914260", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("40880c33-11d0-434f-a778-bccff8914260", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/e824e573-5da8-402d-bbbd-318d2211ab35", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/7cd23e01-dcd0-424f-8a19-98dfa724ec99", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

    }
}