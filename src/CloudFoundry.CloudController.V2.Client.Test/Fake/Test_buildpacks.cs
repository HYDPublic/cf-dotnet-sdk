//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class BuildpacksEndpoint
{
        [TestMethod]
        public void ListAllBuildpacksTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f6fad548-58c1-4ba9-89a3-0b3df00871e4"",
        ""url"": ""/v2/buildpacks/6d83c51c-4fe7-420a-8aef-4cda25a51b0c"",
        ""created_at"": ""2016-10-12T12:29:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_1"",
        ""position"": 1,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-390""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f6fad548-58c1-4ba9-89a3-0b3df00871e4"",
        ""url"": ""/v2/buildpacks/c3453819-3154-4387-8dfc-b40bfe580ecb"",
        ""created_at"": ""2016-10-12T12:29:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_2"",
        ""position"": 2,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-391""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f6fad548-58c1-4ba9-89a3-0b3df00871e4"",
        ""url"": ""/v2/buildpacks/af5465b8-7002-4bfe-b724-727402f65916"",
        ""created_at"": ""2016-10-12T12:29:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_3"",
        ""position"": 3,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-392""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Buildpacks.ListAllBuildpacks().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f6fad548-58c1-4ba9-89a3-0b3df00871e4", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/buildpacks/6d83c51c-4fe7-420a-8aef-4cda25a51b0c", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name_1", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj[0].Position), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj[0].Enabled), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj[0].Locked), true);
                Assert.AreEqual("name-390", TestUtil.ToTestableString(obj[0].Filename), true);
                Assert.AreEqual("f6fad548-58c1-4ba9-89a3-0b3df00871e4", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/buildpacks/c3453819-3154-4387-8dfc-b40bfe580ecb", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name_2", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("2", TestUtil.ToTestableString(obj[1].Position), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj[1].Enabled), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj[1].Locked), true);
                Assert.AreEqual("name-391", TestUtil.ToTestableString(obj[1].Filename), true);
                Assert.AreEqual("f6fad548-58c1-4ba9-89a3-0b3df00871e4", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/buildpacks/af5465b8-7002-4bfe-b724-727402f65916", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name_3", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("3", TestUtil.ToTestableString(obj[2].Position), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj[2].Enabled), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj[2].Locked), true);
                Assert.AreEqual("name-392", TestUtil.ToTestableString(obj[2].Filename), true);

            }
        }

        [TestMethod]
        public void RetrieveBuildpackTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""c7d03dcd-efe4-4af9-adb3-3f67e4233f3b"",
    ""url"": ""/v2/buildpacks/f946575e-511e-4858-9d97-67fa2e3878b6"",
    ""created_at"": ""2016-10-12T12:29:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": ""name-405""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Buildpacks.RetrieveBuildpack(guid).Result;


                Assert.AreEqual("c7d03dcd-efe4-4af9-adb3-3f67e4233f3b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/buildpacks/f946575e-511e-4858-9d97-67fa2e3878b6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
                Assert.AreEqual("name-405", TestUtil.ToTestableString(obj.Filename), true);

            }
        }

        [TestMethod]
        public void DeleteBuildpackTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.Buildpacks.DeleteBuildpack(guid).Wait();

            }
        }

        [TestMethod]
        public void ChangePositionOfBuildpackTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""f3802988-57bc-472d-8e8f-e0ad61c0673c"",
    ""url"": ""/v2/buildpacks/e83b7769-0fe9-455c-868c-ff026845a57a"",
    ""created_at"": ""2016-10-12T12:29:16Z"",
    ""updated_at"": ""2016-10-12T12:29:16Z""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 3,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": ""name-396""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                ChangePositionOfBuildpackRequest value = new ChangePositionOfBuildpackRequest();


                var obj = cfClient.Buildpacks.ChangePositionOfBuildpack(guid, value).Result;


                Assert.AreEqual("f3802988-57bc-472d-8e8f-e0ad61c0673c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/buildpacks/e83b7769-0fe9-455c-868c-ff026845a57a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Position), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
                Assert.AreEqual("name-396", TestUtil.ToTestableString(obj.Filename), true);

            }
        }

        [TestMethod]
        public void CreatesAdminBuildpackTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""2b612996-f54c-4636-8da9-46886e8c7de7"",
    ""url"": ""/v2/buildpacks/3d6df7f6-7273-4b95-9936-e9a40fd8867c"",
    ""created_at"": ""2016-10-12T12:29:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""Golang_buildpack"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": null
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesAdminBuildpackRequest value = new CreatesAdminBuildpackRequest();


                var obj = cfClient.Buildpacks.CreatesAdminBuildpack(value).Result;


                Assert.AreEqual("2b612996-f54c-4636-8da9-46886e8c7de7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/buildpacks/3d6df7f6-7273-4b95-9936-e9a40fd8867c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("Golang_buildpack", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Filename), true);

            }
        }

        [TestMethod]
        public void LockOrUnlockBuildpackTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""d9790be6-7d0f-4328-b202-712f6ae4111f"",
    ""url"": ""/v2/buildpacks/8167871c-5489-4867-a2b7-7ea0ae44c95a"",
    ""created_at"": ""2016-10-12T12:29:16Z"",
    ""updated_at"": ""2016-10-12T12:29:16Z""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": true,
    ""filename"": ""name-393""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                LockOrUnlockBuildpackRequest value = new LockOrUnlockBuildpackRequest();


                var obj = cfClient.Buildpacks.LockOrUnlockBuildpack(guid, value).Result;


                Assert.AreEqual("d9790be6-7d0f-4328-b202-712f6ae4111f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/buildpacks/8167871c-5489-4867-a2b7-7ea0ae44c95a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Locked), true);
                Assert.AreEqual("name-393", TestUtil.ToTestableString(obj.Filename), true);

            }
        }

        [TestMethod]
        public void EnableOrDisableBuildpackTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""dd912796-a4f5-48c3-9efe-1356e43385fd"",
    ""url"": ""/v2/buildpacks/caf1b8d8-e20a-4ea0-ac55-aba2daa1cd63"",
    ""created_at"": ""2016-10-12T12:29:16Z"",
    ""updated_at"": ""2016-10-12T12:29:16Z""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": false,
    ""locked"": false,
    ""filename"": ""name-399""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                EnableOrDisableBuildpackRequest value = new EnableOrDisableBuildpackRequest();


                var obj = cfClient.Buildpacks.EnableOrDisableBuildpack(guid, value).Result;


                Assert.AreEqual("dd912796-a4f5-48c3-9efe-1356e43385fd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/buildpacks/caf1b8d8-e20a-4ea0-ac55-aba2daa1cd63", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-10-12T12:29:16Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj.Enabled), true);
                Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
                Assert.AreEqual("name-399", TestUtil.ToTestableString(obj.Filename), true);

            }
        }

    }
}