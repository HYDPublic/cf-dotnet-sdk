//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsTest
    {


        [TestMethod]
        public void TestRemoveRouteFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1cf1ea50-a180-48d2-bd9b-5f5b9de216a4"",
    ""url"": ""/v2/apps/1cf1ea50-a180-48d2-bd9b-5f5b9de216a4"",
    ""created_at"": ""2015-03-23T16:53:14+00:00"",
    ""updated_at"": ""2015-03-23T16:53:14+00:00""
  },
  ""entity"": {
    ""name"": ""name-59"",
    ""production"": false,
    ""space_guid"": ""9da74296-b3f3-44e2-8c04-9456bb787318"",
    ""stack_guid"": ""c9dc9916-f75a-4a01-b0e4-47aa11a21127"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""c89c4c0f-a09f-4e37-b5f0-3b29053b7a57"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-03-23T16:53:14+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/9da74296-b3f3-44e2-8c04-9456bb787318"",
    ""stack_url"": ""/v2/stacks/c9dc9916-f75a-4a01-b0e4-47aa11a21127"",
    ""events_url"": ""/v2/apps/1cf1ea50-a180-48d2-bd9b-5f5b9de216a4/events"",
    ""service_bindings_url"": ""/v2/apps/1cf1ea50-a180-48d2-bd9b-5f5b9de216a4/service_bindings"",
    ""routes_url"": ""/v2/apps/1cf1ea50-a180-48d2-bd9b-5f5b9de216a4/routes""
  }
}";

            RemoveRouteFromAppResponse obj = Utilities.DeserializeJson<RemoveRouteFromAppResponse>(json);

            Assert.AreEqual("1cf1ea50-a180-48d2-bd9b-5f5b9de216a4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/1cf1ea50-a180-48d2-bd9b-5f5b9de216a4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:14+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:14+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-59", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("9da74296-b3f3-44e2-8c04-9456bb787318", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("c9dc9916-f75a-4a01-b0e4-47aa11a21127", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("c89c4c0f-a09f-4e37-b5f0-3b29053b7a57", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:14+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/9da74296-b3f3-44e2-8c04-9456bb787318", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/c9dc9916-f75a-4a01-b0e4-47aa11a21127", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/1cf1ea50-a180-48d2-bd9b-5f5b9de216a4/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/1cf1ea50-a180-48d2-bd9b-5f5b9de216a4/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/1cf1ea50-a180-48d2-bd9b-5f5b9de216a4/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2e05e3f5-a9c8-49d5-8892-454a3d18e396"",
    ""url"": ""/v2/apps/2e05e3f5-a9c8-49d5-8892-454a3d18e396"",
    ""created_at"": ""2015-03-23T16:53:14+00:00"",
    ""updated_at"": ""2015-03-23T16:53:14+00:00""
  },
  ""entity"": {
    ""name"": ""name-84"",
    ""production"": false,
    ""space_guid"": ""bacb2aba-bcfb-425a-b881-78100cd98b20"",
    ""stack_guid"": ""593f8ed0-4de9-4b1a-8ba3-013e1e6f9f11"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""c0c5bd28-8b15-4986-9dc0-a7726098b5e9"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-03-23T16:53:14+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/bacb2aba-bcfb-425a-b881-78100cd98b20"",
    ""stack_url"": ""/v2/stacks/593f8ed0-4de9-4b1a-8ba3-013e1e6f9f11"",
    ""events_url"": ""/v2/apps/2e05e3f5-a9c8-49d5-8892-454a3d18e396/events"",
    ""service_bindings_url"": ""/v2/apps/2e05e3f5-a9c8-49d5-8892-454a3d18e396/service_bindings"",
    ""routes_url"": ""/v2/apps/2e05e3f5-a9c8-49d5-8892-454a3d18e396/routes""
  }
}";

            AssociateRouteWithAppResponse obj = Utilities.DeserializeJson<AssociateRouteWithAppResponse>(json);

            Assert.AreEqual("2e05e3f5-a9c8-49d5-8892-454a3d18e396", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/2e05e3f5-a9c8-49d5-8892-454a3d18e396", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:14+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:14+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-84", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("bacb2aba-bcfb-425a-b881-78100cd98b20", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("593f8ed0-4de9-4b1a-8ba3-013e1e6f9f11", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("c0c5bd28-8b15-4986-9dc0-a7726098b5e9", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:14+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/bacb2aba-bcfb-425a-b881-78100cd98b20", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/593f8ed0-4de9-4b1a-8ba3-013e1e6f9f11", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/2e05e3f5-a9c8-49d5-8892-454a3d18e396/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/2e05e3f5-a9c8-49d5-8892-454a3d18e396/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/2e05e3f5-a9c8-49d5-8892-454a3d18e396/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestRemoveServiceBindingFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1"",
    ""url"": ""/v2/apps/61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1"",
    ""created_at"": ""2015-03-23T16:53:13+00:00"",
    ""updated_at"": ""2015-03-23T16:53:13+00:00""
  },
  ""entity"": {
    ""name"": ""name-40"",
    ""production"": false,
    ""space_guid"": ""13ef4495-752b-443a-9f08-790b82bd9b77"",
    ""stack_guid"": ""3cfe4319-b40e-412a-beca-27d649f50a43"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""6cfe1da5-5f74-4e7a-9fe5-4a78eda269a2"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-03-23T16:53:13+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/13ef4495-752b-443a-9f08-790b82bd9b77"",
    ""stack_url"": ""/v2/stacks/3cfe4319-b40e-412a-beca-27d649f50a43"",
    ""events_url"": ""/v2/apps/61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1/events"",
    ""service_bindings_url"": ""/v2/apps/61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1/service_bindings"",
    ""routes_url"": ""/v2/apps/61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1/routes""
  }
}";

            RemoveServiceBindingFromAppResponse obj = Utilities.DeserializeJson<RemoveServiceBindingFromAppResponse>(json);

            Assert.AreEqual("61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-40", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("13ef4495-752b-443a-9f08-790b82bd9b77", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("3cfe4319-b40e-412a-beca-27d649f50a43", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("6cfe1da5-5f74-4e7a-9fe5-4a78eda269a2", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/13ef4495-752b-443a-9f08-790b82bd9b77", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/3cfe4319-b40e-412a-beca-27d649f50a43", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/61bf80bf-7a9c-4afc-8dbb-23be8c46a2c1/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetDetailedStatsForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""stats"":{""usage"":{""disk"":66392064,""mem"":29880320,""cpu"":0.13511219703079957,""time"":""2014-06-19 22:37:58 +0000""},""name"":""app_name"",""uris"":[""app_name.example.com""],""host"":""10.0.0.1"",""port"":61035,""uptime"":65007,""mem_quota"":536870912,""disk_quota"":1073741824,""fds_quota"":16384}}}";

            GetDetailedStatsForStartedAppResponse obj = Utilities.DeserializeJson<GetDetailedStatsForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestCopyAppBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5f025beb-2816-4ef6-b144-21be76491f39"",
    ""created_at"": ""2015-03-23T16:53:34+00:00"",
    ""url"": ""/v2/jobs/5f025beb-2816-4ef6-b144-21be76491f39""
  },
  ""entity"": {
    ""guid"": ""5f025beb-2816-4ef6-b144-21be76491f39"",
    ""status"": ""queued""
  }
}";

            CopyAppBitsForAppResponse obj = Utilities.DeserializeJson<CopyAppBitsForAppResponse>(json);

            Assert.AreEqual("5f025beb-2816-4ef6-b144-21be76491f39", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-03-23T16:53:34+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/5f025beb-2816-4ef6-b144-21be76491f39", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("5f025beb-2816-4ef6-b144-21be76491f39", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestListAllAppsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6318f0a7-3af0-41e5-aa82-f980627a2584"",
        ""url"": ""/v2/apps/6318f0a7-3af0-41e5-aa82-f980627a2584"",
        ""created_at"": ""2015-03-23T16:53:16+00:00"",
        ""updated_at"": ""2015-03-23T16:53:16+00:00""
      },
      ""entity"": {
        ""name"": ""name-235"",
        ""production"": false,
        ""space_guid"": ""323daab3-2586-463b-8792-262a9e4f8336"",
        ""stack_guid"": ""1a3c2897-6454-43d8-b6e7-a8d34ad5fe48"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""035967fb-7588-41ae-9c04-1bc4b9e0ed0c"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-03-23T16:53:16+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/323daab3-2586-463b-8792-262a9e4f8336"",
        ""stack_url"": ""/v2/stacks/1a3c2897-6454-43d8-b6e7-a8d34ad5fe48"",
        ""events_url"": ""/v2/apps/6318f0a7-3af0-41e5-aa82-f980627a2584/events"",
        ""service_bindings_url"": ""/v2/apps/6318f0a7-3af0-41e5-aa82-f980627a2584/service_bindings"",
        ""routes_url"": ""/v2/apps/6318f0a7-3af0-41e5-aa82-f980627a2584/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""b57e44f9-a686-4ce0-9c7a-d71a1654c9a3"",
        ""url"": ""/v2/apps/b57e44f9-a686-4ce0-9c7a-d71a1654c9a3"",
        ""created_at"": ""2015-03-23T16:53:16+00:00"",
        ""updated_at"": ""2015-03-23T16:53:16+00:00""
      },
      ""entity"": {
        ""name"": ""name-245"",
        ""production"": false,
        ""space_guid"": ""c503ee34-1e72-4f83-b170-968bdc1707ff"",
        ""stack_guid"": ""52780571-4a3c-4488-ae86-47a4227feee3"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""e3f9b45e-c8d9-4afa-b98f-828e00abed63"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-03-23T16:53:16+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/c503ee34-1e72-4f83-b170-968bdc1707ff"",
        ""stack_url"": ""/v2/stacks/52780571-4a3c-4488-ae86-47a4227feee3"",
        ""events_url"": ""/v2/apps/b57e44f9-a686-4ce0-9c7a-d71a1654c9a3/events"",
        ""service_bindings_url"": ""/v2/apps/b57e44f9-a686-4ce0-9c7a-d71a1654c9a3/service_bindings"",
        ""routes_url"": ""/v2/apps/b57e44f9-a686-4ce0-9c7a-d71a1654c9a3/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0"",
        ""url"": ""/v2/apps/d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0"",
        ""created_at"": ""2015-03-23T16:53:16+00:00"",
        ""updated_at"": ""2015-03-23T16:53:16+00:00""
      },
      ""entity"": {
        ""name"": ""name-240"",
        ""production"": false,
        ""space_guid"": ""da13dc11-e4b0-471b-a918-e27bb923c478"",
        ""stack_guid"": ""c00330fd-817c-498e-bebc-0748a4b9ec40"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""dddc1cd9-ec9b-4bfb-acb7-9d2ac1cc6f0c"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-03-23T16:53:16+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/da13dc11-e4b0-471b-a918-e27bb923c478"",
        ""stack_url"": ""/v2/stacks/c00330fd-817c-498e-bebc-0748a4b9ec40"",
        ""events_url"": ""/v2/apps/d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0/events"",
        ""service_bindings_url"": ""/v2/apps/d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0/service_bindings"",
        ""routes_url"": ""/v2/apps/d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsResponse> page = Utilities.DeserializePage<ListAllAppsResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6318f0a7-3af0-41e5-aa82-f980627a2584", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/6318f0a7-3af0-41e5-aa82-f980627a2584", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-235", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("323daab3-2586-463b-8792-262a9e4f8336", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1a3c2897-6454-43d8-b6e7-a8d34ad5fe48", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("035967fb-7588-41ae-9c04-1bc4b9e0ed0c", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/323daab3-2586-463b-8792-262a9e4f8336", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/1a3c2897-6454-43d8-b6e7-a8d34ad5fe48", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/6318f0a7-3af0-41e5-aa82-f980627a2584/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/6318f0a7-3af0-41e5-aa82-f980627a2584/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/6318f0a7-3af0-41e5-aa82-f980627a2584/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("b57e44f9-a686-4ce0-9c7a-d71a1654c9a3", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/b57e44f9-a686-4ce0-9c7a-d71a1654c9a3", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-245", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Production), true);
            Assert.AreEqual("c503ee34-1e72-4f83-b170-968bdc1707ff", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("52780571-4a3c-4488-ae86-47a4227feee3", TestUtil.ToTestableString(page[1].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[1].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[1].State), true);
            Assert.AreEqual("e3f9b45e-c8d9-4afa-b98f-828e00abed63", TestUtil.ToTestableString(page[1].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[1].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[1].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[1].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/c503ee34-1e72-4f83-b170-968bdc1707ff", TestUtil.ToTestableString(page[1].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/52780571-4a3c-4488-ae86-47a4227feee3", TestUtil.ToTestableString(page[1].StackUrl), true);
            Assert.AreEqual("/v2/apps/b57e44f9-a686-4ce0-9c7a-d71a1654c9a3/events", TestUtil.ToTestableString(page[1].EventsUrl), true);
            Assert.AreEqual("/v2/apps/b57e44f9-a686-4ce0-9c7a-d71a1654c9a3/service_bindings", TestUtil.ToTestableString(page[1].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/b57e44f9-a686-4ce0-9c7a-d71a1654c9a3/routes", TestUtil.ToTestableString(page[1].RoutesUrl), true);
            Assert.AreEqual("d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-240", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Production), true);
            Assert.AreEqual("da13dc11-e4b0-471b-a918-e27bb923c478", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("c00330fd-817c-498e-bebc-0748a4b9ec40", TestUtil.ToTestableString(page[2].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[2].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[2].State), true);
            Assert.AreEqual("dddc1cd9-ec9b-4bfb-acb7-9d2ac1cc6f0c", TestUtil.ToTestableString(page[2].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[2].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[2].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(page[2].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/da13dc11-e4b0-471b-a918-e27bb923c478", TestUtil.ToTestableString(page[2].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/c00330fd-817c-498e-bebc-0748a4b9ec40", TestUtil.ToTestableString(page[2].StackUrl), true);
            Assert.AreEqual("/v2/apps/d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0/events", TestUtil.ToTestableString(page[2].EventsUrl), true);
            Assert.AreEqual("/v2/apps/d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0/service_bindings", TestUtil.ToTestableString(page[2].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/d4ae4649-05c6-45ad-b03c-9e0f7c61e5a0/routes", TestUtil.ToTestableString(page[2].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""cd128fe4-7405-4952-a75a-29af3f380c1f"",
    ""url"": ""/v2/apps/cd128fe4-7405-4952-a75a-29af3f380c1f"",
    ""created_at"": ""2015-03-23T16:53:15+00:00"",
    ""updated_at"": ""2015-03-23T16:53:15+00:00""
  },
  ""entity"": {
    ""name"": ""name-164"",
    ""production"": false,
    ""space_guid"": ""520a5913-1156-49b3-b946-2a8b3076cf57"",
    ""stack_guid"": ""32984068-a865-4837-9770-eb14d87b5809"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""570e4372-eb3f-4453-a646-4d891efd3d05"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-03-23T16:53:15+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/520a5913-1156-49b3-b946-2a8b3076cf57"",
    ""stack_url"": ""/v2/stacks/32984068-a865-4837-9770-eb14d87b5809"",
    ""events_url"": ""/v2/apps/cd128fe4-7405-4952-a75a-29af3f380c1f/events"",
    ""service_bindings_url"": ""/v2/apps/cd128fe4-7405-4952-a75a-29af3f380c1f/service_bindings"",
    ""routes_url"": ""/v2/apps/cd128fe4-7405-4952-a75a-29af3f380c1f/routes""
  }
}";

            RetrieveAppResponse obj = Utilities.DeserializeJson<RetrieveAppResponse>(json);

            Assert.AreEqual("cd128fe4-7405-4952-a75a-29af3f380c1f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/cd128fe4-7405-4952-a75a-29af3f380c1f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:15+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:15+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-164", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("520a5913-1156-49b3-b946-2a8b3076cf57", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("32984068-a865-4837-9770-eb14d87b5809", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("570e4372-eb3f-4453-a646-4d891efd3d05", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:15+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/520a5913-1156-49b3-b946-2a8b3076cf57", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/32984068-a865-4837-9770-eb14d87b5809", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/cd128fe4-7405-4952-a75a-29af3f380c1f/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/cd128fe4-7405-4952-a75a-29af3f380c1f/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/cd128fe4-7405-4952-a75a-29af3f380c1f/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestCreateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""54cd2d7d-3bfb-490f-9aee-65cc3e06c72f"",
    ""url"": ""/v2/apps/54cd2d7d-3bfb-490f-9aee-65cc3e06c72f"",
    ""created_at"": ""2015-03-23T16:53:16+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my_super_app"",
    ""production"": false,
    ""space_guid"": ""f3e46394-d748-4cb7-be23-432facf83ce2"",
    ""stack_guid"": ""eeb0c8be-ee29-430f-b537-ab2af20f5951"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""5ddc4c4d-259d-4401-9064-3da9c49312c6"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": null,
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/f3e46394-d748-4cb7-be23-432facf83ce2"",
    ""stack_url"": ""/v2/stacks/eeb0c8be-ee29-430f-b537-ab2af20f5951"",
    ""events_url"": ""/v2/apps/54cd2d7d-3bfb-490f-9aee-65cc3e06c72f/events"",
    ""service_bindings_url"": ""/v2/apps/54cd2d7d-3bfb-490f-9aee-65cc3e06c72f/service_bindings"",
    ""routes_url"": ""/v2/apps/54cd2d7d-3bfb-490f-9aee-65cc3e06c72f/routes""
  }
}";

            CreateAppResponse obj = Utilities.DeserializeJson<CreateAppResponse>(json);

            Assert.AreEqual("54cd2d7d-3bfb-490f-9aee-65cc3e06c72f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/54cd2d7d-3bfb-490f-9aee-65cc3e06c72f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my_super_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("f3e46394-d748-4cb7-be23-432facf83ce2", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("eeb0c8be-ee29-430f-b537-ab2af20f5951", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("5ddc4c4d-259d-4401-9064-3da9c49312c6", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/f3e46394-d748-4cb7-be23-432facf83ce2", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/eeb0c8be-ee29-430f-b537-ab2af20f5951", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/54cd2d7d-3bfb-490f-9aee-65cc3e06c72f/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/54cd2d7d-3bfb-490f-9aee-65cc3e06c72f/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/54cd2d7d-3bfb-490f-9aee-65cc3e06c72f/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""425557aa-0f84-46bc-8e2e-01b47cd18fe0"",
    ""url"": ""/v2/apps/425557aa-0f84-46bc-8e2e-01b47cd18fe0"",
    ""created_at"": ""2015-03-23T16:53:15+00:00"",
    ""updated_at"": ""2015-03-23T16:53:15+00:00""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""production"": false,
    ""space_guid"": ""f61941db-b7a4-43d9-95d6-253272486fd8"",
    ""stack_guid"": ""8734d4a4-e766-4a35-a7cb-fb0045bb4e33"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""7f019b3d-5cc4-402f-ab72-f08619884393"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-03-23T16:53:15+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/f61941db-b7a4-43d9-95d6-253272486fd8"",
    ""stack_url"": ""/v2/stacks/8734d4a4-e766-4a35-a7cb-fb0045bb4e33"",
    ""events_url"": ""/v2/apps/425557aa-0f84-46bc-8e2e-01b47cd18fe0/events"",
    ""service_bindings_url"": ""/v2/apps/425557aa-0f84-46bc-8e2e-01b47cd18fe0/service_bindings"",
    ""routes_url"": ""/v2/apps/425557aa-0f84-46bc-8e2e-01b47cd18fe0/routes""
  }
}";

            UpdateAppResponse obj = Utilities.DeserializeJson<UpdateAppResponse>(json);

            Assert.AreEqual("425557aa-0f84-46bc-8e2e-01b47cd18fe0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/425557aa-0f84-46bc-8e2e-01b47cd18fe0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:15+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:15+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("f61941db-b7a4-43d9-95d6-253272486fd8", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("8734d4a4-e766-4a35-a7cb-fb0045bb4e33", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("7f019b3d-5cc4-402f-ab72-f08619884393", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:15+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/f61941db-b7a4-43d9-95d6-253272486fd8", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/8734d4a4-e766-4a35-a7cb-fb0045bb4e33", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/425557aa-0f84-46bc-8e2e-01b47cd18fe0/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/425557aa-0f84-46bc-8e2e-01b47cd18fe0/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/425557aa-0f84-46bc-8e2e-01b47cd18fe0/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetInstanceInformationForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""since"":1403140717.984577,""debug_ip"":null,""debug_port"":null,""console_ip"":null,""console_port"":null}}";

            GetInstanceInformationForStartedAppResponse obj = Utilities.DeserializeJson<GetInstanceInformationForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestGetEnvForAppResponse()
        {
            string json = @"{
  ""staging_env_json"": {
    ""STAGING_ENV"": ""staging_value""
  },
  ""running_env_json"": {
    ""RUNNING_ENV"": ""running_value""
  },
  ""environment_json"": {
    ""env_var"": ""env_val""
  },
  ""system_env_json"": {
    ""VCAP_SERVICES"": {

    }
  },
  ""application_env_json"": {
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""mem"": 1024,
        ""disk"": 1024,
        ""fds"": 16384
      },
      ""application_version"": ""a075669c-4e68-4896-9c97-a18fe622fd0e"",
      ""application_name"": ""name-149"",
      ""application_uris"": [

      ],
      ""version"": ""a075669c-4e68-4896-9c97-a18fe622fd0e"",
      ""name"": ""name-149"",
      ""space_name"": ""name-150"",
      ""space_id"": ""72f0789f-1ddf-45e7-8a7d-2a813e1dedf5"",
      ""uris"": [

      ],
      ""users"": null
    }
  }
}";

            GetEnvForAppResponse obj = Utilities.DeserializeJson<GetEnvForAppResponse>(json);

        }

        [TestMethod]
        public void TestCreateDockerAppExperimentalResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""dd2f86ae-900d-4cb7-b790-43088d587b6a"",
    ""url"": ""/v2/apps/dd2f86ae-900d-4cb7-b790-43088d587b6a"",
    ""created_at"": ""2015-03-23T16:53:16+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""docker_app"",
    ""production"": false,
    ""space_guid"": ""b6aded2c-2836-4116-a494-bf2a611e160f"",
    ""stack_guid"": ""eeb0c8be-ee29-430f-b537-ab2af20f5951"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {
      ""DIEGO_STAGE_BETA"": ""true"",
      ""DIEGO_RUN_BETA"": ""true""
    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""96265d87-807d-4660-a4f1-7d65675633c5"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": ""cloudfoundry/hello:latest"",
    ""package_updated_at"": ""2015-03-23T16:53:16+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/b6aded2c-2836-4116-a494-bf2a611e160f"",
    ""stack_url"": ""/v2/stacks/eeb0c8be-ee29-430f-b537-ab2af20f5951"",
    ""events_url"": ""/v2/apps/dd2f86ae-900d-4cb7-b790-43088d587b6a/events"",
    ""service_bindings_url"": ""/v2/apps/dd2f86ae-900d-4cb7-b790-43088d587b6a/service_bindings"",
    ""routes_url"": ""/v2/apps/dd2f86ae-900d-4cb7-b790-43088d587b6a/routes""
  }
}";

            CreateDockerAppExperimentalResponse obj = Utilities.DeserializeJson<CreateDockerAppExperimentalResponse>(json);

            Assert.AreEqual("dd2f86ae-900d-4cb7-b790-43088d587b6a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/dd2f86ae-900d-4cb7-b790-43088d587b6a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("docker_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("b6aded2c-2836-4116-a494-bf2a611e160f", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("eeb0c8be-ee29-430f-b537-ab2af20f5951", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("96265d87-807d-4660-a4f1-7d65675633c5", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("cloudfoundry/hello:latest", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:16+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/b6aded2c-2836-4116-a494-bf2a611e160f", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/eeb0c8be-ee29-430f-b537-ab2af20f5951", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/dd2f86ae-900d-4cb7-b790-43088d587b6a/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/dd2f86ae-900d-4cb7-b790-43088d587b6a/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/dd2f86ae-900d-4cb7-b790-43088d587b6a/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllRoutesForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""70c21fcc-d853-41de-9fa3-b98db584fa23"",
        ""url"": ""/v2/routes/70c21fcc-d853-41de-9fa3-b98db584fa23"",
        ""created_at"": ""2015-03-23T16:53:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-3"",
        ""domain_guid"": ""bc8a188b-39e4-4c2f-81cb-400d8232e052"",
        ""space_guid"": ""f49a22d8-ed76-4c51-a70b-557cdce16b65"",
        ""domain_url"": ""/v2/domains/bc8a188b-39e4-4c2f-81cb-400d8232e052"",
        ""space_url"": ""/v2/spaces/f49a22d8-ed76-4c51-a70b-557cdce16b65"",
        ""apps_url"": ""/v2/routes/70c21fcc-d853-41de-9fa3-b98db584fa23/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForAppResponse> page = Utilities.DeserializePage<ListAllRoutesForAppResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("70c21fcc-d853-41de-9fa3-b98db584fa23", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/70c21fcc-d853-41de-9fa3-b98db584fa23", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:14+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-3", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("bc8a188b-39e4-4c2f-81cb-400d8232e052", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("f49a22d8-ed76-4c51-a70b-557cdce16b65", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/bc8a188b-39e4-4c2f-81cb-400d8232e052", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/f49a22d8-ed76-4c51-a70b-557cdce16b65", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/70c21fcc-d853-41de-9fa3-b98db584fa23/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2ef54a8b-791c-405a-88e5-9974e24debee"",
        ""url"": ""/v2/service_bindings/2ef54a8b-791c-405a-88e5-9974e24debee"",
        ""created_at"": ""2015-03-23T16:53:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""750e05aa-7e9b-4602-a32f-bea8e83f8d90"",
        ""service_instance_guid"": ""e87fa6c5-3ea7-4122-9c0a-264bcbc2e67e"",
        ""credentials"": {
          ""creds-key-18"": ""creds-val-18""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/750e05aa-7e9b-4602-a32f-bea8e83f8d90"",
        ""service_instance_url"": ""/v2/service_instances/e87fa6c5-3ea7-4122-9c0a-264bcbc2e67e""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForAppResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForAppResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2ef54a8b-791c-405a-88e5-9974e24debee", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/2ef54a8b-791c-405a-88e5-9974e24debee", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("750e05aa-7e9b-4602-a32f-bea8e83f8d90", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("e87fa6c5-3ea7-4122-9c0a-264bcbc2e67e", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/750e05aa-7e9b-4602-a32f-bea8e83f8d90", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/e87fa6c5-3ea7-4122-9c0a-264bcbc2e67e", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestGetAppSummaryResponse()
        {
            string json = @"{""guid"":""30f81b8d-27ab-4076-8181-781bbe355c96"",""name"":""name-1898"",""routes"":[{""guid"":""25ff6157-cd3c-4580-a0a9-8256c387c9cb"",""host"":""host-18"",""domain"":{""guid"":""fe19b750-8d6c-45d8-8a4b-a1dfa8ea325c"",""name"":""domain-40.example.com""}}],""running_instances"":0,""services"":[{""guid"":""8e3a48f3-de40-4527-a90d-cce600eed7b6"",""name"":""name-1900"",""bound_app_count"":1,""dashboard_url"":null,""service_plan"":{""guid"":""7e522f8a-a530-4b9c-8288-4943f4017e0f"",""name"":""name-1901"",""service"":{""guid"":""f96d2544-65e4-4fc5-a8e8-d6a10e8b6869"",""label"":""label-81"",""provider"":""provider-72"",""version"":""version-56""}}}],""available_domains"":[{""guid"":""fe19b750-8d6c-45d8-8a4b-a1dfa8ea325c"",""name"":""domain-40.example.com"",""owning_organization_guid"":""3ed4cc41-c90d-44f9-a523-850ff3f2e75f""},{""guid"":""37cf1828-3487-4b4d-b78b-a61021b6f401"",""name"":""customer-app-domain1.com""},{""guid"":""117b338f-fa30-413d-b22e-caee70badaf3"",""name"":""customer-app-domain2.com""}],""name"":""name-1898"",""production"":false,""space_guid"":""2664e1d5-3f75-4419-977d-214765a5fdcd"",""stack_guid"":""b69cd425-1e62-4ee5-b176-4a7b9e302e4b"",""buildpack"":null,""detected_buildpack"":null,""environment_json"":null,""memory"":1024,""instances"":1,""disk_quota"":1024,""state"":""STOPPED"",""version"":""8706e78c-9edd-458a-a1ce-93e40c4ee0ff"",""command"":null,""console"":false,""debug"":null,""staging_task_id"":null,""package_state"":""PENDING"",""health_check_type"":""port"",""health_check_timeout"":null,""staging_failed_reason"":null,""docker_image"":null,""package_updated_at"":""2015-03-23T16:53:35+00:00"",""detected_start_command"":""""}";

            GetAppSummaryResponse obj = Utilities.DeserializeJson<GetAppSummaryResponse>(json);

            Assert.AreEqual("30f81b8d-27ab-4076-8181-781bbe355c96", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1898", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.RunningInstances), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("2664e1d5-3f75-4419-977d-214765a5fdcd", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("b69cd425-1e62-4ee5-b176-4a7b9e302e4b", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("8706e78c-9edd-458a-a1ce-93e40c4ee0ff", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:35+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
        }

        [TestMethod]
        public void TestRestageAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""821fbab8-c8e1-4891-88e8-3e3588132f6c"",
    ""url"": ""/v2/apps/821fbab8-c8e1-4891-88e8-3e3588132f6c"",
    ""created_at"": ""2015-03-23T16:53:20+00:00"",
    ""updated_at"": ""2015-03-23T16:53:20+00:00""
  },
  ""entity"": {
    ""name"": ""name-529"",
    ""production"": false,
    ""space_guid"": ""402d666d-eedf-4d29-99b8-1daeead03f19"",
    ""stack_guid"": ""f5ad5de6-c6a9-4e5c-be8d-3905f75e95cc"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STARTED"",
    ""version"": ""76f48601-b290-4eab-96b0-9432c140096e"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-03-23T16:53:20+00:00"",
    ""detected_start_command"": """"
  }
}";

            RestageAppResponse obj = Utilities.DeserializeJson<RestageAppResponse>(json);

            Assert.AreEqual("821fbab8-c8e1-4891-88e8-3e3588132f6c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/821fbab8-c8e1-4891-88e8-3e3588132f6c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-529", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("402d666d-eedf-4d29-99b8-1daeead03f19", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("f5ad5de6-c6a9-4e5c-be8d-3905f75e95cc", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("76f48601-b290-4eab-96b0-9432c140096e", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
        }
    }
}
