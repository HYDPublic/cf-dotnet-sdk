//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsTest
    {


        [TestMethod]
        public void TestRemoveRouteFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb"",
    ""url"": ""/v2/apps/9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb"",
    ""created_at"": ""2015-04-10T19:42:06+00:00"",
    ""updated_at"": ""2015-04-10T19:42:06+00:00""
  },
  ""entity"": {
    ""name"": ""name-1763"",
    ""production"": false,
    ""space_guid"": ""ed18f049-1dd6-447c-995a-10d82d820c60"",
    ""stack_guid"": ""7408e0d3-8af0-4cd7-a55d-d81dc91ebeb7"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""20aeb3b3-26c1-4e41-9232-4e8eb4ca273a"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-04-10T19:42:06+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/ed18f049-1dd6-447c-995a-10d82d820c60"",
    ""stack_url"": ""/v2/stacks/7408e0d3-8af0-4cd7-a55d-d81dc91ebeb7"",
    ""events_url"": ""/v2/apps/9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb/events"",
    ""service_bindings_url"": ""/v2/apps/9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb/service_bindings"",
    ""routes_url"": ""/v2/apps/9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb/routes""
  }
}";

            RemoveRouteFromAppResponse obj = Utilities.DeserializeJson<RemoveRouteFromAppResponse>(json);

            Assert.AreEqual("9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1763", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("ed18f049-1dd6-447c-995a-10d82d820c60", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("7408e0d3-8af0-4cd7-a55d-d81dc91ebeb7", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("20aeb3b3-26c1-4e41-9232-4e8eb4ca273a", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/ed18f049-1dd6-447c-995a-10d82d820c60", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/7408e0d3-8af0-4cd7-a55d-d81dc91ebeb7", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/9ecb83fe-ec2c-4803-b2a6-17d5ffc8f0cb/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3c9dd470-f4ab-41b1-be12-eb0d88482161"",
    ""url"": ""/v2/apps/3c9dd470-f4ab-41b1-be12-eb0d88482161"",
    ""created_at"": ""2015-04-10T19:42:06+00:00"",
    ""updated_at"": ""2015-04-10T19:42:06+00:00""
  },
  ""entity"": {
    ""name"": ""name-1773"",
    ""production"": false,
    ""space_guid"": ""acb900cf-619d-4c7c-b3a3-ec0ee40b2727"",
    ""stack_guid"": ""bc33331f-d3e0-4099-a0f5-090de5198c73"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""d1106187-3ba9-4484-aa4c-8212f1bd6da6"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-04-10T19:42:06+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/acb900cf-619d-4c7c-b3a3-ec0ee40b2727"",
    ""stack_url"": ""/v2/stacks/bc33331f-d3e0-4099-a0f5-090de5198c73"",
    ""events_url"": ""/v2/apps/3c9dd470-f4ab-41b1-be12-eb0d88482161/events"",
    ""service_bindings_url"": ""/v2/apps/3c9dd470-f4ab-41b1-be12-eb0d88482161/service_bindings"",
    ""routes_url"": ""/v2/apps/3c9dd470-f4ab-41b1-be12-eb0d88482161/routes""
  }
}";

            AssociateRouteWithAppResponse obj = Utilities.DeserializeJson<AssociateRouteWithAppResponse>(json);

            Assert.AreEqual("3c9dd470-f4ab-41b1-be12-eb0d88482161", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/3c9dd470-f4ab-41b1-be12-eb0d88482161", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1773", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("acb900cf-619d-4c7c-b3a3-ec0ee40b2727", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("bc33331f-d3e0-4099-a0f5-090de5198c73", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("d1106187-3ba9-4484-aa4c-8212f1bd6da6", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/acb900cf-619d-4c7c-b3a3-ec0ee40b2727", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/bc33331f-d3e0-4099-a0f5-090de5198c73", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/3c9dd470-f4ab-41b1-be12-eb0d88482161/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/3c9dd470-f4ab-41b1-be12-eb0d88482161/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/3c9dd470-f4ab-41b1-be12-eb0d88482161/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestRemoveServiceBindingFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4f7783bb-c493-472c-9a85-d9a1a22536d1"",
    ""url"": ""/v2/apps/4f7783bb-c493-472c-9a85-d9a1a22536d1"",
    ""created_at"": ""2015-04-10T19:42:05+00:00"",
    ""updated_at"": ""2015-04-10T19:42:05+00:00""
  },
  ""entity"": {
    ""name"": ""name-1724"",
    ""production"": false,
    ""space_guid"": ""892dd732-c203-408d-b104-41c0826b9f63"",
    ""stack_guid"": ""cfa8373e-0f41-4a5e-843a-9665441f680c"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""8cf70b33-738e-461e-a66d-8380d77b62c5"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-04-10T19:42:05+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/892dd732-c203-408d-b104-41c0826b9f63"",
    ""stack_url"": ""/v2/stacks/cfa8373e-0f41-4a5e-843a-9665441f680c"",
    ""events_url"": ""/v2/apps/4f7783bb-c493-472c-9a85-d9a1a22536d1/events"",
    ""service_bindings_url"": ""/v2/apps/4f7783bb-c493-472c-9a85-d9a1a22536d1/service_bindings"",
    ""routes_url"": ""/v2/apps/4f7783bb-c493-472c-9a85-d9a1a22536d1/routes""
  }
}";

            RemoveServiceBindingFromAppResponse obj = Utilities.DeserializeJson<RemoveServiceBindingFromAppResponse>(json);

            Assert.AreEqual("4f7783bb-c493-472c-9a85-d9a1a22536d1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/4f7783bb-c493-472c-9a85-d9a1a22536d1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:05+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:05+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1724", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("892dd732-c203-408d-b104-41c0826b9f63", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("cfa8373e-0f41-4a5e-843a-9665441f680c", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("8cf70b33-738e-461e-a66d-8380d77b62c5", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:05+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/892dd732-c203-408d-b104-41c0826b9f63", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/cfa8373e-0f41-4a5e-843a-9665441f680c", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/4f7783bb-c493-472c-9a85-d9a1a22536d1/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/4f7783bb-c493-472c-9a85-d9a1a22536d1/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/4f7783bb-c493-472c-9a85-d9a1a22536d1/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetDetailedStatsForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""stats"":{""usage"":{""disk"":66392064,""mem"":29880320,""cpu"":0.13511219703079957,""time"":""2014-06-19 22:37:58 +0000""},""name"":""app_name"",""uris"":[""app_name.example.com""],""host"":""10.0.0.1"",""port"":61035,""uptime"":65007,""mem_quota"":536870912,""disk_quota"":1073741824,""fds_quota"":16384}}}";

            GetDetailedStatsForStartedAppResponse obj = Utilities.DeserializeJson<GetDetailedStatsForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestCopyAppBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""909be702-ee9e-4284-9ee2-62efb61b2fe4"",
    ""created_at"": ""2015-04-10T19:42:02+00:00"",
    ""url"": ""/v2/jobs/909be702-ee9e-4284-9ee2-62efb61b2fe4""
  },
  ""entity"": {
    ""guid"": ""909be702-ee9e-4284-9ee2-62efb61b2fe4"",
    ""status"": ""queued""
  }
}";

            CopyAppBitsForAppResponse obj = Utilities.DeserializeJson<CopyAppBitsForAppResponse>(json);

            Assert.AreEqual("909be702-ee9e-4284-9ee2-62efb61b2fe4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-04-10T19:42:02+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/909be702-ee9e-4284-9ee2-62efb61b2fe4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("909be702-ee9e-4284-9ee2-62efb61b2fe4", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestListAllAppsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0114c9db-c070-4751-ad7e-2fcd2cf6f5ac"",
        ""url"": ""/v2/apps/0114c9db-c070-4751-ad7e-2fcd2cf6f5ac"",
        ""created_at"": ""2015-04-10T19:42:03+00:00"",
        ""updated_at"": ""2015-04-10T19:42:03+00:00""
      },
      ""entity"": {
        ""name"": ""name-1529"",
        ""production"": false,
        ""space_guid"": ""f81864cd-a508-4f17-a594-ac5c3be303a5"",
        ""stack_guid"": ""346b951a-34c7-4d4b-b533-98276f445e34"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""f8310579-bb94-41de-92ea-0ba620b47ffe"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-04-10T19:42:03+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/f81864cd-a508-4f17-a594-ac5c3be303a5"",
        ""stack_url"": ""/v2/stacks/346b951a-34c7-4d4b-b533-98276f445e34"",
        ""events_url"": ""/v2/apps/0114c9db-c070-4751-ad7e-2fcd2cf6f5ac/events"",
        ""service_bindings_url"": ""/v2/apps/0114c9db-c070-4751-ad7e-2fcd2cf6f5ac/service_bindings"",
        ""routes_url"": ""/v2/apps/0114c9db-c070-4751-ad7e-2fcd2cf6f5ac/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""3396b0b0-1233-428d-8629-8bc14fa35333"",
        ""url"": ""/v2/apps/3396b0b0-1233-428d-8629-8bc14fa35333"",
        ""created_at"": ""2015-04-10T19:42:03+00:00"",
        ""updated_at"": ""2015-04-10T19:42:03+00:00""
      },
      ""entity"": {
        ""name"": ""name-1524"",
        ""production"": false,
        ""space_guid"": ""c23ad957-c04b-4283-bbe3-e4235f581db3"",
        ""stack_guid"": ""0c850122-b42c-490c-90e7-efd608de9a8b"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""02b56612-074f-40ac-9778-0a209c8adf3e"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-04-10T19:42:03+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/c23ad957-c04b-4283-bbe3-e4235f581db3"",
        ""stack_url"": ""/v2/stacks/0c850122-b42c-490c-90e7-efd608de9a8b"",
        ""events_url"": ""/v2/apps/3396b0b0-1233-428d-8629-8bc14fa35333/events"",
        ""service_bindings_url"": ""/v2/apps/3396b0b0-1233-428d-8629-8bc14fa35333/service_bindings"",
        ""routes_url"": ""/v2/apps/3396b0b0-1233-428d-8629-8bc14fa35333/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a0f09816-23ed-4f50-9da3-45e9d4b15fd8"",
        ""url"": ""/v2/apps/a0f09816-23ed-4f50-9da3-45e9d4b15fd8"",
        ""created_at"": ""2015-04-10T19:42:03+00:00"",
        ""updated_at"": ""2015-04-10T19:42:03+00:00""
      },
      ""entity"": {
        ""name"": ""name-1534"",
        ""production"": false,
        ""space_guid"": ""ea6f982a-5c9e-4a02-95e8-cc9816f7fcb6"",
        ""stack_guid"": ""91cb2a3a-b131-4f1d-b44f-e8d84b1b210d"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""da8f730c-94ab-4af4-a979-c0e54c8667ba"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-04-10T19:42:03+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/ea6f982a-5c9e-4a02-95e8-cc9816f7fcb6"",
        ""stack_url"": ""/v2/stacks/91cb2a3a-b131-4f1d-b44f-e8d84b1b210d"",
        ""events_url"": ""/v2/apps/a0f09816-23ed-4f50-9da3-45e9d4b15fd8/events"",
        ""service_bindings_url"": ""/v2/apps/a0f09816-23ed-4f50-9da3-45e9d4b15fd8/service_bindings"",
        ""routes_url"": ""/v2/apps/a0f09816-23ed-4f50-9da3-45e9d4b15fd8/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsResponse> page = Utilities.DeserializePage<ListAllAppsResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0114c9db-c070-4751-ad7e-2fcd2cf6f5ac", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/0114c9db-c070-4751-ad7e-2fcd2cf6f5ac", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1529", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("f81864cd-a508-4f17-a594-ac5c3be303a5", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("346b951a-34c7-4d4b-b533-98276f445e34", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("f8310579-bb94-41de-92ea-0ba620b47ffe", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/f81864cd-a508-4f17-a594-ac5c3be303a5", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/346b951a-34c7-4d4b-b533-98276f445e34", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/0114c9db-c070-4751-ad7e-2fcd2cf6f5ac/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/0114c9db-c070-4751-ad7e-2fcd2cf6f5ac/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/0114c9db-c070-4751-ad7e-2fcd2cf6f5ac/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("3396b0b0-1233-428d-8629-8bc14fa35333", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/3396b0b0-1233-428d-8629-8bc14fa35333", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1524", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Production), true);
            Assert.AreEqual("c23ad957-c04b-4283-bbe3-e4235f581db3", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("0c850122-b42c-490c-90e7-efd608de9a8b", TestUtil.ToTestableString(page[1].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[1].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[1].State), true);
            Assert.AreEqual("02b56612-074f-40ac-9778-0a209c8adf3e", TestUtil.ToTestableString(page[1].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[1].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[1].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[1].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/c23ad957-c04b-4283-bbe3-e4235f581db3", TestUtil.ToTestableString(page[1].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/0c850122-b42c-490c-90e7-efd608de9a8b", TestUtil.ToTestableString(page[1].StackUrl), true);
            Assert.AreEqual("/v2/apps/3396b0b0-1233-428d-8629-8bc14fa35333/events", TestUtil.ToTestableString(page[1].EventsUrl), true);
            Assert.AreEqual("/v2/apps/3396b0b0-1233-428d-8629-8bc14fa35333/service_bindings", TestUtil.ToTestableString(page[1].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/3396b0b0-1233-428d-8629-8bc14fa35333/routes", TestUtil.ToTestableString(page[1].RoutesUrl), true);
            Assert.AreEqual("a0f09816-23ed-4f50-9da3-45e9d4b15fd8", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/a0f09816-23ed-4f50-9da3-45e9d4b15fd8", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1534", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Production), true);
            Assert.AreEqual("ea6f982a-5c9e-4a02-95e8-cc9816f7fcb6", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("91cb2a3a-b131-4f1d-b44f-e8d84b1b210d", TestUtil.ToTestableString(page[2].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[2].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[2].State), true);
            Assert.AreEqual("da8f730c-94ab-4af4-a979-c0e54c8667ba", TestUtil.ToTestableString(page[2].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[2].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[2].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(page[2].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/ea6f982a-5c9e-4a02-95e8-cc9816f7fcb6", TestUtil.ToTestableString(page[2].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/91cb2a3a-b131-4f1d-b44f-e8d84b1b210d", TestUtil.ToTestableString(page[2].StackUrl), true);
            Assert.AreEqual("/v2/apps/a0f09816-23ed-4f50-9da3-45e9d4b15fd8/events", TestUtil.ToTestableString(page[2].EventsUrl), true);
            Assert.AreEqual("/v2/apps/a0f09816-23ed-4f50-9da3-45e9d4b15fd8/service_bindings", TestUtil.ToTestableString(page[2].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/a0f09816-23ed-4f50-9da3-45e9d4b15fd8/routes", TestUtil.ToTestableString(page[2].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""174bef27-7bd4-46d4-ac3d-773c213823b8"",
    ""url"": ""/v2/apps/174bef27-7bd4-46d4-ac3d-773c213823b8"",
    ""created_at"": ""2015-04-10T19:42:04+00:00"",
    ""updated_at"": ""2015-04-10T19:42:04+00:00""
  },
  ""entity"": {
    ""name"": ""name-1615"",
    ""production"": false,
    ""space_guid"": ""d4695ffc-7316-4d99-84d1-885086404131"",
    ""stack_guid"": ""4759ad00-36a5-4942-aceb-488afb2051db"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""2cfe8edb-9fd0-46ed-b77b-2b8a53ab09b3"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-04-10T19:42:04+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/d4695ffc-7316-4d99-84d1-885086404131"",
    ""stack_url"": ""/v2/stacks/4759ad00-36a5-4942-aceb-488afb2051db"",
    ""events_url"": ""/v2/apps/174bef27-7bd4-46d4-ac3d-773c213823b8/events"",
    ""service_bindings_url"": ""/v2/apps/174bef27-7bd4-46d4-ac3d-773c213823b8/service_bindings"",
    ""routes_url"": ""/v2/apps/174bef27-7bd4-46d4-ac3d-773c213823b8/routes""
  }
}";

            RetrieveAppResponse obj = Utilities.DeserializeJson<RetrieveAppResponse>(json);

            Assert.AreEqual("174bef27-7bd4-46d4-ac3d-773c213823b8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/174bef27-7bd4-46d4-ac3d-773c213823b8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:04+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:04+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1615", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("d4695ffc-7316-4d99-84d1-885086404131", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("4759ad00-36a5-4942-aceb-488afb2051db", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("2cfe8edb-9fd0-46ed-b77b-2b8a53ab09b3", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:04+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/d4695ffc-7316-4d99-84d1-885086404131", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/4759ad00-36a5-4942-aceb-488afb2051db", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/174bef27-7bd4-46d4-ac3d-773c213823b8/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/174bef27-7bd4-46d4-ac3d-773c213823b8/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/174bef27-7bd4-46d4-ac3d-773c213823b8/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestCreateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""218594bf-5404-4c4b-8a5b-ad15b1ac2eff"",
    ""url"": ""/v2/apps/218594bf-5404-4c4b-8a5b-ad15b1ac2eff"",
    ""created_at"": ""2015-04-10T19:42:03+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my_super_app"",
    ""production"": false,
    ""space_guid"": ""cb94996e-f3a9-4d01-a38f-26f69830eebc"",
    ""stack_guid"": ""fa76cbd6-100c-4b19-ba46-9795143d5d75"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""c253868f-c608-4f75-b196-3f831bfc4850"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": null,
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/cb94996e-f3a9-4d01-a38f-26f69830eebc"",
    ""stack_url"": ""/v2/stacks/fa76cbd6-100c-4b19-ba46-9795143d5d75"",
    ""events_url"": ""/v2/apps/218594bf-5404-4c4b-8a5b-ad15b1ac2eff/events"",
    ""service_bindings_url"": ""/v2/apps/218594bf-5404-4c4b-8a5b-ad15b1ac2eff/service_bindings"",
    ""routes_url"": ""/v2/apps/218594bf-5404-4c4b-8a5b-ad15b1ac2eff/routes""
  }
}";

            CreateAppResponse obj = Utilities.DeserializeJson<CreateAppResponse>(json);

            Assert.AreEqual("218594bf-5404-4c4b-8a5b-ad15b1ac2eff", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/218594bf-5404-4c4b-8a5b-ad15b1ac2eff", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my_super_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("cb94996e-f3a9-4d01-a38f-26f69830eebc", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("fa76cbd6-100c-4b19-ba46-9795143d5d75", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("c253868f-c608-4f75-b196-3f831bfc4850", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/cb94996e-f3a9-4d01-a38f-26f69830eebc", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/fa76cbd6-100c-4b19-ba46-9795143d5d75", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/218594bf-5404-4c4b-8a5b-ad15b1ac2eff/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/218594bf-5404-4c4b-8a5b-ad15b1ac2eff/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/218594bf-5404-4c4b-8a5b-ad15b1ac2eff/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""45e623a9-b598-420f-a511-573db195aa36"",
    ""url"": ""/v2/apps/45e623a9-b598-420f-a511-573db195aa36"",
    ""created_at"": ""2015-04-10T19:42:03+00:00"",
    ""updated_at"": ""2015-04-10T19:42:03+00:00""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""production"": false,
    ""space_guid"": ""b58ec00d-072c-4bfb-98db-f05da6f83b09"",
    ""stack_guid"": ""00e6a7e2-6a5f-47ef-8516-f7621640a95b"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""79235707-cd97-4a94-8eff-19075d5eca5d"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-04-10T19:42:03+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/b58ec00d-072c-4bfb-98db-f05da6f83b09"",
    ""stack_url"": ""/v2/stacks/00e6a7e2-6a5f-47ef-8516-f7621640a95b"",
    ""events_url"": ""/v2/apps/45e623a9-b598-420f-a511-573db195aa36/events"",
    ""service_bindings_url"": ""/v2/apps/45e623a9-b598-420f-a511-573db195aa36/service_bindings"",
    ""routes_url"": ""/v2/apps/45e623a9-b598-420f-a511-573db195aa36/routes""
  }
}";

            UpdateAppResponse obj = Utilities.DeserializeJson<UpdateAppResponse>(json);

            Assert.AreEqual("45e623a9-b598-420f-a511-573db195aa36", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/45e623a9-b598-420f-a511-573db195aa36", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("b58ec00d-072c-4bfb-98db-f05da6f83b09", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("00e6a7e2-6a5f-47ef-8516-f7621640a95b", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("79235707-cd97-4a94-8eff-19075d5eca5d", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:03+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/b58ec00d-072c-4bfb-98db-f05da6f83b09", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/00e6a7e2-6a5f-47ef-8516-f7621640a95b", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/45e623a9-b598-420f-a511-573db195aa36/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/45e623a9-b598-420f-a511-573db195aa36/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/45e623a9-b598-420f-a511-573db195aa36/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetInstanceInformationForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""since"":1403140717.984577,""debug_ip"":null,""debug_port"":null,""console_ip"":null,""console_port"":null}}";

            GetInstanceInformationForStartedAppResponse obj = Utilities.DeserializeJson<GetInstanceInformationForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestGetEnvForAppResponse()
        {
            string json = @"{
  ""staging_env_json"": {
    ""STAGING_ENV"": ""staging_value""
  },
  ""running_env_json"": {
    ""RUNNING_ENV"": ""running_value""
  },
  ""environment_json"": {
    ""env_var"": ""env_val""
  },
  ""system_env_json"": {
    ""VCAP_SERVICES"": {

    }
  },
  ""application_env_json"": {
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""mem"": 1024,
        ""disk"": 1024,
        ""fds"": 16384
      },
      ""application_version"": ""ff1b720d-2c1e-4291-a4fe-68847945c18c"",
      ""application_name"": ""name-1675"",
      ""application_uris"": [

      ],
      ""version"": ""ff1b720d-2c1e-4291-a4fe-68847945c18c"",
      ""name"": ""name-1675"",
      ""space_name"": ""name-1676"",
      ""space_id"": ""7bd1fe81-00e6-436e-953d-c43ee26636ed"",
      ""uris"": [

      ],
      ""users"": null
    }
  }
}";

            GetEnvForAppResponse obj = Utilities.DeserializeJson<GetEnvForAppResponse>(json);

        }

        [TestMethod]
        public void TestCreateDockerAppExperimentalResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e47ac251-ee8d-4191-9472-7d6960b8c805"",
    ""url"": ""/v2/apps/e47ac251-ee8d-4191-9472-7d6960b8c805"",
    ""created_at"": ""2015-04-10T19:42:04+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""docker_app"",
    ""production"": false,
    ""space_guid"": ""81d98623-6c3e-4fa6-9099-ed357bf21636"",
    ""stack_guid"": ""fa76cbd6-100c-4b19-ba46-9795143d5d75"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {
      ""DIEGO_STAGE_BETA"": ""true"",
      ""DIEGO_RUN_BETA"": ""true""
    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""52b4217b-26e7-4111-b401-bd000a131011"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": ""cloudfoundry/hello:latest"",
    ""package_updated_at"": ""2015-04-10T19:42:04+00:00"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/81d98623-6c3e-4fa6-9099-ed357bf21636"",
    ""stack_url"": ""/v2/stacks/fa76cbd6-100c-4b19-ba46-9795143d5d75"",
    ""events_url"": ""/v2/apps/e47ac251-ee8d-4191-9472-7d6960b8c805/events"",
    ""service_bindings_url"": ""/v2/apps/e47ac251-ee8d-4191-9472-7d6960b8c805/service_bindings"",
    ""routes_url"": ""/v2/apps/e47ac251-ee8d-4191-9472-7d6960b8c805/routes""
  }
}";

            CreateDockerAppExperimentalResponse obj = Utilities.DeserializeJson<CreateDockerAppExperimentalResponse>(json);

            Assert.AreEqual("e47ac251-ee8d-4191-9472-7d6960b8c805", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/e47ac251-ee8d-4191-9472-7d6960b8c805", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:04+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("docker_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("81d98623-6c3e-4fa6-9099-ed357bf21636", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("fa76cbd6-100c-4b19-ba46-9795143d5d75", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("52b4217b-26e7-4111-b401-bd000a131011", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("cloudfoundry/hello:latest", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:04+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/81d98623-6c3e-4fa6-9099-ed357bf21636", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/fa76cbd6-100c-4b19-ba46-9795143d5d75", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/e47ac251-ee8d-4191-9472-7d6960b8c805/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/e47ac251-ee8d-4191-9472-7d6960b8c805/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/e47ac251-ee8d-4191-9472-7d6960b8c805/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllRoutesForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""55d70c4a-2ba7-4826-9add-438c9a7318fe"",
        ""url"": ""/v2/routes/55d70c4a-2ba7-4826-9add-438c9a7318fe"",
        ""created_at"": ""2015-04-10T19:42:05+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-12"",
        ""domain_guid"": ""2ebf0792-b45f-4715-952b-8f19815de5ab"",
        ""space_guid"": ""d6950b18-3792-4bda-8575-96ce3bb43f9b"",
        ""domain_url"": ""/v2/domains/2ebf0792-b45f-4715-952b-8f19815de5ab"",
        ""space_url"": ""/v2/spaces/d6950b18-3792-4bda-8575-96ce3bb43f9b"",
        ""apps_url"": ""/v2/routes/55d70c4a-2ba7-4826-9add-438c9a7318fe/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForAppResponse> page = Utilities.DeserializePage<ListAllRoutesForAppResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("55d70c4a-2ba7-4826-9add-438c9a7318fe", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/55d70c4a-2ba7-4826-9add-438c9a7318fe", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:05+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-12", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("2ebf0792-b45f-4715-952b-8f19815de5ab", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("d6950b18-3792-4bda-8575-96ce3bb43f9b", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/2ebf0792-b45f-4715-952b-8f19815de5ab", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/d6950b18-3792-4bda-8575-96ce3bb43f9b", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/55d70c4a-2ba7-4826-9add-438c9a7318fe/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""61b2af27-fe07-4789-bea6-2fbb21076f9d"",
        ""url"": ""/v2/service_bindings/61b2af27-fe07-4789-bea6-2fbb21076f9d"",
        ""created_at"": ""2015-04-10T19:42:05+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""76df015b-41db-4a6b-a23f-af114cb19611"",
        ""service_instance_guid"": ""b4932040-1493-4409-9e1f-fda3ca5cff53"",
        ""credentials"": {
          ""creds-key-433"": ""creds-val-433""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/76df015b-41db-4a6b-a23f-af114cb19611"",
        ""service_instance_url"": ""/v2/service_instances/b4932040-1493-4409-9e1f-fda3ca5cff53""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForAppResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForAppResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("61b2af27-fe07-4789-bea6-2fbb21076f9d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/61b2af27-fe07-4789-bea6-2fbb21076f9d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:05+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("76df015b-41db-4a6b-a23f-af114cb19611", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("b4932040-1493-4409-9e1f-fda3ca5cff53", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/76df015b-41db-4a6b-a23f-af114cb19611", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/b4932040-1493-4409-9e1f-fda3ca5cff53", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestGetAppSummaryResponse()
        {
            string json = @"{""guid"":""8e4f3baf-c2ed-40b0-87db-3c7ef762674b"",""name"":""name-1195"",""routes"":[{""guid"":""150bdc4f-9286-42ed-a0d5-51b4eeccd4d8"",""host"":""host-11"",""domain"":{""guid"":""fae720d0-4f2a-4533-b72f-fdcf3ed1b1e5"",""name"":""domain-27.example.com""}}],""running_instances"":0,""services"":[{""guid"":""8123833a-48b8-45c9-9631-c05fe850cd5e"",""name"":""name-1197"",""bound_app_count"":1,""dashboard_url"":null,""service_plan"":{""guid"":""a0dd2add-9449-4695-b7f3-36b497a383f7"",""name"":""name-1198"",""service"":{""guid"":""88fe5fc6-0949-4fb8-aad4-e8da05be4653"",""label"":""label-43"",""provider"":""provider-34"",""version"":""version-34""}}}],""available_domains"":[{""guid"":""fae720d0-4f2a-4533-b72f-fdcf3ed1b1e5"",""name"":""domain-27.example.com"",""owning_organization_guid"":""79df32e1-2093-4969-a408-2ebdc17758f1""},{""guid"":""fff92d6c-ccb2-4b69-9416-4e474464feab"",""name"":""customer-app-domain1.com""},{""guid"":""d51e4ec4-ea5f-4899-94a9-589732072942"",""name"":""customer-app-domain2.com""}],""name"":""name-1195"",""production"":false,""space_guid"":""82fffb73-47a0-49a6-9bb5-2443da29efa0"",""stack_guid"":""98f4a0b7-bf71-4ac2-89ef-92c8ff368a4e"",""buildpack"":null,""detected_buildpack"":null,""environment_json"":null,""memory"":1024,""instances"":1,""disk_quota"":1024,""state"":""STOPPED"",""version"":""18570218-d337-47d6-b291-a52997ddd69d"",""command"":null,""console"":false,""debug"":null,""staging_task_id"":null,""package_state"":""PENDING"",""health_check_type"":""port"",""health_check_timeout"":null,""staging_failed_reason"":null,""docker_image"":null,""package_updated_at"":""2015-04-10T19:41:58+00:00"",""detected_start_command"":""""}";

            GetAppSummaryResponse obj = Utilities.DeserializeJson<GetAppSummaryResponse>(json);

            Assert.AreEqual("8e4f3baf-c2ed-40b0-87db-3c7ef762674b", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1195", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.RunningInstances), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("82fffb73-47a0-49a6-9bb5-2443da29efa0", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("98f4a0b7-bf71-4ac2-89ef-92c8ff368a4e", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("18570218-d337-47d6-b291-a52997ddd69d", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-04-10T19:41:58+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
        }

        [TestMethod]
        public void TestRestageAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""294907a4-edaf-4379-8aa4-4e24fc73d0b9"",
    ""url"": ""/v2/apps/294907a4-edaf-4379-8aa4-4e24fc73d0b9"",
    ""created_at"": ""2015-04-10T19:42:06+00:00"",
    ""updated_at"": ""2015-04-10T19:42:06+00:00""
  },
  ""entity"": {
    ""name"": ""name-1786"",
    ""production"": false,
    ""space_guid"": ""4b9b642d-c560-4970-bc2f-a2535030495d"",
    ""stack_guid"": ""dfd0f635-9d99-4650-827e-1fa4d67ec5fc"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STARTED"",
    ""version"": ""f00a3104-9d5b-4eb9-b295-74436e196ee2"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-04-10T19:42:06+00:00"",
    ""detected_start_command"": """"
  }
}";

            RestageAppResponse obj = Utilities.DeserializeJson<RestageAppResponse>(json);

            Assert.AreEqual("294907a4-edaf-4379-8aa4-4e24fc73d0b9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/294907a4-edaf-4379-8aa4-4e24fc73d0b9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1786", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("4b9b642d-c560-4970-bc2f-a2535030495d", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("dfd0f635-9d99-4650-827e-1fa4d67ec5fc", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("f00a3104-9d5b-4eb9-b295-74436e196ee2", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
        }
    }
}
