//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsTest
    {


        [TestMethod]
        public void TestRemoveRouteFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6b16ff02-5710-47e8-a232-0484f4330c7c"",
    ""url"": ""/v2/apps/6b16ff02-5710-47e8-a232-0484f4330c7c"",
    ""created_at"": ""2015-07-28T12:59:09Z"",
    ""updated_at"": ""2015-07-28T12:59:09Z""
  },
  ""entity"": {
    ""name"": ""name-1495"",
    ""production"": false,
    ""space_guid"": ""80e02f9f-fc27-4449-9574-c4b900b725bb"",
    ""stack_guid"": ""53be800a-51ed-4820-bf49-be03ca03bae2"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""f6596ab6-6c0f-4e21-9fbf-6dbdf1e8ca68"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-28T12:59:09Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/80e02f9f-fc27-4449-9574-c4b900b725bb"",
    ""stack_url"": ""/v2/stacks/53be800a-51ed-4820-bf49-be03ca03bae2"",
    ""events_url"": ""/v2/apps/6b16ff02-5710-47e8-a232-0484f4330c7c/events"",
    ""service_bindings_url"": ""/v2/apps/6b16ff02-5710-47e8-a232-0484f4330c7c/service_bindings"",
    ""routes_url"": ""/v2/apps/6b16ff02-5710-47e8-a232-0484f4330c7c/routes""
  }
}";

            RemoveRouteFromAppResponse obj = Utilities.DeserializeJson<RemoveRouteFromAppResponse>(json);

            Assert.AreEqual("6b16ff02-5710-47e8-a232-0484f4330c7c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/6b16ff02-5710-47e8-a232-0484f4330c7c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1495", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("80e02f9f-fc27-4449-9574-c4b900b725bb", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("53be800a-51ed-4820-bf49-be03ca03bae2", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("f6596ab6-6c0f-4e21-9fbf-6dbdf1e8ca68", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/80e02f9f-fc27-4449-9574-c4b900b725bb", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/53be800a-51ed-4820-bf49-be03ca03bae2", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/6b16ff02-5710-47e8-a232-0484f4330c7c/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/6b16ff02-5710-47e8-a232-0484f4330c7c/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/6b16ff02-5710-47e8-a232-0484f4330c7c/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""25de9611-3adf-4eed-b586-143089015175"",
    ""url"": ""/v2/apps/25de9611-3adf-4eed-b586-143089015175"",
    ""created_at"": ""2015-07-28T12:59:09Z"",
    ""updated_at"": ""2015-07-28T12:59:09Z""
  },
  ""entity"": {
    ""name"": ""name-1510"",
    ""production"": false,
    ""space_guid"": ""31000e42-91ee-4881-92a7-70b35d3c09d9"",
    ""stack_guid"": ""9e80b902-5770-4224-8fd3-9a40f6724fde"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""9ea81ed9-af7c-4f6f-a7cb-698c2e2d6ba1"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-28T12:59:09Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/31000e42-91ee-4881-92a7-70b35d3c09d9"",
    ""stack_url"": ""/v2/stacks/9e80b902-5770-4224-8fd3-9a40f6724fde"",
    ""events_url"": ""/v2/apps/25de9611-3adf-4eed-b586-143089015175/events"",
    ""service_bindings_url"": ""/v2/apps/25de9611-3adf-4eed-b586-143089015175/service_bindings"",
    ""routes_url"": ""/v2/apps/25de9611-3adf-4eed-b586-143089015175/routes""
  }
}";

            AssociateRouteWithAppResponse obj = Utilities.DeserializeJson<AssociateRouteWithAppResponse>(json);

            Assert.AreEqual("25de9611-3adf-4eed-b586-143089015175", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/25de9611-3adf-4eed-b586-143089015175", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1510", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("31000e42-91ee-4881-92a7-70b35d3c09d9", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("9e80b902-5770-4224-8fd3-9a40f6724fde", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("9ea81ed9-af7c-4f6f-a7cb-698c2e2d6ba1", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/31000e42-91ee-4881-92a7-70b35d3c09d9", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/9e80b902-5770-4224-8fd3-9a40f6724fde", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/25de9611-3adf-4eed-b586-143089015175/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/25de9611-3adf-4eed-b586-143089015175/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/25de9611-3adf-4eed-b586-143089015175/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestRemoveServiceBindingFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""10c50422-698c-4d1e-92aa-85b5b3923b60"",
    ""url"": ""/v2/apps/10c50422-698c-4d1e-92aa-85b5b3923b60"",
    ""created_at"": ""2015-07-28T12:59:09Z"",
    ""updated_at"": ""2015-07-28T12:59:09Z""
  },
  ""entity"": {
    ""name"": ""name-1540"",
    ""production"": false,
    ""space_guid"": ""07337eff-f533-4277-ba0e-15bc72cbab88"",
    ""stack_guid"": ""2cd8d9d7-384a-4b62-bebc-4a2991700225"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""954bb42a-f268-4231-b1d1-304e45558705"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-28T12:59:09Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/07337eff-f533-4277-ba0e-15bc72cbab88"",
    ""stack_url"": ""/v2/stacks/2cd8d9d7-384a-4b62-bebc-4a2991700225"",
    ""events_url"": ""/v2/apps/10c50422-698c-4d1e-92aa-85b5b3923b60/events"",
    ""service_bindings_url"": ""/v2/apps/10c50422-698c-4d1e-92aa-85b5b3923b60/service_bindings"",
    ""routes_url"": ""/v2/apps/10c50422-698c-4d1e-92aa-85b5b3923b60/routes""
  }
}";

            RemoveServiceBindingFromAppResponse obj = Utilities.DeserializeJson<RemoveServiceBindingFromAppResponse>(json);

            Assert.AreEqual("10c50422-698c-4d1e-92aa-85b5b3923b60", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/10c50422-698c-4d1e-92aa-85b5b3923b60", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1540", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("07337eff-f533-4277-ba0e-15bc72cbab88", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("2cd8d9d7-384a-4b62-bebc-4a2991700225", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("954bb42a-f268-4231-b1d1-304e45558705", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/07337eff-f533-4277-ba0e-15bc72cbab88", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/2cd8d9d7-384a-4b62-bebc-4a2991700225", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/10c50422-698c-4d1e-92aa-85b5b3923b60/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/10c50422-698c-4d1e-92aa-85b5b3923b60/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/10c50422-698c-4d1e-92aa-85b5b3923b60/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetDetailedStatsForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""stats"":{""usage"":{""disk"":66392064,""mem"":29880320,""cpu"":0.13511219703079957,""time"":""2014-06-19 22:37:58 +0000""},""name"":""app_name"",""uris"":[""app_name.example.com""],""host"":""10.0.0.1"",""port"":61035,""uptime"":65007,""mem_quota"":536870912,""disk_quota"":1073741824,""fds_quota"":16384}}}";

            GetDetailedStatsForStartedAppResponse obj = Utilities.DeserializeJson<GetDetailedStatsForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestCopyAppBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3dcec21a-c318-416b-a8a9-0c4e337b9345"",
    ""created_at"": ""2015-07-28T12:59:05Z"",
    ""url"": ""/v2/jobs/3dcec21a-c318-416b-a8a9-0c4e337b9345""
  },
  ""entity"": {
    ""guid"": ""3dcec21a-c318-416b-a8a9-0c4e337b9345"",
    ""status"": ""queued""
  }
}";

            CopyAppBitsForAppResponse obj = Utilities.DeserializeJson<CopyAppBitsForAppResponse>(json);

            Assert.AreEqual("3dcec21a-c318-416b-a8a9-0c4e337b9345", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-07-28T12:59:05Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/3dcec21a-c318-416b-a8a9-0c4e337b9345", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("3dcec21a-c318-416b-a8a9-0c4e337b9345", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestListAllAppsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5de4d8bb-de44-4321-b1e4-3be13c36048c"",
        ""url"": ""/v2/apps/5de4d8bb-de44-4321-b1e4-3be13c36048c"",
        ""created_at"": ""2015-07-28T12:59:10Z"",
        ""updated_at"": ""2015-07-28T12:59:10Z""
      },
      ""entity"": {
        ""name"": ""name-1657"",
        ""production"": false,
        ""space_guid"": ""771430b7-0035-4d93-86a6-280978aa0245"",
        ""stack_guid"": ""0c5b18b7-2904-4823-9062-4ec44187034d"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""8ce6d215-4ae8-4b37-ac03-28e5efb6844c"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-07-28T12:59:10Z"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/771430b7-0035-4d93-86a6-280978aa0245"",
        ""stack_url"": ""/v2/stacks/0c5b18b7-2904-4823-9062-4ec44187034d"",
        ""events_url"": ""/v2/apps/5de4d8bb-de44-4321-b1e4-3be13c36048c/events"",
        ""service_bindings_url"": ""/v2/apps/5de4d8bb-de44-4321-b1e4-3be13c36048c/service_bindings"",
        ""routes_url"": ""/v2/apps/5de4d8bb-de44-4321-b1e4-3be13c36048c/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c254d141-a7f4-4fd2-9403-adc7c4c82081"",
        ""url"": ""/v2/apps/c254d141-a7f4-4fd2-9403-adc7c4c82081"",
        ""created_at"": ""2015-07-28T12:59:10Z"",
        ""updated_at"": ""2015-07-28T12:59:10Z""
      },
      ""entity"": {
        ""name"": ""name-1662"",
        ""production"": false,
        ""space_guid"": ""6c9c28a8-7bc0-4e01-857e-7d9763d7daf1"",
        ""stack_guid"": ""e6b77991-4525-4057-9de8-4f232dac40c9"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""f24b7f82-ddb2-468e-bea0-0ec0ae06176f"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-07-28T12:59:10Z"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/6c9c28a8-7bc0-4e01-857e-7d9763d7daf1"",
        ""stack_url"": ""/v2/stacks/e6b77991-4525-4057-9de8-4f232dac40c9"",
        ""events_url"": ""/v2/apps/c254d141-a7f4-4fd2-9403-adc7c4c82081/events"",
        ""service_bindings_url"": ""/v2/apps/c254d141-a7f4-4fd2-9403-adc7c4c82081/service_bindings"",
        ""routes_url"": ""/v2/apps/c254d141-a7f4-4fd2-9403-adc7c4c82081/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d5ba979d-b0c1-49b3-8a00-97aec6b0c72d"",
        ""url"": ""/v2/apps/d5ba979d-b0c1-49b3-8a00-97aec6b0c72d"",
        ""created_at"": ""2015-07-28T12:59:10Z"",
        ""updated_at"": ""2015-07-28T12:59:10Z""
      },
      ""entity"": {
        ""name"": ""name-1652"",
        ""production"": false,
        ""space_guid"": ""e2c3674c-ee16-4021-85f9-8241eef47ef0"",
        ""stack_guid"": ""eab63ac2-7aba-4430-bae6-669b4b514729"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""ec0d8623-c55f-43a5-a5b9-c03676a764b3"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-07-28T12:59:10Z"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/e2c3674c-ee16-4021-85f9-8241eef47ef0"",
        ""stack_url"": ""/v2/stacks/eab63ac2-7aba-4430-bae6-669b4b514729"",
        ""events_url"": ""/v2/apps/d5ba979d-b0c1-49b3-8a00-97aec6b0c72d/events"",
        ""service_bindings_url"": ""/v2/apps/d5ba979d-b0c1-49b3-8a00-97aec6b0c72d/service_bindings"",
        ""routes_url"": ""/v2/apps/d5ba979d-b0c1-49b3-8a00-97aec6b0c72d/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsResponse> page = Utilities.DeserializePage<ListAllAppsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5de4d8bb-de44-4321-b1e4-3be13c36048c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/5de4d8bb-de44-4321-b1e4-3be13c36048c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1657", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("771430b7-0035-4d93-86a6-280978aa0245", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("0c5b18b7-2904-4823-9062-4ec44187034d", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("8ce6d215-4ae8-4b37-ac03-28e5efb6844c", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/771430b7-0035-4d93-86a6-280978aa0245", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/0c5b18b7-2904-4823-9062-4ec44187034d", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/5de4d8bb-de44-4321-b1e4-3be13c36048c/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/5de4d8bb-de44-4321-b1e4-3be13c36048c/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/5de4d8bb-de44-4321-b1e4-3be13c36048c/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("c254d141-a7f4-4fd2-9403-adc7c4c82081", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/c254d141-a7f4-4fd2-9403-adc7c4c82081", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1662", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Production), true);
            Assert.AreEqual("6c9c28a8-7bc0-4e01-857e-7d9763d7daf1", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("e6b77991-4525-4057-9de8-4f232dac40c9", TestUtil.ToTestableString(page[1].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[1].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[1].State), true);
            Assert.AreEqual("f24b7f82-ddb2-468e-bea0-0ec0ae06176f", TestUtil.ToTestableString(page[1].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[1].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[1].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[1].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/6c9c28a8-7bc0-4e01-857e-7d9763d7daf1", TestUtil.ToTestableString(page[1].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/e6b77991-4525-4057-9de8-4f232dac40c9", TestUtil.ToTestableString(page[1].StackUrl), true);
            Assert.AreEqual("/v2/apps/c254d141-a7f4-4fd2-9403-adc7c4c82081/events", TestUtil.ToTestableString(page[1].EventsUrl), true);
            Assert.AreEqual("/v2/apps/c254d141-a7f4-4fd2-9403-adc7c4c82081/service_bindings", TestUtil.ToTestableString(page[1].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/c254d141-a7f4-4fd2-9403-adc7c4c82081/routes", TestUtil.ToTestableString(page[1].RoutesUrl), true);
            Assert.AreEqual("d5ba979d-b0c1-49b3-8a00-97aec6b0c72d", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/d5ba979d-b0c1-49b3-8a00-97aec6b0c72d", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1652", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Production), true);
            Assert.AreEqual("e2c3674c-ee16-4021-85f9-8241eef47ef0", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("eab63ac2-7aba-4430-bae6-669b4b514729", TestUtil.ToTestableString(page[2].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[2].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[2].State), true);
            Assert.AreEqual("ec0d8623-c55f-43a5-a5b9-c03676a764b3", TestUtil.ToTestableString(page[2].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[2].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[2].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(page[2].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/e2c3674c-ee16-4021-85f9-8241eef47ef0", TestUtil.ToTestableString(page[2].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/eab63ac2-7aba-4430-bae6-669b4b514729", TestUtil.ToTestableString(page[2].StackUrl), true);
            Assert.AreEqual("/v2/apps/d5ba979d-b0c1-49b3-8a00-97aec6b0c72d/events", TestUtil.ToTestableString(page[2].EventsUrl), true);
            Assert.AreEqual("/v2/apps/d5ba979d-b0c1-49b3-8a00-97aec6b0c72d/service_bindings", TestUtil.ToTestableString(page[2].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/d5ba979d-b0c1-49b3-8a00-97aec6b0c72d/routes", TestUtil.ToTestableString(page[2].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1b2b9243-cd8e-4f9d-8fde-80160b117a81"",
    ""url"": ""/v2/apps/1b2b9243-cd8e-4f9d-8fde-80160b117a81"",
    ""created_at"": ""2015-07-28T12:59:10Z"",
    ""updated_at"": ""2015-07-28T12:59:10Z""
  },
  ""entity"": {
    ""name"": ""name-1632"",
    ""production"": false,
    ""space_guid"": ""f72cc7e4-1a5e-4186-9844-c7c126a912fc"",
    ""stack_guid"": ""1a914f31-ff24-41c8-bfdc-b38b45a9a75c"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""6bda4df1-ddc5-4aa2-8a6a-ba0abfb1a4df"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-28T12:59:10Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/f72cc7e4-1a5e-4186-9844-c7c126a912fc"",
    ""stack_url"": ""/v2/stacks/1a914f31-ff24-41c8-bfdc-b38b45a9a75c"",
    ""events_url"": ""/v2/apps/1b2b9243-cd8e-4f9d-8fde-80160b117a81/events"",
    ""service_bindings_url"": ""/v2/apps/1b2b9243-cd8e-4f9d-8fde-80160b117a81/service_bindings"",
    ""routes_url"": ""/v2/apps/1b2b9243-cd8e-4f9d-8fde-80160b117a81/routes""
  }
}";

            RetrieveAppResponse obj = Utilities.DeserializeJson<RetrieveAppResponse>(json);

            Assert.AreEqual("1b2b9243-cd8e-4f9d-8fde-80160b117a81", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/1b2b9243-cd8e-4f9d-8fde-80160b117a81", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1632", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("f72cc7e4-1a5e-4186-9844-c7c126a912fc", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("1a914f31-ff24-41c8-bfdc-b38b45a9a75c", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("6bda4df1-ddc5-4aa2-8a6a-ba0abfb1a4df", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/f72cc7e4-1a5e-4186-9844-c7c126a912fc", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/1a914f31-ff24-41c8-bfdc-b38b45a9a75c", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/1b2b9243-cd8e-4f9d-8fde-80160b117a81/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/1b2b9243-cd8e-4f9d-8fde-80160b117a81/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/1b2b9243-cd8e-4f9d-8fde-80160b117a81/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestCreateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc"",
    ""url"": ""/v2/apps/af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc"",
    ""created_at"": ""2015-07-28T12:59:10Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my_super_app"",
    ""production"": false,
    ""space_guid"": ""058d606c-120d-4767-bb99-99f022432e4a"",
    ""stack_guid"": ""1d7ea093-a70d-4963-b2fa-2fe783aa8b3f"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""369dacb8-4da2-41d4-a760-84f9ff01825f"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": null,
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/058d606c-120d-4767-bb99-99f022432e4a"",
    ""stack_url"": ""/v2/stacks/1d7ea093-a70d-4963-b2fa-2fe783aa8b3f"",
    ""events_url"": ""/v2/apps/af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc/events"",
    ""service_bindings_url"": ""/v2/apps/af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc/service_bindings"",
    ""routes_url"": ""/v2/apps/af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc/routes""
  }
}";

            CreateAppResponse obj = Utilities.DeserializeJson<CreateAppResponse>(json);

            Assert.AreEqual("af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my_super_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("058d606c-120d-4767-bb99-99f022432e4a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("1d7ea093-a70d-4963-b2fa-2fe783aa8b3f", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("369dacb8-4da2-41d4-a760-84f9ff01825f", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/058d606c-120d-4767-bb99-99f022432e4a", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/1d7ea093-a70d-4963-b2fa-2fe783aa8b3f", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/af8dc2e6-4e36-4390-92ff-bd1b4e26f3bc/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1826cca3-ac90-4323-9bc4-fcd0170b9e93"",
    ""url"": ""/v2/apps/1826cca3-ac90-4323-9bc4-fcd0170b9e93"",
    ""created_at"": ""2015-07-28T12:59:10Z"",
    ""updated_at"": ""2015-07-28T12:59:10Z""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""production"": false,
    ""space_guid"": ""886688d1-70d1-415f-8f7e-7d93182051d6"",
    ""stack_guid"": ""728c5317-3553-49d6-8bb1-1e650a2dda48"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""2ef7ed42-2d32-4956-a80d-00f0cdd13bf5"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-28T12:59:10Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/886688d1-70d1-415f-8f7e-7d93182051d6"",
    ""stack_url"": ""/v2/stacks/728c5317-3553-49d6-8bb1-1e650a2dda48"",
    ""events_url"": ""/v2/apps/1826cca3-ac90-4323-9bc4-fcd0170b9e93/events"",
    ""service_bindings_url"": ""/v2/apps/1826cca3-ac90-4323-9bc4-fcd0170b9e93/service_bindings"",
    ""routes_url"": ""/v2/apps/1826cca3-ac90-4323-9bc4-fcd0170b9e93/routes""
  }
}";

            UpdateAppResponse obj = Utilities.DeserializeJson<UpdateAppResponse>(json);

            Assert.AreEqual("1826cca3-ac90-4323-9bc4-fcd0170b9e93", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/1826cca3-ac90-4323-9bc4-fcd0170b9e93", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("886688d1-70d1-415f-8f7e-7d93182051d6", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("728c5317-3553-49d6-8bb1-1e650a2dda48", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("2ef7ed42-2d32-4956-a80d-00f0cdd13bf5", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/886688d1-70d1-415f-8f7e-7d93182051d6", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/728c5317-3553-49d6-8bb1-1e650a2dda48", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/1826cca3-ac90-4323-9bc4-fcd0170b9e93/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/1826cca3-ac90-4323-9bc4-fcd0170b9e93/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/1826cca3-ac90-4323-9bc4-fcd0170b9e93/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetInstanceInformationForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""since"":1403140717.984577,""debug_ip"":null,""debug_port"":null,""console_ip"":null,""console_port"":null}}";

            GetInstanceInformationForStartedAppResponse obj = Utilities.DeserializeJson<GetInstanceInformationForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestGetEnvForAppResponse()
        {
            string json = @"{
  ""staging_env_json"": {
    ""STAGING_ENV"": ""staging_value""
  },
  ""running_env_json"": {
    ""RUNNING_ENV"": ""running_value""
  },
  ""environment_json"": {
    ""env_var"": ""env_val""
  },
  ""system_env_json"": {
    ""VCAP_SERVICES"": {

    }
  },
  ""application_env_json"": {
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""mem"": 1024,
        ""disk"": 1024,
        ""fds"": 16384
      },
      ""application_version"": ""7fbaed05-09d0-4525-824e-300328377bc3"",
      ""application_name"": ""name-1617"",
      ""application_uris"": [

      ],
      ""version"": ""7fbaed05-09d0-4525-824e-300328377bc3"",
      ""name"": ""name-1617"",
      ""space_name"": ""name-1618"",
      ""space_id"": ""e2a3901c-597c-4db9-a983-caf3de185123"",
      ""uris"": [

      ],
      ""users"": null
    }
  }
}";

            GetEnvForAppResponse obj = Utilities.DeserializeJson<GetEnvForAppResponse>(json);

        }

        [TestMethod]
        public void TestCreateDockerAppExperimentalResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df"",
    ""url"": ""/v2/apps/ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df"",
    ""created_at"": ""2015-07-28T12:59:10Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""docker_app"",
    ""production"": false,
    ""space_guid"": ""b4f8d6bf-6793-4522-9844-25b488b4da20"",
    ""stack_guid"": ""1d7ea093-a70d-4963-b2fa-2fe783aa8b3f"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""f2db3f74-c704-4764-934e-8806e976c67d"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": true,
    ""docker_image"": ""cloudfoundry/hello:latest"",
    ""package_updated_at"": ""2015-07-28T12:59:10Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/b4f8d6bf-6793-4522-9844-25b488b4da20"",
    ""stack_url"": ""/v2/stacks/1d7ea093-a70d-4963-b2fa-2fe783aa8b3f"",
    ""events_url"": ""/v2/apps/ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df/events"",
    ""service_bindings_url"": ""/v2/apps/ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df/service_bindings"",
    ""routes_url"": ""/v2/apps/ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df/routes""
  }
}";

            CreateDockerAppExperimentalResponse obj = Utilities.DeserializeJson<CreateDockerAppExperimentalResponse>(json);

            Assert.AreEqual("ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("docker_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("b4f8d6bf-6793-4522-9844-25b488b4da20", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("1d7ea093-a70d-4963-b2fa-2fe783aa8b3f", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("f2db3f74-c704-4764-934e-8806e976c67d", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("cloudfoundry/hello:latest", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:10Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/b4f8d6bf-6793-4522-9844-25b488b4da20", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/1d7ea093-a70d-4963-b2fa-2fe783aa8b3f", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/ff4acebe-3f8d-4da6-98d2-ba4c66bfc8df/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUploadsBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f4e93488-0dae-4ae3-9de6-2fef6bf9f47f"",
    ""created_at"": ""2015-07-28T12:59:05Z"",
    ""url"": ""/v2/jobs/f4e93488-0dae-4ae3-9de6-2fef6bf9f47f""
  },
  ""entity"": {
    ""guid"": ""f4e93488-0dae-4ae3-9de6-2fef6bf9f47f"",
    ""status"": ""queued""
  }
}";

            UploadsBitsForAppResponse obj = Utilities.DeserializeJson<UploadsBitsForAppResponse>(json);

            Assert.AreEqual("f4e93488-0dae-4ae3-9de6-2fef6bf9f47f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-07-28T12:59:05Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/f4e93488-0dae-4ae3-9de6-2fef6bf9f47f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("f4e93488-0dae-4ae3-9de6-2fef6bf9f47f", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestListAllRoutesForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e1032293-59b5-472f-b5e3-5be10fd02771"",
        ""url"": ""/v2/routes/e1032293-59b5-472f-b5e3-5be10fd02771"",
        ""created_at"": ""2015-07-28T12:59:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-19"",
        ""domain_guid"": ""cbeaf213-f644-4d22-b623-7d773de8e8ee"",
        ""space_guid"": ""7980c257-890b-479e-8601-d5458c7db4f8"",
        ""domain_url"": ""/v2/domains/cbeaf213-f644-4d22-b623-7d773de8e8ee"",
        ""space_url"": ""/v2/spaces/7980c257-890b-479e-8601-d5458c7db4f8"",
        ""apps_url"": ""/v2/routes/e1032293-59b5-472f-b5e3-5be10fd02771/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForAppResponse> page = Utilities.DeserializePage<ListAllRoutesForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e1032293-59b5-472f-b5e3-5be10fd02771", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/e1032293-59b5-472f-b5e3-5be10fd02771", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-19", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("cbeaf213-f644-4d22-b623-7d773de8e8ee", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("7980c257-890b-479e-8601-d5458c7db4f8", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/cbeaf213-f644-4d22-b623-7d773de8e8ee", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/7980c257-890b-479e-8601-d5458c7db4f8", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/e1032293-59b5-472f-b5e3-5be10fd02771/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""973f2714-766c-4446-a99e-bf51e708d7e5"",
        ""url"": ""/v2/service_bindings/973f2714-766c-4446-a99e-bf51e708d7e5"",
        ""created_at"": ""2015-07-28T12:59:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""01c0e783-0471-4f5f-8506-dee88a031a76"",
        ""service_instance_guid"": ""060356bb-c5b6-4c8a-8939-4f6526486f71"",
        ""credentials"": {
          ""creds-key-478"": ""creds-val-478""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/01c0e783-0471-4f5f-8506-dee88a031a76"",
        ""service_instance_url"": ""/v2/service_instances/060356bb-c5b6-4c8a-8939-4f6526486f71""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForAppResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("973f2714-766c-4446-a99e-bf51e708d7e5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/973f2714-766c-4446-a99e-bf51e708d7e5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:09Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("01c0e783-0471-4f5f-8506-dee88a031a76", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("060356bb-c5b6-4c8a-8939-4f6526486f71", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/01c0e783-0471-4f5f-8506-dee88a031a76", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/060356bb-c5b6-4c8a-8939-4f6526486f71", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestGetAppSummaryResponse()
        {
            string json = @"{""guid"":""9aea179a-fe66-44c1-b021-6c8606a54101"",""name"":""name-1296"",""routes"":[{""guid"":""d51bcbcc-224d-4941-9f9d-22f683c07569"",""host"":""host-13"",""domain"":{""guid"":""742a31de-f6ca-44e4-9c27-0f9ed3ee5b9f"",""name"":""domain-51.example.com""}}],""running_instances"":0,""services"":[{""guid"":""98c2e8e0-a7e2-4c26-8ad6-621a1032c6fa"",""name"":""name-1298"",""bound_app_count"":1,""last_operation"":null,""dashboard_url"":null,""service_plan"":{""guid"":""1907f3b3-b0c0-4508-90d3-fb94c43bbf24"",""name"":""name-1299"",""service"":{""guid"":""de076947-726c-4436-80b7-a46ee843f98b"",""label"":""label-36"",""provider"":null,""version"":null}}}],""available_domains"":[{""guid"":""742a31de-f6ca-44e4-9c27-0f9ed3ee5b9f"",""name"":""domain-51.example.com"",""owning_organization_guid"":""a88efb2b-48d5-435f-acb5-408bd71bd797""},{""guid"":""e60bea4e-6457-4ad0-abee-98ced423ce13"",""name"":""customer-app-domain1.com""},{""guid"":""119dd6e7-688e-4c0a-b142-19c9d5ed41a0"",""name"":""customer-app-domain2.com""}],""name"":""name-1296"",""production"":false,""space_guid"":""62c25006-255c-44ef-8423-3d3dea81fe7e"",""stack_guid"":""915468dd-c7e0-4456-a71e-26daf81db010"",""buildpack"":null,""detected_buildpack"":null,""environment_json"":null,""memory"":1024,""instances"":1,""disk_quota"":1024,""state"":""STOPPED"",""version"":""8708c8f2-cb4e-4660-97e3-c08b2dc73e28"",""command"":null,""console"":false,""debug"":null,""staging_task_id"":null,""package_state"":""PENDING"",""health_check_type"":""port"",""health_check_timeout"":null,""staging_failed_reason"":null,""diego"":false,""docker_image"":null,""package_updated_at"":""2015-07-28T12:59:06Z"",""detected_start_command"":""""}";

            GetAppSummaryResponse obj = Utilities.DeserializeJson<GetAppSummaryResponse>(json);

            Assert.AreEqual("9aea179a-fe66-44c1-b021-6c8606a54101", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1296", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.RunningInstances), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("62c25006-255c-44ef-8423-3d3dea81fe7e", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("915468dd-c7e0-4456-a71e-26daf81db010", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("8708c8f2-cb4e-4660-97e3-c08b2dc73e28", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:06Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
        }

        [TestMethod]
        public void TestRestageAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6c10b3e8-2666-4728-94e1-ec836c7db628"",
    ""url"": ""/v2/apps/6c10b3e8-2666-4728-94e1-ec836c7db628"",
    ""created_at"": ""2015-07-28T12:59:04Z"",
    ""updated_at"": ""2015-07-28T12:59:04Z""
  },
  ""entity"": {
    ""name"": ""name-1133"",
    ""production"": false,
    ""space_guid"": ""57f079a2-b9ed-463f-946f-084b3b68fb05"",
    ""stack_guid"": ""675fb7df-7cf0-45cf-8ee0-9a0b9280f979"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STARTED"",
    ""version"": ""171f43d6-29ee-4d21-b8f2-c55f8cfac0f6"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-28T12:59:04Z"",
    ""detected_start_command"": """"
  }
}";

            RestageAppResponse obj = Utilities.DeserializeJson<RestageAppResponse>(json);

            Assert.AreEqual("6c10b3e8-2666-4728-94e1-ec836c7db628", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/6c10b3e8-2666-4728-94e1-ec836c7db628", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:04Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:04Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1133", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("57f079a2-b9ed-463f-946f-084b3b68fb05", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("675fb7df-7cf0-45cf-8ee0-9a0b9280f979", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("171f43d6-29ee-4d21-b8f2-c55f8cfac0f6", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-28T12:59:04Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
        }
    }
}
