//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesTest
    {


        [TestMethod]
        public void TestUpdateServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3927e097-d3b0-4215-8078-761321289528"",
    ""url"": ""/v2/service_instances/3927e097-d3b0-4215-8078-761321289528"",
    ""created_at"": ""2015-07-28T12:59:13Z"",
    ""updated_at"": ""2015-07-28T12:59:13Z""
  },
  ""entity"": {
    ""name"": ""name-2043"",
    ""credentials"": {
      ""creds-key-602"": ""creds-val-602""
    },
    ""service_plan_guid"": ""dfb14d1f-8a4d-4543-be21-2e6613740d56"",
    ""space_guid"": ""9408dc1d-0265-43d1-adc6-dd512f774452"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""update"",
      ""state"": ""succeeded"",
      ""description"": """",
      ""updated_at"": ""2015-07-28T12:59:13Z""
    },
    ""space_url"": ""/v2/spaces/9408dc1d-0265-43d1-adc6-dd512f774452"",
    ""service_plan_url"": ""/v2/service_plans/dfb14d1f-8a4d-4543-be21-2e6613740d56"",
    ""service_bindings_url"": ""/v2/service_instances/3927e097-d3b0-4215-8078-761321289528/service_bindings""
  }
}";

            UpdateServiceInstanceResponse obj = Utilities.DeserializeJson<UpdateServiceInstanceResponse>(json);

            Assert.AreEqual("3927e097-d3b0-4215-8078-761321289528", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/3927e097-d3b0-4215-8078-761321289528", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2043", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("dfb14d1f-8a4d-4543-be21-2e6613740d56", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("9408dc1d-0265-43d1-adc6-dd512f774452", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/9408dc1d-0265-43d1-adc6-dd512f774452", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/dfb14d1f-8a4d-4543-be21-2e6613740d56", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/3927e097-d3b0-4215-8078-761321289528/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ebb654bf-d964-4e3a-85ab-03ae10d05324"",
        ""url"": ""/v2/service_instances/ebb654bf-d964-4e3a-85ab-03ae10d05324"",
        ""created_at"": ""2015-07-28T12:59:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2035"",
        ""credentials"": {
          ""creds-key-599"": ""creds-val-599""
        },
        ""service_plan_guid"": ""696746b0-e5f0-4673-80dd-fb7c641fa37d"",
        ""space_guid"": ""77a53c6b-b750-490c-b030-477867f7d1f7"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": {
          ""type"": ""create"",
          ""state"": ""succeeded"",
          ""description"": ""service broker-provided description"",
          ""updated_at"": ""2015-07-28T12:59:13Z""
        },
        ""space_url"": ""/v2/spaces/77a53c6b-b750-490c-b030-477867f7d1f7"",
        ""service_plan_url"": ""/v2/service_plans/696746b0-e5f0-4673-80dd-fb7c641fa37d"",
        ""service_bindings_url"": ""/v2/service_instances/ebb654bf-d964-4e3a-85ab-03ae10d05324/service_bindings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesResponse> page = Utilities.DeserializePage<ListAllServiceInstancesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ebb654bf-d964-4e3a-85ab-03ae10d05324", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/ebb654bf-d964-4e3a-85ab-03ae10d05324", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2035", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("696746b0-e5f0-4673-80dd-fb7c641fa37d", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("77a53c6b-b750-490c-b030-477867f7d1f7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/77a53c6b-b750-490c-b030-477867f7d1f7", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/696746b0-e5f0-4673-80dd-fb7c641fa37d", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/ebb654bf-d964-4e3a-85ab-03ae10d05324/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestCreateServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""82a543dc-43d4-4d69-aabd-af4d91620a9a"",
    ""url"": ""/v2/service_instances/82a543dc-43d4-4d69-aabd-af4d91620a9a"",
    ""created_at"": ""2015-07-28T12:59:13Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {
      ""creds-key-594"": ""creds-val-594""
    },
    ""service_plan_guid"": ""b27e6070-6fe6-4eec-9105-8e4bb70e48fc"",
    ""space_guid"": ""54ba1b9d-a69a-4249-884b-dd521c218e66"",
    ""gateway_data"": ""CONFIGURATION"",
    ""dashboard_url"": ""http://dashboard.example.com"",
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""succeeded"",
      ""description"": """",
      ""updated_at"": ""2015-07-28T12:59:13Z""
    },
    ""space_url"": ""/v2/spaces/54ba1b9d-a69a-4249-884b-dd521c218e66"",
    ""service_plan_url"": ""/v2/service_plans/b27e6070-6fe6-4eec-9105-8e4bb70e48fc"",
    ""service_bindings_url"": ""/v2/service_instances/82a543dc-43d4-4d69-aabd-af4d91620a9a/service_bindings""
  }
}";

            CreateServiceInstanceResponse obj = Utilities.DeserializeJson<CreateServiceInstanceResponse>(json);

            Assert.AreEqual("82a543dc-43d4-4d69-aabd-af4d91620a9a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/82a543dc-43d4-4d69-aabd-af4d91620a9a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("b27e6070-6fe6-4eec-9105-8e4bb70e48fc", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("54ba1b9d-a69a-4249-884b-dd521c218e66", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("CONFIGURATION", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("http://dashboard.example.com", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/54ba1b9d-a69a-4249-884b-dd521c218e66", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/b27e6070-6fe6-4eec-9105-8e4bb70e48fc", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/82a543dc-43d4-4d69-aabd-af4d91620a9a/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c8f55852-4fab-478b-bea8-0a2fa9761361"",
        ""url"": ""/v2/service_bindings/c8f55852-4fab-478b-bea8-0a2fa9761361"",
        ""created_at"": ""2015-07-28T12:59:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""8ea3a33b-d811-4350-88ee-dae200596ad8"",
        ""service_instance_guid"": ""6b1bbae7-8ef9-4765-9428-2102c55dcda2"",
        ""credentials"": {
          ""creds-key-584"": ""creds-val-584""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/8ea3a33b-d811-4350-88ee-dae200596ad8"",
        ""service_instance_url"": ""/v2/service_instances/6b1bbae7-8ef9-4765-9428-2102c55dcda2""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForServiceInstanceResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c8f55852-4fab-478b-bea8-0a2fa9761361", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/c8f55852-4fab-478b-bea8-0a2fa9761361", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("8ea3a33b-d811-4350-88ee-dae200596ad8", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("6b1bbae7-8ef9-4765-9428-2102c55dcda2", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/8ea3a33b-d811-4350-88ee-dae200596ad8", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/6b1bbae7-8ef9-4765-9428-2102c55dcda2", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestMigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse()
        {
            string json = @"{""changed_count"":1}";

            MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse obj = Utilities.DeserializeJson<MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(obj.ChangedCount), true);
        }

        [TestMethod]
        public void TestRetrieveServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8540070b-d71f-48c1-af4c-46fecf8cecc5"",
    ""url"": ""/v2/service_instances/8540070b-d71f-48c1-af4c-46fecf8cecc5"",
    ""created_at"": ""2015-07-28T12:59:13Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2019"",
    ""credentials"": {
      ""creds-key-593"": ""creds-val-593""
    },
    ""service_plan_guid"": ""01d59ed3-1abf-4230-b1f8-cc420f0e470e"",
    ""space_guid"": ""bdf635de-4401-4a6a-a31a-2af5d9668f53"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""succeeded"",
      ""description"": ""service broker-provided description"",
      ""updated_at"": ""2015-07-28T12:59:13Z""
    },
    ""space_url"": ""/v2/spaces/bdf635de-4401-4a6a-a31a-2af5d9668f53"",
    ""service_plan_url"": ""/v2/service_plans/01d59ed3-1abf-4230-b1f8-cc420f0e470e"",
    ""service_bindings_url"": ""/v2/service_instances/8540070b-d71f-48c1-af4c-46fecf8cecc5/service_bindings""
  }
}";

            RetrieveServiceInstanceResponse obj = Utilities.DeserializeJson<RetrieveServiceInstanceResponse>(json);

            Assert.AreEqual("8540070b-d71f-48c1-af4c-46fecf8cecc5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/8540070b-d71f-48c1-af4c-46fecf8cecc5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2019", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("01d59ed3-1abf-4230-b1f8-cc420f0e470e", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("bdf635de-4401-4a6a-a31a-2af5d9668f53", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/bdf635de-4401-4a6a-a31a-2af5d9668f53", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/01d59ed3-1abf-4230-b1f8-cc420f0e470e", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/8540070b-d71f-48c1-af4c-46fecf8cecc5/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingPermissionsOnServiceInstanceResponse()
        {
            string json = @"{""manage"":true}";

            RetrievingPermissionsOnServiceInstanceResponse obj = Utilities.DeserializeJson<RetrievingPermissionsOnServiceInstanceResponse>(json);

            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);
        }
    }
}
