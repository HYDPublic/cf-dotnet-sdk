//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesTest
    {


        [TestMethod]
        public void TestBindingServiceInstanceToRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e8edec1f-6fec-439c-99cf-3ca2605ca58a"",
    ""url"": ""/v2/service_instances/e093ef08-4760-40f2-b41f-ed25b266ba65"",
    ""created_at"": ""2016-05-26T11:34:51Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2431"",
    ""credentials"": {
      ""creds-key-71"": ""creds-val-71""
    },
    ""service_plan_guid"": ""e8edec1f-6fec-439c-99cf-3ca2605ca58a"",
    ""space_guid"": ""e8edec1f-6fec-439c-99cf-3ca2605ca58a"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": null,
    ""tags"": [

    ],
    ""space_url"": ""/v2/spaces/d2cbc58a-62f1-4a2a-8918-e42311561cad"",
    ""service_plan_url"": ""/v2/service_plans/72aeaaad-09d7-4b08-8bb1-a4bd6f469ea7"",
    ""service_bindings_url"": ""/v2/service_instances/e093ef08-4760-40f2-b41f-ed25b266ba65/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/e093ef08-4760-40f2-b41f-ed25b266ba65/service_keys"",
    ""routes_url"": ""/v2/service_instances/e093ef08-4760-40f2-b41f-ed25b266ba65/routes""
  }
}";

            BindingServiceInstanceToRouteResponse obj = Utilities.DeserializeJson<BindingServiceInstanceToRouteResponse>(json);

            Assert.AreEqual("e8edec1f-6fec-439c-99cf-3ca2605ca58a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/e093ef08-4760-40f2-b41f-ed25b266ba65", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:51Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2431", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("e8edec1f-6fec-439c-99cf-3ca2605ca58a", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("e8edec1f-6fec-439c-99cf-3ca2605ca58a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.LastOperation), true);
            Assert.AreEqual("/v2/spaces/d2cbc58a-62f1-4a2a-8918-e42311561cad", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/72aeaaad-09d7-4b08-8bb1-a4bd6f469ea7", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/e093ef08-4760-40f2-b41f-ed25b266ba65/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/e093ef08-4760-40f2-b41f-ed25b266ba65/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/e093ef08-4760-40f2-b41f-ed25b266ba65/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrievingPermissionsOnServiceInstanceResponse()
        {
            string json = @"{
  ""manage"": true
}";

            RetrievingPermissionsOnServiceInstanceResponse obj = Utilities.DeserializeJson<RetrievingPermissionsOnServiceInstanceResponse>(json);

            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);
        }

        [TestMethod]
        public void TestListAllRoutesForServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1e59e53a-1cd0-4033-b12d-35df583d3e7e"",
        ""url"": ""/v2/routes/d146460a-51fc-4b31-ae28-a38c40693bd8"",
        ""created_at"": ""2016-05-26T11:34:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-24"",
        ""path"": """",
        ""domain_guid"": ""1e59e53a-1cd0-4033-b12d-35df583d3e7e"",
        ""space_guid"": ""1e59e53a-1cd0-4033-b12d-35df583d3e7e"",
        ""service_instance_guid"": ""1e59e53a-1cd0-4033-b12d-35df583d3e7e"",
        ""port"": null,
        ""domain_url"": ""/v2/domains/dc1ad22a-b527-4f7d-b8e3-0e8a2cf186a2"",
        ""space_url"": ""/v2/spaces/1654977d-dea6-4bb4-8227-5ce5d67137e5"",
        ""service_instance_url"": ""/v2/service_instances/dbaff0ca-3221-43d1-ad10-a28a9c1d7b85"",
        ""apps_url"": ""/v2/routes/d146460a-51fc-4b31-ae28-a38c40693bd8/apps"",
        ""route_mappings_url"": ""/v2/routes/d146460a-51fc-4b31-ae28-a38c40693bd8/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForServiceInstanceResponse> page = Utilities.DeserializePage<ListAllRoutesForServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1e59e53a-1cd0-4033-b12d-35df583d3e7e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/d146460a-51fc-4b31-ae28-a38c40693bd8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:51Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-24", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("1e59e53a-1cd0-4033-b12d-35df583d3e7e", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("1e59e53a-1cd0-4033-b12d-35df583d3e7e", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1e59e53a-1cd0-4033-b12d-35df583d3e7e", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/domains/dc1ad22a-b527-4f7d-b8e3-0e8a2cf186a2", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/1654977d-dea6-4bb4-8227-5ce5d67137e5", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_instances/dbaff0ca-3221-43d1-ad10-a28a9c1d7b85", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/d146460a-51fc-4b31-ae28-a38c40693bd8/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/routes/d146460a-51fc-4b31-ae28-a38c40693bd8/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce9e45a9-5fb5-4276-9c75-5b5aacfbd38d"",
        ""url"": ""/v2/service_instances/bef589cd-ccd7-421d-9463-79bcb6c2b636"",
        ""created_at"": ""2016-05-26T11:34:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2385"",
        ""credentials"": {
          ""creds-key-62"": ""creds-val-62""
        },
        ""service_plan_guid"": ""ce9e45a9-5fb5-4276-9c75-5b5aacfbd38d"",
        ""space_guid"": ""ce9e45a9-5fb5-4276-9c75-5b5aacfbd38d"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": {
          ""type"": ""create"",
          ""state"": ""succeeded"",
          ""description"": ""service broker-provided description"",
          ""updated_at"": ""2016-05-26T11:34:50Z"",
          ""created_at"": ""2016-05-26T11:34:50Z""
        },
        ""tags"": [
          ""accounting"",
          ""mongodb""
        ],
        ""space_url"": ""/v2/spaces/80eccff2-d30c-4b1d-9e1a-1f3befe26555"",
        ""service_plan_url"": ""/v2/service_plans/d9ea8853-3f11-4952-a954-f5f3b0d3a167"",
        ""service_bindings_url"": ""/v2/service_instances/bef589cd-ccd7-421d-9463-79bcb6c2b636/service_bindings"",
        ""service_keys_url"": ""/v2/service_instances/bef589cd-ccd7-421d-9463-79bcb6c2b636/service_keys"",
        ""routes_url"": ""/v2/service_instances/bef589cd-ccd7-421d-9463-79bcb6c2b636/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesResponse> page = Utilities.DeserializePage<ListAllServiceInstancesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ce9e45a9-5fb5-4276-9c75-5b5aacfbd38d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/bef589cd-ccd7-421d-9463-79bcb6c2b636", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2385", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("ce9e45a9-5fb5-4276-9c75-5b5aacfbd38d", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("ce9e45a9-5fb5-4276-9c75-5b5aacfbd38d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/80eccff2-d30c-4b1d-9e1a-1f3befe26555", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/d9ea8853-3f11-4952-a954-f5f3b0d3a167", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/bef589cd-ccd7-421d-9463-79bcb6c2b636/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/bef589cd-ccd7-421d-9463-79bcb6c2b636/service_keys", TestUtil.ToTestableString(page[0].ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/bef589cd-ccd7-421d-9463-79bcb6c2b636/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6031fa58-79b6-47af-b4a6-010e39d38006"",
    ""url"": ""/v2/service_instances/0b32e5b1-69f7-4252-82bd-decf5b01271e"",
    ""created_at"": ""2016-05-26T11:34:50Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2370"",
    ""credentials"": {
      ""creds-key-60"": ""creds-val-60""
    },
    ""service_plan_guid"": ""6031fa58-79b6-47af-b4a6-010e39d38006"",
    ""space_guid"": ""6031fa58-79b6-47af-b4a6-010e39d38006"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""succeeded"",
      ""description"": ""service broker-provided description"",
      ""updated_at"": ""2016-05-26T11:34:50Z"",
      ""created_at"": ""2016-05-26T11:34:50Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/e11ab66d-06b2-4112-a643-fdbda50bdfce"",
    ""service_plan_url"": ""/v2/service_plans/090838e2-c10a-4e05-a590-157e272741ea"",
    ""service_bindings_url"": ""/v2/service_instances/0b32e5b1-69f7-4252-82bd-decf5b01271e/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/0b32e5b1-69f7-4252-82bd-decf5b01271e/service_keys"",
    ""routes_url"": ""/v2/service_instances/0b32e5b1-69f7-4252-82bd-decf5b01271e/routes""
  }
}";

            RetrieveServiceInstanceResponse obj = Utilities.DeserializeJson<RetrieveServiceInstanceResponse>(json);

            Assert.AreEqual("6031fa58-79b6-47af-b4a6-010e39d38006", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/0b32e5b1-69f7-4252-82bd-decf5b01271e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2370", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("6031fa58-79b6-47af-b4a6-010e39d38006", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("6031fa58-79b6-47af-b4a6-010e39d38006", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/e11ab66d-06b2-4112-a643-fdbda50bdfce", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/090838e2-c10a-4e05-a590-157e272741ea", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/0b32e5b1-69f7-4252-82bd-decf5b01271e/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/0b32e5b1-69f7-4252-82bd-decf5b01271e/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/0b32e5b1-69f7-4252-82bd-decf5b01271e/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestCreateServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a5fb8b97-cf9f-4db5-98bf-31023db5b713"",
    ""url"": ""/v2/service_instances/c45fee81-b1a7-4a98-a038-ea00c4f6dccf"",
    ""created_at"": ""2016-05-26T11:34:50Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {

    },
    ""service_plan_guid"": ""a5fb8b97-cf9f-4db5-98bf-31023db5b713"",
    ""space_guid"": ""a5fb8b97-cf9f-4db5-98bf-31023db5b713"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": null,
      ""created_at"": ""2016-05-26T11:34:50Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/3e6d001f-cb9f-4e08-87af-15ad7ea00dee"",
    ""service_plan_url"": ""/v2/service_plans/536b1e10-349a-4380-b4e6-37812244edf0"",
    ""service_bindings_url"": ""/v2/service_instances/c45fee81-b1a7-4a98-a038-ea00c4f6dccf/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/c45fee81-b1a7-4a98-a038-ea00c4f6dccf/service_keys"",
    ""routes_url"": ""/v2/service_instances/c45fee81-b1a7-4a98-a038-ea00c4f6dccf/routes""
  }
}";

            CreateServiceInstanceResponse obj = Utilities.DeserializeJson<CreateServiceInstanceResponse>(json);

            Assert.AreEqual("a5fb8b97-cf9f-4db5-98bf-31023db5b713", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/c45fee81-b1a7-4a98-a038-ea00c4f6dccf", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("a5fb8b97-cf9f-4db5-98bf-31023db5b713", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("a5fb8b97-cf9f-4db5-98bf-31023db5b713", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/3e6d001f-cb9f-4e08-87af-15ad7ea00dee", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/536b1e10-349a-4380-b4e6-37812244edf0", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/c45fee81-b1a7-4a98-a038-ea00c4f6dccf/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/c45fee81-b1a7-4a98-a038-ea00c4f6dccf/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/c45fee81-b1a7-4a98-a038-ea00c4f6dccf/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceKeysForServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""af966807-f4e0-4dec-a709-d72469decfce"",
        ""url"": ""/v2/service_keys/5b038aee-c6b5-4a7e-9d13-5c0bf534514b"",
        ""created_at"": ""2016-05-26T11:34:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""a-service-key"",
        ""service_instance_guid"": ""af966807-f4e0-4dec-a709-d72469decfce"",
        ""credentials"": {
          ""creds-key-68"": ""creds-val-68""
        },
        ""service_instance_url"": ""/v2/service_instances/c995cc2a-4115-42ad-b94c-04fd84792184""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceKeysForServiceInstanceResponse> page = Utilities.DeserializePage<ListAllServiceKeysForServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("af966807-f4e0-4dec-a709-d72469decfce", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_keys/5b038aee-c6b5-4a7e-9d13-5c0bf534514b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:51Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("a-service-key", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("af966807-f4e0-4dec-a709-d72469decfce", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("/v2/service_instances/c995cc2a-4115-42ad-b94c-04fd84792184", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestDeleteServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c62d2f24-12a0-47c6-b396-e63a9ebb7bc4"",
    ""url"": ""/v2/service_instances/9afb61d9-2261-462d-b5b7-268d9fdc93ea"",
    ""created_at"": ""2016-05-26T11:34:50Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2391"",
    ""credentials"": {
      ""creds-key-63"": ""creds-val-63""
    },
    ""service_plan_guid"": ""c62d2f24-12a0-47c6-b396-e63a9ebb7bc4"",
    ""space_guid"": ""c62d2f24-12a0-47c6-b396-e63a9ebb7bc4"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""delete"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2016-05-26T11:34:50Z"",
      ""created_at"": ""2016-05-26T11:34:50Z""
    },
    ""tags"": [
      ""accounting"",
      ""mongodb""
    ],
    ""space_url"": ""/v2/spaces/abb8791d-411f-4f3c-a620-dc6a2fa4b610"",
    ""service_plan_url"": ""/v2/service_plans/4c3e534f-4fbf-4526-babe-a3c7d0c2244e"",
    ""service_bindings_url"": ""/v2/service_instances/9afb61d9-2261-462d-b5b7-268d9fdc93ea/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/9afb61d9-2261-462d-b5b7-268d9fdc93ea/service_keys"",
    ""routes_url"": ""/v2/service_instances/9afb61d9-2261-462d-b5b7-268d9fdc93ea/routes""
  }
}";

            DeleteServiceInstanceResponse obj = Utilities.DeserializeJson<DeleteServiceInstanceResponse>(json);

            Assert.AreEqual("c62d2f24-12a0-47c6-b396-e63a9ebb7bc4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/9afb61d9-2261-462d-b5b7-268d9fdc93ea", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2391", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("c62d2f24-12a0-47c6-b396-e63a9ebb7bc4", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("c62d2f24-12a0-47c6-b396-e63a9ebb7bc4", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/abb8791d-411f-4f3c-a620-dc6a2fa4b610", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/4c3e534f-4fbf-4526-babe-a3c7d0c2244e", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/9afb61d9-2261-462d-b5b7-268d9fdc93ea/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/9afb61d9-2261-462d-b5b7-268d9fdc93ea/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/9afb61d9-2261-462d-b5b7-268d9fdc93ea/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""af6137da-47aa-4772-a071-8bc651ded0ba"",
        ""url"": ""/v2/service_bindings/40c82b11-4c5d-4d8e-a04a-863a41ba926c"",
        ""created_at"": ""2016-05-26T11:34:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""af6137da-47aa-4772-a071-8bc651ded0ba"",
        ""service_instance_guid"": ""af6137da-47aa-4772-a071-8bc651ded0ba"",
        ""credentials"": {
          ""creds-key-66"": ""creds-val-66""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""volume_mounts"": [

        ],
        ""app_url"": ""/v2/apps/feeb2c1b-7536-4bd1-9305-0f30cc6a046d"",
        ""service_instance_url"": ""/v2/service_instances/d433d00b-9aaa-458f-8bb3-60883e196d79""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForServiceInstanceResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("af6137da-47aa-4772-a071-8bc651ded0ba", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/40c82b11-4c5d-4d8e-a04a-863a41ba926c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:51Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("af6137da-47aa-4772-a071-8bc651ded0ba", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("af6137da-47aa-4772-a071-8bc651ded0ba", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/feeb2c1b-7536-4bd1-9305-0f30cc6a046d", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/d433d00b-9aaa-458f-8bb3-60883e196d79", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestUpdateServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b3b60701-305c-4eba-8d79-836e854ce3df"",
    ""url"": ""/v2/service_instances/6a02e0c4-45c6-4ad8-81fc-fa9d37227a15"",
    ""created_at"": ""2016-05-26T11:34:50Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2397"",
    ""credentials"": {
      ""creds-key-64"": ""creds-val-64""
    },
    ""service_plan_guid"": ""b3b60701-305c-4eba-8d79-836e854ce3df"",
    ""space_guid"": ""b3b60701-305c-4eba-8d79-836e854ce3df"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""update"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2016-05-26T11:34:50Z"",
      ""created_at"": ""2016-05-26T11:34:50Z""
    },
    ""tags"": [

    ],
    ""space_url"": ""/v2/spaces/f279cd06-b268-4efe-a07f-cefeab140807"",
    ""service_plan_url"": ""/v2/service_plans/ca80fa91-996e-407b-acef-ab520024f3a2"",
    ""service_bindings_url"": ""/v2/service_instances/6a02e0c4-45c6-4ad8-81fc-fa9d37227a15/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/6a02e0c4-45c6-4ad8-81fc-fa9d37227a15/service_keys"",
    ""routes_url"": ""/v2/service_instances/6a02e0c4-45c6-4ad8-81fc-fa9d37227a15/routes""
  }
}";

            UpdateServiceInstanceResponse obj = Utilities.DeserializeJson<UpdateServiceInstanceResponse>(json);

            Assert.AreEqual("b3b60701-305c-4eba-8d79-836e854ce3df", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/6a02e0c4-45c6-4ad8-81fc-fa9d37227a15", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2397", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("b3b60701-305c-4eba-8d79-836e854ce3df", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("b3b60701-305c-4eba-8d79-836e854ce3df", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/f279cd06-b268-4efe-a07f-cefeab140807", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/ca80fa91-996e-407b-acef-ab520024f3a2", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/6a02e0c4-45c6-4ad8-81fc-fa9d37227a15/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/6a02e0c4-45c6-4ad8-81fc-fa9d37227a15/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/6a02e0c4-45c6-4ad8-81fc-fa9d37227a15/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }
    }
}
