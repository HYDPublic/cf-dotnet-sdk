//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesTest
    {


        [TestMethod]
        public void TestUpdateServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""22b23f21-d7b6-44b6-9628-cae7c1d354fb"",
    ""url"": ""/v2/service_instances/22b23f21-d7b6-44b6-9628-cae7c1d354fb"",
    ""created_at"": ""2015-03-23T16:53:28+00:00"",
    ""updated_at"": ""2015-03-23T16:53:28+00:00""
  },
  ""entity"": {
    ""name"": ""name-879"",
    ""credentials"": {
      ""creds-key-445"": ""creds-val-445""
    },
    ""service_plan_guid"": ""916e0be3-d683-44f9-9d5f-3f25787b2217"",
    ""space_guid"": ""f8fd4fb4-1242-4380-9000-2a90cbadc69f"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/f8fd4fb4-1242-4380-9000-2a90cbadc69f"",
    ""service_plan_url"": ""/v2/service_plans/916e0be3-d683-44f9-9d5f-3f25787b2217"",
    ""service_bindings_url"": ""/v2/service_instances/22b23f21-d7b6-44b6-9628-cae7c1d354fb/service_bindings""
  }
}";

            UpdateServiceInstanceResponse obj = Utilities.DeserializeJson<UpdateServiceInstanceResponse>(json);

            Assert.AreEqual("22b23f21-d7b6-44b6-9628-cae7c1d354fb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/22b23f21-d7b6-44b6-9628-cae7c1d354fb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:28+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:28+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-879", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("916e0be3-d683-44f9-9d5f-3f25787b2217", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("f8fd4fb4-1242-4380-9000-2a90cbadc69f", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/f8fd4fb4-1242-4380-9000-2a90cbadc69f", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/916e0be3-d683-44f9-9d5f-3f25787b2217", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/22b23f21-d7b6-44b6-9628-cae7c1d354fb/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a29c2e0b-9d62-4439-b849-7ab6d0cdbee1"",
        ""url"": ""/v2/service_instances/a29c2e0b-9d62-4439-b849-7ab6d0cdbee1"",
        ""created_at"": ""2015-03-23T16:53:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-898"",
        ""credentials"": {
          ""creds-key-454"": ""creds-val-454""
        },
        ""service_plan_guid"": ""923fcfbf-140d-4aa4-a9c8-e7164ab398c1"",
        ""space_guid"": ""5192ef4c-095b-40f9-a7a1-654f8b7dccda"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/5192ef4c-095b-40f9-a7a1-654f8b7dccda"",
        ""service_plan_url"": ""/v2/service_plans/923fcfbf-140d-4aa4-a9c8-e7164ab398c1"",
        ""service_bindings_url"": ""/v2/service_instances/a29c2e0b-9d62-4439-b849-7ab6d0cdbee1/service_bindings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesResponse> page = Utilities.DeserializePage<ListAllServiceInstancesResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a29c2e0b-9d62-4439-b849-7ab6d0cdbee1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/a29c2e0b-9d62-4439-b849-7ab6d0cdbee1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-898", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("923fcfbf-140d-4aa4-a9c8-e7164ab398c1", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("5192ef4c-095b-40f9-a7a1-654f8b7dccda", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/5192ef4c-095b-40f9-a7a1-654f8b7dccda", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/923fcfbf-140d-4aa4-a9c8-e7164ab398c1", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/a29c2e0b-9d62-4439-b849-7ab6d0cdbee1/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestCreateServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0a4234fe-4f9c-41b2-b46a-79eeef44b928"",
    ""url"": ""/v2/service_instances/0a4234fe-4f9c-41b2-b46a-79eeef44b928"",
    ""created_at"": ""2015-03-23T16:53:28+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {
      ""creds-key-446"": ""creds-val-446""
    },
    ""service_plan_guid"": ""d00c75be-9e22-4620-8f4d-bc8b54261eb3"",
    ""space_guid"": ""3b3e1b23-91e4-47dc-af1f-d512c46bd0f8"",
    ""gateway_data"": ""CONFIGURATION"",
    ""dashboard_url"": ""http://dashboard.example.com"",
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/3b3e1b23-91e4-47dc-af1f-d512c46bd0f8"",
    ""service_plan_url"": ""/v2/service_plans/d00c75be-9e22-4620-8f4d-bc8b54261eb3"",
    ""service_bindings_url"": ""/v2/service_instances/0a4234fe-4f9c-41b2-b46a-79eeef44b928/service_bindings""
  }
}";

            CreateServiceInstanceResponse obj = Utilities.DeserializeJson<CreateServiceInstanceResponse>(json);

            Assert.AreEqual("0a4234fe-4f9c-41b2-b46a-79eeef44b928", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/0a4234fe-4f9c-41b2-b46a-79eeef44b928", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:28+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("d00c75be-9e22-4620-8f4d-bc8b54261eb3", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("3b3e1b23-91e4-47dc-af1f-d512c46bd0f8", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("CONFIGURATION", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("http://dashboard.example.com", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/3b3e1b23-91e4-47dc-af1f-d512c46bd0f8", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/d00c75be-9e22-4620-8f4d-bc8b54261eb3", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/0a4234fe-4f9c-41b2-b46a-79eeef44b928/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""20e8579f-c74a-438d-bf50-110180c81f91"",
        ""url"": ""/v2/service_bindings/20e8579f-c74a-438d-bf50-110180c81f91"",
        ""created_at"": ""2015-03-23T16:53:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""02c50b49-0072-4b15-a7dc-fe7c40578ec7"",
        ""service_instance_guid"": ""5efe296f-4795-4fa4-9c48-6bef6881b910"",
        ""credentials"": {
          ""creds-key-458"": ""creds-val-458""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/02c50b49-0072-4b15-a7dc-fe7c40578ec7"",
        ""service_instance_url"": ""/v2/service_instances/5efe296f-4795-4fa4-9c48-6bef6881b910""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForServiceInstanceResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForServiceInstanceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("20e8579f-c74a-438d-bf50-110180c81f91", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/20e8579f-c74a-438d-bf50-110180c81f91", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("02c50b49-0072-4b15-a7dc-fe7c40578ec7", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("5efe296f-4795-4fa4-9c48-6bef6881b910", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/02c50b49-0072-4b15-a7dc-fe7c40578ec7", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/5efe296f-4795-4fa4-9c48-6bef6881b910", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestMigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse()
        {
            string json = @"{""changed_count"":1}";

            MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse obj = Utilities.DeserializeJson<MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(obj.ChangedCount), true);
        }

        [TestMethod]
        public void TestRetrieveServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2584e373-1a2b-44d7-b09b-e15f1414ad15"",
    ""url"": ""/v2/service_instances/2584e373-1a2b-44d7-b09b-e15f1414ad15"",
    ""created_at"": ""2015-03-23T16:53:28+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-872"",
    ""credentials"": {
      ""creds-key-442"": ""creds-val-442""
    },
    ""service_plan_guid"": ""b34f50d5-76ff-4d54-bfa4-a2cd24f0728f"",
    ""space_guid"": ""d8572489-d9c8-4abf-bc54-bde1a08e5f5a"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""space_url"": ""/v2/spaces/d8572489-d9c8-4abf-bc54-bde1a08e5f5a"",
    ""service_plan_url"": ""/v2/service_plans/b34f50d5-76ff-4d54-bfa4-a2cd24f0728f"",
    ""service_bindings_url"": ""/v2/service_instances/2584e373-1a2b-44d7-b09b-e15f1414ad15/service_bindings""
  }
}";

            RetrieveServiceInstanceResponse obj = Utilities.DeserializeJson<RetrieveServiceInstanceResponse>(json);

            Assert.AreEqual("2584e373-1a2b-44d7-b09b-e15f1414ad15", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/2584e373-1a2b-44d7-b09b-e15f1414ad15", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:28+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-872", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("b34f50d5-76ff-4d54-bfa4-a2cd24f0728f", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("d8572489-d9c8-4abf-bc54-bde1a08e5f5a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("/v2/spaces/d8572489-d9c8-4abf-bc54-bde1a08e5f5a", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/b34f50d5-76ff-4d54-bfa4-a2cd24f0728f", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/2584e373-1a2b-44d7-b09b-e15f1414ad15/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingPermissionsOnServiceInstanceResponse()
        {
            string json = @"{""manage"":true}";

            RetrievingPermissionsOnServiceInstanceResponse obj = Utilities.DeserializeJson<RetrievingPermissionsOnServiceInstanceResponse>(json);

            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);
        }
    }
}
