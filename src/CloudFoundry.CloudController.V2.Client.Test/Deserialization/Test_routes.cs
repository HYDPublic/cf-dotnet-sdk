//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class RoutesTest
    {


        [TestMethod]
        public void TestListAllRoutesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d040438a-0e2f-41d0-9a76-09dbbc6068eb"",
        ""url"": ""/v2/routes/63c61433-2d19-422e-96b3-0cf7b5a47abb"",
        ""created_at"": ""2016-09-02T11:52:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-18"",
        ""path"": """",
        ""domain_guid"": ""d040438a-0e2f-41d0-9a76-09dbbc6068eb"",
        ""space_guid"": ""d040438a-0e2f-41d0-9a76-09dbbc6068eb"",
        ""service_instance_guid"": ""d040438a-0e2f-41d0-9a76-09dbbc6068eb"",
        ""port"": null,
        ""domain_url"": ""/v2/shared_domains/c29dcd4e-2fce-43b1-8d6f-38661bae5f12"",
        ""space_url"": ""/v2/spaces/ff41cf6c-7218-4301-ab7c-02a13980818d"",
        ""service_instance_url"": ""/v2/service_instances/e8a8a714-9cf8-4d47-8cd9-489b60e92d07"",
        ""apps_url"": ""/v2/routes/63c61433-2d19-422e-96b3-0cf7b5a47abb/apps"",
        ""route_mappings_url"": ""/v2/routes/63c61433-2d19-422e-96b3-0cf7b5a47abb/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesResponse> page = Utilities.DeserializePage<ListAllRoutesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d040438a-0e2f-41d0-9a76-09dbbc6068eb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/63c61433-2d19-422e-96b3-0cf7b5a47abb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:13Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-18", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("d040438a-0e2f-41d0-9a76-09dbbc6068eb", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("d040438a-0e2f-41d0-9a76-09dbbc6068eb", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d040438a-0e2f-41d0-9a76-09dbbc6068eb", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/shared_domains/c29dcd4e-2fce-43b1-8d6f-38661bae5f12", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/ff41cf6c-7218-4301-ab7c-02a13980818d", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_instances/e8a8a714-9cf8-4d47-8cd9-489b60e92d07", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/63c61433-2d19-422e-96b3-0cf7b5a47abb/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/routes/63c61433-2d19-422e-96b3-0cf7b5a47abb/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAppWithRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6a7be81e-cbef-412b-b91b-b88fbea1e14f"",
    ""url"": ""/v2/routes/fb82d070-32bc-4ca8-837a-d4413797f25b"",
    ""created_at"": ""2016-09-02T11:52:12Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-14"",
    ""path"": """",
    ""domain_guid"": ""6a7be81e-cbef-412b-b91b-b88fbea1e14f"",
    ""space_guid"": ""6a7be81e-cbef-412b-b91b-b88fbea1e14f"",
    ""service_instance_guid"": null,
    ""port"": null,
    ""domain_url"": ""/v2/shared_domains/a0fd12da-151e-4330-916c-1e1a5c240e83"",
    ""space_url"": ""/v2/spaces/b050f4bb-2bce-4c27-a4e5-c0a103d825d4"",
    ""apps_url"": ""/v2/routes/fb82d070-32bc-4ca8-837a-d4413797f25b/apps"",
    ""route_mappings_url"": ""/v2/routes/fb82d070-32bc-4ca8-837a-d4413797f25b/route_mappings""
  }
}";

            AssociateAppWithRouteResponse obj = Utilities.DeserializeJson<AssociateAppWithRouteResponse>(json);

            Assert.AreEqual("6a7be81e-cbef-412b-b91b-b88fbea1e14f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/fb82d070-32bc-4ca8-837a-d4413797f25b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:12Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-14", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("6a7be81e-cbef-412b-b91b-b88fbea1e14f", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("6a7be81e-cbef-412b-b91b-b88fbea1e14f", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/shared_domains/a0fd12da-151e-4330-916c-1e1a5c240e83", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/b050f4bb-2bce-4c27-a4e5-c0a103d825d4", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/fb82d070-32bc-4ca8-837a-d4413797f25b/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/routes/fb82d070-32bc-4ca8-837a-d4413797f25b/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsForRouteResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""56b93cad-bf92-472d-a008-c809993220ff"",
        ""url"": ""/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8"",
        ""created_at"": ""2016-09-02T11:52:13Z"",
        ""updated_at"": ""2016-09-02T11:52:13Z""
      },
      ""entity"": {
        ""name"": ""name-906"",
        ""production"": false,
        ""space_guid"": ""56b93cad-bf92-472d-a008-c809993220ff"",
        ""stack_guid"": ""56b93cad-bf92-472d-a008-c809993220ff"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""detected_buildpack_guid"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""3926b377-8e91-4ad9-8aa6-01340cc64633"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""staging_failed_description"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-09-02T11:52:13Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""docker_credentials_json"": {
          ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
        },
        ""ports"": null,
        ""space_url"": ""/v2/spaces/bacca4aa-e551-4f63-adfc-be17a87d252c"",
        ""stack_url"": ""/v2/stacks/bc5ac760-92b7-45ae-8c70-4b7a066b3c20"",
        ""routes_url"": ""/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8/routes"",
        ""events_url"": ""/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8/events"",
        ""service_bindings_url"": ""/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8/service_bindings"",
        ""route_mappings_url"": ""/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsForRouteResponse> page = Utilities.DeserializePage<ListAllAppsForRouteResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("56b93cad-bf92-472d-a008-c809993220ff", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:13Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-09-02T11:52:13Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-906", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("56b93cad-bf92-472d-a008-c809993220ff", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("56b93cad-bf92-472d-a008-c809993220ff", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("3926b377-8e91-4ad9-8aa6-01340cc64633", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2016-09-02T11:52:13Z", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Ports), true);
            Assert.AreEqual("/v2/spaces/bacca4aa-e551-4f63-adfc-be17a87d252c", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/bc5ac760-92b7-45ae-8c70-4b7a066b3c20", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/0a21640b-368f-4d52-8abf-1e704abc5fb8/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestCreateRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""045849ea-d6ab-460f-97c8-a82d990ef44a"",
    ""url"": ""/v2/routes/750be69a-91e6-4ee5-9009-d1886e0375b4"",
    ""created_at"": ""2016-09-02T11:52:13Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": """",
    ""path"": """",
    ""domain_guid"": ""045849ea-d6ab-460f-97c8-a82d990ef44a"",
    ""space_guid"": ""045849ea-d6ab-460f-97c8-a82d990ef44a"",
    ""service_instance_guid"": null,
    ""port"": 10000,
    ""domain_url"": ""/v2/shared_domains/8b4b8a1d-644c-410f-8beb-2d7f7a052eb7"",
    ""space_url"": ""/v2/spaces/46da2a69-5a72-4360-a609-0a33bfbd79d9"",
    ""apps_url"": ""/v2/routes/750be69a-91e6-4ee5-9009-d1886e0375b4/apps"",
    ""route_mappings_url"": ""/v2/routes/750be69a-91e6-4ee5-9009-d1886e0375b4/route_mappings""
  }
}";

            CreateRouteResponse obj = Utilities.DeserializeJson<CreateRouteResponse>(json);

            Assert.AreEqual("045849ea-d6ab-460f-97c8-a82d990ef44a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/750be69a-91e6-4ee5-9009-d1886e0375b4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("045849ea-d6ab-460f-97c8-a82d990ef44a", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("045849ea-d6ab-460f-97c8-a82d990ef44a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("10000", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/shared_domains/8b4b8a1d-644c-410f-8beb-2d7f7a052eb7", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/46da2a69-5a72-4360-a609-0a33bfbd79d9", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/750be69a-91e6-4ee5-9009-d1886e0375b4/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/routes/750be69a-91e6-4ee5-9009-d1886e0375b4/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""cd04bd89-b17d-4b6c-bb30-6e6831026477"",
    ""url"": ""/v2/routes/b87af946-a48c-4f6d-85f9-3b2b6ae4eac9"",
    ""created_at"": ""2016-09-02T11:52:13Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-20"",
    ""path"": """",
    ""domain_guid"": ""cd04bd89-b17d-4b6c-bb30-6e6831026477"",
    ""space_guid"": ""cd04bd89-b17d-4b6c-bb30-6e6831026477"",
    ""service_instance_guid"": ""cd04bd89-b17d-4b6c-bb30-6e6831026477"",
    ""port"": null,
    ""domain_url"": ""/v2/shared_domains/03373c10-06d6-4372-a438-24b34d497390"",
    ""space_url"": ""/v2/spaces/6df99007-e725-49df-ad0e-ab6a9b974b29"",
    ""service_instance_url"": ""/v2/service_instances/f6920d25-c999-4345-a7d4-80e651764148"",
    ""apps_url"": ""/v2/routes/b87af946-a48c-4f6d-85f9-3b2b6ae4eac9/apps"",
    ""route_mappings_url"": ""/v2/routes/b87af946-a48c-4f6d-85f9-3b2b6ae4eac9/route_mappings""
  }
}";

            RetrieveRouteResponse obj = Utilities.DeserializeJson<RetrieveRouteResponse>(json);

            Assert.AreEqual("cd04bd89-b17d-4b6c-bb30-6e6831026477", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/b87af946-a48c-4f6d-85f9-3b2b6ae4eac9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-20", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("cd04bd89-b17d-4b6c-bb30-6e6831026477", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("cd04bd89-b17d-4b6c-bb30-6e6831026477", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("cd04bd89-b17d-4b6c-bb30-6e6831026477", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/shared_domains/03373c10-06d6-4372-a438-24b34d497390", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/6df99007-e725-49df-ad0e-ab6a9b974b29", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_instances/f6920d25-c999-4345-a7d4-80e651764148", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/b87af946-a48c-4f6d-85f9-3b2b6ae4eac9/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/routes/b87af946-a48c-4f6d-85f9-3b2b6ae4eac9/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestUpdateRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8c165012-3564-4087-95ac-f22c4d6b8806"",
    ""url"": ""/v2/routes/ac5f25ba-5714-453b-a823-22ce0588021c"",
    ""created_at"": ""2016-09-02T11:52:13Z"",
    ""updated_at"": ""2016-09-02T11:52:14Z""
  },
  ""entity"": {
    ""host"": ""host-21"",
    ""path"": """",
    ""domain_guid"": ""8c165012-3564-4087-95ac-f22c4d6b8806"",
    ""space_guid"": ""8c165012-3564-4087-95ac-f22c4d6b8806"",
    ""service_instance_guid"": null,
    ""port"": 10000,
    ""domain_url"": ""/v2/shared_domains/d3d68f3a-f005-4d5a-802e-801bec893b4a"",
    ""space_url"": ""/v2/spaces/d3c7b2dc-9de0-49c4-aa78-97547c2f0ca6"",
    ""apps_url"": ""/v2/routes/ac5f25ba-5714-453b-a823-22ce0588021c/apps"",
    ""route_mappings_url"": ""/v2/routes/ac5f25ba-5714-453b-a823-22ce0588021c/route_mappings""
  }
}";

            UpdateRouteResponse obj = Utilities.DeserializeJson<UpdateRouteResponse>(json);

            Assert.AreEqual("8c165012-3564-4087-95ac-f22c4d6b8806", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/ac5f25ba-5714-453b-a823-22ce0588021c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:13Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-09-02T11:52:14Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-21", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("8c165012-3564-4087-95ac-f22c4d6b8806", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("8c165012-3564-4087-95ac-f22c4d6b8806", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("10000", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/shared_domains/d3d68f3a-f005-4d5a-802e-801bec893b4a", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/d3c7b2dc-9de0-49c4-aa78-97547c2f0ca6", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/ac5f25ba-5714-453b-a823-22ce0588021c/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/routes/ac5f25ba-5714-453b-a823-22ce0588021c/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestListAllRouteMappingsForRouteResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b79c34b3-18e6-4653-a6d2-c26af75d316a"",
        ""url"": ""/v2/route_mappings/c51a6f93-4eab-440f-bc33-722d42a47567"",
        ""created_at"": ""2016-09-02T11:52:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_port"": null,
        ""app_guid"": ""b79c34b3-18e6-4653-a6d2-c26af75d316a"",
        ""route_guid"": ""b79c34b3-18e6-4653-a6d2-c26af75d316a"",
        ""app_url"": ""/v2/apps/8a22ed28-e26e-4b78-ba9b-51455654feac"",
        ""route_url"": ""/v2/routes/3056c559-782f-4f17-9729-ea8fb3085fff""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRouteMappingsForRouteResponse> page = Utilities.DeserializePage<ListAllRouteMappingsForRouteResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b79c34b3-18e6-4653-a6d2-c26af75d316a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/route_mappings/c51a6f93-4eab-440f-bc33-722d42a47567", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:12Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].AppPort), true);
            Assert.AreEqual("b79c34b3-18e6-4653-a6d2-c26af75d316a", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("b79c34b3-18e6-4653-a6d2-c26af75d316a", TestUtil.ToTestableString(page[0].RouteGuid), true);
            Assert.AreEqual("/v2/apps/8a22ed28-e26e-4b78-ba9b-51455654feac", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/routes/3056c559-782f-4f17-9729-ea8fb3085fff", TestUtil.ToTestableString(page[0].RouteUrl), true);
        }
    }
}
