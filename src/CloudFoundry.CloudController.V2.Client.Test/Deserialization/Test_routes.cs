//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class RoutesTest
    {


        [TestMethod]
        public void TestAssociateAppWithRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""85f2d7eb-4206-4ef0-9441-c5e48415c46e"",
    ""url"": ""/v2/routes/6d3c3c93-2095-4df5-b95b-48b626842f01"",
    ""created_at"": ""2016-07-07T09:16:59Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-15"",
    ""path"": """",
    ""domain_guid"": ""85f2d7eb-4206-4ef0-9441-c5e48415c46e"",
    ""space_guid"": ""85f2d7eb-4206-4ef0-9441-c5e48415c46e"",
    ""service_instance_guid"": null,
    ""port"": 0,
    ""domain_url"": ""/v2/domains/a75c08ba-f688-4e42-8686-d2b0f3969c28"",
    ""space_url"": ""/v2/spaces/3008d16c-18a0-4cc6-8b0a-d903e405b797"",
    ""apps_url"": ""/v2/routes/6d3c3c93-2095-4df5-b95b-48b626842f01/apps""
  }
}";

            AssociateAppWithRouteResponse obj = Utilities.DeserializeJson<AssociateAppWithRouteResponse>(json);

            Assert.AreEqual("85f2d7eb-4206-4ef0-9441-c5e48415c46e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/6d3c3c93-2095-4df5-b95b-48b626842f01", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:59Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-15", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("85f2d7eb-4206-4ef0-9441-c5e48415c46e", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("85f2d7eb-4206-4ef0-9441-c5e48415c46e", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/domains/a75c08ba-f688-4e42-8686-d2b0f3969c28", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/3008d16c-18a0-4cc6-8b0a-d903e405b797", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/6d3c3c93-2095-4df5-b95b-48b626842f01/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
        }

        [TestMethod]
        public void TestCreateRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""632232d8-fdad-4bc5-b099-9831b9a5f09a"",
    ""url"": ""/v2/routes/724c5c44-4a86-47c1-b448-9518aea2b0dd"",
    ""created_at"": ""2016-07-07T09:16:58Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": """",
    ""path"": """",
    ""domain_guid"": ""632232d8-fdad-4bc5-b099-9831b9a5f09a"",
    ""space_guid"": ""632232d8-fdad-4bc5-b099-9831b9a5f09a"",
    ""service_instance_guid"": null,
    ""port"": 10000,
    ""domain_url"": ""/v2/domains/7ea4c261-08e2-467d-801c-23ca05861883"",
    ""space_url"": ""/v2/spaces/4fe256cd-a1ba-4002-ba92-1daa1cf0acf6"",
    ""apps_url"": ""/v2/routes/724c5c44-4a86-47c1-b448-9518aea2b0dd/apps""
  }
}";

            CreateRouteResponse obj = Utilities.DeserializeJson<CreateRouteResponse>(json);

            Assert.AreEqual("632232d8-fdad-4bc5-b099-9831b9a5f09a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/724c5c44-4a86-47c1-b448-9518aea2b0dd", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("632232d8-fdad-4bc5-b099-9831b9a5f09a", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("632232d8-fdad-4bc5-b099-9831b9a5f09a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("10000", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/domains/7ea4c261-08e2-467d-801c-23ca05861883", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/4fe256cd-a1ba-4002-ba92-1daa1cf0acf6", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/724c5c44-4a86-47c1-b448-9518aea2b0dd/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsForRouteResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""481ede3c-c6d7-4781-a316-8c0079baf900"",
        ""url"": ""/v2/apps/c5482610-02df-452b-9ef0-c495c0d324a3"",
        ""created_at"": ""2016-07-07T09:16:59Z"",
        ""updated_at"": ""2016-07-07T09:16:59Z""
      },
      ""entity"": {
        ""name"": ""name-1426"",
        ""production"": false,
        ""space_guid"": ""481ede3c-c6d7-4781-a316-8c0079baf900"",
        ""stack_guid"": ""481ede3c-c6d7-4781-a316-8c0079baf900"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""bbb62b8e-1aca-4d40-8067-b8b7344145f8"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""staging_failed_description"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-07-07T09:16:59Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""docker_credentials_json"": {
          ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
        },
        ""ports"": null,
        ""space_url"": ""/v2/spaces/fd2566b9-b5a1-434a-a99e-ee91fe77c917"",
        ""stack_url"": ""/v2/stacks/4d8af78d-8891-41eb-83af-3d63dcea391f"",
        ""events_url"": ""/v2/apps/c5482610-02df-452b-9ef0-c495c0d324a3/events"",
        ""service_bindings_url"": ""/v2/apps/c5482610-02df-452b-9ef0-c495c0d324a3/service_bindings"",
        ""routes_url"": ""/v2/apps/c5482610-02df-452b-9ef0-c495c0d324a3/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsForRouteResponse> page = Utilities.DeserializePage<ListAllAppsForRouteResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("481ede3c-c6d7-4781-a316-8c0079baf900", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/c5482610-02df-452b-9ef0-c495c0d324a3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-07T09:16:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1426", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("481ede3c-c6d7-4781-a316-8c0079baf900", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("481ede3c-c6d7-4781-a316-8c0079baf900", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("bbb62b8e-1aca-4d40-8067-b8b7344145f8", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2016-07-07T09:16:59Z", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Ports), true);
            Assert.AreEqual("/v2/spaces/fd2566b9-b5a1-434a-a99e-ee91fe77c917", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/4d8af78d-8891-41eb-83af-3d63dcea391f", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/c5482610-02df-452b-9ef0-c495c0d324a3/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/c5482610-02df-452b-9ef0-c495c0d324a3/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/c5482610-02df-452b-9ef0-c495c0d324a3/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllRoutesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""887df8d9-7e73-4c7e-925f-0c0056db5ce7"",
        ""url"": ""/v2/routes/b59aa68b-7c8a-419b-b325-6d37d27bf71a"",
        ""created_at"": ""2016-07-07T09:16:58Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-13"",
        ""path"": """",
        ""domain_guid"": ""887df8d9-7e73-4c7e-925f-0c0056db5ce7"",
        ""space_guid"": ""887df8d9-7e73-4c7e-925f-0c0056db5ce7"",
        ""service_instance_guid"": ""887df8d9-7e73-4c7e-925f-0c0056db5ce7"",
        ""port"": 0,
        ""domain_url"": ""/v2/domains/c095b7e2-a3d7-4832-afb3-b3b2caae38ef"",
        ""space_url"": ""/v2/spaces/14343bf4-1d5b-406b-bc95-81643d420ef8"",
        ""service_instance_url"": ""/v2/service_instances/90068ce6-41ca-4d9e-9bb6-c89938e5847f"",
        ""apps_url"": ""/v2/routes/b59aa68b-7c8a-419b-b325-6d37d27bf71a/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesResponse> page = Utilities.DeserializePage<ListAllRoutesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("887df8d9-7e73-4c7e-925f-0c0056db5ce7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/b59aa68b-7c8a-419b-b325-6d37d27bf71a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-13", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("887df8d9-7e73-4c7e-925f-0c0056db5ce7", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("887df8d9-7e73-4c7e-925f-0c0056db5ce7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("887df8d9-7e73-4c7e-925f-0c0056db5ce7", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/domains/c095b7e2-a3d7-4832-afb3-b3b2caae38ef", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/14343bf4-1d5b-406b-bc95-81643d420ef8", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_instances/90068ce6-41ca-4d9e-9bb6-c89938e5847f", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/b59aa68b-7c8a-419b-b325-6d37d27bf71a/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""48612057-bb22-47a4-b74c-ab648d97d047"",
    ""url"": ""/v2/routes/548e4e75-fba5-4ccb-bb57-97a4bdd24dbc"",
    ""created_at"": ""2016-07-07T09:16:58Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-12"",
    ""path"": """",
    ""domain_guid"": ""48612057-bb22-47a4-b74c-ab648d97d047"",
    ""space_guid"": ""48612057-bb22-47a4-b74c-ab648d97d047"",
    ""service_instance_guid"": ""48612057-bb22-47a4-b74c-ab648d97d047"",
    ""port"": 0,
    ""domain_url"": ""/v2/domains/349ec208-b0ca-49e3-960f-16fef0eab547"",
    ""space_url"": ""/v2/spaces/90ac6da3-fcf3-49be-a202-cc5498b4cf38"",
    ""service_instance_url"": ""/v2/service_instances/fe661524-7d6f-4aa8-a371-0817fda6ba53"",
    ""apps_url"": ""/v2/routes/548e4e75-fba5-4ccb-bb57-97a4bdd24dbc/apps""
  }
}";

            RetrieveRouteResponse obj = Utilities.DeserializeJson<RetrieveRouteResponse>(json);

            Assert.AreEqual("48612057-bb22-47a4-b74c-ab648d97d047", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/548e4e75-fba5-4ccb-bb57-97a4bdd24dbc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-12", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("48612057-bb22-47a4-b74c-ab648d97d047", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("48612057-bb22-47a4-b74c-ab648d97d047", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("48612057-bb22-47a4-b74c-ab648d97d047", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/domains/349ec208-b0ca-49e3-960f-16fef0eab547", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/90ac6da3-fcf3-49be-a202-cc5498b4cf38", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_instances/fe661524-7d6f-4aa8-a371-0817fda6ba53", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/548e4e75-fba5-4ccb-bb57-97a4bdd24dbc/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
        }

        [TestMethod]
        public void TestUpdateRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e1009a6c-a9f5-4027-ae53-7fc8967cc690"",
    ""url"": ""/v2/routes/2981ae97-b660-49bc-a9a6-9718e74e140d"",
    ""created_at"": ""2016-07-07T09:16:58Z"",
    ""updated_at"": ""2016-07-07T09:16:58Z""
  },
  ""entity"": {
    ""host"": ""host-10"",
    ""path"": """",
    ""domain_guid"": ""e1009a6c-a9f5-4027-ae53-7fc8967cc690"",
    ""space_guid"": ""e1009a6c-a9f5-4027-ae53-7fc8967cc690"",
    ""service_instance_guid"": null,
    ""port"": 12000,
    ""domain_url"": ""/v2/domains/f10cc6a8-df30-40a9-8c86-91a351c95a4d"",
    ""space_url"": ""/v2/spaces/bb7b9777-66dd-4a12-8262-772381e36f69"",
    ""apps_url"": ""/v2/routes/2981ae97-b660-49bc-a9a6-9718e74e140d/apps""
  }
}";

            UpdateRouteResponse obj = Utilities.DeserializeJson<UpdateRouteResponse>(json);

            Assert.AreEqual("e1009a6c-a9f5-4027-ae53-7fc8967cc690", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/2981ae97-b660-49bc-a9a6-9718e74e140d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-10", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("e1009a6c-a9f5-4027-ae53-7fc8967cc690", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("e1009a6c-a9f5-4027-ae53-7fc8967cc690", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("12000", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/domains/f10cc6a8-df30-40a9-8c86-91a351c95a4d", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/bb7b9777-66dd-4a12-8262-772381e36f69", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/2981ae97-b660-49bc-a9a6-9718e74e140d/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
        }
    }
}
