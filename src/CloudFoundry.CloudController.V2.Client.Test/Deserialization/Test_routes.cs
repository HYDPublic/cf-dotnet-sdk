//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class RoutesTest
    {


        [TestMethod]
        public void TestListAllRoutesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b343b7ad-4002-46b0-bf33-3a0bac3e8edb"",
        ""url"": ""/v2/routes/49b5e000-111b-44da-a90e-9ac154f75a6b"",
        ""created_at"": ""2016-03-21T10:59:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-2"",
        ""path"": """",
        ""domain_guid"": ""b343b7ad-4002-46b0-bf33-3a0bac3e8edb"",
        ""space_guid"": ""b343b7ad-4002-46b0-bf33-3a0bac3e8edb"",
        ""service_instance_guid"": ""b343b7ad-4002-46b0-bf33-3a0bac3e8edb"",
        ""port"": 0,
        ""domain_url"": ""/v2/domains/3a9e88e2-ef59-494a-9dc2-0d2a2dff8b93"",
        ""space_url"": ""/v2/spaces/4a24965c-cc43-48ef-98af-d9d892dcedfb"",
        ""service_instance_url"": ""/v2/service_instances/0e7a3a8b-6918-4db6-b19f-9604f1a13d2a"",
        ""apps_url"": ""/v2/routes/49b5e000-111b-44da-a90e-9ac154f75a6b/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesResponse> page = Utilities.DeserializePage<ListAllRoutesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b343b7ad-4002-46b0-bf33-3a0bac3e8edb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/49b5e000-111b-44da-a90e-9ac154f75a6b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:17Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-2", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("b343b7ad-4002-46b0-bf33-3a0bac3e8edb", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("b343b7ad-4002-46b0-bf33-3a0bac3e8edb", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("b343b7ad-4002-46b0-bf33-3a0bac3e8edb", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/domains/3a9e88e2-ef59-494a-9dc2-0d2a2dff8b93", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/4a24965c-cc43-48ef-98af-d9d892dcedfb", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_instances/0e7a3a8b-6918-4db6-b19f-9604f1a13d2a", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/49b5e000-111b-44da-a90e-9ac154f75a6b/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAppWithRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0a4107f7-c298-44a4-8f36-7705da063abb"",
    ""url"": ""/v2/routes/42d6fad9-68f9-4621-8531-a5c5e236310a"",
    ""created_at"": ""2016-03-21T10:59:17Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-6"",
    ""path"": """",
    ""domain_guid"": ""0a4107f7-c298-44a4-8f36-7705da063abb"",
    ""space_guid"": ""0a4107f7-c298-44a4-8f36-7705da063abb"",
    ""service_instance_guid"": null,
    ""port"": 0,
    ""domain_url"": ""/v2/domains/f28ec428-3165-47da-ac89-42bdfa518575"",
    ""space_url"": ""/v2/spaces/f3eb3848-c068-477d-b558-d0dc387a4552"",
    ""apps_url"": ""/v2/routes/42d6fad9-68f9-4621-8531-a5c5e236310a/apps""
  }
}";

            AssociateAppWithRouteResponse obj = Utilities.DeserializeJson<AssociateAppWithRouteResponse>(json);

            Assert.AreEqual("0a4107f7-c298-44a4-8f36-7705da063abb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/42d6fad9-68f9-4621-8531-a5c5e236310a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:17Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-6", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("0a4107f7-c298-44a4-8f36-7705da063abb", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("0a4107f7-c298-44a4-8f36-7705da063abb", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/domains/f28ec428-3165-47da-ac89-42bdfa518575", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/f3eb3848-c068-477d-b558-d0dc387a4552", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/42d6fad9-68f9-4621-8531-a5c5e236310a/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsForRouteResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""88e62d85-893c-4b47-ac3d-79c371d4d66f"",
        ""url"": ""/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85"",
        ""created_at"": ""2016-03-21T10:59:17Z"",
        ""updated_at"": ""2016-03-21T10:59:17Z""
      },
      ""entity"": {
        ""name"": ""name-67"",
        ""production"": false,
        ""space_guid"": ""88e62d85-893c-4b47-ac3d-79c371d4d66f"",
        ""stack_guid"": ""88e62d85-893c-4b47-ac3d-79c371d4d66f"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""ef659271-d13f-467d-baa4-9905d60700ae"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""staging_failed_description"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-03-21T10:59:17Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""docker_credentials_json"": {
          ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
        },
        ""ports"": null,
        ""space_url"": ""/v2/spaces/647160b7-c5ae-4684-b3fe-b256052c37e0"",
        ""stack_url"": ""/v2/stacks/96588c97-d5a7-4604-a6d8-5a885fe43efa"",
        ""events_url"": ""/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85/events"",
        ""service_bindings_url"": ""/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85/service_bindings"",
        ""routes_url"": ""/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85/routes"",
        ""route_mappings_url"": ""/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsForRouteResponse> page = Utilities.DeserializePage<ListAllAppsForRouteResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("88e62d85-893c-4b47-ac3d-79c371d4d66f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:17Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-03-21T10:59:17Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-67", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("88e62d85-893c-4b47-ac3d-79c371d4d66f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("88e62d85-893c-4b47-ac3d-79c371d4d66f", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("ef659271-d13f-467d-baa4-9905d60700ae", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2016-03-21T10:59:17Z", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Ports), true);
            Assert.AreEqual("/v2/spaces/647160b7-c5ae-4684-b3fe-b256052c37e0", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/96588c97-d5a7-4604-a6d8-5a885fe43efa", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/apps/646eaf1c-96c8-48b4-abc0-0e7cc759aa85/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestCreateRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b6baf635-a61c-4daa-afe5-eab826b9b016"",
    ""url"": ""/v2/routes/9509185a-7674-400b-8852-68f4b96a3681"",
    ""created_at"": ""2016-03-21T10:59:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": """",
    ""path"": """",
    ""domain_guid"": ""b6baf635-a61c-4daa-afe5-eab826b9b016"",
    ""space_guid"": ""b6baf635-a61c-4daa-afe5-eab826b9b016"",
    ""service_instance_guid"": null,
    ""port"": 10000,
    ""domain_url"": ""/v2/domains/646efee0-4e43-4cc1-b881-e6784875ecfe"",
    ""space_url"": ""/v2/spaces/edd70a01-c804-42a2-a57d-cb592983ac4f"",
    ""apps_url"": ""/v2/routes/9509185a-7674-400b-8852-68f4b96a3681/apps""
  }
}";

            CreateRouteResponse obj = Utilities.DeserializeJson<CreateRouteResponse>(json);

            Assert.AreEqual("b6baf635-a61c-4daa-afe5-eab826b9b016", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/9509185a-7674-400b-8852-68f4b96a3681", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("b6baf635-a61c-4daa-afe5-eab826b9b016", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("b6baf635-a61c-4daa-afe5-eab826b9b016", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("10000", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/domains/646efee0-4e43-4cc1-b881-e6784875ecfe", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/edd70a01-c804-42a2-a57d-cb592983ac4f", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/9509185a-7674-400b-8852-68f4b96a3681/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""36ef2520-4417-476e-9f18-650096e4c83c"",
    ""url"": ""/v2/routes/3550803f-1267-4cdf-82ac-437be95db643"",
    ""created_at"": ""2016-03-21T10:59:17Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""host"": ""host-3"",
    ""path"": """",
    ""domain_guid"": ""36ef2520-4417-476e-9f18-650096e4c83c"",
    ""space_guid"": ""36ef2520-4417-476e-9f18-650096e4c83c"",
    ""service_instance_guid"": ""36ef2520-4417-476e-9f18-650096e4c83c"",
    ""port"": 0,
    ""domain_url"": ""/v2/domains/11cd723a-9160-447f-ba5b-30bf8f26f8a2"",
    ""space_url"": ""/v2/spaces/983703b5-62cd-4439-aafd-da16cfc52ba6"",
    ""service_instance_url"": ""/v2/service_instances/7a668a5b-d4ba-4975-ab4d-4f99f15c29c8"",
    ""apps_url"": ""/v2/routes/3550803f-1267-4cdf-82ac-437be95db643/apps""
  }
}";

            RetrieveRouteResponse obj = Utilities.DeserializeJson<RetrieveRouteResponse>(json);

            Assert.AreEqual("36ef2520-4417-476e-9f18-650096e4c83c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/3550803f-1267-4cdf-82ac-437be95db643", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:17Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-3", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("36ef2520-4417-476e-9f18-650096e4c83c", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("36ef2520-4417-476e-9f18-650096e4c83c", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("36ef2520-4417-476e-9f18-650096e4c83c", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/domains/11cd723a-9160-447f-ba5b-30bf8f26f8a2", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/983703b5-62cd-4439-aafd-da16cfc52ba6", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/service_instances/7a668a5b-d4ba-4975-ab4d-4f99f15c29c8", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/3550803f-1267-4cdf-82ac-437be95db643/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
        }

        [TestMethod]
        public void TestUpdateRouteResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d37a61ce-752d-4b53-ae79-13167b5889dd"",
    ""url"": ""/v2/routes/86c2c3eb-c7c7-46dc-a402-c246d36a70f8"",
    ""created_at"": ""2016-03-21T10:59:17Z"",
    ""updated_at"": ""2016-03-21T10:59:17Z""
  },
  ""entity"": {
    ""host"": ""host-4"",
    ""path"": """",
    ""domain_guid"": ""d37a61ce-752d-4b53-ae79-13167b5889dd"",
    ""space_guid"": ""d37a61ce-752d-4b53-ae79-13167b5889dd"",
    ""service_instance_guid"": null,
    ""port"": 10000,
    ""domain_url"": ""/v2/domains/7978674d-4c1b-4426-a723-7944b9b443fc"",
    ""space_url"": ""/v2/spaces/96d3f65d-815a-4e67-9566-8c9aaebe6778"",
    ""apps_url"": ""/v2/routes/86c2c3eb-c7c7-46dc-a402-c246d36a70f8/apps""
  }
}";

            UpdateRouteResponse obj = Utilities.DeserializeJson<UpdateRouteResponse>(json);

            Assert.AreEqual("d37a61ce-752d-4b53-ae79-13167b5889dd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/86c2c3eb-c7c7-46dc-a402-c246d36a70f8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:17Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-03-21T10:59:17Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-4", TestUtil.ToTestableString(obj.Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Path), true);
            Assert.AreEqual("d37a61ce-752d-4b53-ae79-13167b5889dd", TestUtil.ToTestableString(obj.DomainGuid), true);
            Assert.AreEqual("d37a61ce-752d-4b53-ae79-13167b5889dd", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("10000", TestUtil.ToTestableString(obj.Port), true);
            Assert.AreEqual("/v2/domains/7978674d-4c1b-4426-a723-7944b9b443fc", TestUtil.ToTestableString(obj.DomainUrl), true);
            Assert.AreEqual("/v2/spaces/96d3f65d-815a-4e67-9566-8c9aaebe6778", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/routes/86c2c3eb-c7c7-46dc-a402-c246d36a70f8/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
        }
    }
}
