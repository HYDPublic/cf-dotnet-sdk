//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBrokersTest
    {


        [TestMethod]
        public void TestUpdateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""027fe1b6-ac00-4475-8c90-50928fca3300"",
    ""created_at"": ""2015-03-23T16:53:17+00:00"",
    ""updated_at"": ""2015-03-23T16:53:17+00:00"",
    ""url"": ""/v2/service_brokers/027fe1b6-ac00-4475-8c90-50928fca3300""
  },
  ""entity"": {
    ""name"": ""name-302"",
    ""broker_url"": ""https://mybroker.example.com"",
    ""auth_username"": ""admin-user""
  }
}";

            UpdateServiceBrokerResponse obj = Utilities.DeserializeJson<UpdateServiceBrokerResponse>(json);

            Assert.AreEqual("027fe1b6-ac00-4475-8c90-50928fca3300", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-03-23T16:53:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/027fe1b6-ac00-4475-8c90-50928fca3300", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("name-302", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://mybroker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin-user", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestListAllServiceBrokersResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""93a016fd-4301-4da6-ada7-c5e5dfd86d61"",
        ""url"": ""/v2/service_brokers/93a016fd-4301-4da6-ada7-c5e5dfd86d61"",
        ""created_at"": ""2015-03-23T16:53:17+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-311"",
        ""broker_url"": ""https://foo.com/url-29"",
        ""auth_username"": ""auth_username-13""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""b5f360c5-1b2a-4fde-a8d4-baf0d0570675"",
        ""url"": ""/v2/service_brokers/b5f360c5-1b2a-4fde-a8d4-baf0d0570675"",
        ""created_at"": ""2015-03-23T16:53:17+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-312"",
        ""broker_url"": ""https://foo.com/url-30"",
        ""auth_username"": ""auth_username-14""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""affdf79a-ddd9-40de-966f-662db733fcd0"",
        ""url"": ""/v2/service_brokers/affdf79a-ddd9-40de-966f-662db733fcd0"",
        ""created_at"": ""2015-03-23T16:53:17+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-313"",
        ""broker_url"": ""https://foo.com/url-31"",
        ""auth_username"": ""auth_username-15""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBrokersResponse> page = Utilities.DeserializePage<ListAllServiceBrokersResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("93a016fd-4301-4da6-ada7-c5e5dfd86d61", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/93a016fd-4301-4da6-ada7-c5e5dfd86d61", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:17+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-311", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("https://foo.com/url-29", TestUtil.ToTestableString(page[0].BrokerUrl), true);
            Assert.AreEqual("auth_username-13", TestUtil.ToTestableString(page[0].AuthUsername), true);
            Assert.AreEqual("b5f360c5-1b2a-4fde-a8d4-baf0d0570675", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/b5f360c5-1b2a-4fde-a8d4-baf0d0570675", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:17+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-312", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("https://foo.com/url-30", TestUtil.ToTestableString(page[1].BrokerUrl), true);
            Assert.AreEqual("auth_username-14", TestUtil.ToTestableString(page[1].AuthUsername), true);
            Assert.AreEqual("affdf79a-ddd9-40de-966f-662db733fcd0", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/affdf79a-ddd9-40de-966f-662db733fcd0", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:17+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-313", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("https://foo.com/url-31", TestUtil.ToTestableString(page[2].BrokerUrl), true);
            Assert.AreEqual("auth_username-15", TestUtil.ToTestableString(page[2].AuthUsername), true);
        }

        [TestMethod]
        public void TestCreateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9c51d506-fa3c-4ee5-a6f6-6fdadd8ac75d"",
    ""created_at"": ""2015-03-23T16:53:17+00:00"",
    ""updated_at"": null,
    ""url"": ""/v2/service_brokers/9c51d506-fa3c-4ee5-a6f6-6fdadd8ac75d""
  },
  ""entity"": {
    ""name"": ""service-broker-name"",
    ""broker_url"": ""https://broker.example.com"",
    ""auth_username"": ""admin""
  }
}";

            CreateServiceBrokerResponse obj = Utilities.DeserializeJson<CreateServiceBrokerResponse>(json);

            Assert.AreEqual("9c51d506-fa3c-4ee5-a6f6-6fdadd8ac75d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-03-23T16:53:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/9c51d506-fa3c-4ee5-a6f6-6fdadd8ac75d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("service-broker-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://broker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestRetrieveServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""771c4e99-0384-4b6e-a989-99a71fee4233"",
    ""url"": ""/v2/service_brokers/771c4e99-0384-4b6e-a989-99a71fee4233"",
    ""created_at"": ""2015-03-23T16:53:17+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-299"",
    ""broker_url"": ""https://foo.com/url-17"",
    ""auth_username"": ""auth_username-1""
  }
}";

            RetrieveServiceBrokerResponse obj = Utilities.DeserializeJson<RetrieveServiceBrokerResponse>(json);

            Assert.AreEqual("771c4e99-0384-4b6e-a989-99a71fee4233", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/771c4e99-0384-4b6e-a989-99a71fee4233", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-299", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://foo.com/url-17", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("auth_username-1", TestUtil.ToTestableString(obj.AuthUsername), true);
        }
    }
}
