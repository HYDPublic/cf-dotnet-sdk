//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBrokersTest
    {


        [TestMethod]
        public void TestRetrieveServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""380acce3-cd91-412a-b08a-47ee90a78f36"",
    ""url"": ""/v2/service_brokers/d06939a0-f94d-4955-a993-15b816f447f2"",
    ""created_at"": ""2016-05-05T14:14:53Z"",
    ""updated_at"": ""2016-05-05T14:14:53Z""
  },
  ""entity"": {
    ""name"": ""name-230"",
    ""broker_url"": ""https://foo.com/url-44"",
    ""auth_username"": ""auth_username-26"",
    ""space_guid"": ""380acce3-cd91-412a-b08a-47ee90a78f36""
  }
}";

            RetrieveServiceBrokerResponse obj = Utilities.DeserializeJson<RetrieveServiceBrokerResponse>(json);

            Assert.AreEqual("380acce3-cd91-412a-b08a-47ee90a78f36", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/d06939a0-f94d-4955-a993-15b816f447f2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-230", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://foo.com/url-44", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("auth_username-26", TestUtil.ToTestableString(obj.AuthUsername), true);
            Assert.AreEqual("380acce3-cd91-412a-b08a-47ee90a78f36", TestUtil.ToTestableString(obj.SpaceGuid), true);
        }

        [TestMethod]
        public void TestCreateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6b932ff4-1b22-46e2-8969-9dcaaf4cd0fe"",
    ""created_at"": ""2016-05-05T14:14:52Z"",
    ""updated_at"": null,
    ""url"": ""/v2/service_brokers/8dce51c0-93e6-4202-8fc5-77d962aecf6e""
  },
  ""entity"": {
    ""name"": ""service-broker-name"",
    ""broker_url"": ""https://broker.example.com"",
    ""auth_username"": ""admin"",
    ""space_guid"": null
  }
}";

            CreateServiceBrokerResponse obj = Utilities.DeserializeJson<CreateServiceBrokerResponse>(json);

            Assert.AreEqual("6b932ff4-1b22-46e2-8969-9dcaaf4cd0fe", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-05-05T14:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/8dce51c0-93e6-4202-8fc5-77d962aecf6e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("service-broker-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://broker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin", TestUtil.ToTestableString(obj.AuthUsername), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceGuid), true);
        }

        [TestMethod]
        public void TestListAllServiceBrokersResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""43426174-9a38-4c20-8010-dcbeaf3dbb00"",
        ""url"": ""/v2/service_brokers/c5d725ed-3479-465a-9b02-270001a8604d"",
        ""created_at"": ""2016-05-05T14:14:52Z"",
        ""updated_at"": ""2016-05-05T14:14:52Z""
      },
      ""entity"": {
        ""name"": ""name-212"",
        ""broker_url"": ""https://foo.com/url-35"",
        ""auth_username"": ""auth_username-17"",
        ""space_guid"": ""43426174-9a38-4c20-8010-dcbeaf3dbb00""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""43426174-9a38-4c20-8010-dcbeaf3dbb00"",
        ""url"": ""/v2/service_brokers/c05f7a82-1cf3-4067-83c2-95e0e29631ec"",
        ""created_at"": ""2016-05-05T14:14:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-213"",
        ""broker_url"": ""https://foo.com/url-36"",
        ""auth_username"": ""auth_username-18"",
        ""space_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""43426174-9a38-4c20-8010-dcbeaf3dbb00"",
        ""url"": ""/v2/service_brokers/f1fdbffe-4879-4db8-b60e-45bec3d687b8"",
        ""created_at"": ""2016-05-05T14:14:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-214"",
        ""broker_url"": ""https://foo.com/url-37"",
        ""auth_username"": ""auth_username-19"",
        ""space_guid"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBrokersResponse> page = Utilities.DeserializePage<ListAllServiceBrokersResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("43426174-9a38-4c20-8010-dcbeaf3dbb00", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/c5d725ed-3479-465a-9b02-270001a8604d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:52Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:14:52Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-212", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("https://foo.com/url-35", TestUtil.ToTestableString(page[0].BrokerUrl), true);
            Assert.AreEqual("auth_username-17", TestUtil.ToTestableString(page[0].AuthUsername), true);
            Assert.AreEqual("43426174-9a38-4c20-8010-dcbeaf3dbb00", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("43426174-9a38-4c20-8010-dcbeaf3dbb00", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/c05f7a82-1cf3-4067-83c2-95e0e29631ec", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:52Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-213", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("https://foo.com/url-36", TestUtil.ToTestableString(page[1].BrokerUrl), true);
            Assert.AreEqual("auth_username-18", TestUtil.ToTestableString(page[1].AuthUsername), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("43426174-9a38-4c20-8010-dcbeaf3dbb00", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/f1fdbffe-4879-4db8-b60e-45bec3d687b8", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:52Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-214", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("https://foo.com/url-37", TestUtil.ToTestableString(page[2].BrokerUrl), true);
            Assert.AreEqual("auth_username-19", TestUtil.ToTestableString(page[2].AuthUsername), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].SpaceGuid), true);
        }

        [TestMethod]
        public void TestUpdateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c1fd7c10-0075-430c-a0fb-0cf84fe82d2f"",
    ""created_at"": ""2016-05-05T14:14:52Z"",
    ""updated_at"": ""2016-05-05T14:14:52Z"",
    ""url"": ""/v2/service_brokers/3e0fab3f-5f84-4b76-a48c-353f2e3a99f7""
  },
  ""entity"": {
    ""name"": ""name-206"",
    ""broker_url"": ""https://mybroker.example.com"",
    ""auth_username"": ""admin-user"",
    ""space_guid"": ""c1fd7c10-0075-430c-a0fb-0cf84fe82d2f""
  }
}";

            UpdateServiceBrokerResponse obj = Utilities.DeserializeJson<UpdateServiceBrokerResponse>(json);

            Assert.AreEqual("c1fd7c10-0075-430c-a0fb-0cf84fe82d2f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-05-05T14:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/3e0fab3f-5f84-4b76-a48c-353f2e3a99f7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("name-206", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://mybroker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin-user", TestUtil.ToTestableString(obj.AuthUsername), true);
            Assert.AreEqual("c1fd7c10-0075-430c-a0fb-0cf84fe82d2f", TestUtil.ToTestableString(obj.SpaceGuid), true);
        }
    }
}
