//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBrokersTest
    {


        [TestMethod]
        public void TestRetrieveServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""087d00f5-432f-4e93-a0cb-2c2b76f84f68"",
    ""url"": ""/v2/service_brokers/418fc353-e45f-4e73-a0bf-173f6f0cba83"",
    ""created_at"": ""2016-07-27T14:02:29Z"",
    ""updated_at"": ""2016-07-27T14:02:29Z""
  },
  ""entity"": {
    ""name"": ""name-81"",
    ""broker_url"": ""https://foo.com/url-20"",
    ""auth_username"": ""auth_username-20"",
    ""space_guid"": ""087d00f5-432f-4e93-a0cb-2c2b76f84f68""
  }
}";

            RetrieveServiceBrokerResponse obj = Utilities.DeserializeJson<RetrieveServiceBrokerResponse>(json);

            Assert.AreEqual("087d00f5-432f-4e93-a0cb-2c2b76f84f68", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/418fc353-e45f-4e73-a0bf-173f6f0cba83", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-27T14:02:29Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-81", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://foo.com/url-20", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("auth_username-20", TestUtil.ToTestableString(obj.AuthUsername), true);
            Assert.AreEqual("087d00f5-432f-4e93-a0cb-2c2b76f84f68", TestUtil.ToTestableString(obj.SpaceGuid), true);
        }

        [TestMethod]
        public void TestCreateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9add8eda-0e7e-4a1c-a604-d6dccf4c6d20"",
    ""created_at"": ""2016-07-27T14:02:30Z"",
    ""updated_at"": null,
    ""url"": ""/v2/service_brokers/8c157c75-0879-4fb1-b580-cde23ed536dc""
  },
  ""entity"": {
    ""name"": ""service-broker-name"",
    ""broker_url"": ""https://broker.example.com"",
    ""auth_username"": ""admin"",
    ""space_guid"": null
  }
}";

            CreateServiceBrokerResponse obj = Utilities.DeserializeJson<CreateServiceBrokerResponse>(json);

            Assert.AreEqual("9add8eda-0e7e-4a1c-a604-d6dccf4c6d20", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-07-27T14:02:30Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/8c157c75-0879-4fb1-b580-cde23ed536dc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("service-broker-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://broker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin", TestUtil.ToTestableString(obj.AuthUsername), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceGuid), true);
        }

        [TestMethod]
        public void TestListAllServiceBrokersResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""91c2f216-e637-4c57-b145-2837061c7385"",
        ""url"": ""/v2/service_brokers/b69dc2d1-60ee-45a1-b568-8188acb909a8"",
        ""created_at"": ""2016-07-27T14:02:30Z"",
        ""updated_at"": ""2016-07-27T14:02:30Z""
      },
      ""entity"": {
        ""name"": ""name-93"",
        ""broker_url"": ""https://foo.com/url-26"",
        ""auth_username"": ""auth_username-26"",
        ""space_guid"": ""91c2f216-e637-4c57-b145-2837061c7385""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""91c2f216-e637-4c57-b145-2837061c7385"",
        ""url"": ""/v2/service_brokers/fcdb5cc6-867f-4316-be58-a597caccbc22"",
        ""created_at"": ""2016-07-27T14:02:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-94"",
        ""broker_url"": ""https://foo.com/url-27"",
        ""auth_username"": ""auth_username-27"",
        ""space_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""91c2f216-e637-4c57-b145-2837061c7385"",
        ""url"": ""/v2/service_brokers/b09068b7-01fc-41ec-b158-c2e4b676f1ed"",
        ""created_at"": ""2016-07-27T14:02:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-95"",
        ""broker_url"": ""https://foo.com/url-28"",
        ""auth_username"": ""auth_username-28"",
        ""space_guid"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBrokersResponse> page = Utilities.DeserializePage<ListAllServiceBrokersResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("91c2f216-e637-4c57-b145-2837061c7385", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/b69dc2d1-60ee-45a1-b568-8188acb909a8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-27T14:02:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-93", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("https://foo.com/url-26", TestUtil.ToTestableString(page[0].BrokerUrl), true);
            Assert.AreEqual("auth_username-26", TestUtil.ToTestableString(page[0].AuthUsername), true);
            Assert.AreEqual("91c2f216-e637-4c57-b145-2837061c7385", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("91c2f216-e637-4c57-b145-2837061c7385", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/fcdb5cc6-867f-4316-be58-a597caccbc22", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:30Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-94", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("https://foo.com/url-27", TestUtil.ToTestableString(page[1].BrokerUrl), true);
            Assert.AreEqual("auth_username-27", TestUtil.ToTestableString(page[1].AuthUsername), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("91c2f216-e637-4c57-b145-2837061c7385", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/b09068b7-01fc-41ec-b158-c2e4b676f1ed", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:30Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-95", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("https://foo.com/url-28", TestUtil.ToTestableString(page[2].BrokerUrl), true);
            Assert.AreEqual("auth_username-28", TestUtil.ToTestableString(page[2].AuthUsername), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].SpaceGuid), true);
        }

        [TestMethod]
        public void TestUpdateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3797870a-3c68-4beb-a0c3-376bacab7707"",
    ""created_at"": ""2016-07-27T14:02:29Z"",
    ""updated_at"": ""2016-07-27T14:02:29Z"",
    ""url"": ""/v2/service_brokers/5450ab5e-4b06-4352-a781-181b5488abed""
  },
  ""entity"": {
    ""name"": ""name-75"",
    ""broker_url"": ""https://mybroker.example.com"",
    ""auth_username"": ""admin-user"",
    ""space_guid"": ""3797870a-3c68-4beb-a0c3-376bacab7707""
  }
}";

            UpdateServiceBrokerResponse obj = Utilities.DeserializeJson<UpdateServiceBrokerResponse>(json);

            Assert.AreEqual("3797870a-3c68-4beb-a0c3-376bacab7707", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-07-27T14:02:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-27T14:02:29Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/5450ab5e-4b06-4352-a781-181b5488abed", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("name-75", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://mybroker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin-user", TestUtil.ToTestableString(obj.AuthUsername), true);
            Assert.AreEqual("3797870a-3c68-4beb-a0c3-376bacab7707", TestUtil.ToTestableString(obj.SpaceGuid), true);
        }
    }
}
