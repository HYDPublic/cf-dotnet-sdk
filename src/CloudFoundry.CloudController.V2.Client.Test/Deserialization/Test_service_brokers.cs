//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBrokersTest
    {


        [TestMethod]
        public void TestUpdateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7553ea4c-d05f-445c-bcc3-77748f5568a4"",
    ""created_at"": ""2015-05-19T15:27:09+00:00"",
    ""updated_at"": ""2015-05-19T15:27:09+00:00"",
    ""url"": ""/v2/service_brokers/7553ea4c-d05f-445c-bcc3-77748f5568a4""
  },
  ""entity"": {
    ""name"": ""name-485"",
    ""broker_url"": ""https://mybroker.example.com"",
    ""auth_username"": ""admin-user""
  }
}";

            UpdateServiceBrokerResponse obj = Utilities.DeserializeJson<UpdateServiceBrokerResponse>(json);

            Assert.AreEqual("7553ea4c-d05f-445c-bcc3-77748f5568a4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/7553ea4c-d05f-445c-bcc3-77748f5568a4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("name-485", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://mybroker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin-user", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestListAllServiceBrokersResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""822634b6-50f6-4224-9f05-9fdb638434cf"",
        ""url"": ""/v2/service_brokers/822634b6-50f6-4224-9f05-9fdb638434cf"",
        ""created_at"": ""2015-05-19T15:27:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-473"",
        ""broker_url"": ""https://foo.com/url-18"",
        ""auth_username"": ""auth_username-1""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""4ecc2520-9532-4241-97d6-4310825337ad"",
        ""url"": ""/v2/service_brokers/4ecc2520-9532-4241-97d6-4310825337ad"",
        ""created_at"": ""2015-05-19T15:27:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-474"",
        ""broker_url"": ""https://foo.com/url-19"",
        ""auth_username"": ""auth_username-2""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8e5ed8ae-c62c-47e0-ac92-ed8e439ec743"",
        ""url"": ""/v2/service_brokers/8e5ed8ae-c62c-47e0-ac92-ed8e439ec743"",
        ""created_at"": ""2015-05-19T15:27:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-475"",
        ""broker_url"": ""https://foo.com/url-20"",
        ""auth_username"": ""auth_username-3""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBrokersResponse> page = Utilities.DeserializePage<ListAllServiceBrokersResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("822634b6-50f6-4224-9f05-9fdb638434cf", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/822634b6-50f6-4224-9f05-9fdb638434cf", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-473", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("https://foo.com/url-18", TestUtil.ToTestableString(page[0].BrokerUrl), true);
            Assert.AreEqual("auth_username-1", TestUtil.ToTestableString(page[0].AuthUsername), true);
            Assert.AreEqual("4ecc2520-9532-4241-97d6-4310825337ad", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/4ecc2520-9532-4241-97d6-4310825337ad", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-474", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("https://foo.com/url-19", TestUtil.ToTestableString(page[1].BrokerUrl), true);
            Assert.AreEqual("auth_username-2", TestUtil.ToTestableString(page[1].AuthUsername), true);
            Assert.AreEqual("8e5ed8ae-c62c-47e0-ac92-ed8e439ec743", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/8e5ed8ae-c62c-47e0-ac92-ed8e439ec743", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-475", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("https://foo.com/url-20", TestUtil.ToTestableString(page[2].BrokerUrl), true);
            Assert.AreEqual("auth_username-3", TestUtil.ToTestableString(page[2].AuthUsername), true);
        }

        [TestMethod]
        public void TestCreateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4bf2606f-a847-446a-8ef6-20452ff3117b"",
    ""created_at"": ""2015-05-19T15:27:09+00:00"",
    ""updated_at"": null,
    ""url"": ""/v2/service_brokers/4bf2606f-a847-446a-8ef6-20452ff3117b""
  },
  ""entity"": {
    ""name"": ""service-broker-name"",
    ""broker_url"": ""https://broker.example.com"",
    ""auth_username"": ""admin""
  }
}";

            CreateServiceBrokerResponse obj = Utilities.DeserializeJson<CreateServiceBrokerResponse>(json);

            Assert.AreEqual("4bf2606f-a847-446a-8ef6-20452ff3117b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/4bf2606f-a847-446a-8ef6-20452ff3117b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("service-broker-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://broker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestRetrieveServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f9aba2e2-9455-4ebf-bc5b-deb35672c193"",
    ""url"": ""/v2/service_brokers/f9aba2e2-9455-4ebf-bc5b-deb35672c193"",
    ""created_at"": ""2015-05-19T15:27:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-476"",
    ""broker_url"": ""https://foo.com/url-21"",
    ""auth_username"": ""auth_username-4""
  }
}";

            RetrieveServiceBrokerResponse obj = Utilities.DeserializeJson<RetrieveServiceBrokerResponse>(json);

            Assert.AreEqual("f9aba2e2-9455-4ebf-bc5b-deb35672c193", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/f9aba2e2-9455-4ebf-bc5b-deb35672c193", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-476", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://foo.com/url-21", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("auth_username-4", TestUtil.ToTestableString(obj.AuthUsername), true);
        }
    }
}
