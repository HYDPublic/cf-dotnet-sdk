//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBrokersTest
    {


        [TestMethod]
        public void TestUpdateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8a30466a-5259-44ad-b5ef-55101113ca9e"",
    ""created_at"": ""2015-04-10T20:04:29+00:00"",
    ""updated_at"": ""2015-04-10T20:04:29+00:00"",
    ""url"": ""/v2/service_brokers/8a30466a-5259-44ad-b5ef-55101113ca9e""
  },
  ""entity"": {
    ""name"": ""name-495"",
    ""broker_url"": ""https://mybroker.example.com"",
    ""auth_username"": ""admin-user""
  }
}";

            UpdateServiceBrokerResponse obj = Utilities.DeserializeJson<UpdateServiceBrokerResponse>(json);

            Assert.AreEqual("8a30466a-5259-44ad-b5ef-55101113ca9e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-04-10T20:04:29+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T20:04:29+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/8a30466a-5259-44ad-b5ef-55101113ca9e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("name-495", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://mybroker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin-user", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestListAllServiceBrokersResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""172ac39e-b0c1-4bd9-904d-801328889885"",
        ""url"": ""/v2/service_brokers/172ac39e-b0c1-4bd9-904d-801328889885"",
        ""created_at"": ""2015-04-10T20:04:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-489"",
        ""broker_url"": ""https://foo.com/url-46"",
        ""auth_username"": ""auth_username-8""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""931d504b-7644-4052-8755-0770ff195594"",
        ""url"": ""/v2/service_brokers/931d504b-7644-4052-8755-0770ff195594"",
        ""created_at"": ""2015-04-10T20:04:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-490"",
        ""broker_url"": ""https://foo.com/url-47"",
        ""auth_username"": ""auth_username-9""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""104ef09c-cd15-416f-ba82-9068413be32a"",
        ""url"": ""/v2/service_brokers/104ef09c-cd15-416f-ba82-9068413be32a"",
        ""created_at"": ""2015-04-10T20:04:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-491"",
        ""broker_url"": ""https://foo.com/url-48"",
        ""auth_username"": ""auth_username-10""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBrokersResponse> page = Utilities.DeserializePage<ListAllServiceBrokersResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("172ac39e-b0c1-4bd9-904d-801328889885", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/172ac39e-b0c1-4bd9-904d-801328889885", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-489", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("https://foo.com/url-46", TestUtil.ToTestableString(page[0].BrokerUrl), true);
            Assert.AreEqual("auth_username-8", TestUtil.ToTestableString(page[0].AuthUsername), true);
            Assert.AreEqual("931d504b-7644-4052-8755-0770ff195594", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/931d504b-7644-4052-8755-0770ff195594", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:29+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-490", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("https://foo.com/url-47", TestUtil.ToTestableString(page[1].BrokerUrl), true);
            Assert.AreEqual("auth_username-9", TestUtil.ToTestableString(page[1].AuthUsername), true);
            Assert.AreEqual("104ef09c-cd15-416f-ba82-9068413be32a", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/104ef09c-cd15-416f-ba82-9068413be32a", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:29+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-491", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("https://foo.com/url-48", TestUtil.ToTestableString(page[2].BrokerUrl), true);
            Assert.AreEqual("auth_username-10", TestUtil.ToTestableString(page[2].AuthUsername), true);
        }

        [TestMethod]
        public void TestCreateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fb272f07-a2e6-4cf1-8c60-f02422af18d4"",
    ""created_at"": ""2015-04-10T20:04:29+00:00"",
    ""updated_at"": null,
    ""url"": ""/v2/service_brokers/fb272f07-a2e6-4cf1-8c60-f02422af18d4""
  },
  ""entity"": {
    ""name"": ""service-broker-name"",
    ""broker_url"": ""https://broker.example.com"",
    ""auth_username"": ""admin""
  }
}";

            CreateServiceBrokerResponse obj = Utilities.DeserializeJson<CreateServiceBrokerResponse>(json);

            Assert.AreEqual("fb272f07-a2e6-4cf1-8c60-f02422af18d4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-04-10T20:04:29+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/fb272f07-a2e6-4cf1-8c60-f02422af18d4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("service-broker-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://broker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestRetrieveServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3efc5e51-4f01-41d1-894b-a6df1a3f1efb"",
    ""url"": ""/v2/service_brokers/3efc5e51-4f01-41d1-894b-a6df1a3f1efb"",
    ""created_at"": ""2015-04-10T20:04:29+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-492"",
    ""broker_url"": ""https://foo.com/url-49"",
    ""auth_username"": ""auth_username-11""
  }
}";

            RetrieveServiceBrokerResponse obj = Utilities.DeserializeJson<RetrieveServiceBrokerResponse>(json);

            Assert.AreEqual("3efc5e51-4f01-41d1-894b-a6df1a3f1efb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/3efc5e51-4f01-41d1-894b-a6df1a3f1efb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:29+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-492", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://foo.com/url-49", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("auth_username-11", TestUtil.ToTestableString(obj.AuthUsername), true);
        }
    }
}
