//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBrokersTest
    {


        [TestMethod]
        public void TestUpdateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""92f6eeea-c284-4fed-a4ee-e1df21c92bae"",
    ""created_at"": ""2015-04-10T19:41:58+00:00"",
    ""updated_at"": ""2015-04-10T19:41:58+00:00"",
    ""url"": ""/v2/service_brokers/92f6eeea-c284-4fed-a4ee-e1df21c92bae""
  },
  ""entity"": {
    ""name"": ""name-1174"",
    ""broker_url"": ""https://mybroker.example.com"",
    ""auth_username"": ""admin-user""
  }
}";

            UpdateServiceBrokerResponse obj = Utilities.DeserializeJson<UpdateServiceBrokerResponse>(json);

            Assert.AreEqual("92f6eeea-c284-4fed-a4ee-e1df21c92bae", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-04-10T19:41:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:41:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/92f6eeea-c284-4fed-a4ee-e1df21c92bae", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("name-1174", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://mybroker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin-user", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestListAllServiceBrokersResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""254f6fe5-8791-4a4e-a818-744547b1ae78"",
        ""url"": ""/v2/service_brokers/254f6fe5-8791-4a4e-a818-744547b1ae78"",
        ""created_at"": ""2015-04-10T19:41:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1171"",
        ""broker_url"": ""https://foo.com/url-58"",
        ""auth_username"": ""auth_username-22""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2cd0014e-740a-4691-8a30-5e0dcf03653e"",
        ""url"": ""/v2/service_brokers/2cd0014e-740a-4691-8a30-5e0dcf03653e"",
        ""created_at"": ""2015-04-10T19:41:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1172"",
        ""broker_url"": ""https://foo.com/url-59"",
        ""auth_username"": ""auth_username-23""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""69af3436-e87c-4080-bcb3-31d7d5afbdd1"",
        ""url"": ""/v2/service_brokers/69af3436-e87c-4080-bcb3-31d7d5afbdd1"",
        ""created_at"": ""2015-04-10T19:41:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1173"",
        ""broker_url"": ""https://foo.com/url-60"",
        ""auth_username"": ""auth_username-24""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBrokersResponse> page = Utilities.DeserializePage<ListAllServiceBrokersResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("254f6fe5-8791-4a4e-a818-744547b1ae78", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/254f6fe5-8791-4a4e-a818-744547b1ae78", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:58+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1171", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("https://foo.com/url-58", TestUtil.ToTestableString(page[0].BrokerUrl), true);
            Assert.AreEqual("auth_username-22", TestUtil.ToTestableString(page[0].AuthUsername), true);
            Assert.AreEqual("2cd0014e-740a-4691-8a30-5e0dcf03653e", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/2cd0014e-740a-4691-8a30-5e0dcf03653e", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:58+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1172", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("https://foo.com/url-59", TestUtil.ToTestableString(page[1].BrokerUrl), true);
            Assert.AreEqual("auth_username-23", TestUtil.ToTestableString(page[1].AuthUsername), true);
            Assert.AreEqual("69af3436-e87c-4080-bcb3-31d7d5afbdd1", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/69af3436-e87c-4080-bcb3-31d7d5afbdd1", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:58+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1173", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("https://foo.com/url-60", TestUtil.ToTestableString(page[2].BrokerUrl), true);
            Assert.AreEqual("auth_username-24", TestUtil.ToTestableString(page[2].AuthUsername), true);
        }

        [TestMethod]
        public void TestCreateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bd1f1959-1942-4898-838f-218ce7345ef9"",
    ""created_at"": ""2015-04-10T19:41:58+00:00"",
    ""updated_at"": null,
    ""url"": ""/v2/service_brokers/bd1f1959-1942-4898-838f-218ce7345ef9""
  },
  ""entity"": {
    ""name"": ""service-broker-name"",
    ""broker_url"": ""https://broker.example.com"",
    ""auth_username"": ""admin""
  }
}";

            CreateServiceBrokerResponse obj = Utilities.DeserializeJson<CreateServiceBrokerResponse>(json);

            Assert.AreEqual("bd1f1959-1942-4898-838f-218ce7345ef9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-04-10T19:41:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/bd1f1959-1942-4898-838f-218ce7345ef9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("service-broker-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://broker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestRetrieveServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""404e0912-1e77-438b-b314-fe86eb5ed142"",
    ""url"": ""/v2/service_brokers/404e0912-1e77-438b-b314-fe86eb5ed142"",
    ""created_at"": ""2015-04-10T19:41:58+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1183"",
    ""broker_url"": ""https://foo.com/url-70"",
    ""auth_username"": ""auth_username-34""
  }
}";

            RetrieveServiceBrokerResponse obj = Utilities.DeserializeJson<RetrieveServiceBrokerResponse>(json);

            Assert.AreEqual("404e0912-1e77-438b-b314-fe86eb5ed142", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/404e0912-1e77-438b-b314-fe86eb5ed142", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1183", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://foo.com/url-70", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("auth_username-34", TestUtil.ToTestableString(obj.AuthUsername), true);
        }
    }
}
