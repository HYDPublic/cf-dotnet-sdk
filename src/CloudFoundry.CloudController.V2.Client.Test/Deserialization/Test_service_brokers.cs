//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBrokersTest
    {


        [TestMethod]
        public void TestUpdateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""469e6811-21c9-4360-b85f-81f5deaa89cd"",
    ""created_at"": ""2015-07-28T12:59:12Z"",
    ""updated_at"": ""2015-07-28T12:59:12Z"",
    ""url"": ""/v2/service_brokers/469e6811-21c9-4360-b85f-81f5deaa89cd""
  },
  ""entity"": {
    ""name"": ""name-1970"",
    ""broker_url"": ""https://mybroker.example.com"",
    ""auth_username"": ""admin-user""
  }
}";

            UpdateServiceBrokerResponse obj = Utilities.DeserializeJson<UpdateServiceBrokerResponse>(json);

            Assert.AreEqual("469e6811-21c9-4360-b85f-81f5deaa89cd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-07-28T12:59:12Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-28T12:59:12Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/469e6811-21c9-4360-b85f-81f5deaa89cd", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("name-1970", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://mybroker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin-user", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestListAllServiceBrokersResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e2560ef4-acac-45bc-a624-3ee40b3f98b1"",
        ""url"": ""/v2/service_brokers/e2560ef4-acac-45bc-a624-3ee40b3f98b1"",
        ""created_at"": ""2015-07-28T12:59:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1964"",
        ""broker_url"": ""https://foo.com/url-85"",
        ""auth_username"": ""auth_username-46""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""96ae53f0-b9ca-40c2-b346-979150ad3958"",
        ""url"": ""/v2/service_brokers/96ae53f0-b9ca-40c2-b346-979150ad3958"",
        ""created_at"": ""2015-07-28T12:59:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1965"",
        ""broker_url"": ""https://foo.com/url-86"",
        ""auth_username"": ""auth_username-47""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""7f361d13-3830-4b0a-8054-ff2b5ca1d1f3"",
        ""url"": ""/v2/service_brokers/7f361d13-3830-4b0a-8054-ff2b5ca1d1f3"",
        ""created_at"": ""2015-07-28T12:59:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1966"",
        ""broker_url"": ""https://foo.com/url-87"",
        ""auth_username"": ""auth_username-48""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBrokersResponse> page = Utilities.DeserializePage<ListAllServiceBrokersResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e2560ef4-acac-45bc-a624-3ee40b3f98b1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/e2560ef4-acac-45bc-a624-3ee40b3f98b1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:12Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1964", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("https://foo.com/url-85", TestUtil.ToTestableString(page[0].BrokerUrl), true);
            Assert.AreEqual("auth_username-46", TestUtil.ToTestableString(page[0].AuthUsername), true);
            Assert.AreEqual("96ae53f0-b9ca-40c2-b346-979150ad3958", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/96ae53f0-b9ca-40c2-b346-979150ad3958", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:12Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1965", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("https://foo.com/url-86", TestUtil.ToTestableString(page[1].BrokerUrl), true);
            Assert.AreEqual("auth_username-47", TestUtil.ToTestableString(page[1].AuthUsername), true);
            Assert.AreEqual("7f361d13-3830-4b0a-8054-ff2b5ca1d1f3", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/7f361d13-3830-4b0a-8054-ff2b5ca1d1f3", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:12Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1966", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("https://foo.com/url-87", TestUtil.ToTestableString(page[2].BrokerUrl), true);
            Assert.AreEqual("auth_username-48", TestUtil.ToTestableString(page[2].AuthUsername), true);
        }

        [TestMethod]
        public void TestCreateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e2539126-9e54-425b-8cb8-3baf1566180e"",
    ""created_at"": ""2015-07-28T12:59:12Z"",
    ""updated_at"": null,
    ""url"": ""/v2/service_brokers/e2539126-9e54-425b-8cb8-3baf1566180e""
  },
  ""entity"": {
    ""name"": ""service-broker-name"",
    ""broker_url"": ""https://broker.example.com"",
    ""auth_username"": ""admin""
  }
}";

            CreateServiceBrokerResponse obj = Utilities.DeserializeJson<CreateServiceBrokerResponse>(json);

            Assert.AreEqual("e2539126-9e54-425b-8cb8-3baf1566180e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-07-28T12:59:12Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/e2539126-9e54-425b-8cb8-3baf1566180e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("service-broker-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://broker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestRetrieveServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e7f0e786-c49b-435c-a18b-c6ca84d8dd82"",
    ""url"": ""/v2/service_brokers/e7f0e786-c49b-435c-a18b-c6ca84d8dd82"",
    ""created_at"": ""2015-07-28T12:59:12Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1958"",
    ""broker_url"": ""https://foo.com/url-79"",
    ""auth_username"": ""auth_username-40""
  }
}";

            RetrieveServiceBrokerResponse obj = Utilities.DeserializeJson<RetrieveServiceBrokerResponse>(json);

            Assert.AreEqual("e7f0e786-c49b-435c-a18b-c6ca84d8dd82", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/e7f0e786-c49b-435c-a18b-c6ca84d8dd82", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-28T12:59:12Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1958", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://foo.com/url-79", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("auth_username-40", TestUtil.ToTestableString(obj.AuthUsername), true);
        }
    }
}
