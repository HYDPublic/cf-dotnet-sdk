//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListServiceBindingDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e663acc9-527a-45c9-9652-af829a8dca39"",
        ""url"": ""/v2/events/e663acc9-527a-45c9-9652-af829a8dca39"",
        ""created_at"": ""2015-03-23T16:53:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-317"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""4b696e86-3c8e-4fc1-8b9f-04f362b82528"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-23T16:53:31+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""307be488-7e30-4e2a-bba8-1870d1942052"",
        ""organization_guid"": ""f59511d4-4308-45b8-9f3d-ee9d90547148""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e663acc9-527a-45c9-9652-af829a8dca39", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e663acc9-527a-45c9-9652-af829a8dca39", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-317", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4b696e86-3c8e-4fc1-8b9f-04f362b82528", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("307be488-7e30-4e2a-bba8-1870d1942052", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f59511d4-4308-45b8-9f3d-ee9d90547148", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0420aed4-9003-49ca-8158-9d067981bf63"",
        ""url"": ""/v2/events/0420aed4-9003-49ca-8158-9d067981bf63"",
        ""created_at"": ""2015-03-23T16:53:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-340"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""cee97937-1764-4fb2-b733-84ea711e3cbe"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1730"",
        ""timestamp"": ""2015-03-23T16:53:33+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0420aed4-9003-49ca-8158-9d067981bf63", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0420aed4-9003-49ca-8158-9d067981bf63", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-340", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("cee97937-1764-4fb2-b733-84ea711e3cbe", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1730", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""de00e81f-4407-4897-b614-1509f213faab"",
        ""url"": ""/v2/events/de00e81f-4407-4897-b614-1509f213faab"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-299"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""bff7d504-b10b-4cc8-8e7e-357ac02997e3"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1150"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""bff7d504-b10b-4cc8-8e7e-357ac02997e3"",
        ""organization_guid"": ""f08c51c5-d3d7-42d3-9d0d-39d8918c3c68""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("de00e81f-4407-4897-b614-1509f213faab", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/de00e81f-4407-4897-b614-1509f213faab", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-299", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bff7d504-b10b-4cc8-8e7e-357ac02997e3", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1150", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("bff7d504-b10b-4cc8-8e7e-357ac02997e3", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f08c51c5-d3d7-42d3-9d0d-39d8918c3c68", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b425a598-64d8-46f6-a657-c81b3caebc79"",
        ""url"": ""/v2/events/b425a598-64d8-46f6-a657-c81b3caebc79"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""98657729-626e-488a-bf87-fda004e392a9"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-987"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""e601563d-1a12-44c0-a664-7ec511826e6e"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b425a598-64d8-46f6-a657-c81b3caebc79", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b425a598-64d8-46f6-a657-c81b3caebc79", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("98657729-626e-488a-bf87-fda004e392a9", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-987", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e9ad7c06-71b0-4185-b1ea-d1b7809add9c"",
        ""url"": ""/v2/events/e9ad7c06-71b0-4185-b1ea-d1b7809add9c"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-303"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3e725992-f4c4-4cf9-97c8-3293fc5f02ab"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1204"",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1204"",
            ""space_guid"": ""2eaa42e5-3738-4e01-93f8-aacd60120139""
          }
        },
        ""space_guid"": ""2eaa42e5-3738-4e01-93f8-aacd60120139"",
        ""organization_guid"": ""4da6f3c6-f7a4-4bce-ba52-623043a75ce1""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e9ad7c06-71b0-4185-b1ea-d1b7809add9c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e9ad7c06-71b0-4185-b1ea-d1b7809add9c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-303", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3e725992-f4c4-4cf9-97c8-3293fc5f02ab", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1204", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("2eaa42e5-3738-4e01-93f8-aacd60120139", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("4da6f3c6-f7a4-4bce-ba52-623043a75ce1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f639b360-4e48-4faa-bed3-bf116eb5a1d0"",
        ""url"": ""/v2/events/f639b360-4e48-4faa-bed3-bf116eb5a1d0"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""107271a9-dd5d-44f4-8c10-dd3bd6496073"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1070"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""107271a9-dd5d-44f4-8c10-dd3bd6496073"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f639b360-4e48-4faa-bed3-bf116eb5a1d0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f639b360-4e48-4faa-bed3-bf116eb5a1d0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("107271a9-dd5d-44f4-8c10-dd3bd6496073", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1070", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5de06c75-6417-4e7b-9765-b81676bde6a8"",
        ""url"": ""/v2/events/5de06c75-6417-4e7b-9765-b81676bde6a8"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-285"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""942931b7-2cdd-4d2a-8f77-0791c00164a0"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5de06c75-6417-4e7b-9765-b81676bde6a8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5de06c75-6417-4e7b-9765-b81676bde6a8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-285", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("942931b7-2cdd-4d2a-8f77-0791c00164a0", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e52852cc-e7f4-40f3-9b10-bfa24cbdb4d2"",
    ""url"": ""/v2/events/e52852cc-e7f4-40f3-9b10-bfa24cbdb4d2"",
    ""created_at"": ""2015-03-23T16:53:33+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-1755"",
    ""actor"": ""guid-791d4383-bc8c-41e6-a224-598a2b00e23e"",
    ""actor_type"": ""name-1756"",
    ""actor_name"": ""name-1757"",
    ""actee"": ""guid-072a19de-9968-4511-b6be-4f579e9cb1eb"",
    ""actee_type"": ""name-1758"",
    ""actee_name"": ""name-1759"",
    ""timestamp"": ""2015-03-23T16:53:33+00:00"",
    ""metadata"": {

    },
    ""space_guid"": ""b3ba446a-7974-4de1-97e8-c8043eb36833"",
    ""organization_guid"": ""6c5f9307-b603-4e15-a03c-d22dc318708a""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("e52852cc-e7f4-40f3-9b10-bfa24cbdb4d2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e52852cc-e7f4-40f3-9b10-bfa24cbdb4d2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1755", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("guid-791d4383-bc8c-41e6-a224-598a2b00e23e", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-1756", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-1757", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("guid-072a19de-9968-4511-b6be-4f579e9cb1eb", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-1758", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-1759", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("b3ba446a-7974-4de1-97e8-c8043eb36833", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("6c5f9307-b603-4e15-a03c-d22dc318708a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ef11c21d-5e28-4655-af24-2d16d013140e"",
        ""url"": ""/v2/events/ef11c21d-5e28-4655-af24-2d16d013140e"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-307"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""46e8546f-9eb8-4081-bf49-112cb9335397"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1261"",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""90e950d5-ef0b-403a-85d8-32a4b4399696""
          }
        },
        ""space_guid"": ""5ea33979-f45c-4697-8d81-52082ab0d3de"",
        ""organization_guid"": ""49511d03-eaa0-4178-9272-4a64730eabb8""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ef11c21d-5e28-4655-af24-2d16d013140e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ef11c21d-5e28-4655-af24-2d16d013140e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-307", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("46e8546f-9eb8-4081-bf49-112cb9335397", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1261", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("5ea33979-f45c-4697-8d81-52082ab0d3de", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("49511d03-eaa0-4178-9272-4a64730eabb8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""33bd030d-5c29-47ac-a321-7b4fc87c759d"",
        ""url"": ""/v2/events/33bd030d-5c29-47ac-a321-7b4fc87c759d"",
        ""created_at"": ""2015-03-23T16:53:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""45521cee-3075-4f9b-ad1c-43729b8e2e16"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1589"",
        ""actee"": ""45521cee-3075-4f9b-ad1c-43729b8e2e16"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1589"",
        ""timestamp"": ""2015-03-23T16:53:32+00:00"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""ad704148-53bb-4faf-a0d0-65277ad51ea7"",
        ""organization_guid"": ""3bc90827-ca2f-4da1-b1fb-51f91a2b6275""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("33bd030d-5c29-47ac-a321-7b4fc87c759d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/33bd030d-5c29-47ac-a321-7b4fc87c759d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("45521cee-3075-4f9b-ad1c-43729b8e2e16", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1589", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("45521cee-3075-4f9b-ad1c-43729b8e2e16", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1589", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ad704148-53bb-4faf-a0d0-65277ad51ea7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("3bc90827-ca2f-4da1-b1fb-51f91a2b6275", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b55a886b-0a0b-4ce7-b36e-7f80b742159a"",
        ""url"": ""/v2/events/b55a886b-0a0b-4ce7-b36e-7f80b742159a"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-305"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0b9f0ac7-04b9-4372-a8d5-c2bc5f838277"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1232"",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""b0da07b3-5316-48d1-b9ea-2fe205837def"",
        ""organization_guid"": ""bb10a28e-a007-4722-835e-ec258c648b63""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""61798948-5ab1-47be-a463-19108ef225d7"",
        ""url"": ""/v2/events/61798948-5ab1-47be-a463-19108ef225d7"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-305"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0b9f0ac7-04b9-4372-a8d5-c2bc5f838277"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1232"",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""b0da07b3-5316-48d1-b9ea-2fe205837def"",
        ""organization_guid"": ""bb10a28e-a007-4722-835e-ec258c648b63""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""157f8da9-bb14-440d-b42b-47a1713b9ae2"",
        ""url"": ""/v2/events/157f8da9-bb14-440d-b42b-47a1713b9ae2"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-305"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0b9f0ac7-04b9-4372-a8d5-c2bc5f838277"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1232"",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""b0da07b3-5316-48d1-b9ea-2fe205837def"",
        ""organization_guid"": ""bb10a28e-a007-4722-835e-ec258c648b63""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b55a886b-0a0b-4ce7-b36e-7f80b742159a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b55a886b-0a0b-4ce7-b36e-7f80b742159a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-305", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0b9f0ac7-04b9-4372-a8d5-c2bc5f838277", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1232", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b0da07b3-5316-48d1-b9ea-2fe205837def", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("bb10a28e-a007-4722-835e-ec258c648b63", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("61798948-5ab1-47be-a463-19108ef225d7", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/61798948-5ab1-47be-a463-19108ef225d7", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-305", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("0b9f0ac7-04b9-4372-a8d5-c2bc5f838277", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1232", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("b0da07b3-5316-48d1-b9ea-2fe205837def", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("bb10a28e-a007-4722-835e-ec258c648b63", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("157f8da9-bb14-440d-b42b-47a1713b9ae2", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/157f8da9-bb14-440d-b42b-47a1713b9ae2", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-305", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("0b9f0ac7-04b9-4372-a8d5-c2bc5f838277", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1232", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("b0da07b3-5316-48d1-b9ea-2fe205837def", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("bb10a28e-a007-4722-835e-ec258c648b63", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0c33805d-2ef7-4d1f-8dc7-56fcffb4d253"",
        ""url"": ""/v2/events/0c33805d-2ef7-4d1f-8dc7-56fcffb4d253"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-313"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""2531839b-2559-40d2-8117-60c721dc26f8"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""bedbd97d-071a-43fc-806d-70293be872d8"",
            ""organization_guid"": ""82f7607d-5401-460c-9365-5eebb1df69ef""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""82f7607d-5401-460c-9365-5eebb1df69ef""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0c33805d-2ef7-4d1f-8dc7-56fcffb4d253", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0c33805d-2ef7-4d1f-8dc7-56fcffb4d253", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-313", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("2531839b-2559-40d2-8117-60c721dc26f8", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("82f7607d-5401-460c-9365-5eebb1df69ef", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a9690f10-d302-405b-ab12-5c1a97d44b88"",
        ""url"": ""/v2/events/a9690f10-d302-405b-ab12-5c1a97d44b88"",
        ""created_at"": ""2015-03-23T16:53:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""de62a901-86cd-4e2f-acb6-8f262a02aca3"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1618"",
        ""actee"": ""da155ceb-50a3-4a2a-944d-35009568a000"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1619"",
        ""timestamp"": ""2015-03-23T16:53:32+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a9690f10-d302-405b-ab12-5c1a97d44b88", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a9690f10-d302-405b-ab12-5c1a97d44b88", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("de62a901-86cd-4e2f-acb6-8f262a02aca3", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1618", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("da155ceb-50a3-4a2a-944d-35009568a000", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1619", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6d26456a-dc72-4961-8f31-455b8fad4b09"",
        ""url"": ""/v2/events/6d26456a-dc72-4961-8f31-455b8fad4b09"",
        ""created_at"": ""2015-03-23T16:53:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1731"",
        ""actor"": ""guid-2888938b-9825-4c6d-96bf-72bcac34ac7e"",
        ""actor_type"": ""name-1732"",
        ""actor_name"": ""name-1733"",
        ""actee"": ""guid-24377b76-49b2-4c64-a9a6-198b485a2fc1"",
        ""actee_type"": ""name-1734"",
        ""actee_name"": ""name-1735"",
        ""timestamp"": ""2015-03-23T16:53:33+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""29894c7d-8868-4ad0-b678-d949350b5719"",
        ""organization_guid"": ""9d360c3a-1102-4962-bbfd-6c5846b08e68""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""35c20829-bc6a-49d9-8222-bcf6bd252b20"",
        ""url"": ""/v2/events/35c20829-bc6a-49d9-8222-bcf6bd252b20"",
        ""created_at"": ""2015-03-23T16:53:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1739"",
        ""actor"": ""guid-1e3719c0-b872-4d57-87f5-a4a20b9ea503"",
        ""actor_type"": ""name-1740"",
        ""actor_name"": ""name-1741"",
        ""actee"": ""guid-f5746e1f-76fc-4684-aeb0-04fddffe6f25"",
        ""actee_type"": ""name-1742"",
        ""actee_name"": ""name-1743"",
        ""timestamp"": ""2015-03-23T16:53:33+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""6a740ecd-504c-49f7-8705-e7a8f8dd66ca"",
        ""organization_guid"": ""989b5b33-6640-4919-8993-4abc5b6797b5""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""42c787c7-4a31-4157-8000-73200401072b"",
        ""url"": ""/v2/events/42c787c7-4a31-4157-8000-73200401072b"",
        ""created_at"": ""2015-03-23T16:53:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1747"",
        ""actor"": ""guid-2df65bfa-1b99-4e6e-9354-3423c7b4f0ee"",
        ""actor_type"": ""name-1748"",
        ""actor_name"": ""name-1749"",
        ""actee"": ""guid-6160aeab-0245-4095-8b14-6b4b5e8c2944"",
        ""actee_type"": ""name-1750"",
        ""actee_name"": ""name-1751"",
        ""timestamp"": ""2015-03-23T16:53:33+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""b0884fe4-f695-4a55-8fc0-55f9f0e18ed4"",
        ""organization_guid"": ""c0e11ae7-ba52-4191-89a0-78aa09a24faa""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6d26456a-dc72-4961-8f31-455b8fad4b09", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6d26456a-dc72-4961-8f31-455b8fad4b09", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1731", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("guid-2888938b-9825-4c6d-96bf-72bcac34ac7e", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-1732", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1733", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid-24377b76-49b2-4c64-a9a6-198b485a2fc1", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-1734", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1735", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("29894c7d-8868-4ad0-b678-d949350b5719", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9d360c3a-1102-4962-bbfd-6c5846b08e68", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("35c20829-bc6a-49d9-8222-bcf6bd252b20", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/35c20829-bc6a-49d9-8222-bcf6bd252b20", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1739", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("guid-1e3719c0-b872-4d57-87f5-a4a20b9ea503", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-1740", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-1741", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("guid-f5746e1f-76fc-4684-aeb0-04fddffe6f25", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-1742", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1743", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("6a740ecd-504c-49f7-8705-e7a8f8dd66ca", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("989b5b33-6640-4919-8993-4abc5b6797b5", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("42c787c7-4a31-4157-8000-73200401072b", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/42c787c7-4a31-4157-8000-73200401072b", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1747", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("guid-2df65bfa-1b99-4e6e-9354-3423c7b4f0ee", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-1748", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-1749", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("guid-6160aeab-0245-4095-8b14-6b4b5e8c2944", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-1750", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1751", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:33+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("b0884fe4-f695-4a55-8fc0-55f9f0e18ed4", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("c0e11ae7-ba52-4191-89a0-78aa09a24faa", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1fdcfc32-6819-4b6e-aac5-2dee17a1278b"",
        ""url"": ""/v2/events/1fdcfc32-6819-4b6e-aac5-2dee17a1278b"",
        ""created_at"": ""2015-03-23T16:53:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""c5cb0b43-9f88-4a8e-80c6-0475f3600771"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1428"",
        ""actee"": ""9ba77fab-2205-4cef-a4af-38e14de70432"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-03-23T16:53:31+00:00"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1fdcfc32-6819-4b6e-aac5-2dee17a1278b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1fdcfc32-6819-4b6e-aac5-2dee17a1278b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("c5cb0b43-9f88-4a8e-80c6-0475f3600771", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1428", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9ba77fab-2205-4cef-a4af-38e14de70432", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a5a3e166-45d7-49c2-80ce-d8d01e257342"",
        ""url"": ""/v2/events/a5a3e166-45d7-49c2-80ce-d8d01e257342"",
        ""created_at"": ""2015-03-23T16:53:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-338"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3c9d154a-0b1c-4ce7-ae9c-fec15dbb79f7"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1701"",
        ""timestamp"": ""2015-03-23T16:53:32+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""c40de6d1-3c68-48bb-b6b1-0546a2589e96"",
        ""organization_guid"": ""c586147c-b17e-4856-a47d-73861b3c675f""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a5a3e166-45d7-49c2-80ce-d8d01e257342", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a5a3e166-45d7-49c2-80ce-d8d01e257342", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-338", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3c9d154a-0b1c-4ce7-ae9c-fec15dbb79f7", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1701", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("c40de6d1-3c68-48bb-b6b1-0546a2589e96", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c586147c-b17e-4856-a47d-73861b3c675f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""531f9ff4-54cd-4d55-9c84-1ea871ab5bf2"",
        ""url"": ""/v2/events/531f9ff4-54cd-4d55-9c84-1ea871ab5bf2"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-291"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e05a849f-f2fc-4e71-844b-16c3e6940a18"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1041"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""1811448a-91d8-4b0e-8062-1beed585930d"",
        ""organization_guid"": ""eba85202-1f09-4285-9433-50eed816c5ee""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("531f9ff4-54cd-4d55-9c84-1ea871ab5bf2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/531f9ff4-54cd-4d55-9c84-1ea871ab5bf2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-291", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e05a849f-f2fc-4e71-844b-16c3e6940a18", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1041", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("1811448a-91d8-4b0e-8062-1beed585930d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("eba85202-1f09-4285-9433-50eed816c5ee", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3d3bb398-2cb7-439d-9b16-47a589f1a1ad"",
        ""url"": ""/v2/events/3d3bb398-2cb7-439d-9b16-47a589f1a1ad"",
        ""created_at"": ""2015-03-23T16:53:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""907139e2-33f8-4bd4-91c9-634ec9a7b0ef"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1564"",
        ""actee"": ""e0f4d8fc-5ce8-48b4-8d68-cdfbf5010e9d"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-03-23T16:53:32+00:00"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3d3bb398-2cb7-439d-9b16-47a589f1a1ad", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3d3bb398-2cb7-439d-9b16-47a589f1a1ad", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("907139e2-33f8-4bd4-91c9-634ec9a7b0ef", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1564", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e0f4d8fc-5ce8-48b4-8d68-cdfbf5010e9d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fde9486c-e214-42b3-afd0-fb2556e928d0"",
        ""url"": ""/v2/events/fde9486c-e214-42b3-afd0-fb2556e928d0"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-297"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""b4ab66ee-5e0a-4102-95bd-175b58b9336e"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1123"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""b4ab66ee-5e0a-4102-95bd-175b58b9336e"",
        ""organization_guid"": ""8fe5c8bf-b894-44f8-ab04-1ba4401e41c2""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fde9486c-e214-42b3-afd0-fb2556e928d0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fde9486c-e214-42b3-afd0-fb2556e928d0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-297", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b4ab66ee-5e0a-4102-95bd-175b58b9336e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1123", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b4ab66ee-5e0a-4102-95bd-175b58b9336e", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8fe5c8bf-b894-44f8-ab04-1ba4401e41c2", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b50b67c4-2572-4b7d-b60b-612314bcb024"",
        ""url"": ""/v2/events/b50b67c4-2572-4b7d-b60b-612314bcb024"",
        ""created_at"": ""2015-03-23T16:53:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-334"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""750c1962-433b-4d67-85c7-011eac5444c5"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1644"",
        ""timestamp"": ""2015-03-23T16:53:32+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1644"",
            ""service_plan_guid"": ""46d8c401-1301-4463-a71c-48f0ff3d2691"",
            ""space_guid"": ""e2ab1f58-8da5-4831-901e-7d719b531f45""
          }
        },
        ""space_guid"": ""e2ab1f58-8da5-4831-901e-7d719b531f45"",
        ""organization_guid"": ""b5762fe7-7ef7-4672-8bb7-fbef608d53f0""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b50b67c4-2572-4b7d-b60b-612314bcb024", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b50b67c4-2572-4b7d-b60b-612314bcb024", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-334", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("750c1962-433b-4d67-85c7-011eac5444c5", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1644", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("e2ab1f58-8da5-4831-901e-7d719b531f45", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("b5762fe7-7ef7-4672-8bb7-fbef608d53f0", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3343b0fc-4801-4929-9a12-1fc67b28597c"",
        ""url"": ""/v2/events/3343b0fc-4801-4929-9a12-1fc67b28597c"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-283"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""ef20efec-73bc-4005-8eb4-ecf43d135ee2"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-934"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""9ce35450-6766-4690-b8ed-9cb26e97e559"",
        ""organization_guid"": ""6d3c5f86-4e03-442f-a39d-75aefba1f3d6""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3343b0fc-4801-4929-9a12-1fc67b28597c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3343b0fc-4801-4929-9a12-1fc67b28597c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-283", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ef20efec-73bc-4005-8eb4-ecf43d135ee2", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-934", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9ce35450-6766-4690-b8ed-9cb26e97e559", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6d3c5f86-4e03-442f-a39d-75aefba1f3d6", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7f38cf9b-5aed-42a8-a362-87f8622ef777"",
        ""url"": ""/v2/events/7f38cf9b-5aed-42a8-a362-87f8622ef777"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""07d4ccd3-2f6f-4406-b26a-b4f09c04d48e"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1316"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7f38cf9b-5aed-42a8-a362-87f8622ef777", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/7f38cf9b-5aed-42a8-a362-87f8622ef777", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("07d4ccd3-2f6f-4406-b26a-b4f09c04d48e", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1316", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0a7b60f6-0db3-4926-8c39-96fc7d6729bd"",
        ""url"": ""/v2/events/0a7b60f6-0db3-4926-8c39-96fc7d6729bd"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-309"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""586f301b-9f21-4a16-8075-ed5d51cc8a40"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1290"",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0a7b60f6-0db3-4926-8c39-96fc7d6729bd", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0a7b60f6-0db3-4926-8c39-96fc7d6729bd", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-309", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("586f301b-9f21-4a16-8075-ed5d51cc8a40", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1290", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""698ed8f8-fa9f-4e45-9ba2-5f92c8e34b50"",
        ""url"": ""/v2/events/698ed8f8-fa9f-4e45-9ba2-5f92c8e34b50"",
        ""created_at"": ""2015-03-23T16:53:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""688bf20d-f735-4844-9e21-402ab3b95875"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1508"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-03-23T16:53:31+00:00"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("698ed8f8-fa9f-4e45-9ba2-5f92c8e34b50", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/698ed8f8-fa9f-4e45-9ba2-5f92c8e34b50", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("688bf20d-f735-4844-9e21-402ab3b95875", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1508", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2ddb6533-c733-4350-b5fc-79bbdf70e270"",
        ""url"": ""/v2/events/2ddb6533-c733-4350-b5fc-79bbdf70e270"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-289"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""afdfa67c-efb2-4e17-a61f-5673bde71014"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1012"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""db76e42b-4024-4876-a560-5381e8baa4af"",
        ""organization_guid"": ""7f260807-b540-47da-be83-15642e4ce42a""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2ddb6533-c733-4350-b5fc-79bbdf70e270", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2ddb6533-c733-4350-b5fc-79bbdf70e270", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-289", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("afdfa67c-efb2-4e17-a61f-5673bde71014", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1012", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("db76e42b-4024-4876-a560-5381e8baa4af", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("7f260807-b540-47da-be83-15642e4ce42a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""01ff2f90-1e77-4b6e-8e7f-b26bdaa04c1a"",
        ""url"": ""/v2/events/01ff2f90-1e77-4b6e-8e7f-b26bdaa04c1a"",
        ""created_at"": ""2015-03-23T16:53:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-327"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""86a947b3-65e9-4d80-ad2e-d3874956978f"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-23T16:53:32+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""7c1a75a0-a66f-485b-a1e7-0ed8777fa3a1"",
            ""app_guid"": ""660174f0-4c9c-476d-9445-c0fc217047cd""
          }
        },
        ""space_guid"": ""5c1da464-9779-4ff6-b95e-00fa6033b722"",
        ""organization_guid"": ""cd01ffb3-6d6d-427e-b603-7e78841e92e8""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("01ff2f90-1e77-4b6e-8e7f-b26bdaa04c1a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/01ff2f90-1e77-4b6e-8e7f-b26bdaa04c1a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-327", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("86a947b3-65e9-4d80-ad2e-d3874956978f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("5c1da464-9779-4ff6-b95e-00fa6033b722", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("cd01ffb3-6d6d-427e-b603-7e78841e92e8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5f352c08-6d95-449a-9b2e-730deee0c962"",
        ""url"": ""/v2/events/5f352c08-6d95-449a-9b2e-730deee0c962"",
        ""created_at"": ""2015-03-23T16:53:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-315"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""cc950ba6-5750-4941-a1fe-2d7d78bc4bdb"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1369"",
        ""timestamp"": ""2015-03-23T16:53:31+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""b2b20cd5-82f2-47e8-b62a-88aec57baa43"",
        ""organization_guid"": ""779164b4-febd-4248-8198-377e47359510""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5f352c08-6d95-449a-9b2e-730deee0c962", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5f352c08-6d95-449a-9b2e-730deee0c962", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-315", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("cc950ba6-5750-4941-a1fe-2d7d78bc4bdb", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1369", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b2b20cd5-82f2-47e8-b62a-88aec57baa43", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("779164b4-febd-4248-8198-377e47359510", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""03a6de16-ab1d-40a0-b5c2-dc4ee86a8922"",
        ""url"": ""/v2/events/03a6de16-ab1d-40a0-b5c2-dc4ee86a8922"",
        ""created_at"": ""2015-03-23T16:53:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-323"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""7838c333-eb2e-4e51-b66f-1b574a91e961"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-23T16:53:31+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""e958ebfe-adcb-4d7d-b2ad-3fdd78a64b19""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("03a6de16-ab1d-40a0-b5c2-dc4ee86a8922", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/03a6de16-ab1d-40a0-b5c2-dc4ee86a8922", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-323", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7838c333-eb2e-4e51-b66f-1b574a91e961", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("e958ebfe-adcb-4d7d-b2ad-3fdd78a64b19", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1c5235df-bc3e-445f-b5fe-d09ba832c243"",
        ""url"": ""/v2/events/1c5235df-bc3e-445f-b5fe-d09ba832c243"",
        ""created_at"": ""2015-03-23T16:53:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-295"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""1a1d437a-340b-41fb-bccb-4fb6793413e4"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1095"",
        ""timestamp"": ""2015-03-23T16:53:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""73cacf3a-5b07-41b6-9dea-7cd2fa8c1f81"",
        ""organization_guid"": ""6d68358a-5fd6-4386-b890-623fca3678d4""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1c5235df-bc3e-445f-b5fe-d09ba832c243", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1c5235df-bc3e-445f-b5fe-d09ba832c243", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-295", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("1a1d437a-340b-41fb-bccb-4fb6793413e4", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1095", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("73cacf3a-5b07-41b6-9dea-7cd2fa8c1f81", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6d68358a-5fd6-4386-b890-623fca3678d4", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""53846b26-dd9d-4ac3-8b46-b651255af6b3"",
        ""url"": ""/v2/events/53846b26-dd9d-4ac3-8b46-b651255af6b3"",
        ""created_at"": ""2015-03-23T16:53:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-301"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""972ded92-42a4-4c7b-bc81-6d13482d41ea"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1177"",
        ""timestamp"": ""2015-03-23T16:53:30+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""972ded92-42a4-4c7b-bc81-6d13482d41ea"",
        ""organization_guid"": ""d137f454-a0b9-4205-b4cc-9e8bbf332307""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("53846b26-dd9d-4ac3-8b46-b651255af6b3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/53846b26-dd9d-4ac3-8b46-b651255af6b3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-301", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("972ded92-42a4-4c7b-bc81-6d13482d41ea", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1177", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("972ded92-42a4-4c7b-bc81-6d13482d41ea", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d137f454-a0b9-4205-b4cc-9e8bbf332307", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5365a409-2469-4d3e-b6b4-a71660868212"",
        ""url"": ""/v2/events/5365a409-2469-4d3e-b6b4-a71660868212"",
        ""created_at"": ""2015-03-23T16:53:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-336"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""4d9b9af3-bdbe-4e52-b018-b1ca07bc06d5"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-23T16:53:32+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""fce24747-ec22-462f-811c-b844ddd08e11"",
            ""organization_guid"": ""20d564d5-10b6-4db6-b8f0-96639c9bbefa""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""20d564d5-10b6-4db6-b8f0-96639c9bbefa""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5365a409-2469-4d3e-b6b4-a71660868212", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5365a409-2469-4d3e-b6b4-a71660868212", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-336", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4d9b9af3-bdbe-4e52-b018-b1ca07bc06d5", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("20d564d5-10b6-4db6-b8f0-96639c9bbefa", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7f23b20a-031f-44c2-b775-c049e6d6d2bc"",
        ""url"": ""/v2/events/7f23b20a-031f-44c2-b775-c049e6d6d2bc"",
        ""created_at"": ""2015-03-23T16:53:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""6f9c44df-46c5-486b-8be1-3f0fed3f2b1d"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1454"",
        ""actee"": ""69a5d651-031e-4b10-8a80-4b7c1a2ed77e"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-60"",
        ""timestamp"": ""2015-03-23T16:53:31+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7f23b20a-031f-44c2-b775-c049e6d6d2bc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/7f23b20a-031f-44c2-b775-c049e6d6d2bc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("6f9c44df-46c5-486b-8be1-3f0fed3f2b1d", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1454", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("69a5d651-031e-4b10-8a80-4b7c1a2ed77e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-60", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-23T16:53:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}
