//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListServiceBindingDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c86da300-9099-4e28-90ef-35543c746c55"",
        ""url"": ""/v2/events/c86da300-9099-4e28-90ef-35543c746c55"",
        ""created_at"": ""2015-04-16T12:04:26+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-223"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""1073ad81-95a0-4ba2-9c3d-76d28049701c"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-16T12:04:26+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""85ba7eb7-d39d-4748-a86f-8af8f859c696"",
        ""organization_guid"": ""342b5f16-b96c-418f-bd48-6e5377b9d15f""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c86da300-9099-4e28-90ef-35543c746c55", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c86da300-9099-4e28-90ef-35543c746c55", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-223", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("1073ad81-95a0-4ba2-9c3d-76d28049701c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("85ba7eb7-d39d-4748-a86f-8af8f859c696", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("342b5f16-b96c-418f-bd48-6e5377b9d15f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2f095b6d-c266-43f9-8b71-bc0582670a22"",
        ""url"": ""/v2/events/2f095b6d-c266-43f9-8b71-bc0582670a22"",
        ""created_at"": ""2015-04-16T12:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-233"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""11c550fd-44f0-47d4-bf70-59b6c4fb3390"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-933"",
        ""timestamp"": ""2015-04-16T12:04:27+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2f095b6d-c266-43f9-8b71-bc0582670a22", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2f095b6d-c266-43f9-8b71-bc0582670a22", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-233", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("11c550fd-44f0-47d4-bf70-59b6c4fb3390", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-933", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""82f70b52-9f93-41df-a9f9-a39333a48ee1"",
        ""url"": ""/v2/events/82f70b52-9f93-41df-a9f9-a39333a48ee1"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-212"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d6d2b642-d9d8-4d5b-9077-f17c93c5e71a"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-632"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""d6d2b642-d9d8-4d5b-9077-f17c93c5e71a"",
        ""organization_guid"": ""2978bd66-317b-4c0e-b0b9-16326aa8dca1""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("82f70b52-9f93-41df-a9f9-a39333a48ee1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/82f70b52-9f93-41df-a9f9-a39333a48ee1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-212", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d6d2b642-d9d8-4d5b-9077-f17c93c5e71a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-632", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("d6d2b642-d9d8-4d5b-9077-f17c93c5e71a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("2978bd66-317b-4c0e-b0b9-16326aa8dca1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f6262c47-1f79-4b31-85a9-86c6df49045e"",
        ""url"": ""/v2/events/f6262c47-1f79-4b31-85a9-86c6df49045e"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""0882a52a-9dc8-4ca3-9062-0dbc1a890b03"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1238"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""2e013a91-7f0b-44c7-896d-fa2083544ba6"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f6262c47-1f79-4b31-85a9-86c6df49045e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f6262c47-1f79-4b31-85a9-86c6df49045e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("0882a52a-9dc8-4ca3-9062-0dbc1a890b03", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1238", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""44b1de3d-221a-42c1-ab09-8af527c335df"",
        ""url"": ""/v2/events/44b1de3d-221a-42c1-ab09-8af527c335df"",
        ""created_at"": ""2015-04-16T12:04:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-261"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""146a82de-4694-428d-b1cf-0347b752476f"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1316"",
        ""timestamp"": ""2015-04-16T12:04:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1316"",
            ""space_guid"": ""b5467a8e-866c-43fa-b30f-e93f499a4584""
          }
        },
        ""space_guid"": ""b5467a8e-866c-43fa-b30f-e93f499a4584"",
        ""organization_guid"": ""b167c7df-b235-4c8a-af2e-98e1f05c58d0""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("44b1de3d-221a-42c1-ab09-8af527c335df", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/44b1de3d-221a-42c1-ab09-8af527c335df", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-261", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("146a82de-4694-428d-b1cf-0347b752476f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1316", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b5467a8e-866c-43fa-b30f-e93f499a4584", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("b167c7df-b235-4c8a-af2e-98e1f05c58d0", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""97a8c10d-94f2-46a2-81c8-c2e74becc07e"",
        ""url"": ""/v2/events/97a8c10d-94f2-46a2-81c8-c2e74becc07e"",
        ""created_at"": ""2015-04-16T12:04:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""eb3e072f-9f43-47d8-8ed1-eff480d71492"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1263"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-04-16T12:04:29+00:00"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""eb3e072f-9f43-47d8-8ed1-eff480d71492"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("97a8c10d-94f2-46a2-81c8-c2e74becc07e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/97a8c10d-94f2-46a2-81c8-c2e74becc07e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("eb3e072f-9f43-47d8-8ed1-eff480d71492", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1263", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ab63c06e-1699-4e93-80bf-190f07342386"",
        ""url"": ""/v2/events/ab63c06e-1699-4e93-80bf-190f07342386"",
        ""created_at"": ""2015-04-16T12:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-229"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""1855a577-6b94-4e40-a391-f157847344eb"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-04-16T12:04:27+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ab63c06e-1699-4e93-80bf-190f07342386", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ab63c06e-1699-4e93-80bf-190f07342386", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-229", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("1855a577-6b94-4e40-a391-f157847344eb", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fe85cc9b-2d20-4f5a-a442-2c8d61f28c30"",
    ""url"": ""/v2/events/fe85cc9b-2d20-4f5a-a442-2c8d61f28c30"",
    ""created_at"": ""2015-04-16T12:04:29+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-1348"",
    ""actor"": ""guid-9e27fb8e-a082-442c-b548-7ab36dd6bb57"",
    ""actor_type"": ""name-1349"",
    ""actor_name"": ""name-1350"",
    ""actee"": ""guid-ef0e5379-7c53-455d-927a-727492b0bea0"",
    ""actee_type"": ""name-1351"",
    ""actee_name"": ""name-1352"",
    ""timestamp"": ""2015-04-16T12:04:29+00:00"",
    ""metadata"": {

    },
    ""space_guid"": ""2eaecc29-bf96-4264-8d16-648540303120"",
    ""organization_guid"": ""6adf0653-c957-483a-8536-fc396d129bc6""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("fe85cc9b-2d20-4f5a-a442-2c8d61f28c30", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fe85cc9b-2d20-4f5a-a442-2c8d61f28c30", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1348", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("guid-9e27fb8e-a082-442c-b548-7ab36dd6bb57", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-1349", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-1350", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("guid-ef0e5379-7c53-455d-927a-727492b0bea0", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-1351", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-1352", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("2eaecc29-bf96-4264-8d16-648540303120", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("6adf0653-c957-483a-8536-fc396d129bc6", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8cd14de3-ef48-4138-a833-008d2e3189e4"",
        ""url"": ""/v2/events/8cd14de3-ef48-4138-a833-008d2e3189e4"",
        ""created_at"": ""2015-04-16T12:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-231"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""33653813-1dd9-4953-b654-619d3a69ac73"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-904"",
        ""timestamp"": ""2015-04-16T12:04:27+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""a0bde8b3-5f0f-42c2-b615-09b3f05dcac3""
          }
        },
        ""space_guid"": ""92d727ca-a2a9-4be1-be17-560310bbabff"",
        ""organization_guid"": ""f0455ac7-0fde-4952-86d1-bebd9e7a9792""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8cd14de3-ef48-4138-a833-008d2e3189e4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8cd14de3-ef48-4138-a833-008d2e3189e4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-231", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("33653813-1dd9-4953-b654-619d3a69ac73", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-904", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("92d727ca-a2a9-4be1-be17-560310bbabff", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f0455ac7-0fde-4952-86d1-bebd9e7a9792", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7ba0edca-4087-483f-b23d-9d2f871370c4"",
        ""url"": ""/v2/events/7ba0edca-4087-483f-b23d-9d2f871370c4"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""b38047c8-f186-4cea-af4c-a2273f611cc2"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-685"",
        ""actee"": ""b38047c8-f186-4cea-af4c-a2273f611cc2"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-685"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""45ff9613-75ca-447b-b248-d352f141a918"",
        ""organization_guid"": ""b2f138a9-e119-4635-9f8f-f630969fe60b""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7ba0edca-4087-483f-b23d-9d2f871370c4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/7ba0edca-4087-483f-b23d-9d2f871370c4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("b38047c8-f186-4cea-af4c-a2273f611cc2", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-685", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b38047c8-f186-4cea-af4c-a2273f611cc2", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-685", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("45ff9613-75ca-447b-b248-d352f141a918", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("b2f138a9-e119-4635-9f8f-f630969fe60b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7f1422d7-34ae-4ba7-b2d3-c854e5eff540"",
        ""url"": ""/v2/events/7f1422d7-34ae-4ba7-b2d3-c854e5eff540"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-247"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9f922ea4-bcf1-422e-9375-88e02d0ba243"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1120"",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""cf69d3b2-c041-4ac5-b119-216290c0769f"",
        ""organization_guid"": ""bb2e6d56-9557-43bd-8f94-c878f6124be0""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2e53451a-a73e-4c13-8d7f-48e5d16f9912"",
        ""url"": ""/v2/events/2e53451a-a73e-4c13-8d7f-48e5d16f9912"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-247"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9f922ea4-bcf1-422e-9375-88e02d0ba243"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1120"",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""cf69d3b2-c041-4ac5-b119-216290c0769f"",
        ""organization_guid"": ""bb2e6d56-9557-43bd-8f94-c878f6124be0""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""1afb58b5-a29f-486f-88d1-e54d714c3cd8"",
        ""url"": ""/v2/events/1afb58b5-a29f-486f-88d1-e54d714c3cd8"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-247"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9f922ea4-bcf1-422e-9375-88e02d0ba243"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1120"",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""cf69d3b2-c041-4ac5-b119-216290c0769f"",
        ""organization_guid"": ""bb2e6d56-9557-43bd-8f94-c878f6124be0""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7f1422d7-34ae-4ba7-b2d3-c854e5eff540", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/7f1422d7-34ae-4ba7-b2d3-c854e5eff540", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-247", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9f922ea4-bcf1-422e-9375-88e02d0ba243", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1120", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("cf69d3b2-c041-4ac5-b119-216290c0769f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("bb2e6d56-9557-43bd-8f94-c878f6124be0", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("2e53451a-a73e-4c13-8d7f-48e5d16f9912", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2e53451a-a73e-4c13-8d7f-48e5d16f9912", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-247", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("9f922ea4-bcf1-422e-9375-88e02d0ba243", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1120", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("cf69d3b2-c041-4ac5-b119-216290c0769f", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("bb2e6d56-9557-43bd-8f94-c878f6124be0", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("1afb58b5-a29f-486f-88d1-e54d714c3cd8", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1afb58b5-a29f-486f-88d1-e54d714c3cd8", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-247", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("9f922ea4-bcf1-422e-9375-88e02d0ba243", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1120", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("cf69d3b2-c041-4ac5-b119-216290c0769f", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("bb2e6d56-9557-43bd-8f94-c878f6124be0", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3613731a-3d2c-495a-bd9b-150b37302b31"",
        ""url"": ""/v2/events/3613731a-3d2c-495a-bd9b-150b37302b31"",
        ""created_at"": ""2015-04-16T12:04:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-259"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""07f3ecbb-0f5a-466f-bb35-06e281715442"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-16T12:04:29+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""b35aee86-4737-4290-adbd-26accddd5b2f"",
            ""organization_guid"": ""262946de-7d6c-4bd7-8ba4-73743d9fb254""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""262946de-7d6c-4bd7-8ba4-73743d9fb254""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3613731a-3d2c-495a-bd9b-150b37302b31", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3613731a-3d2c-495a-bd9b-150b37302b31", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-259", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("07f3ecbb-0f5a-466f-bb35-06e281715442", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("262946de-7d6c-4bd7-8ba4-73743d9fb254", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a489afe1-0cb6-4ecc-85fc-74f6cd761f10"",
        ""url"": ""/v2/events/a489afe1-0cb6-4ecc-85fc-74f6cd761f10"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""d7d2be14-ed44-42d2-9c27-75afd8db29d7"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-659"",
        ""actee"": ""0ac6254a-c528-4d61-8d52-1897bd004590"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-660"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a489afe1-0cb6-4ecc-85fc-74f6cd761f10", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a489afe1-0cb6-4ecc-85fc-74f6cd761f10", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("d7d2be14-ed44-42d2-9c27-75afd8db29d7", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-659", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0ac6254a-c528-4d61-8d52-1897bd004590", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-660", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dd417213-23ac-4a6e-a4fe-112b5f8a02bb"",
        ""url"": ""/v2/events/dd417213-23ac-4a6e-a4fe-112b5f8a02bb"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-503"",
        ""actor"": ""guid-3183bc66-e2e8-479d-ba47-1bf7b2f51904"",
        ""actor_type"": ""name-504"",
        ""actor_name"": ""name-505"",
        ""actee"": ""guid-a17e27e6-f5b8-4f6c-a4b9-d6ba35dc7da6"",
        ""actee_type"": ""name-506"",
        ""actee_name"": ""name-507"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""22360193-d809-434d-b103-c47e421a8e96"",
        ""organization_guid"": ""6dcd0d2f-e9b7-4472-9d56-9ff32b6e3c22""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""0e4172a1-0474-4b0b-b531-fea7e1aef5df"",
        ""url"": ""/v2/events/0e4172a1-0474-4b0b-b531-fea7e1aef5df"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-511"",
        ""actor"": ""guid-5bb7cec7-9136-474e-ab5f-303210fcfcd2"",
        ""actor_type"": ""name-512"",
        ""actor_name"": ""name-513"",
        ""actee"": ""guid-3e30914f-f262-4b46-9e69-6c0d4336f9e7"",
        ""actee_type"": ""name-514"",
        ""actee_name"": ""name-515"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""5e59fbf8-0346-4b05-a5fc-943424b2ff38"",
        ""organization_guid"": ""2b4b2b90-1f17-4f0f-9e24-0522c7adca20""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8aee16fa-3cda-421e-9442-3aee946155b1"",
        ""url"": ""/v2/events/8aee16fa-3cda-421e-9442-3aee946155b1"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-519"",
        ""actor"": ""guid-36e6b88e-e263-4fe8-a8d7-691c0fa64ed0"",
        ""actor_type"": ""name-520"",
        ""actor_name"": ""name-521"",
        ""actee"": ""guid-94b6339a-4a56-4356-bd38-b64ff1a96911"",
        ""actee_type"": ""name-522"",
        ""actee_name"": ""name-523"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""959deaa5-4287-4b16-a3e8-1bd77b575274"",
        ""organization_guid"": ""da78d449-0e05-4061-8d11-f2e9e28deeeb""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dd417213-23ac-4a6e-a4fe-112b5f8a02bb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/dd417213-23ac-4a6e-a4fe-112b5f8a02bb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-503", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("guid-3183bc66-e2e8-479d-ba47-1bf7b2f51904", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-504", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-505", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid-a17e27e6-f5b8-4f6c-a4b9-d6ba35dc7da6", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-506", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-507", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("22360193-d809-434d-b103-c47e421a8e96", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6dcd0d2f-e9b7-4472-9d56-9ff32b6e3c22", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("0e4172a1-0474-4b0b-b531-fea7e1aef5df", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0e4172a1-0474-4b0b-b531-fea7e1aef5df", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-511", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("guid-5bb7cec7-9136-474e-ab5f-303210fcfcd2", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-512", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-513", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("guid-3e30914f-f262-4b46-9e69-6c0d4336f9e7", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-514", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-515", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("5e59fbf8-0346-4b05-a5fc-943424b2ff38", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("2b4b2b90-1f17-4f0f-9e24-0522c7adca20", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("8aee16fa-3cda-421e-9442-3aee946155b1", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8aee16fa-3cda-421e-9442-3aee946155b1", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-519", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("guid-36e6b88e-e263-4fe8-a8d7-691c0fa64ed0", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-520", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-521", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("guid-94b6339a-4a56-4356-bd38-b64ff1a96911", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-522", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-523", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("959deaa5-4287-4b16-a3e8-1bd77b575274", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("da78d449-0e05-4061-8d11-f2e9e28deeeb", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c0fa717c-ebd5-4157-9d1c-19575353b3e8"",
        ""url"": ""/v2/events/c0fa717c-ebd5-4157-9d1c-19575353b3e8"",
        ""created_at"": ""2015-04-16T12:04:26+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""282ca93c-c121-4554-8818-982d34d4e113"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-854"",
        ""actee"": ""bb29cae8-1b34-44c9-8ce7-1c311ef21fb4"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-04-16T12:04:26+00:00"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c0fa717c-ebd5-4157-9d1c-19575353b3e8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c0fa717c-ebd5-4157-9d1c-19575353b3e8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("282ca93c-c121-4554-8818-982d34d4e113", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-854", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bb29cae8-1b34-44c9-8ce7-1c311ef21fb4", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5c123d54-3354-4275-81dd-47707ca11966"",
        ""url"": ""/v2/events/5c123d54-3354-4275-81dd-47707ca11966"",
        ""created_at"": ""2015-04-16T12:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-235"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""f58acd18-33d3-40aa-9bba-cf274dab52e7"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-958"",
        ""timestamp"": ""2015-04-16T12:04:27+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""f2eab81e-5585-4a15-a1f9-3f8049859a41"",
        ""organization_guid"": ""21b4dc41-2ff7-41e7-8536-f180624ad7fe""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5c123d54-3354-4275-81dd-47707ca11966", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5c123d54-3354-4275-81dd-47707ca11966", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-235", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f58acd18-33d3-40aa-9bba-cf274dab52e7", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-958", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("f2eab81e-5585-4a15-a1f9-3f8049859a41", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("21b4dc41-2ff7-41e7-8536-f180624ad7fe", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6ebf4381-6580-4cfa-a90a-749d410452cc"",
        ""url"": ""/v2/events/6ebf4381-6580-4cfa-a90a-749d410452cc"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-249"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e5076f47-fe45-403c-9e17-93d9ddf7339a"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1149"",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""558ecd30-11df-4eef-a26c-70550d7e45fd"",
        ""organization_guid"": ""67c28b63-157b-46b4-bc89-8937bd79fa59""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6ebf4381-6580-4cfa-a90a-749d410452cc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6ebf4381-6580-4cfa-a90a-749d410452cc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-249", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e5076f47-fe45-403c-9e17-93d9ddf7339a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1149", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("558ecd30-11df-4eef-a26c-70550d7e45fd", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("67c28b63-157b-46b4-bc89-8937bd79fa59", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bf90c2cf-1025-41d8-83b6-da1bc7edf07a"",
        ""url"": ""/v2/events/bf90c2cf-1025-41d8-83b6-da1bc7edf07a"",
        ""created_at"": ""2015-04-16T12:04:26+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""a9dfb96e-416f-4368-a9d8-dfccc2f69915"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-714"",
        ""actee"": ""165329c9-c654-49d8-97e2-a38d855ab424"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-04-16T12:04:26+00:00"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bf90c2cf-1025-41d8-83b6-da1bc7edf07a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/bf90c2cf-1025-41d8-83b6-da1bc7edf07a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("a9dfb96e-416f-4368-a9d8-dfccc2f69915", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-714", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("165329c9-c654-49d8-97e2-a38d855ab424", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f6321072-8d3a-4190-b0fc-ae995437e0d5"",
        ""url"": ""/v2/events/f6321072-8d3a-4190-b0fc-ae995437e0d5"",
        ""created_at"": ""2015-04-16T12:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-237"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""1f756774-159e-4edb-9e89-517b8a86e704"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-987"",
        ""timestamp"": ""2015-04-16T12:04:27+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""1f756774-159e-4edb-9e89-517b8a86e704"",
        ""organization_guid"": ""9fb85316-e6c1-4bd4-abbc-1dde2d0afeb9""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f6321072-8d3a-4190-b0fc-ae995437e0d5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f6321072-8d3a-4190-b0fc-ae995437e0d5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-237", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("1f756774-159e-4edb-9e89-517b8a86e704", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-987", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("1f756774-159e-4edb-9e89-517b8a86e704", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9fb85316-e6c1-4bd4-abbc-1dde2d0afeb9", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d22e7bf5-d056-4e14-939a-5a3dae999dbc"",
        ""url"": ""/v2/events/d22e7bf5-d056-4e14-939a-5a3dae999dbc"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-208"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3a0038cb-15da-4965-b721-7b779b396675"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-576"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-576"",
            ""service_plan_guid"": ""5024ecb9-a24c-47d0-aab9-28d13e8bbd5f"",
            ""space_guid"": ""98551040-f266-4544-a86e-cf6a9870dc17""
          }
        },
        ""space_guid"": ""98551040-f266-4544-a86e-cf6a9870dc17"",
        ""organization_guid"": ""30c1c375-5c72-4efb-9e2a-6babdfcb9a6a""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d22e7bf5-d056-4e14-939a-5a3dae999dbc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d22e7bf5-d056-4e14-939a-5a3dae999dbc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-208", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3a0038cb-15da-4965-b721-7b779b396675", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-576", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("98551040-f266-4544-a86e-cf6a9870dc17", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("30c1c375-5c72-4efb-9e2a-6babdfcb9a6a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8b52fcbe-7dee-4199-b7cd-51b019a053d0"",
        ""url"": ""/v2/events/8b52fcbe-7dee-4199-b7cd-51b019a053d0"",
        ""created_at"": ""2015-04-16T12:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-241"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d49c530d-3eaa-4494-94f9-beefb79a8d76"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1039"",
        ""timestamp"": ""2015-04-16T12:04:27+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""d8488071-54f6-4514-a95f-eda36f0a794a"",
        ""organization_guid"": ""5bbec222-adba-47c8-a309-4323062d75dc""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8b52fcbe-7dee-4199-b7cd-51b019a053d0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8b52fcbe-7dee-4199-b7cd-51b019a053d0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-241", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d49c530d-3eaa-4494-94f9-beefb79a8d76", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1039", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("d8488071-54f6-4514-a95f-eda36f0a794a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("5bbec222-adba-47c8-a309-4323062d75dc", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b5e43d99-d83a-4091-84d5-4ee799d86e62"",
        ""url"": ""/v2/events/b5e43d99-d83a-4091-84d5-4ee799d86e62"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""55ded0c5-118f-4f55-bd42-4980d071685f"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1069"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b5e43d99-d83a-4091-84d5-4ee799d86e62", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b5e43d99-d83a-4091-84d5-4ee799d86e62", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("55ded0c5-118f-4f55-bd42-4980d071685f", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1069", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""31d3278f-5350-4aa6-90b1-4c78979e1f49"",
        ""url"": ""/v2/events/31d3278f-5350-4aa6-90b1-4c78979e1f49"",
        ""created_at"": ""2015-04-16T12:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-239"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e0bd1970-75db-4dd5-85c5-d3cd10754bdc"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1014"",
        ""timestamp"": ""2015-04-16T12:04:27+00:00"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("31d3278f-5350-4aa6-90b1-4c78979e1f49", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/31d3278f-5350-4aa6-90b1-4c78979e1f49", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-239", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e0bd1970-75db-4dd5-85c5-d3cd10754bdc", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1014", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:27+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a66b837c-c8a2-4404-bb96-fe962a0f43d1"",
        ""url"": ""/v2/events/a66b837c-c8a2-4404-bb96-fe962a0f43d1"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""66bc096c-c45f-4a14-8bed-5202b781f637"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1095"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a66b837c-c8a2-4404-bb96-fe962a0f43d1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a66b837c-c8a2-4404-bb96-fe962a0f43d1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("66bc096c-c45f-4a14-8bed-5202b781f637", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1095", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9d61c326-15e6-44b4-80a4-6d75941bb084"",
        ""url"": ""/v2/events/9d61c326-15e6-44b4-80a4-6d75941bb084"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-253"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""6f636373-db5c-4abb-b0fb-e07751cd5390"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1209"",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""591ba8fc-893e-4b5d-9011-a27d267fbdd2"",
        ""organization_guid"": ""f346ca5b-6058-498f-a751-ce949e6326e4""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9d61c326-15e6-44b4-80a4-6d75941bb084", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9d61c326-15e6-44b4-80a4-6d75941bb084", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-253", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6f636373-db5c-4abb-b0fb-e07751cd5390", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1209", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("591ba8fc-893e-4b5d-9011-a27d267fbdd2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f346ca5b-6058-498f-a751-ce949e6326e4", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bd218c72-0f49-4665-a964-76aa0f10abad"",
        ""url"": ""/v2/events/bd218c72-0f49-4665-a964-76aa0f10abad"",
        ""created_at"": ""2015-04-16T12:04:28+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-251"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d38421bb-74be-4bd4-ad77-a69ea6d5f0d8"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-16T12:04:28+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""b8d196bd-3011-4088-be30-96bab2b75907"",
            ""app_guid"": ""cc11ed05-8307-4804-bcb2-9ba5f3e99460""
          }
        },
        ""space_guid"": ""9e3726e8-c93b-4cc8-853a-244ce042d706"",
        ""organization_guid"": ""21913afb-60c9-43a3-86e8-d10d2fa13872""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bd218c72-0f49-4665-a964-76aa0f10abad", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/bd218c72-0f49-4665-a964-76aa0f10abad", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-251", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d38421bb-74be-4bd4-ad77-a69ea6d5f0d8", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:28+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9e3726e8-c93b-4cc8-853a-244ce042d706", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("21913afb-60c9-43a3-86e8-d10d2fa13872", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1155c8f9-f826-4212-b44b-51917c7ba8af"",
        ""url"": ""/v2/events/1155c8f9-f826-4212-b44b-51917c7ba8af"",
        ""created_at"": ""2015-04-16T12:04:29+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-263"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e7b29ead-fe13-4ffd-8c92-960dd84a67c5"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1344"",
        ""timestamp"": ""2015-04-16T12:04:29+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""e888bf9e-6b36-40ad-8063-260557a2962d"",
        ""organization_guid"": ""0ce61910-2d35-47ef-bf67-314fd09b5a4e""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1155c8f9-f826-4212-b44b-51917c7ba8af", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1155c8f9-f826-4212-b44b-51917c7ba8af", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-263", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e7b29ead-fe13-4ffd-8c92-960dd84a67c5", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1344", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:29+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("e888bf9e-6b36-40ad-8063-260557a2962d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("0ce61910-2d35-47ef-bf67-314fd09b5a4e", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f439fbad-84a8-479d-84f1-72290b0c51f1"",
        ""url"": ""/v2/events/f439fbad-84a8-479d-84f1-72290b0c51f1"",
        ""created_at"": ""2015-04-16T12:04:26+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-219"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""6f8ad151-f8b7-4fae-bdb8-946214b7ed55"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-16T12:04:26+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""a01b1b88-79a4-4ddc-8d17-8c0eacd8ec9c""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f439fbad-84a8-479d-84f1-72290b0c51f1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f439fbad-84a8-479d-84f1-72290b0c51f1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-219", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6f8ad151-f8b7-4fae-bdb8-946214b7ed55", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a01b1b88-79a4-4ddc-8d17-8c0eacd8ec9c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f5400c8b-d247-410f-9cf8-750a9195b10e"",
        ""url"": ""/v2/events/f5400c8b-d247-410f-9cf8-750a9195b10e"",
        ""created_at"": ""2015-04-16T12:04:26+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-221"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""83cfd3a5-b1fb-46e2-9a66-49f9d06b7813"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-767"",
        ""timestamp"": ""2015-04-16T12:04:26+00:00"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""48b8aa29-1cde-4280-82cc-42cbd8f730cb"",
        ""organization_guid"": ""b03db267-153e-495b-b8ea-2e23afb7be78""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f5400c8b-d247-410f-9cf8-750a9195b10e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f5400c8b-d247-410f-9cf8-750a9195b10e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-221", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("83cfd3a5-b1fb-46e2-9a66-49f9d06b7813", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-767", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("48b8aa29-1cde-4280-82cc-42cbd8f730cb", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("b03db267-153e-495b-b8ea-2e23afb7be78", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bcdcfb6f-b56e-4060-ad37-8de69393709c"",
        ""url"": ""/v2/events/bcdcfb6f-b56e-4060-ad37-8de69393709c"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-210"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""8d9e9ff3-41fa-4546-bcd4-c5550d8e97a8"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-605"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""8d9e9ff3-41fa-4546-bcd4-c5550d8e97a8"",
        ""organization_guid"": ""04fdbb48-236b-4308-a40b-29998f4eaa0b""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bcdcfb6f-b56e-4060-ad37-8de69393709c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/bcdcfb6f-b56e-4060-ad37-8de69393709c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-210", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("8d9e9ff3-41fa-4546-bcd4-c5550d8e97a8", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-605", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8d9e9ff3-41fa-4546-bcd4-c5550d8e97a8", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("04fdbb48-236b-4308-a40b-29998f4eaa0b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fae0df03-89c6-44ef-be08-4d87a348f296"",
        ""url"": ""/v2/events/fae0df03-89c6-44ef-be08-4d87a348f296"",
        ""created_at"": ""2015-04-16T12:04:26+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-225"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d4e56a73-bfcf-48e9-a97b-3884a0a65185"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-16T12:04:26+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""b68177c3-375a-4f8b-91d3-db56f6dcee8d"",
            ""organization_guid"": ""65398717-8165-4320-a106-bc244debbbaa""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""65398717-8165-4320-a106-bc244debbbaa""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fae0df03-89c6-44ef-be08-4d87a348f296", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fae0df03-89c6-44ef-be08-4d87a348f296", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-225", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d4e56a73-bfcf-48e9-a97b-3884a0a65185", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:26+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("65398717-8165-4320-a106-bc244debbbaa", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bb27c370-650b-4db6-9c49-57cb871f05c0"",
        ""url"": ""/v2/events/bb27c370-650b-4db6-9c49-57cb871f05c0"",
        ""created_at"": ""2015-04-16T12:04:25+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""a7c8ce60-d548-4803-930b-474d026d6d07"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-551"",
        ""actee"": ""6ba61a8e-9c6a-4650-a803-b336b949a8ac"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-39"",
        ""timestamp"": ""2015-04-16T12:04:25+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bb27c370-650b-4db6-9c49-57cb871f05c0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/bb27c370-650b-4db6-9c49-57cb871f05c0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("a7c8ce60-d548-4803-930b-474d026d6d07", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-551", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6ba61a8e-9c6a-4650-a803-b336b949a8ac", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-39", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:25+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}
