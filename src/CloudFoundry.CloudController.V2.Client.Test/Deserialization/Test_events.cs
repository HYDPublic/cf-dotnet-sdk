//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8c9890eb-3945-4aa7-98f0-5969e18bdac1"",
        ""url"": ""/v2/events/ddfa52d7-ca5d-471f-ad12-36ccefc89820"",
        ""created_at"": ""2016-03-21T10:59:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-413"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4e50d86b-d245-4421-bc93-d427658fa16a"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-2189"",
        ""timestamp"": ""2016-03-21T10:59:49Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""8c9890eb-3945-4aa7-98f0-5969e18bdac1"",
        ""organization_guid"": ""8c9890eb-3945-4aa7-98f0-5969e18bdac1""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8c9890eb-3945-4aa7-98f0-5969e18bdac1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ddfa52d7-ca5d-471f-ad12-36ccefc89820", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-413", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4e50d86b-d245-4421-bc93-d427658fa16a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2189", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8c9890eb-3945-4aa7-98f0-5969e18bdac1", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8c9890eb-3945-4aa7-98f0-5969e18bdac1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2d597de4-885b-4433-81bd-eeb587c86385"",
        ""url"": ""/v2/events/3752982b-7575-4abc-9ab7-009c956a742f"",
        ""created_at"": ""2016-03-21T10:59:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""63581d96-5f5e-4272-aa43-8621b32a844b"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1717"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-03-21T10:59:47Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2d597de4-885b-4433-81bd-eeb587c86385", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3752982b-7575-4abc-9ab7-009c956a742f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("63581d96-5f5e-4272-aa43-8621b32a844b", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1717", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""34d06f0d-3eed-4f96-b23c-e53ddab8ce31"",
        ""url"": ""/v2/events/cea1d05f-70cd-4bab-9e19-f081a9b1f8ff"",
        ""created_at"": ""2016-03-21T10:59:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-411"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""45485778-39b5-4769-bff7-e38a3f181c2f"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-2164"",
        ""timestamp"": ""2016-03-21T10:59:49Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("34d06f0d-3eed-4f96-b23c-e53ddab8ce31", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cea1d05f-70cd-4bab-9e19-f081a9b1f8ff", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-411", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("45485778-39b5-4769-bff7-e38a3f181c2f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2164", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1abf36c9-37a6-4bd4-809a-d340623b190d"",
        ""url"": ""/v2/events/2e731acf-652d-441c-ba17-2b02a9b0ad29"",
        ""created_at"": ""2016-03-21T10:59:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-391"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""8539b140-2430-4399-868c-b574e393dd0a"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-21T10:59:48Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""1abf36c9-37a6-4bd4-809a-d340623b190d""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1abf36c9-37a6-4bd4-809a-d340623b190d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2e731acf-652d-441c-ba17-2b02a9b0ad29", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-391", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("8539b140-2430-4399-868c-b574e393dd0a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1abf36c9-37a6-4bd4-809a-d340623b190d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""93c6035a-b47d-4013-82f8-b3df65429239"",
        ""url"": ""/v2/events/21361370-3b86-4da5-aeb3-14b2aa4eb236"",
        ""created_at"": ""2016-03-21T10:59:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-381"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ca79a387-b9ae-4654-8ac2-5a2aa2bd36f2"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1742"",
        ""timestamp"": ""2016-03-21T10:59:47Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""93c6035a-b47d-4013-82f8-b3df65429239"",
        ""organization_guid"": ""93c6035a-b47d-4013-82f8-b3df65429239""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("93c6035a-b47d-4013-82f8-b3df65429239", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/21361370-3b86-4da5-aeb3-14b2aa4eb236", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-381", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ca79a387-b9ae-4654-8ac2-5a2aa2bd36f2", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1742", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("93c6035a-b47d-4013-82f8-b3df65429239", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("93c6035a-b47d-4013-82f8-b3df65429239", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppSshAuthorizedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""100a06b8-8fe2-492b-8e89-496ed0eb0a19"",
        ""url"": ""/v2/events/5bfca9c7-1cc6-4a7c-87a8-9bc9421edf01"",
        ""created_at"": ""2016-03-21T10:59:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-authorized"",
        ""actor"": ""uaa-id-383"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""62eb2b68-b3ea-487b-8be6-7fbe3d4b9305"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1769"",
        ""timestamp"": ""2016-03-21T10:59:47Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""100a06b8-8fe2-492b-8e89-496ed0eb0a19"",
        ""organization_guid"": ""100a06b8-8fe2-492b-8e89-496ed0eb0a19""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppSshAuthorizedEventsResponse> page = Utilities.DeserializePage<ListAppSshAuthorizedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("100a06b8-8fe2-492b-8e89-496ed0eb0a19", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5bfca9c7-1cc6-4a7c-87a8-9bc9421edf01", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.ssh-authorized", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-383", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("62eb2b68-b3ea-487b-8be6-7fbe3d4b9305", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1769", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("100a06b8-8fe2-492b-8e89-496ed0eb0a19", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("100a06b8-8fe2-492b-8e89-496ed0eb0a19", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c63850b7-98a7-44b7-8f53-2a94fccee52d"",
        ""url"": ""/v2/events/18657cfc-e0ea-4da5-971f-af45f51abe73"",
        ""created_at"": ""2016-03-21T10:59:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-397"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""fa6a1cf9-fe5a-4383-b195-8620882fdea8"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1971"",
        ""timestamp"": ""2016-03-21T10:59:48Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1971"",
            ""space_guid"": ""c63850b7-98a7-44b7-8f53-2a94fccee52d""
          }
        },
        ""space_guid"": ""c63850b7-98a7-44b7-8f53-2a94fccee52d"",
        ""organization_guid"": ""c63850b7-98a7-44b7-8f53-2a94fccee52d""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c63850b7-98a7-44b7-8f53-2a94fccee52d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/18657cfc-e0ea-4da5-971f-af45f51abe73", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-397", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("fa6a1cf9-fe5a-4383-b195-8620882fdea8", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1971", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("c63850b7-98a7-44b7-8f53-2a94fccee52d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c63850b7-98a7-44b7-8f53-2a94fccee52d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c0c99a57-1b1d-41e8-a7db-444aa6de70a3"",
        ""url"": ""/v2/events/6ff5c681-9711-452f-a6cb-9361fe6935ad"",
        ""created_at"": ""2016-03-21T10:59:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-409"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d2557c0b-b612-43b4-86ef-85505f6faf99"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-2134"",
        ""timestamp"": ""2016-03-21T10:59:49Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""c0c99a57-1b1d-41e8-a7db-444aa6de70a3"",
        ""organization_guid"": ""c0c99a57-1b1d-41e8-a7db-444aa6de70a3""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c0c99a57-1b1d-41e8-a7db-444aa6de70a3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6ff5c681-9711-452f-a6cb-9361fe6935ad", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-409", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d2557c0b-b612-43b4-86ef-85505f6faf99", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2134", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("c0c99a57-1b1d-41e8-a7db-444aa6de70a3", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c0c99a57-1b1d-41e8-a7db-444aa6de70a3", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""18fce62a-2445-4ae8-87c8-c74453755556"",
        ""url"": ""/v2/events/0b1f86f7-2903-43a3-80f2-6663368e8c51"",
        ""created_at"": ""2016-03-21T10:59:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""9c3ecb9e-5485-4b67-8c34-3e6b4599a3cb"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2084"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2016-03-21T10:59:49Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""18fce62a-2445-4ae8-87c8-c74453755556"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("18fce62a-2445-4ae8-87c8-c74453755556", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0b1f86f7-2903-43a3-80f2-6663368e8c51", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("9c3ecb9e-5485-4b67-8c34-3e6b4599a3cb", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2084", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""609d2e8b-8fb1-4e2c-a1ba-09322ab252b5"",
        ""url"": ""/v2/events/470d5c98-6472-4602-b7b1-ece856d284b4"",
        ""created_at"": ""2016-03-21T10:59:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-432"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""8812fb2a-96dd-455c-8180-0bbb77529347"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-2471"",
        ""timestamp"": ""2016-03-21T10:59:51Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""609d2e8b-8fb1-4e2c-a1ba-09322ab252b5""
          }
        },
        ""space_guid"": ""609d2e8b-8fb1-4e2c-a1ba-09322ab252b5"",
        ""organization_guid"": ""609d2e8b-8fb1-4e2c-a1ba-09322ab252b5""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("609d2e8b-8fb1-4e2c-a1ba-09322ab252b5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/470d5c98-6472-4602-b7b1-ece856d284b4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-432", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("8812fb2a-96dd-455c-8180-0bbb77529347", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2471", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("609d2e8b-8fb1-4e2c-a1ba-09322ab252b5", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("609d2e8b-8fb1-4e2c-a1ba-09322ab252b5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStopEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f5b0a154-75ef-4ad2-b0c9-d580698c0d77"",
        ""url"": ""/v2/events/282fbbe3-f55f-46ec-8630-3a388d241a4c"",
        ""created_at"": ""2016-03-21T10:59:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-424"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""2eddd1e9-1781-431c-b344-d14fcf75e166"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-2362"",
        ""timestamp"": ""2016-03-21T10:59:50Z"",
        ""metadata"": {

        },
        ""space_guid"": ""f5b0a154-75ef-4ad2-b0c9-d580698c0d77"",
        ""organization_guid"": ""f5b0a154-75ef-4ad2-b0c9-d580698c0d77""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStopEventsResponse> page = Utilities.DeserializePage<ListAppStopEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f5b0a154-75ef-4ad2-b0c9-d580698c0d77", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/282fbbe3-f55f-46ec-8630-3a388d241a4c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-424", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("2eddd1e9-1781-431c-b344-d14fcf75e166", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("v3-app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2362", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("f5b0a154-75ef-4ad2-b0c9-d580698c0d77", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f5b0a154-75ef-4ad2-b0c9-d580698c0d77", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7b4bdc9b-5427-49c9-bf78-025fd61f1ed8"",
    ""url"": ""/v2/events/a4bc2095-34ac-4224-a3b5-0ff9be143e0a"",
    ""created_at"": ""2016-03-21T10:59:45Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-1395"",
    ""actor"": ""57f63f2b-11fb-4557-9563-7860a94c88da"",
    ""actor_type"": ""name-1396"",
    ""actor_name"": ""name-1397"",
    ""actee"": ""a4f67b88-019e-4dd6-93f0-b4e9675784e8"",
    ""actee_type"": ""name-1398"",
    ""actee_name"": ""name-1399"",
    ""timestamp"": ""2016-03-21T10:59:45Z"",
    ""metadata"": {

    },
    ""space_guid"": ""7b4bdc9b-5427-49c9-bf78-025fd61f1ed8"",
    ""organization_guid"": ""7b4bdc9b-5427-49c9-bf78-025fd61f1ed8""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("7b4bdc9b-5427-49c9-bf78-025fd61f1ed8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a4bc2095-34ac-4224-a3b5-0ff9be143e0a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1395", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("57f63f2b-11fb-4557-9563-7860a94c88da", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-1396", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-1397", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("a4f67b88-019e-4dd6-93f0-b4e9675784e8", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-1398", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-1399", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("7b4bdc9b-5427-49c9-bf78-025fd61f1ed8", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("7b4bdc9b-5427-49c9-bf78-025fd61f1ed8", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fa680ac1-1fc5-46a3-9a33-596110b76c5e"",
        ""url"": ""/v2/events/00caddd5-633d-4549-b7e1-329a295e0c47"",
        ""created_at"": ""2016-03-21T10:59:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.update"",
        ""actor"": ""uaa-id-416"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""31c606c5-f6c4-447f-8706-d0f0b8527743"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-22"",
        ""timestamp"": ""2016-03-21T10:59:50Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""fa680ac1-1fc5-46a3-9a33-596110b76c5e"",
            ""space_guid"": ""fa680ac1-1fc5-46a3-9a33-596110b76c5e""
          }
        },
        ""space_guid"": ""fa680ac1-1fc5-46a3-9a33-596110b76c5e"",
        ""organization_guid"": ""fa680ac1-1fc5-46a3-9a33-596110b76c5e""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteUpdateEventsResponse> page = Utilities.DeserializePage<ListRouteUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fa680ac1-1fc5-46a3-9a33-596110b76c5e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/00caddd5-633d-4549-b7e1-329a295e0c47", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-416", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("31c606c5-f6c4-447f-8706-d0f0b8527743", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-22", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("fa680ac1-1fc5-46a3-9a33-596110b76c5e", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("fa680ac1-1fc5-46a3-9a33-596110b76c5e", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b0b6fb5e-06f5-4b02-a0c9-4e9e763c1e0b"",
        ""url"": ""/v2/events/025b6834-8cff-4207-a8b4-42b4b9b3c95c"",
        ""created_at"": ""2016-03-21T10:59:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""ef1f9046-bfef-47b5-acd7-67020649d0e6"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2501"",
        ""actee"": ""35b8c04a-84ac-4e08-8310-509ebfa075c1"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2016-03-21T10:59:51Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b0b6fb5e-06f5-4b02-a0c9-4e9e763c1e0b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/025b6834-8cff-4207-a8b4-42b4b9b3c95c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("ef1f9046-bfef-47b5-acd7-67020649d0e6", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2501", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("35b8c04a-84ac-4e08-8310-509ebfa075c1", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""668e45e4-14d0-4764-bf20-fee9be423796"",
        ""url"": ""/v2/events/4c227296-2e8d-4401-91f0-225b57ef8e04"",
        ""created_at"": ""2016-03-21T10:59:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""9ffc53fb-28f0-40f9-8c01-e9618910823b"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2059"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-03-21T10:59:49Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("668e45e4-14d0-4764-bf20-fee9be423796", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4c227296-2e8d-4401-91f0-225b57ef8e04", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("9ffc53fb-28f0-40f9-8c01-e9618910823b", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2059", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3f78e33b-06ad-45a4-9c03-7936bc2306d6"",
        ""url"": ""/v2/events/585f0ba7-75b2-45d6-9e95-a66acc8ce038"",
        ""created_at"": ""2016-03-21T10:59:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-361"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""3a3c5453-bd2e-4edc-86b2-39b6a06f6371"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1468"",
        ""timestamp"": ""2016-03-21T10:59:45Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""3f78e33b-06ad-45a4-9c03-7936bc2306d6"",
        ""organization_guid"": ""3f78e33b-06ad-45a4-9c03-7936bc2306d6""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3f78e33b-06ad-45a4-9c03-7936bc2306d6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/585f0ba7-75b2-45d6-9e95-a66acc8ce038", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-361", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3a3c5453-bd2e-4edc-86b2-39b6a06f6371", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1468", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("3f78e33b-06ad-45a4-9c03-7936bc2306d6", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("3f78e33b-06ad-45a4-9c03-7936bc2306d6", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""68aff313-d475-4abf-9f83-0e1327f6eb73"",
        ""url"": ""/v2/events/86b26e01-fd45-43c4-bc33-157e65bfe1aa"",
        ""created_at"": ""2016-03-21T10:59:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-377"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7e7e8dcc-d2ba-4227-bf9b-f90c285b6764"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-21T10:59:47Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""68aff313-d475-4abf-9f83-0e1327f6eb73"",
            ""organization_guid"": ""68aff313-d475-4abf-9f83-0e1327f6eb73""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""68aff313-d475-4abf-9f83-0e1327f6eb73""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("68aff313-d475-4abf-9f83-0e1327f6eb73", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/86b26e01-fd45-43c4-bc33-157e65bfe1aa", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-377", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7e7e8dcc-d2ba-4227-bf9b-f90c285b6764", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("68aff313-d475-4abf-9f83-0e1327f6eb73", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1b53db7e-df12-4d0a-b9c9-1120dca6cdf7"",
        ""url"": ""/v2/events/ea9dd2b3-e7ef-4409-a570-d7a151154c37"",
        ""created_at"": ""2016-03-21T10:59:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-375"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""8ab71aa8-ca96-48e4-997b-a878f8098b7d"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1663"",
        ""timestamp"": ""2016-03-21T10:59:47Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1b53db7e-df12-4d0a-b9c9-1120dca6cdf7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ea9dd2b3-e7ef-4409-a570-d7a151154c37", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-375", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("8ab71aa8-ca96-48e4-997b-a878f8098b7d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1663", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""370bb398-3dbf-4d3e-b306-36a5b5aa3bf5"",
        ""url"": ""/v2/events/15f0c86f-ac88-48dc-9edd-31b549309141"",
        ""created_at"": ""2016-03-21T10:59:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-420"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1ae72481-5f49-4ff9-9377-67800fc7891c"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-21T10:59:50Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""370bb398-3dbf-4d3e-b306-36a5b5aa3bf5"",
            ""app_guid"": ""370bb398-3dbf-4d3e-b306-36a5b5aa3bf5""
          }
        },
        ""space_guid"": ""370bb398-3dbf-4d3e-b306-36a5b5aa3bf5"",
        ""organization_guid"": ""370bb398-3dbf-4d3e-b306-36a5b5aa3bf5""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("370bb398-3dbf-4d3e-b306-36a5b5aa3bf5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/15f0c86f-ac88-48dc-9edd-31b549309141", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-420", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("1ae72481-5f49-4ff9-9377-67800fc7891c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("370bb398-3dbf-4d3e-b306-36a5b5aa3bf5", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("370bb398-3dbf-4d3e-b306-36a5b5aa3bf5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""910a064a-c0c7-4f85-afe3-815fa3e293fc"",
        ""url"": ""/v2/events/6d4d1f26-be40-4c4d-88d6-a5e914f0b5f3"",
        ""created_at"": ""2016-03-21T10:59:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""b9f0113b-3958-46ec-b34c-a98dfd0a9406"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1637"",
        ""actee"": ""e17a9975-19de-4a08-bd12-4860ebe6eff0"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1638"",
        ""timestamp"": ""2016-03-21T10:59:46Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("910a064a-c0c7-4f85-afe3-815fa3e293fc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6d4d1f26-be40-4c4d-88d6-a5e914f0b5f3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("b9f0113b-3958-46ec-b34c-a98dfd0a9406", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1637", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e17a9975-19de-4a08-bd12-4860ebe6eff0", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1638", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3e39db52-b948-4beb-8ba9-37368bdd3f47"",
        ""url"": ""/v2/events/3f673bf7-5307-4909-b780-18701ebc1c99"",
        ""created_at"": ""2016-03-21T10:59:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""7079ec90-ef85-439c-8ee1-2e72330b4b0c"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-2218"",
        ""actee"": ""7079ec90-ef85-439c-8ee1-2e72330b4b0c"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-2218"",
        ""timestamp"": ""2016-03-21T10:59:50Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""3e39db52-b948-4beb-8ba9-37368bdd3f47"",
        ""organization_guid"": ""3e39db52-b948-4beb-8ba9-37368bdd3f47""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3e39db52-b948-4beb-8ba9-37368bdd3f47", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3f673bf7-5307-4909-b780-18701ebc1c99", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("7079ec90-ef85-439c-8ee1-2e72330b4b0c", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2218", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7079ec90-ef85-439c-8ee1-2e72330b4b0c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2218", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("3e39db52-b948-4beb-8ba9-37368bdd3f47", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("3e39db52-b948-4beb-8ba9-37368bdd3f47", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceKeyDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""39119406-41d0-4221-ba27-b99def77e8bb"",
        ""url"": ""/v2/events/cfc58186-30a6-4a4a-88f0-5babc24a4fab"",
        ""created_at"": ""2016-03-21T10:59:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.delete"",
        ""actor"": ""uaa-id-371"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""64a1a12b-ff32-4be9-b0e6-db1ad4b36d46"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1612"",
        ""timestamp"": ""2016-03-21T10:59:46Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""39119406-41d0-4221-ba27-b99def77e8bb"",
        ""organization_guid"": ""39119406-41d0-4221-ba27-b99def77e8bb""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceKeyDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceKeyDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("39119406-41d0-4221-ba27-b99def77e8bb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cfc58186-30a6-4a4a-88f0-5babc24a4fab", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_key.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-371", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("64a1a12b-ff32-4be9-b0e6-db1ad4b36d46", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_key", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1612", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("39119406-41d0-4221-ba27-b99def77e8bb", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("39119406-41d0-4221-ba27-b99def77e8bb", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0c1e6daf-65b5-4157-80c7-392fb97a8f91"",
        ""url"": ""/v2/events/2371f26f-2a95-4c37-b327-cf271890f44a"",
        ""created_at"": ""2016-03-21T10:59:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-389"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""cb27128e-7ddb-488f-be16-6d452aacb402"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1855"",
        ""timestamp"": ""2016-03-21T10:59:48Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""0c1e6daf-65b5-4157-80c7-392fb97a8f91"",
        ""organization_guid"": ""0c1e6daf-65b5-4157-80c7-392fb97a8f91""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0c1e6daf-65b5-4157-80c7-392fb97a8f91", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2371f26f-2a95-4c37-b327-cf271890f44a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-389", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("cb27128e-7ddb-488f-be16-6d452aacb402", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1855", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0c1e6daf-65b5-4157-80c7-392fb97a8f91", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("0c1e6daf-65b5-4157-80c7-392fb97a8f91", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fc6cf385-4368-404e-ad00-4234db683556"",
        ""url"": ""/v2/events/1ecc8646-a4fb-4074-9d00-a53261be22f4"",
        ""created_at"": ""2016-03-21T10:59:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-428"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4742d7a5-1b8a-49e4-8db3-bca6226fa566"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-2416"",
        ""timestamp"": ""2016-03-21T10:59:51Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""fc6cf385-4368-404e-ad00-4234db683556"",
        ""organization_guid"": ""fc6cf385-4368-404e-ad00-4234db683556""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fc6cf385-4368-404e-ad00-4234db683556", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1ecc8646-a4fb-4074-9d00-a53261be22f4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-428", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4742d7a5-1b8a-49e4-8db3-bca6226fa566", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2416", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("fc6cf385-4368-404e-ad00-4234db683556", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("fc6cf385-4368-404e-ad00-4234db683556", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStartEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""04d2d064-67fb-4421-8778-85ef7937a709"",
        ""url"": ""/v2/events/3014a132-ed08-4e6f-bb29-becaa130c862"",
        ""created_at"": ""2016-03-21T10:59:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-387"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e2586930-fc2e-410f-8ada-3c2768823899"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-1827"",
        ""timestamp"": ""2016-03-21T10:59:47Z"",
        ""metadata"": {

        },
        ""space_guid"": ""04d2d064-67fb-4421-8778-85ef7937a709"",
        ""organization_guid"": ""04d2d064-67fb-4421-8778-85ef7937a709""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStartEventsResponse> page = Utilities.DeserializePage<ListAppStartEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("04d2d064-67fb-4421-8778-85ef7937a709", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3014a132-ed08-4e6f-bb29-becaa130c862", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-387", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e2586930-fc2e-410f-8ada-3c2768823899", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("v3-app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1827", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("04d2d064-67fb-4421-8778-85ef7937a709", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("04d2d064-67fb-4421-8778-85ef7937a709", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceKeyCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""38d313c6-6b09-40e0-aef7-1fd78618abe2"",
        ""url"": ""/v2/events/324cca65-4673-481b-95d6-5e5d50325018"",
        ""created_at"": ""2016-03-21T10:59:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.create"",
        ""actor"": ""uaa-id-395"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6f49c28a-188e-446b-8d6a-f8979f95a14b"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1946"",
        ""timestamp"": ""2016-03-21T10:59:48Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""38d313c6-6b09-40e0-aef7-1fd78618abe2"",
            ""name"": ""name-1946""
          }
        },
        ""space_guid"": ""38d313c6-6b09-40e0-aef7-1fd78618abe2"",
        ""organization_guid"": ""38d313c6-6b09-40e0-aef7-1fd78618abe2""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceKeyCreateEventsResponse> page = Utilities.DeserializePage<ListServiceKeyCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("38d313c6-6b09-40e0-aef7-1fd78618abe2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/324cca65-4673-481b-95d6-5e5d50325018", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_key.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-395", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6f49c28a-188e-446b-8d6a-f8979f95a14b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_key", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1946", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("38d313c6-6b09-40e0-aef7-1fd78618abe2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("38d313c6-6b09-40e0-aef7-1fd78618abe2", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14"",
        ""url"": ""/v2/events/15980085-8fae-44ca-b0f2-14582439e374"",
        ""created_at"": ""2016-03-21T10:59:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1371"",
        ""actor"": ""59d095ca-b97c-458b-bca8-d5d4aec320c6"",
        ""actor_type"": ""name-1372"",
        ""actor_name"": ""name-1373"",
        ""actee"": ""ff43bffb-7dad-4070-a629-b49e51123477"",
        ""actee_type"": ""name-1374"",
        ""actee_name"": ""name-1375"",
        ""timestamp"": ""2016-03-21T10:59:45Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14"",
        ""organization_guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14"",
        ""url"": ""/v2/events/c03b7cf0-3927-4897-8c5d-553321104e9c"",
        ""created_at"": ""2016-03-21T10:59:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1379"",
        ""actor"": ""606c638e-415e-411b-89fc-d7ee47fa25c0"",
        ""actor_type"": ""name-1380"",
        ""actor_name"": ""name-1381"",
        ""actee"": ""0f391890-6cb6-4feb-b8a5-e1e3b1a9a85d"",
        ""actee_type"": ""name-1382"",
        ""actee_name"": ""name-1383"",
        ""timestamp"": ""2016-03-21T10:59:45Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14"",
        ""organization_guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14"",
        ""url"": ""/v2/events/653ac3cf-1f7c-4c43-aba8-de2813309177"",
        ""created_at"": ""2016-03-21T10:59:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1387"",
        ""actor"": ""3c9f3784-df92-4e6a-9c78-44221737be3f"",
        ""actor_type"": ""name-1388"",
        ""actor_name"": ""name-1389"",
        ""actee"": ""f3993ec3-bdc5-40c0-be7c-864a9035bcc7"",
        ""actee_type"": ""name-1390"",
        ""actee_name"": ""name-1391"",
        ""timestamp"": ""2016-03-21T10:59:45Z"",
        ""metadata"": {

        },
        ""space_guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14"",
        ""organization_guid"": ""1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/15980085-8fae-44ca-b0f2-14582439e374", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1371", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("59d095ca-b97c-458b-bca8-d5d4aec320c6", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-1372", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1373", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ff43bffb-7dad-4070-a629-b49e51123477", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-1374", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1375", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c03b7cf0-3927-4897-8c5d-553321104e9c", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1379", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("606c638e-415e-411b-89fc-d7ee47fa25c0", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-1380", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-1381", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("0f391890-6cb6-4feb-b8a5-e1e3b1a9a85d", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-1382", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1383", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/653ac3cf-1f7c-4c43-aba8-de2813309177", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1387", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("3c9f3784-df92-4e6a-9c78-44221737be3f", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-1388", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-1389", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("f3993ec3-bdc5-40c0-be7c-864a9035bcc7", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-1390", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1391", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("1b5a9dfd-3f1b-4c5a-9fea-96b140cc5d14", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d9d9315d-2130-42f9-933e-b797bf1fd032"",
        ""url"": ""/v2/events/e89e5585-58c1-4ae7-acec-9a4c5bbb5d1d"",
        ""created_at"": ""2016-03-21T10:59:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.create"",
        ""actor"": ""uaa-id-369"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""f5210f64-d7be-4844-996c-666dc1eb889c"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-21"",
        ""timestamp"": ""2016-03-21T10:59:46Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""d9d9315d-2130-42f9-933e-b797bf1fd032"",
            ""space_guid"": ""d9d9315d-2130-42f9-933e-b797bf1fd032""
          }
        },
        ""space_guid"": ""d9d9315d-2130-42f9-933e-b797bf1fd032"",
        ""organization_guid"": ""d9d9315d-2130-42f9-933e-b797bf1fd032""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteCreateEventsResponse> page = Utilities.DeserializePage<ListRouteCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d9d9315d-2130-42f9-933e-b797bf1fd032", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e89e5585-58c1-4ae7-acec-9a4c5bbb5d1d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-369", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f5210f64-d7be-4844-996c-666dc1eb889c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-21", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("d9d9315d-2130-42f9-933e-b797bf1fd032", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d9d9315d-2130-42f9-933e-b797bf1fd032", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c3005143-9454-4b8d-8b9d-2bb4016b65e7"",
        ""url"": ""/v2/events/c2b27745-35c6-48d4-836a-f70a257ab286"",
        ""created_at"": ""2016-03-21T10:59:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-363"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a2d005b9-2590-49fe-b503-4460f86482c3"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-21T10:59:46Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""c3005143-9454-4b8d-8b9d-2bb4016b65e7"",
            ""organization_guid"": ""c3005143-9454-4b8d-8b9d-2bb4016b65e7""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""c3005143-9454-4b8d-8b9d-2bb4016b65e7""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c3005143-9454-4b8d-8b9d-2bb4016b65e7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c2b27745-35c6-48d4-836a-f70a257ab286", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-363", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("a2d005b9-2590-49fe-b503-4460f86482c3", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c3005143-9454-4b8d-8b9d-2bb4016b65e7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78"",
        ""url"": ""/v2/events/3d40053b-4c54-4bf8-ab0d-bdef18f62978"",
        ""created_at"": ""2016-03-21T10:59:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-367"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4390c3b4-a386-4f51-81a5-ac03d285809d"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1550"",
        ""timestamp"": ""2016-03-21T10:59:46Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78"",
        ""organization_guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78"",
        ""url"": ""/v2/events/354cba3b-a0a5-46a6-b276-a3f7d9d44352"",
        ""created_at"": ""2016-03-21T10:59:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-367"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4390c3b4-a386-4f51-81a5-ac03d285809d"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1550"",
        ""timestamp"": ""2016-03-21T10:59:46Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78"",
        ""organization_guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78"",
        ""url"": ""/v2/events/d0057c48-3407-4bd3-a1c0-84d34979660c"",
        ""created_at"": ""2016-03-21T10:59:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-367"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4390c3b4-a386-4f51-81a5-ac03d285809d"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1550"",
        ""timestamp"": ""2016-03-21T10:59:46Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78"",
        ""organization_guid"": ""81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3d40053b-4c54-4bf8-ab0d-bdef18f62978", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-367", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4390c3b4-a386-4f51-81a5-ac03d285809d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1550", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/354cba3b-a0a5-46a6-b276-a3f7d9d44352", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-367", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("4390c3b4-a386-4f51-81a5-ac03d285809d", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1550", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d0057c48-3407-4bd3-a1c0-84d34979660c", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-367", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("4390c3b4-a386-4f51-81a5-ac03d285809d", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1550", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("81f7acf9-b5e4-4ca4-b4c7-43cd2f48cd78", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""033a9dcd-c6a9-4f18-950c-63eded81c834"",
        ""url"": ""/v2/events/18cececf-ed60-4008-b438-f866e53f7a2e"",
        ""created_at"": ""2016-03-21T10:59:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-401"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c9d5b29b-025d-4787-9a4c-a1ac226fd417"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-2028"",
        ""timestamp"": ""2016-03-21T10:59:49Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-2028"",
            ""service_plan_guid"": ""033a9dcd-c6a9-4f18-950c-63eded81c834"",
            ""space_guid"": ""033a9dcd-c6a9-4f18-950c-63eded81c834""
          }
        },
        ""space_guid"": ""033a9dcd-c6a9-4f18-950c-63eded81c834"",
        ""organization_guid"": ""033a9dcd-c6a9-4f18-950c-63eded81c834""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("033a9dcd-c6a9-4f18-950c-63eded81c834", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/18cececf-ed60-4008-b438-f866e53f7a2e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-401", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c9d5b29b-025d-4787-9a4c-a1ac226fd417", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2028", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("033a9dcd-c6a9-4f18-950c-63eded81c834", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("033a9dcd-c6a9-4f18-950c-63eded81c834", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4a0a221c-c966-48e7-bbab-69e5a6e2939d"",
        ""url"": ""/v2/events/19782a96-c6ef-4d9e-91a3-915eb3c9133d"",
        ""created_at"": ""2016-03-21T10:59:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""a09f10cf-803f-4e1e-acdb-55365d9707ab"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2109"",
        ""actee"": ""63cf15bb-9b85-4937-89df-b5ffe3b189f7"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-53"",
        ""timestamp"": ""2016-03-21T10:59:49Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4a0a221c-c966-48e7-bbab-69e5a6e2939d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/19782a96-c6ef-4d9e-91a3-915eb3c9133d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("a09f10cf-803f-4e1e-acdb-55365d9707ab", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2109", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("63cf15bb-9b85-4937-89df-b5ffe3b189f7", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-53", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:49Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b5b03a64-23d0-4e96-9204-6b112b5628f5"",
        ""url"": ""/v2/events/e8774e13-e8c9-4f12-9190-6e40b511ae84"",
        ""created_at"": ""2016-03-21T10:59:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""e40b97ad-8e94-4d5b-894d-36e30a6819b6"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1443"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2016-03-21T10:59:45Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""b5b03a64-23d0-4e96-9204-6b112b5628f5"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b5b03a64-23d0-4e96-9204-6b112b5628f5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e8774e13-e8c9-4f12-9190-6e40b511ae84", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("e40b97ad-8e94-4d5b-894d-36e30a6819b6", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1443", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:45Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b9856167-8bf0-464c-91d0-0555e0c53ace"",
        ""url"": ""/v2/events/55e66da7-6a2a-4afe-8af6-198275f38823"",
        ""created_at"": ""2016-03-21T10:59:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-422"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""9867bf56-abe3-4b1f-9dc5-af85a44e9bdb"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2016-03-21T10:59:50Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b9856167-8bf0-464c-91d0-0555e0c53ace", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/55e66da7-6a2a-4afe-8af6-198275f38823", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-422", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9867bf56-abe3-4b1f-9dc5-af85a44e9bdb", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4b09d60d-8a2c-499a-9fb2-9c419898ccd6"",
        ""url"": ""/v2/events/32967cec-cb2b-45b7-af97-fb0edd278de4"",
        ""created_at"": ""2016-03-21T10:59:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""8e701887-2158-4605-a54b-f3d263debdc5"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2390"",
        ""actee"": ""d15838c9-a1af-4b90-b944-9b7e92123ee4"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2016-03-21T10:59:50Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4b09d60d-8a2c-499a-9fb2-9c419898ccd6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/32967cec-cb2b-45b7-af97-fb0edd278de4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("8e701887-2158-4605-a54b-f3d263debdc5", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2390", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d15838c9-a1af-4b90-b944-9b7e92123ee4", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b7a918b5-b60e-4275-91d3-d9fe61f6cc8a"",
        ""url"": ""/v2/events/686f9232-9091-4279-8253-f7ab56100aeb"",
        ""created_at"": ""2016-03-21T10:59:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.delete-request"",
        ""actor"": ""uaa-id-365"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4948a2af-5b37-45b6-96a6-c02acf684c31"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-20"",
        ""timestamp"": ""2016-03-21T10:59:46Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""b7a918b5-b60e-4275-91d3-d9fe61f6cc8a"",
        ""organization_guid"": ""b7a918b5-b60e-4275-91d3-d9fe61f6cc8a""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteDeleteEventsResponse> page = Utilities.DeserializePage<ListRouteDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b7a918b5-b60e-4275-91d3-d9fe61f6cc8a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/686f9232-9091-4279-8253-f7ab56100aeb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-365", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4948a2af-5b37-45b6-96a6-c02acf684c31", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-20", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:46Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b7a918b5-b60e-4275-91d3-d9fe61f6cc8a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("b7a918b5-b60e-4275-91d3-d9fe61f6cc8a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7e01265c-2576-4009-aa8c-348037862f48"",
        ""url"": ""/v2/events/69aa7395-ffbc-4e00-b925-0baa0415ce2a"",
        ""created_at"": ""2016-03-21T10:59:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-418"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b002b1a1-a957-41a2-8171-9682bdb3df83"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-03-21T10:59:50Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""7e01265c-2576-4009-aa8c-348037862f48"",
        ""organization_guid"": ""7e01265c-2576-4009-aa8c-348037862f48""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7e01265c-2576-4009-aa8c-348037862f48", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/69aa7395-ffbc-4e00-b925-0baa0415ce2a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-418", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b002b1a1-a957-41a2-8171-9682bdb3df83", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:50Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("7e01265c-2576-4009-aa8c-348037862f48", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("7e01265c-2576-4009-aa8c-348037862f48", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""75232624-da9a-49d1-b1c0-51950a3d070e"",
        ""url"": ""/v2/events/2097250c-b5af-4bb7-88e4-6d6804a19084"",
        ""created_at"": ""2016-03-21T10:59:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-385"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""bfb8fa97-228e-48d0-8170-7ded80ed382f"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1798"",
        ""timestamp"": ""2016-03-21T10:59:47Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""75232624-da9a-49d1-b1c0-51950a3d070e"",
        ""organization_guid"": ""75232624-da9a-49d1-b1c0-51950a3d070e""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("75232624-da9a-49d1-b1c0-51950a3d070e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2097250c-b5af-4bb7-88e4-6d6804a19084", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-385", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bfb8fa97-228e-48d0-8170-7ded80ed382f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1798", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:47Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("75232624-da9a-49d1-b1c0-51950a3d070e", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("75232624-da9a-49d1-b1c0-51950a3d070e", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppSshUnauthorizedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5ecc63af-1099-46d3-b33b-60d15227aa34"",
        ""url"": ""/v2/events/e9aad44b-af1a-4547-a899-1c69a7074a0e"",
        ""created_at"": ""2016-03-21T10:59:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-unauthorized"",
        ""actor"": ""uaa-id-393"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b1b684c7-0ed1-4b05-8143-748e1d84548b"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1911"",
        ""timestamp"": ""2016-03-21T10:59:48Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""5ecc63af-1099-46d3-b33b-60d15227aa34"",
        ""organization_guid"": ""5ecc63af-1099-46d3-b33b-60d15227aa34""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppSshUnauthorizedEventsResponse> page = Utilities.DeserializePage<ListAppSshUnauthorizedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5ecc63af-1099-46d3-b33b-60d15227aa34", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e9aad44b-af1a-4547-a899-1c69a7074a0e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.ssh-unauthorized", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-393", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b1b684c7-0ed1-4b05-8143-748e1d84548b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1911", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("5ecc63af-1099-46d3-b33b-60d15227aa34", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("5ecc63af-1099-46d3-b33b-60d15227aa34", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9f53d317-c2d4-4940-8bb1-15bc3ce62442"",
        ""url"": ""/v2/events/2a3816ca-5793-4e1c-9a7f-9f9c1bbab627"",
        ""created_at"": ""2016-03-21T10:59:51Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-430"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""cdece108-75ca-489c-8ef0-810da9269066"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-2444"",
        ""timestamp"": ""2016-03-21T10:59:51Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""9f53d317-c2d4-4940-8bb1-15bc3ce62442"",
        ""organization_guid"": ""9f53d317-c2d4-4940-8bb1-15bc3ce62442""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9f53d317-c2d4-4940-8bb1-15bc3ce62442", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2a3816ca-5793-4e1c-9a7f-9f9c1bbab627", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-430", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("cdece108-75ca-489c-8ef0-810da9269066", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2444", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:51Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9f53d317-c2d4-4940-8bb1-15bc3ce62442", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9f53d317-c2d4-4940-8bb1-15bc3ce62442", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9046a6d8-e005-4a81-b9c3-5205454151e3"",
        ""url"": ""/v2/events/ce6e71b7-ef36-431c-aa26-4fccefce38bf"",
        ""created_at"": ""2016-03-21T10:59:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-399"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""77ec1f32-cf67-4445-8ef4-f0bee6fd2b73"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1999"",
        ""timestamp"": ""2016-03-21T10:59:48Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""9046a6d8-e005-4a81-b9c3-5205454151e3"",
        ""organization_guid"": ""9046a6d8-e005-4a81-b9c3-5205454151e3""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9046a6d8-e005-4a81-b9c3-5205454151e3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ce6e71b7-ef36-431c-aa26-4fccefce38bf", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-399", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("77ec1f32-cf67-4445-8ef4-f0bee6fd2b73", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1999", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-03-21T10:59:48Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9046a6d8-e005-4a81-b9c3-5205454151e3", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9046a6d8-e005-4a81-b9c3-5205454151e3", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}
