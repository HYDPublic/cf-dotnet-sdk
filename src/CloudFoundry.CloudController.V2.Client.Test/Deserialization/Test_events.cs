//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""49f204af-5613-466b-bc5c-7fbe03ddf6a8"",
        ""url"": ""/v2/events/664be805-8def-469a-a0b0-6a2261b63137"",
        ""created_at"": ""2016-05-26T11:34:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-299"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""18a8ab82-f077-41a3-87c1-af42d84dc653"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1446"",
        ""timestamp"": ""2016-05-26T11:34:41Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""49f204af-5613-466b-bc5c-7fbe03ddf6a8"",
        ""organization_guid"": ""49f204af-5613-466b-bc5c-7fbe03ddf6a8""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("49f204af-5613-466b-bc5c-7fbe03ddf6a8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/664be805-8def-469a-a0b0-6a2261b63137", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-299", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("18a8ab82-f077-41a3-87c1-af42d84dc653", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1446", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("49f204af-5613-466b-bc5c-7fbe03ddf6a8", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("49f204af-5613-466b-bc5c-7fbe03ddf6a8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4af65a00-c7a5-416d-9b29-296539747ae1"",
        ""url"": ""/v2/events/91d15d2a-2997-429e-8d77-e5e7b5aec974"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""07a0f50c-7e09-4523-bd7d-6535162d4aab"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1337"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4af65a00-c7a5-416d-9b29-296539747ae1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/91d15d2a-2997-429e-8d77-e5e7b5aec974", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("07a0f50c-7e09-4523-bd7d-6535162d4aab", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1337", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUnbindRouteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0b225ad9-25ea-4361-b6d7-45dbeb84176e"",
        ""url"": ""/v2/events/8115916d-59a7-4b0c-b57e-4a27a8cddafa"",
        ""created_at"": ""2016-05-26T11:34:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.unbind_route"",
        ""actor"": ""uaa-id-307"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0a9c3351-38e7-4079-9254-b05880f247f1"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1563"",
        ""timestamp"": ""2016-05-26T11:34:41Z"",
        ""metadata"": {
          ""request"": {
            ""route_guid"": ""0b225ad9-25ea-4361-b6d7-45dbeb84176e"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""0b225ad9-25ea-4361-b6d7-45dbeb84176e"",
        ""organization_guid"": ""0b225ad9-25ea-4361-b6d7-45dbeb84176e""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUnbindRouteEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceUnbindRouteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0b225ad9-25ea-4361-b6d7-45dbeb84176e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8115916d-59a7-4b0c-b57e-4a27a8cddafa", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.unbind_route", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-307", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0a9c3351-38e7-4079-9254-b05880f247f1", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1563", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0b225ad9-25ea-4361-b6d7-45dbeb84176e", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("0b225ad9-25ea-4361-b6d7-45dbeb84176e", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b731c63d-bc7b-4a2a-9218-efaed0540558"",
        ""url"": ""/v2/events/4c795042-cf4a-41c7-bc56-fbed5b6ef2ca"",
        ""created_at"": ""2016-05-26T11:34:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-329"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""dfe3dac4-e0d1-4369-934e-f03838d13140"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1882"",
        ""timestamp"": ""2016-05-26T11:34:43Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b731c63d-bc7b-4a2a-9218-efaed0540558", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4c795042-cf4a-41c7-bc56-fbed5b6ef2ca", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-329", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("dfe3dac4-e0d1-4369-934e-f03838d13140", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1882", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""526f4bf7-0398-4627-9302-a992cfb0edb8"",
        ""url"": ""/v2/events/d6abc733-6f16-40f7-b96b-d8009d234ffd"",
        ""created_at"": ""2016-05-26T11:34:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-335"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4b7ca325-4381-45d9-9e02-e00ca018dae2"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-26T11:34:43Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""526f4bf7-0398-4627-9302-a992cfb0edb8""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("526f4bf7-0398-4627-9302-a992cfb0edb8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d6abc733-6f16-40f7-b96b-d8009d234ffd", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-335", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4b7ca325-4381-45d9-9e02-e00ca018dae2", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("526f4bf7-0398-4627-9302-a992cfb0edb8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5088040a-02cf-45be-8a07-0d7cd4cbf229"",
        ""url"": ""/v2/events/7c3cab9c-b47d-4993-979e-41401f81ab4c"",
        ""created_at"": ""2016-05-26T11:34:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-301"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""bb27788c-4ff7-4197-a91e-19539329ef28"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1476"",
        ""timestamp"": ""2016-05-26T11:34:41Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""5088040a-02cf-45be-8a07-0d7cd4cbf229"",
        ""organization_guid"": ""5088040a-02cf-45be-8a07-0d7cd4cbf229""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5088040a-02cf-45be-8a07-0d7cd4cbf229", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/7c3cab9c-b47d-4993-979e-41401f81ab4c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-301", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bb27788c-4ff7-4197-a91e-19539329ef28", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1476", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("5088040a-02cf-45be-8a07-0d7cd4cbf229", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("5088040a-02cf-45be-8a07-0d7cd4cbf229", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppSshAuthorizedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9c6d95cb-e2c0-4019-8784-4fd08723e618"",
        ""url"": ""/v2/events/2abbda59-cd3d-48d3-8fdd-cb00de958b08"",
        ""created_at"": ""2016-05-26T11:34:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-authorized"",
        ""actor"": ""uaa-id-323"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ffb1826c-cb98-4652-a352-ce88d7bac58b"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1797"",
        ""timestamp"": ""2016-05-26T11:34:42Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""9c6d95cb-e2c0-4019-8784-4fd08723e618"",
        ""organization_guid"": ""9c6d95cb-e2c0-4019-8784-4fd08723e618""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppSshAuthorizedEventsResponse> page = Utilities.DeserializePage<ListAppSshAuthorizedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9c6d95cb-e2c0-4019-8784-4fd08723e618", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2abbda59-cd3d-48d3-8fdd-cb00de958b08", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.ssh-authorized", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-323", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ffb1826c-cb98-4652-a352-ce88d7bac58b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1797", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9c6d95cb-e2c0-4019-8784-4fd08723e618", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9c6d95cb-e2c0-4019-8784-4fd08723e618", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b14c1406-2226-4797-9bed-9b4f4a5939d7"",
        ""url"": ""/v2/events/155b944a-ef25-44a2-80e0-8a135db4cf97"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-283"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""99e04a3e-026e-40e5-a343-ef7f5dcf63ab"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1221"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1221"",
            ""space_guid"": ""b14c1406-2226-4797-9bed-9b4f4a5939d7""
          }
        },
        ""space_guid"": ""b14c1406-2226-4797-9bed-9b4f4a5939d7"",
        ""organization_guid"": ""b14c1406-2226-4797-9bed-9b4f4a5939d7""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b14c1406-2226-4797-9bed-9b4f4a5939d7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/155b944a-ef25-44a2-80e0-8a135db4cf97", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-283", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("99e04a3e-026e-40e5-a343-ef7f5dcf63ab", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1221", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b14c1406-2226-4797-9bed-9b4f4a5939d7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("b14c1406-2226-4797-9bed-9b4f4a5939d7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a754b08f-e9af-4731-92f5-de8f4ce82061"",
        ""url"": ""/v2/events/9a2d3426-3d12-46a1-aa55-162b576a6f8f"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-275"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b0bbc16d-8806-4825-8581-d9d0cff72213"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1113"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {
          ""request"": {
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""a754b08f-e9af-4731-92f5-de8f4ce82061"",
        ""organization_guid"": ""a754b08f-e9af-4731-92f5-de8f4ce82061""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a754b08f-e9af-4731-92f5-de8f4ce82061", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9a2d3426-3d12-46a1-aa55-162b576a6f8f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-275", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b0bbc16d-8806-4825-8581-d9d0cff72213", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1113", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("a754b08f-e9af-4731-92f5-de8f4ce82061", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a754b08f-e9af-4731-92f5-de8f4ce82061", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cd3ffa8e-7355-4a33-9595-e8ab864e5218"",
        ""url"": ""/v2/events/87800b6e-5dc3-4458-9b11-6a0ff1ea563f"",
        ""created_at"": ""2016-05-26T11:34:44Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""6f71f7ab-394c-4c2a-afae-393cee3cb740"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2152"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2016-05-26T11:34:44Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""cd3ffa8e-7355-4a33-9595-e8ab864e5218"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cd3ffa8e-7355-4a33-9595-e8ab864e5218", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/87800b6e-5dc3-4458-9b11-6a0ff1ea563f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("6f71f7ab-394c-4c2a-afae-393cee3cb740", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2152", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bdcae361-4c17-470b-8128-69c0c78f95c8"",
        ""url"": ""/v2/events/ced397c8-aeb1-45d7-8dd6-75bce70cf707"",
        ""created_at"": ""2016-05-26T11:34:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-317"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5922e75a-cd8c-4dc9-938c-6de867cca646"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1709"",
        ""timestamp"": ""2016-05-26T11:34:42Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""bdcae361-4c17-470b-8128-69c0c78f95c8"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""bdcae361-4c17-470b-8128-69c0c78f95c8"",
        ""organization_guid"": ""bdcae361-4c17-470b-8128-69c0c78f95c8""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bdcae361-4c17-470b-8128-69c0c78f95c8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ced397c8-aeb1-45d7-8dd6-75bce70cf707", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-317", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("5922e75a-cd8c-4dc9-938c-6de867cca646", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1709", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("bdcae361-4c17-470b-8128-69c0c78f95c8", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("bdcae361-4c17-470b-8128-69c0c78f95c8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceBindRouteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8242e97d-7925-4860-b1bf-ee45e791e670"",
        ""url"": ""/v2/events/c4999674-1b6b-4dee-a687-7d9323cd7f38"",
        ""created_at"": ""2016-05-26T11:34:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.bind_route"",
        ""actor"": ""uaa-id-352"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""f1b65219-5b46-43b2-b6b5-c6d854849625"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-2210"",
        ""timestamp"": ""2016-05-26T11:34:45Z"",
        ""metadata"": {
          ""request"": {
            ""route_guid"": ""8242e97d-7925-4860-b1bf-ee45e791e670"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""8242e97d-7925-4860-b1bf-ee45e791e670"",
        ""organization_guid"": ""8242e97d-7925-4860-b1bf-ee45e791e670""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceBindRouteEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceBindRouteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8242e97d-7925-4860-b1bf-ee45e791e670", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c4999674-1b6b-4dee-a687-7d9323cd7f38", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:45Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.bind_route", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-352", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f1b65219-5b46-43b2-b6b5-c6d854849625", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2210", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:45Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8242e97d-7925-4860-b1bf-ee45e791e670", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8242e97d-7925-4860-b1bf-ee45e791e670", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStopEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fd2fec94-9e63-4f96-9278-aa3c9b9000cd"",
        ""url"": ""/v2/events/5bf7a843-2462-41a1-8b37-920cf4e22fcb"",
        ""created_at"": ""2016-05-26T11:34:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-319"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""010cdf44-3750-4616-8e5c-09351128f08e"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-1739"",
        ""timestamp"": ""2016-05-26T11:34:42Z"",
        ""metadata"": {

        },
        ""space_guid"": ""fd2fec94-9e63-4f96-9278-aa3c9b9000cd"",
        ""organization_guid"": ""fd2fec94-9e63-4f96-9278-aa3c9b9000cd""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStopEventsResponse> page = Utilities.DeserializePage<ListAppStopEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fd2fec94-9e63-4f96-9278-aa3c9b9000cd", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5bf7a843-2462-41a1-8b37-920cf4e22fcb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-319", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("010cdf44-3750-4616-8e5c-09351128f08e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("v3-app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1739", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("fd2fec94-9e63-4f96-9278-aa3c9b9000cd", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("fd2fec94-9e63-4f96-9278-aa3c9b9000cd", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5a0d6030-d391-4658-91a6-3d974db5a560"",
    ""url"": ""/v2/events/5f17f226-8943-463e-8c8a-a27345ae17b2"",
    ""created_at"": ""2016-05-26T11:34:38Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-1013"",
    ""actor"": ""c00caaf7-3c9a-46c4-9897-cf69bb8a01cb"",
    ""actor_type"": ""name-1014"",
    ""actor_name"": ""name-1015"",
    ""actee"": ""e500e3e5-1008-4dac-9300-219888d326dc"",
    ""actee_type"": ""name-1016"",
    ""actee_name"": ""name-1017"",
    ""timestamp"": ""2016-05-26T11:34:38Z"",
    ""metadata"": {

    },
    ""space_guid"": ""5a0d6030-d391-4658-91a6-3d974db5a560"",
    ""organization_guid"": ""5a0d6030-d391-4658-91a6-3d974db5a560""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("5a0d6030-d391-4658-91a6-3d974db5a560", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5f17f226-8943-463e-8c8a-a27345ae17b2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1013", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("c00caaf7-3c9a-46c4-9897-cf69bb8a01cb", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-1014", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-1015", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("e500e3e5-1008-4dac-9300-219888d326dc", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-1016", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-1017", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:38Z", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("5a0d6030-d391-4658-91a6-3d974db5a560", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("5a0d6030-d391-4658-91a6-3d974db5a560", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3764a49e-6eb7-4bc7-b001-2495597fd08f"",
        ""url"": ""/v2/events/33292609-fd3e-4ba9-b987-d0143afeab06"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.update"",
        ""actor"": ""uaa-id-287"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""66acd017-8ade-48d6-b6b8-6d643304596b"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-13"",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""3764a49e-6eb7-4bc7-b001-2495597fd08f"",
            ""space_guid"": ""3764a49e-6eb7-4bc7-b001-2495597fd08f""
          }
        },
        ""space_guid"": ""3764a49e-6eb7-4bc7-b001-2495597fd08f"",
        ""organization_guid"": ""3764a49e-6eb7-4bc7-b001-2495597fd08f""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteUpdateEventsResponse> page = Utilities.DeserializePage<ListRouteUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3764a49e-6eb7-4bc7-b001-2495597fd08f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/33292609-fd3e-4ba9-b987-d0143afeab06", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-287", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("66acd017-8ade-48d6-b6b8-6d643304596b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-13", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("3764a49e-6eb7-4bc7-b001-2495597fd08f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("3764a49e-6eb7-4bc7-b001-2495597fd08f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""edc809f3-1452-4d96-b56e-90b19cb16a9f"",
        ""url"": ""/v2/events/bb280ffc-5271-4512-9b4d-27ed000ce10e"",
        ""created_at"": ""2016-05-26T11:34:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""c9bdc751-1385-4676-a6ed-03a7c4fb3375"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1827"",
        ""actee"": ""ebee50ab-ba72-46c4-8980-ecd860a89b86"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2016-05-26T11:34:43Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("edc809f3-1452-4d96-b56e-90b19cb16a9f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/bb280ffc-5271-4512-9b4d-27ed000ce10e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("c9bdc751-1385-4676-a6ed-03a7c4fb3375", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1827", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ebee50ab-ba72-46c4-8980-ecd860a89b86", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6f428b17-ba5e-4c3d-8817-6b489194076b"",
        ""url"": ""/v2/events/d4c1194f-fcad-4274-a48e-054298bd7b62"",
        ""created_at"": ""2016-05-26T11:34:44Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""324ba3c0-967e-49c1-aa31-180e9fe9cfda"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2127"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-05-26T11:34:44Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6f428b17-ba5e-4c3d-8817-6b489194076b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d4c1194f-fcad-4274-a48e-054298bd7b62", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("324ba3c0-967e-49c1-aa31-180e9fe9cfda", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2127", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e67e0b48-e061-464a-b7f5-82ae47194b56"",
        ""url"": ""/v2/events/86f66d57-2683-4931-8c01-ea61a98ea3c5"",
        ""created_at"": ""2016-05-26T11:34:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-337"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1997faad-bbde-4598-a277-1fdbd190a4ee"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1986"",
        ""timestamp"": ""2016-05-26T11:34:43Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""e67e0b48-e061-464a-b7f5-82ae47194b56"",
        ""organization_guid"": ""e67e0b48-e061-464a-b7f5-82ae47194b56""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e67e0b48-e061-464a-b7f5-82ae47194b56", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/86f66d57-2683-4931-8c01-ea61a98ea3c5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-337", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("1997faad-bbde-4598-a277-1fdbd190a4ee", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1986", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("e67e0b48-e061-464a-b7f5-82ae47194b56", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("e67e0b48-e061-464a-b7f5-82ae47194b56", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""869e9fd0-1f29-4630-a20c-896f1d9dac97"",
        ""url"": ""/v2/events/2c14f55a-d736-4d1b-9e3e-b2b3d428efcf"",
        ""created_at"": ""2016-05-26T11:34:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-313"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0e647709-a4d0-4906-8391-f90f54d4f3bb"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-26T11:34:42Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""869e9fd0-1f29-4630-a20c-896f1d9dac97"",
            ""organization_guid"": ""869e9fd0-1f29-4630-a20c-896f1d9dac97""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""869e9fd0-1f29-4630-a20c-896f1d9dac97""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("869e9fd0-1f29-4630-a20c-896f1d9dac97", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2c14f55a-d736-4d1b-9e3e-b2b3d428efcf", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-313", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0e647709-a4d0-4906-8391-f90f54d4f3bb", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("869e9fd0-1f29-4630-a20c-896f1d9dac97", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4562bce1-3218-4884-add7-a8af41be6d77"",
        ""url"": ""/v2/events/22c73618-1d2d-4d39-bf92-cb2552c1a651"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-295"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""64bfa974-f265-4aea-b332-767e9e1ba27d"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1390"",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4562bce1-3218-4884-add7-a8af41be6d77", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/22c73618-1d2d-4d39-bf92-cb2552c1a651", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-295", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("64bfa974-f265-4aea-b332-767e9e1ba27d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1390", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""557ca67d-85d2-4a05-8efe-c5f2dadac902"",
        ""url"": ""/v2/events/cb449fab-d61b-436d-9f11-a43c8659809b"",
        ""created_at"": ""2016-05-26T11:34:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-315"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a70e9628-abcc-48b1-916b-45125ef1a483"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-26T11:34:42Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""557ca67d-85d2-4a05-8efe-c5f2dadac902"",
            ""app_guid"": ""557ca67d-85d2-4a05-8efe-c5f2dadac902""
          }
        },
        ""space_guid"": ""557ca67d-85d2-4a05-8efe-c5f2dadac902"",
        ""organization_guid"": ""557ca67d-85d2-4a05-8efe-c5f2dadac902""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("557ca67d-85d2-4a05-8efe-c5f2dadac902", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cb449fab-d61b-436d-9f11-a43c8659809b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-315", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("a70e9628-abcc-48b1-916b-45125ef1a483", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("557ca67d-85d2-4a05-8efe-c5f2dadac902", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("557ca67d-85d2-4a05-8efe-c5f2dadac902", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""720cf737-66b5-4033-9e80-e5c52dd62cd2"",
        ""url"": ""/v2/events/f326efe3-398b-4544-975b-9350b8bb3d01"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""e9b7bd7e-3e85-4ea6-bf50-64245ad9dcbe"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1195"",
        ""actee"": ""e1f80edc-7dde-4989-8393-cf922ffff666"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1196"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("720cf737-66b5-4033-9e80-e5c52dd62cd2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f326efe3-398b-4544-975b-9350b8bb3d01", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("e9b7bd7e-3e85-4ea6-bf50-64245ad9dcbe", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1195", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e1f80edc-7dde-4989-8393-cf922ffff666", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1196", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ae3083c5-43b6-417d-ab74-82cd7a12f7c9"",
        ""url"": ""/v2/events/05656f82-f6d5-43dd-80a6-5f802a3dced4"",
        ""created_at"": ""2016-05-26T11:34:44Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""e5138a15-ee43-4c35-861e-9081056adfef"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-2177"",
        ""actee"": ""e5138a15-ee43-4c35-861e-9081056adfef"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-2177"",
        ""timestamp"": ""2016-05-26T11:34:44Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""ae3083c5-43b6-417d-ab74-82cd7a12f7c9"",
        ""organization_guid"": ""ae3083c5-43b6-417d-ab74-82cd7a12f7c9""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ae3083c5-43b6-417d-ab74-82cd7a12f7c9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/05656f82-f6d5-43dd-80a6-5f802a3dced4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("e5138a15-ee43-4c35-861e-9081056adfef", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-2177", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e5138a15-ee43-4c35-861e-9081056adfef", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2177", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ae3083c5-43b6-417d-ab74-82cd7a12f7c9", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("ae3083c5-43b6-417d-ab74-82cd7a12f7c9", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceKeyDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d0c37ee2-a535-4864-9eac-d77f6b908454"",
        ""url"": ""/v2/events/fd6e8bbd-d30e-4e56-9631-07968eb78b10"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.delete"",
        ""actor"": ""uaa-id-297"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c1ce5ce3-4be4-4d5b-9db5-00c957d3fb0e"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1421"",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""d0c37ee2-a535-4864-9eac-d77f6b908454"",
        ""organization_guid"": ""d0c37ee2-a535-4864-9eac-d77f6b908454""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceKeyDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceKeyDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d0c37ee2-a535-4864-9eac-d77f6b908454", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fd6e8bbd-d30e-4e56-9631-07968eb78b10", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_key.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-297", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c1ce5ce3-4be4-4d5b-9db5-00c957d3fb0e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_key", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1421", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("d0c37ee2-a535-4864-9eac-d77f6b908454", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d0c37ee2-a535-4864-9eac-d77f6b908454", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f050361a-e747-44e4-bd01-d7eeaa8a72e5"",
        ""url"": ""/v2/events/4829f657-6167-4b9e-9c42-558aafb1affb"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-279"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c3dd1457-3f73-4447-a05d-0edd49141ea1"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1167"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""f050361a-e747-44e4-bd01-d7eeaa8a72e5"",
        ""organization_guid"": ""f050361a-e747-44e4-bd01-d7eeaa8a72e5""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f050361a-e747-44e4-bd01-d7eeaa8a72e5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4829f657-6167-4b9e-9c42-558aafb1affb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-279", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c3dd1457-3f73-4447-a05d-0edd49141ea1", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1167", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("f050361a-e747-44e4-bd01-d7eeaa8a72e5", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f050361a-e747-44e4-bd01-d7eeaa8a72e5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3b6546f8-4835-4764-a63b-fbaecb0f97e7"",
        ""url"": ""/v2/events/1cf6ac55-9a9c-4263-93cb-1b9cdbeae72f"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-273"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""85f22420-154a-4847-91b1-3cf9f1a48e2c"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1085"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""3b6546f8-4835-4764-a63b-fbaecb0f97e7"",
        ""organization_guid"": ""3b6546f8-4835-4764-a63b-fbaecb0f97e7""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3b6546f8-4835-4764-a63b-fbaecb0f97e7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1cf6ac55-9a9c-4263-93cb-1b9cdbeae72f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-273", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("85f22420-154a-4847-91b1-3cf9f1a48e2c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1085", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("3b6546f8-4835-4764-a63b-fbaecb0f97e7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("3b6546f8-4835-4764-a63b-fbaecb0f97e7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStartEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c8c853f4-f4e2-4b99-80f2-f0502494f948"",
        ""url"": ""/v2/events/92ad6cc5-0f03-44c4-bf45-71dbdf37f098"",
        ""created_at"": ""2016-05-26T11:34:44Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-341"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""f212e25b-9cdf-4ab0-9cc8-96c623abc627"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-2040"",
        ""timestamp"": ""2016-05-26T11:34:44Z"",
        ""metadata"": {

        },
        ""space_guid"": ""c8c853f4-f4e2-4b99-80f2-f0502494f948"",
        ""organization_guid"": ""c8c853f4-f4e2-4b99-80f2-f0502494f948""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStartEventsResponse> page = Utilities.DeserializePage<ListAppStartEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c8c853f4-f4e2-4b99-80f2-f0502494f948", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/92ad6cc5-0f03-44c4-bf45-71dbdf37f098", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-341", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f212e25b-9cdf-4ab0-9cc8-96c623abc627", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("v3-app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2040", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("c8c853f4-f4e2-4b99-80f2-f0502494f948", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c8c853f4-f4e2-4b99-80f2-f0502494f948", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceKeyCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0c7ec6e6-fcb4-43b2-9850-ff4d4d292048"",
        ""url"": ""/v2/events/12d01feb-9c42-44a8-941e-dc33d9a2c386"",
        ""created_at"": ""2016-05-26T11:34:44Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.create"",
        ""actor"": ""uaa-id-343"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""24a5ebe5-ba8c-43d1-a4f0-af65c74d8ea5"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-2074"",
        ""timestamp"": ""2016-05-26T11:34:44Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""0c7ec6e6-fcb4-43b2-9850-ff4d4d292048"",
            ""name"": ""name-2074""
          }
        },
        ""space_guid"": ""0c7ec6e6-fcb4-43b2-9850-ff4d4d292048"",
        ""organization_guid"": ""0c7ec6e6-fcb4-43b2-9850-ff4d4d292048""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceKeyCreateEventsResponse> page = Utilities.DeserializePage<ListServiceKeyCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0c7ec6e6-fcb4-43b2-9850-ff4d4d292048", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/12d01feb-9c42-44a8-941e-dc33d9a2c386", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_key.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-343", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("24a5ebe5-ba8c-43d1-a4f0-af65c74d8ea5", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_key", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2074", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0c7ec6e6-fcb4-43b2-9850-ff4d4d292048", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("0c7ec6e6-fcb4-43b2-9850-ff4d4d292048", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a"",
        ""url"": ""/v2/events/716295b9-5544-47ac-9747-6b2dc97fac2b"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1037"",
        ""actor"": ""be0c170e-2f58-40e1-91e3-7954202a90d8"",
        ""actor_type"": ""name-1038"",
        ""actor_name"": ""name-1039"",
        ""actee"": ""11919abf-9675-4940-81ae-422ecf957473"",
        ""actee_type"": ""name-1040"",
        ""actee_name"": ""name-1041"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {

        },
        ""space_guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a"",
        ""organization_guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a"",
        ""url"": ""/v2/events/4c2dd034-24b8-4ba4-a753-45deac61f452"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1045"",
        ""actor"": ""44e3f208-77fd-4ae0-98a7-325312999304"",
        ""actor_type"": ""name-1046"",
        ""actor_name"": ""name-1047"",
        ""actee"": ""4e81449e-d937-4a3e-87a9-13f8bc0386af"",
        ""actee_type"": ""name-1048"",
        ""actee_name"": ""name-1049"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {

        },
        ""space_guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a"",
        ""organization_guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a"",
        ""url"": ""/v2/events/f4e2c7ae-261f-49c8-8dbb-04c5b165b65d"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1053"",
        ""actor"": ""8907fbfe-fc76-4232-a83b-4894fbcaad1c"",
        ""actor_type"": ""name-1054"",
        ""actor_name"": ""name-1055"",
        ""actee"": ""31ca0b74-dd74-479a-8dbd-ff52f3acc16a"",
        ""actee_type"": ""name-1056"",
        ""actee_name"": ""name-1057"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {

        },
        ""space_guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a"",
        ""organization_guid"": ""f617c1f7-1cca-49fc-995c-da914bf5911a""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/716295b9-5544-47ac-9747-6b2dc97fac2b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1037", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("be0c170e-2f58-40e1-91e3-7954202a90d8", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-1038", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1039", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("11919abf-9675-4940-81ae-422ecf957473", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-1040", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1041", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4c2dd034-24b8-4ba4-a753-45deac61f452", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1045", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("44e3f208-77fd-4ae0-98a7-325312999304", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-1046", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-1047", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("4e81449e-d937-4a3e-87a9-13f8bc0386af", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-1048", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1049", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f4e2c7ae-261f-49c8-8dbb-04c5b165b65d", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1053", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("8907fbfe-fc76-4232-a83b-4894fbcaad1c", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-1054", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-1055", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("31ca0b74-dd74-479a-8dbd-ff52f3acc16a", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-1056", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1057", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("f617c1f7-1cca-49fc-995c-da914bf5911a", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b584d67c-27c9-49b9-ba43-fd70e27a9a3d"",
        ""url"": ""/v2/events/31b33761-0b67-4609-9e22-456ad0def59e"",
        ""created_at"": ""2016-05-26T11:34:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.create"",
        ""actor"": ""uaa-id-303"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""8ef77cc4-2eec-44be-84d9-e4d1f7991a99"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-14"",
        ""timestamp"": ""2016-05-26T11:34:41Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""b584d67c-27c9-49b9-ba43-fd70e27a9a3d"",
            ""space_guid"": ""b584d67c-27c9-49b9-ba43-fd70e27a9a3d""
          }
        },
        ""space_guid"": ""b584d67c-27c9-49b9-ba43-fd70e27a9a3d"",
        ""organization_guid"": ""b584d67c-27c9-49b9-ba43-fd70e27a9a3d""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteCreateEventsResponse> page = Utilities.DeserializePage<ListRouteCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b584d67c-27c9-49b9-ba43-fd70e27a9a3d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/31b33761-0b67-4609-9e22-456ad0def59e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-303", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("8ef77cc4-2eec-44be-84d9-e4d1f7991a99", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-14", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b584d67c-27c9-49b9-ba43-fd70e27a9a3d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("b584d67c-27c9-49b9-ba43-fd70e27a9a3d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a5d31e62-be9e-4758-9b62-900320c79d25"",
        ""url"": ""/v2/events/791f4874-3efa-4eb1-af07-bc703e7790b5"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-293"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6e54c2de-6059-4330-a3f7-a62a0604216f"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""a5d31e62-be9e-4758-9b62-900320c79d25"",
            ""organization_guid"": ""a5d31e62-be9e-4758-9b62-900320c79d25""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""a5d31e62-be9e-4758-9b62-900320c79d25""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a5d31e62-be9e-4758-9b62-900320c79d25", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/791f4874-3efa-4eb1-af07-bc703e7790b5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-293", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6e54c2de-6059-4330-a3f7-a62a0604216f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a5d31e62-be9e-4758-9b62-900320c79d25", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a"",
        ""url"": ""/v2/events/59cfdc0e-72a8-4370-8b12-22cb7fa1ef83"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-289"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0668cc87-2e27-4128-929f-7494a56c9521"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1306"",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a"",
        ""organization_guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a"",
        ""url"": ""/v2/events/b54a7fc3-71a8-446b-80c0-99d377f81897"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-289"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0668cc87-2e27-4128-929f-7494a56c9521"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1306"",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a"",
        ""organization_guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a"",
        ""url"": ""/v2/events/fc4c4135-11f5-4c98-a7e8-768f4479bd60"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-289"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0668cc87-2e27-4128-929f-7494a56c9521"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1306"",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a"",
        ""organization_guid"": ""8db44c23-a747-4469-b9bc-6c29f027fb4a""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/59cfdc0e-72a8-4370-8b12-22cb7fa1ef83", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-289", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0668cc87-2e27-4128-929f-7494a56c9521", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1306", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b54a7fc3-71a8-446b-80c0-99d377f81897", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-289", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("0668cc87-2e27-4128-929f-7494a56c9521", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1306", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fc4c4135-11f5-4c98-a7e8-768f4479bd60", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-289", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("0668cc87-2e27-4128-929f-7494a56c9521", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1306", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("8db44c23-a747-4469-b9bc-6c29f027fb4a", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""13c929a9-7ac6-4144-9bae-d54dd94278ef"",
        ""url"": ""/v2/events/0b72ac5a-b950-436b-b047-8396b1769092"",
        ""created_at"": ""2016-05-26T11:34:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-285"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""bde6d98a-ea02-4098-9612-a6b72a498f96"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1249"",
        ""timestamp"": ""2016-05-26T11:34:40Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1249"",
            ""service_plan_guid"": ""13c929a9-7ac6-4144-9bae-d54dd94278ef"",
            ""space_guid"": ""13c929a9-7ac6-4144-9bae-d54dd94278ef"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""13c929a9-7ac6-4144-9bae-d54dd94278ef"",
        ""organization_guid"": ""13c929a9-7ac6-4144-9bae-d54dd94278ef""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("13c929a9-7ac6-4144-9bae-d54dd94278ef", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0b72ac5a-b950-436b-b047-8396b1769092", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-285", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bde6d98a-ea02-4098-9612-a6b72a498f96", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1249", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:40Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("13c929a9-7ac6-4144-9bae-d54dd94278ef", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("13c929a9-7ac6-4144-9bae-d54dd94278ef", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""55bc0dd5-6696-457d-9fc2-77a6992a9147"",
        ""url"": ""/v2/events/80d8d844-7039-46f4-a033-52f919606656"",
        ""created_at"": ""2016-05-26T11:34:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""6d0aecfd-2833-4f82-a0f9-e3a26151be55"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1623"",
        ""actee"": ""83359d39-033d-4121-954a-a877f9c8a387"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-50"",
        ""timestamp"": ""2016-05-26T11:34:41Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("55bc0dd5-6696-457d-9fc2-77a6992a9147", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/80d8d844-7039-46f4-a033-52f919606656", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("6d0aecfd-2833-4f82-a0f9-e3a26151be55", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1623", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("83359d39-033d-4121-954a-a877f9c8a387", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-50", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8a6ee2b9-4ed8-4365-b4ce-877f947cc375"",
        ""url"": ""/v2/events/3a94be30-f3c7-4cac-9fc3-77e2e3d6083b"",
        ""created_at"": ""2016-05-26T11:34:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""300b91d0-62f0-49c7-8e85-bbbe8af3ac89"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1933"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2016-05-26T11:34:43Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""8a6ee2b9-4ed8-4365-b4ce-877f947cc375"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8a6ee2b9-4ed8-4365-b4ce-877f947cc375", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3a94be30-f3c7-4cac-9fc3-77e2e3d6083b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("300b91d0-62f0-49c7-8e85-bbbe8af3ac89", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1933", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4201ab24-14ea-4ea1-89da-1392892fa6d5"",
        ""url"": ""/v2/events/afc75832-5696-47ae-b42d-7f1744a58498"",
        ""created_at"": ""2016-05-26T11:34:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-277"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e7665c22-8778-4d29-88bf-2c3a7bef1651"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2016-05-26T11:34:39Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4201ab24-14ea-4ea1-89da-1392892fa6d5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/afc75832-5696-47ae-b42d-7f1744a58498", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-277", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e7665c22-8778-4d29-88bf-2c3a7bef1651", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:39Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8c7c6102-babe-45de-8ed8-55c74531798c"",
        ""url"": ""/v2/events/fe9a7541-4688-4277-87ad-a97aea92f445"",
        ""created_at"": ""2016-05-26T11:34:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""3e0737c7-7f58-497b-9b82-17c0e62d3091"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1907"",
        ""actee"": ""6ccad2f5-cd7b-40a4-9511-cae49c05482b"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2016-05-26T11:34:43Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8c7c6102-babe-45de-8ed8-55c74531798c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fe9a7541-4688-4277-87ad-a97aea92f445", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("3e0737c7-7f58-497b-9b82-17c0e62d3091", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1907", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6ccad2f5-cd7b-40a4-9511-cae49c05482b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""66852a15-82a0-4d5a-a989-0411c755ece5"",
        ""url"": ""/v2/events/621c9692-31db-4a64-8ce6-e41650a44870"",
        ""created_at"": ""2016-05-26T11:34:44Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.delete-request"",
        ""actor"": ""uaa-id-345"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""419b4f84-1e5a-41e7-a414-3dbe98bb1012"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-16"",
        ""timestamp"": ""2016-05-26T11:34:44Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""66852a15-82a0-4d5a-a989-0411c755ece5"",
        ""organization_guid"": ""66852a15-82a0-4d5a-a989-0411c755ece5""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteDeleteEventsResponse> page = Utilities.DeserializePage<ListRouteDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("66852a15-82a0-4d5a-a989-0411c755ece5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/621c9692-31db-4a64-8ce6-e41650a44870", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-345", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("419b4f84-1e5a-41e7-a414-3dbe98bb1012", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-16", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("66852a15-82a0-4d5a-a989-0411c755ece5", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("66852a15-82a0-4d5a-a989-0411c755ece5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""048c8dc0-f076-4d45-a69c-7de5ca1a9d84"",
        ""url"": ""/v2/events/5589f077-df44-4f27-a91a-11eb089f97eb"",
        ""created_at"": ""2016-05-26T11:34:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-309"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""28f1eea2-00bd-4cde-bcf7-14b201059598"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-26T11:34:41Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""048c8dc0-f076-4d45-a69c-7de5ca1a9d84"",
        ""organization_guid"": ""048c8dc0-f076-4d45-a69c-7de5ca1a9d84""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("048c8dc0-f076-4d45-a69c-7de5ca1a9d84", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5589f077-df44-4f27-a91a-11eb089f97eb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-309", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("28f1eea2-00bd-4cde-bcf7-14b201059598", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("048c8dc0-f076-4d45-a69c-7de5ca1a9d84", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("048c8dc0-f076-4d45-a69c-7de5ca1a9d84", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""47835c5b-8044-40d2-bbff-c1745f411c3f"",
        ""url"": ""/v2/events/97d2bb4c-5b71-4a3e-b87e-70e708c97933"",
        ""created_at"": ""2016-05-26T11:34:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-327"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""54a70fcb-5969-489c-9943-db083d8f7722"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1852"",
        ""timestamp"": ""2016-05-26T11:34:43Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""47835c5b-8044-40d2-bbff-c1745f411c3f"",
        ""organization_guid"": ""47835c5b-8044-40d2-bbff-c1745f411c3f""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("47835c5b-8044-40d2-bbff-c1745f411c3f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/97d2bb4c-5b71-4a3e-b87e-70e708c97933", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-327", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("54a70fcb-5969-489c-9943-db083d8f7722", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1852", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:43Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("47835c5b-8044-40d2-bbff-c1745f411c3f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("47835c5b-8044-40d2-bbff-c1745f411c3f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppSshUnauthorizedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c96d6aea-322f-4d59-aa11-83007991dce3"",
        ""url"": ""/v2/events/17e7c280-237a-4156-bb4d-d38d3dad565d"",
        ""created_at"": ""2016-05-26T11:34:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-unauthorized"",
        ""actor"": ""uaa-id-321"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d084592b-22d5-4833-86f2-c54335ad46cf"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1767"",
        ""timestamp"": ""2016-05-26T11:34:42Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""c96d6aea-322f-4d59-aa11-83007991dce3"",
        ""organization_guid"": ""c96d6aea-322f-4d59-aa11-83007991dce3""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppSshUnauthorizedEventsResponse> page = Utilities.DeserializePage<ListAppSshUnauthorizedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c96d6aea-322f-4d59-aa11-83007991dce3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/17e7c280-237a-4156-bb4d-d38d3dad565d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.ssh-unauthorized", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-321", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d084592b-22d5-4833-86f2-c54335ad46cf", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1767", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:42Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("c96d6aea-322f-4d59-aa11-83007991dce3", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c96d6aea-322f-4d59-aa11-83007991dce3", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1ac724ab-f51a-4bb8-a6d4-f912af1279fe"",
        ""url"": ""/v2/events/dfb9b758-0c46-4eb6-b0a3-00ee0cf6e85a"",
        ""created_at"": ""2016-05-26T11:34:44Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-339"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""3556dd10-4389-4ffa-84b9-482c52920bed"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-2013"",
        ""timestamp"": ""2016-05-26T11:34:44Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""1ac724ab-f51a-4bb8-a6d4-f912af1279fe"",
        ""organization_guid"": ""1ac724ab-f51a-4bb8-a6d4-f912af1279fe""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1ac724ab-f51a-4bb8-a6d4-f912af1279fe", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/dfb9b758-0c46-4eb6-b0a3-00ee0cf6e85a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-339", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3556dd10-4389-4ffa-84b9-482c52920bed", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-2013", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:44Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("1ac724ab-f51a-4bb8-a6d4-f912af1279fe", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1ac724ab-f51a-4bb8-a6d4-f912af1279fe", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""082b7e78-f9c3-4885-bc72-069e2ef4eff2"",
        ""url"": ""/v2/events/147c04eb-5a8c-4390-82b4-c0c6ef1b4c26"",
        ""created_at"": ""2016-05-26T11:34:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-305"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6a089154-d921-476e-8fff-6abd47e9b1f3"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1530"",
        ""timestamp"": ""2016-05-26T11:34:41Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""082b7e78-f9c3-4885-bc72-069e2ef4eff2"",
        ""organization_guid"": ""082b7e78-f9c3-4885-bc72-069e2ef4eff2""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("082b7e78-f9c3-4885-bc72-069e2ef4eff2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/147c04eb-5a8c-4390-82b4-c0c6ef1b4c26", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-305", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6a089154-d921-476e-8fff-6abd47e9b1f3", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1530", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-26T11:34:41Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("082b7e78-f9c3-4885-bc72-069e2ef4eff2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("082b7e78-f9c3-4885-bc72-069e2ef4eff2", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}
