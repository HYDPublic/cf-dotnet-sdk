//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by cf-sdk-builder
// 

using System;
using System.CodeDom.Compiler;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CloudFoundry.CloudController.V2.Client.Data;
using CloudFoundry.CloudController.V2;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {

    
        [TestMethod]
        public void TestListServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""21db497f-e120-42ee-8f2d-7cef67eb29ea"",
        ""url"": ""/v2/events/21db497f-e120-42ee-8f2d-7cef67eb29ea"",
        ""created_at"": ""2015-02-19T03:52:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-115"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""53693103-9cda-494b-a2ec-83923efed21a"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-613"",
        ""timestamp"": ""2015-02-19T03:52:49+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""3eb174d7-9570-4a17-839f-9b2abb5c3d90""
          }
        },
        ""space_guid"": ""5e7b1102-667e-4eac-afb2-33d0283ee051"",
        ""organization_guid"": ""0fb91aa5-e0e3-41fd-88f9-5cb9e5f764fa""
      }
    }
  ]
}";
    
            PagedResponse<ListServiceInstanceUpdateEventsExperimentalResponse> page = Util.DeserializePage<ListServiceInstanceUpdateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("21db497f-e120-42ee-8f2d-7cef67eb29ea", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/21db497f-e120-42ee-8f2d-7cef67eb29ea", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-115", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("53693103-9cda-494b-a2ec-83923efed21a", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-613", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("5e7b1102-667e-4eac-afb2-33d0283ee051", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("0fb91aa5-e0e3-41fd-88f9-5cb9e5f764fa", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceBrokerUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e98b6703-e7b7-4ddb-b001-44fa00706d7d"",
        ""url"": ""/v2/events/e98b6703-e7b7-4ddb-b001-44fa00706d7d"",
        ""created_at"": ""2015-02-19T03:52:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-153"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""bbbcc63c-47d9-43d2-b8d6-b3821ee4501a"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1131"",
        ""timestamp"": ""2015-02-19T03:52:54+00:00"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServiceBrokerUpdateEventsExperimentalResponse> page = Util.DeserializePage<ListServiceBrokerUpdateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("e98b6703-e7b7-4ddb-b001-44fa00706d7d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e98b6703-e7b7-4ddb-b001-44fa00706d7d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:54+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-153", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("bbbcc63c-47d9-43d2-b8d6-b3821ee4501a", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1131", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:54+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e00f8d26-1df8-4334-a6ae-7706bde60cb9"",
        ""url"": ""/v2/events/e00f8d26-1df8-4334-a6ae-7706bde60cb9"",
        ""created_at"": ""2015-02-19T03:52:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""73193c94-c2ca-43fd-8449-1088caa99015"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1186"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-02-19T03:52:54+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServiceDashboardClientDeleteEventsExperimentalResponse> page = Util.DeserializePage<ListServiceDashboardClientDeleteEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("e00f8d26-1df8-4334-a6ae-7706bde60cb9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e00f8d26-1df8-4334-a6ae-7706bde60cb9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:54+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("73193c94-c2ca-43fd-8449-1088caa99015", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-1186", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:54+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f86a450f-4c67-44ae-88d5-1a1db7e1bb7e"",
        ""url"": ""/v2/events/f86a450f-4c67-44ae-88d5-1a1db7e1bb7e"",
        ""created_at"": ""2015-02-19T03:52:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-135"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""58596383-b753-484b-92cc-ba90434ce33f"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-880"",
        ""timestamp"": ""2015-02-19T03:52:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-880"",
            ""service_plan_guid"": ""1c788f6a-b343-47a8-93bc-6f611a92a388"",
            ""space_guid"": ""bfea87f6-d609-434e-a744-4aaebde43c8c""
          }
        },
        ""space_guid"": ""bfea87f6-d609-434e-a744-4aaebde43c8c"",
        ""organization_guid"": ""317750ba-f202-4702-b631-2ef41df8c6e8""
      }
    }
  ]
}";
    
            PagedResponse<ListServiceInstanceCreateEventsExperimentalResponse> page = Util.DeserializePage<ListServiceInstanceCreateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("f86a450f-4c67-44ae-88d5-1a1db7e1bb7e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f86a450f-4c67-44ae-88d5-1a1db7e1bb7e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-135", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("58596383-b753-484b-92cc-ba90434ce33f", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-880", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("bfea87f6-d609-434e-a744-4aaebde43c8c", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("317750ba-f202-4702-b631-2ef41df8c6e8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f7cd0f95-2868-4fcd-8bdc-3b5b37ac28d3"",
        ""url"": ""/v2/events/f7cd0f95-2868-4fcd-8bdc-3b5b37ac28d3"",
        ""created_at"": ""2015-02-19T03:52:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-133"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e21455d2-ab2d-4462-88dc-76496bd54c38"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-852"",
        ""timestamp"": ""2015-02-19T03:52:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""5090d392-4529-46fb-a8b9-c34110d7ea50"",
        ""organization_guid"": ""02ac448a-165a-43d6-99ad-b41509633964""
      }
    }
  ]
}";
    
            PagedResponse<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse> page = Util.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("f7cd0f95-2868-4fcd-8bdc-3b5b37ac28d3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f7cd0f95-2868-4fcd-8bdc-3b5b37ac28d3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-133", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("e21455d2-ab2d-4462-88dc-76496bd54c38", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-852", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("5090d392-4529-46fb-a8b9-c34110d7ea50", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("02ac448a-165a-43d6-99ad-b41509633964", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2c05bedf-ed05-4258-97f0-d34fd2142b50"",
        ""url"": ""/v2/events/2c05bedf-ed05-4258-97f0-d34fd2142b50"",
        ""created_at"": ""2015-02-19T03:52:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-165"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e936d845-755b-4210-b79a-6c9606b8e49a"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1295"",
        ""timestamp"": ""2015-02-19T03:52:55+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""52e4988a-3514-4da1-8cdb-49ed8c84f8a2"",
        ""organization_guid"": ""0726035d-3ac0-4576-9dbe-3b7f93dfd413""
      }
    }
  ]
}";
    
            PagedResponse<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse> page = Util.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("2c05bedf-ed05-4258-97f0-d34fd2142b50", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2c05bedf-ed05-4258-97f0-d34fd2142b50", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-165", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("e936d845-755b-4210-b79a-6c9606b8e49a", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1295", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("52e4988a-3514-4da1-8cdb-49ed8c84f8a2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("0726035d-3ac0-4576-9dbe-3b7f93dfd413", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServicePlanDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""609f21db-e8a5-4be1-a88c-9cd1a3bb75fa"",
        ""url"": ""/v2/events/609f21db-e8a5-4be1-a88c-9cd1a3bb75fa"",
        ""created_at"": ""2015-02-19T03:52:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""95a381e0-4fb6-4c19-a3de-7c97a527d6bd"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1211"",
        ""actee"": ""abf3f7c2-2682-4bef-8d46-289a6c571066"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1212"",
        ""timestamp"": ""2015-02-19T03:52:55+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServicePlanDeleteEventsExperimentalResponse> page = Util.DeserializePage<ListServicePlanDeleteEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("609f21db-e8a5-4be1-a88c-9cd1a3bb75fa", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/609f21db-e8a5-4be1-a88c-9cd1a3bb75fa", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("95a381e0-4fb6-4c19-a3de-7c97a527d6bd", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-1211", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("abf3f7c2-2682-4bef-8d46-289a6c571066", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1212", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""27a32c30-6a78-402e-a842-6efefd771a82"",
        ""url"": ""/v2/events/27a32c30-6a78-402e-a842-6efefd771a82"",
        ""created_at"": ""2015-02-19T03:52:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""ce985e77-097d-4c38-9dd2-09d850446c58"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-667"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-02-19T03:52:50+00:00"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""ce985e77-097d-4c38-9dd2-09d850446c58"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServiceCreateEventsExperimentalResponse> page = Util.DeserializePage<ListServiceCreateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("27a32c30-6a78-402e-a842-6efefd771a82", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/27a32c30-6a78-402e-a842-6efefd771a82", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:50+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("ce985e77-097d-4c38-9dd2-09d850446c58", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-667", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:50+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c2e76781-3bf7-4a52-b902-3ff6bc899a54"",
        ""url"": ""/v2/events/c2e76781-3bf7-4a52-b902-3ff6bc899a54"",
        ""created_at"": ""2015-02-19T03:52:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-139"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""520b7eac-28cc-4efa-a641-e485f5489e1a"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-937"",
        ""timestamp"": ""2015-02-19T03:52:52+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""520b7eac-28cc-4efa-a641-e485f5489e1a"",
        ""organization_guid"": ""73cb21d4-963f-414e-beeb-1dc9a3bb9a09""
      }
    }
  ]
}";
    
            PagedResponse<ListSpaceDeleteEventsResponse> page = Util.DeserializePage<ListSpaceDeleteEventsResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("c2e76781-3bf7-4a52-b902-3ff6bc899a54", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c2e76781-3bf7-4a52-b902-3ff6bc899a54", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-139", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("520b7eac-28cc-4efa-a641-e485f5489e1a", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-937", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("520b7eac-28cc-4efa-a641-e485f5489e1a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("73cb21d4-963f-414e-beeb-1dc9a3bb9a09", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceBrokerCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0de353a2-9e8c-48d8-be67-9f3d51c85742"",
        ""url"": ""/v2/events/0de353a2-9e8c-48d8-be67-9f3d51c85742"",
        ""created_at"": ""2015-02-19T03:52:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-123"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""51feeb6d-63b6-4aaf-8b37-cd13b081b647"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-02-19T03:52:50+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServiceBrokerCreateEventsExperimentalResponse> page = Util.DeserializePage<ListServiceBrokerCreateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("0de353a2-9e8c-48d8-be67-9f3d51c85742", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0de353a2-9e8c-48d8-be67-9f3d51c85742", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:50+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-123", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("51feeb6d-63b6-4aaf-8b37-cd13b081b647", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:50+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f25c7a54-379d-49a6-b25a-d7166ce5b98c"",
        ""url"": ""/v2/events/f25c7a54-379d-49a6-b25a-d7166ce5b98c"",
        ""created_at"": ""2015-02-19T03:52:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""30efd524-3d80-42a4-bae1-3c5c500d57e7"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-770"",
        ""actee"": ""0c13d9ab-a75b-4796-b770-7607bc4238d1"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-02-19T03:52:51+00:00"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServiceUpdateEventsExperimentalResponse> page = Util.DeserializePage<ListServiceUpdateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("f25c7a54-379d-49a6-b25a-d7166ce5b98c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f25c7a54-379d-49a6-b25a-d7166ce5b98c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:51+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("30efd524-3d80-42a4-bae1-3c5c500d57e7", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-770", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("0c13d9ab-a75b-4796-b770-7607bc4238d1", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:51+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceBrokerDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3e2692f3-3fdf-4966-b0e5-70986aaf7ac3"",
        ""url"": ""/v2/events/3e2692f3-3fdf-4966-b0e5-70986aaf7ac3"",
        ""created_at"": ""2015-02-19T03:52:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-141"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""3d8f22c7-b922-451d-bfe4-63c94b55ac1e"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-964"",
        ""timestamp"": ""2015-02-19T03:52:52+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServiceBrokerDeleteEventsExperimentalResponse> page = Util.DeserializePage<ListServiceBrokerDeleteEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("3e2692f3-3fdf-4966-b0e5-70986aaf7ac3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/3e2692f3-3fdf-4966-b0e5-70986aaf7ac3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-141", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("3d8f22c7-b922-451d-bfe4-63c94b55ac1e", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-964", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""96f014f0-c6b5-4ab0-9a4b-02a4e6f6ce51"",
        ""url"": ""/v2/events/96f014f0-c6b5-4ab0-9a4b-02a4e6f6ce51"",
        ""created_at"": ""2015-02-19T03:52:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""e07d09ed-e142-499e-ae8f-ea06a5f69198"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-692"",
        ""actee"": ""ae91a8ae-8d47-46cf-a97f-77f5fcd5db2b"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-32"",
        ""timestamp"": ""2015-02-19T03:52:50+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServiceDeleteEventsExperimentalResponse> page = Util.DeserializePage<ListServiceDeleteEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("96f014f0-c6b5-4ab0-9a4b-02a4e6f6ce51", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/96f014f0-c6b5-4ab0-9a4b-02a4e6f6ce51", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:50+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("e07d09ed-e142-499e-ae8f-ea06a5f69198", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-692", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("ae91a8ae-8d47-46cf-a97f-77f5fcd5db2b", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("label-32", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:50+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServicePlanUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ae5fcdf6-decf-4f89-8222-9fb795234488"",
        ""url"": ""/v2/events/ae5fcdf6-decf-4f89-8222-9fb795234488"",
        ""created_at"": ""2015-02-19T03:52:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""f4aed8d8-f23a-4c7d-b26a-ee7cbc43e40e"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-826"",
        ""actee"": ""b81a8972-a2cf-421e-964e-005dbdac5247"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-02-19T03:52:51+00:00"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServicePlanUpdateEventsExperimentalResponse> page = Util.DeserializePage<ListServicePlanUpdateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("ae5fcdf6-decf-4f89-8222-9fb795234488", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ae5fcdf6-decf-4f89-8222-9fb795234488", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:51+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("f4aed8d8-f23a-4c7d-b26a-ee7cbc43e40e", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-826", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("b81a8972-a2cf-421e-964e-005dbdac5247", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:51+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d7658e81-cd00-4cd2-b106-9f9a1aa3376e"",
        ""url"": ""/v2/events/d7658e81-cd00-4cd2-b106-9f9a1aa3376e"",
        ""created_at"": ""2015-02-19T03:52:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-172"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""2fac9c08-5d28-4a61-83fd-5b4687b84da3"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-02-19T03:52:56+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""48270449-6d46-499b-8e0c-e768a079e7cf"",
            ""organization_guid"": ""a2a6eb79-6d20-4d7a-af40-a0f0b4338eec""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""a2a6eb79-6d20-4d7a-af40-a0f0b4338eec""
      }
    }
  ]
}";
    
            PagedResponse<ListServicePlanVisibilityCreateEventsExperimentalResponse> page = Util.DeserializePage<ListServicePlanVisibilityCreateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("d7658e81-cd00-4cd2-b106-9f9a1aa3376e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d7658e81-cd00-4cd2-b106-9f9a1aa3376e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-172", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("2fac9c08-5d28-4a61-83fd-5b4687b84da3", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("a2a6eb79-6d20-4d7a-af40-a0f0b4338eec", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceBindingCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f8ffda34-f045-4e7f-ad67-1a87762e993c"",
        ""url"": ""/v2/events/f8ffda34-f045-4e7f-ad67-1a87762e993c"",
        ""created_at"": ""2015-02-19T03:52:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-129"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""97b97051-04f3-421d-8627-5fa1c36b163d"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-02-19T03:52:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""1671a0e4-c2e9-46c0-a6cd-9c60c24f8309"",
            ""app_guid"": ""82fe8d91-cc24-4eae-a339-4bdb569f5fc8""
          }
        },
        ""space_guid"": ""72fa615a-e850-4c98-87af-e71b83bccc41"",
        ""organization_guid"": ""14f31b4d-839c-4c04-a1b0-09b58cd1d4c0""
      }
    }
  ]
}";
    
            PagedResponse<ListServiceBindingCreateEventsExperimentalResponse> page = Util.DeserializePage<ListServiceBindingCreateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("f8ffda34-f045-4e7f-ad67-1a87762e993c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f8ffda34-f045-4e7f-ad67-1a87762e993c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:51+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-129", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("97b97051-04f3-421d-8627-5fa1c36b163d", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:51+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("72fa615a-e850-4c98-87af-e71b83bccc41", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("14f31b4d-839c-4c04-a1b0-09b58cd1d4c0", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServicePlanCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c0f30d93-10fa-4260-abbf-68c6aceaf32a"",
        ""url"": ""/v2/events/c0f30d93-10fa-4260-abbf-68c6aceaf32a"",
        ""created_at"": ""2015-02-19T03:52:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""fd8b6a54-89b0-48ca-a3e7-6197be6b53e9"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-642"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-02-19T03:52:50+00:00"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""67c2b220-c89e-4abf-a572-35d28b5c8799"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServicePlanCreateEventsExperimentalResponse> page = Util.DeserializePage<ListServicePlanCreateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("c0f30d93-10fa-4260-abbf-68c6aceaf32a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/c0f30d93-10fa-4260-abbf-68c6aceaf32a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:50+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("fd8b6a54-89b0-48ca-a3e7-6197be6b53e9", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-642", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:50+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d9244f40-c330-4f34-b35c-2c1c55100564"",
        ""url"": ""/v2/events/d9244f40-c330-4f34-b35c-2c1c55100564"",
        ""created_at"": ""2015-02-19T03:52:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""28881be5-2966-4c61-b0f5-46d6adeb14dd"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1377"",
        ""actee"": ""28881be5-2966-4c61-b0f5-46d6adeb14dd"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1377"",
        ""timestamp"": ""2015-02-19T03:52:56+00:00"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""065b7ec7-1754-4592-8c2f-69813fc33113"",
        ""organization_guid"": ""85770395-01fd-438f-b9c5-a833e7139fe2""
      }
    }
  ]
}";
    
            PagedResponse<ListAppExitedEventsResponse> page = Util.DeserializePage<ListAppExitedEventsResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("d9244f40-c330-4f34-b35c-2c1c55100564", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d9244f40-c330-4f34-b35c-2c1c55100564", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("28881be5-2966-4c61-b0f5-46d6adeb14dd", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-1377", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("28881be5-2966-4c61-b0f5-46d6adeb14dd", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1377", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("065b7ec7-1754-4592-8c2f-69813fc33113", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("85770395-01fd-438f-b9c5-a833e7139fe2", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""29433229-2460-4d71-bf4e-263af84ba966"",
    ""url"": ""/v2/events/29433229-2460-4d71-bf4e-263af84ba966"",
    ""created_at"": ""2015-02-19T03:52:56+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-1410"",
    ""actor"": ""guid-631df2fc-417f-4ba6-9c88-4f5377b9e2b9"",
    ""actor_type"": ""name-1411"",
    ""actor_name"": ""name-1412"",
    ""actee"": ""guid-9200d3b1-015c-4b3d-bc9a-06fd999f5e79"",
    ""actee_type"": ""name-1413"",
    ""actee_name"": ""name-1414"",
    ""timestamp"": ""2015-02-19T03:52:56+00:00"",
    ""metadata"": {

    },
    ""space_guid"": ""bcc37e3c-d2c9-42b7-9e58-ed4ea2c5c612"",
    ""organization_guid"": ""1c205698-e6ea-4d51-8793-553333ba461d""
  }
}";
    
            RetrieveEventResponse obj = Util.DeserializeJson<RetrieveEventResponse>(json);
        
            Assert.AreEqual("29433229-2460-4d71-bf4e-263af84ba966", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/29433229-2460-4d71-bf4e-263af84ba966", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1410", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("guid-631df2fc-417f-4ba6-9c88-4f5377b9e2b9", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-1411", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-1412", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("guid-9200d3b1-015c-4b3d-bc9a-06fd999f5e79", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-1413", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-1414", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(obj.Timestamp), true);
            
            Assert.AreEqual("bcc37e3c-d2c9-42b7-9e58-ed4ea2c5c612", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("1c205698-e6ea-4d51-8793-553333ba461d", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            
            
        }

    
        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a4163ff8-67d2-4c0a-ab76-0f9f7ed1a7ec"",
        ""url"": ""/v2/events/a4163ff8-67d2-4c0a-ab76-0f9f7ed1a7ec"",
        ""created_at"": ""2015-02-19T03:52:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-145"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""16b6a72b-468b-404f-883d-f0d4f9b2acae"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1020"",
        ""timestamp"": ""2015-02-19T03:52:53+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""c4389862-255a-46ea-87d3-6a311e4cc148"",
        ""organization_guid"": ""046afceb-04df-4def-9aa4-9e8e46835b27""
      }
    }
  ]
}";
    
            PagedResponse<ListAppDeleteEventsResponse> page = Util.DeserializePage<ListAppDeleteEventsResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("a4163ff8-67d2-4c0a-ab76-0f9f7ed1a7ec", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a4163ff8-67d2-4c0a-ab76-0f9f7ed1a7ec", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-145", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("16b6a72b-468b-404f-883d-f0d4f9b2acae", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1020", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:53+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("c4389862-255a-46ea-87d3-6a311e4cc148", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("046afceb-04df-4def-9aa4-9e8e46835b27", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5623949e-2b80-471e-83d3-dc7db28110bc"",
        ""url"": ""/v2/events/5623949e-2b80-471e-83d3-dc7db28110bc"",
        ""created_at"": ""2015-02-19T03:52:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-163"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0f988c53-ad99-4edf-b6a7-4828c3ae848a"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1266"",
        ""timestamp"": ""2015-02-19T03:52:55+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""cebc71f4-4e94-42d4-8a3b-6c6a2bb172ca"",
        ""organization_guid"": ""c0abc353-23a1-4f1d-861d-a7da6cc3f1cd""
      }
    }
  ]
}";
    
            PagedResponse<ListAppUpdateEventsResponse> page = Util.DeserializePage<ListAppUpdateEventsResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("5623949e-2b80-471e-83d3-dc7db28110bc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5623949e-2b80-471e-83d3-dc7db28110bc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-163", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("0f988c53-ad99-4edf-b6a7-4828c3ae848a", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1266", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("cebc71f4-4e94-42d4-8a3b-6c6a2bb172ca", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("c0abc353-23a1-4f1d-861d-a7da6cc3f1cd", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d48820f2-acf2-4c23-ae67-f7968e06be4a"",
        ""url"": ""/v2/events/d48820f2-acf2-4c23-ae67-f7968e06be4a"",
        ""created_at"": ""2015-02-19T03:52:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-149"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""7538a5b6-5cab-4be1-8dbf-9b8783ee94f5"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1077"",
        ""timestamp"": ""2015-02-19T03:52:53+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1077"",
            ""space_guid"": ""1e141faf-1926-4602-889d-93e36882448b""
          }
        },
        ""space_guid"": ""1e141faf-1926-4602-889d-93e36882448b"",
        ""organization_guid"": ""73e55c92-8b84-4b7a-855e-963d5a9d1d1c""
      }
    }
  ]
}";
    
            PagedResponse<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse> page = Util.DeserializePage<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("d48820f2-acf2-4c23-ae67-f7968e06be4a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d48820f2-acf2-4c23-ae67-f7968e06be4a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-149", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("7538a5b6-5cab-4be1-8dbf-9b8783ee94f5", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1077", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:53+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("1e141faf-1926-4602-889d-93e36882448b", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("73e55c92-8b84-4b7a-855e-963d5a9d1d1c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5acd88e0-0a85-47d8-b44f-cd09fe6931dc"",
        ""url"": ""/v2/events/5acd88e0-0a85-47d8-b44f-cd09fe6931dc"",
        ""created_at"": ""2015-02-19T03:52:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-167"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""a5a6cd3c-218b-4301-a373-bea43f934aa2"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1323"",
        ""timestamp"": ""2015-02-19T03:52:56+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""a5a6cd3c-218b-4301-a373-bea43f934aa2"",
        ""organization_guid"": ""e63c105c-2386-44d9-83f0-4e76e5402387""
      }
    }
  ]
}";
    
            PagedResponse<ListSpaceUpdateEventsResponse> page = Util.DeserializePage<ListSpaceUpdateEventsResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("5acd88e0-0a85-47d8-b44f-cd09fe6931dc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5acd88e0-0a85-47d8-b44f-cd09fe6931dc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-167", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("a5a6cd3c-218b-4301-a373-bea43f934aa2", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1323", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("a5a6cd3c-218b-4301-a373-bea43f934aa2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("e63c105c-2386-44d9-83f0-4e76e5402387", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e745dc7b-01d7-4ad2-b4f0-5cc5fa19630e"",
        ""url"": ""/v2/events/e745dc7b-01d7-4ad2-b4f0-5cc5fa19630e"",
        ""created_at"": ""2015-02-19T03:52:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-565"",
        ""actor"": ""guid-5dc91dc5-73f4-4375-a4b6-5299679230a2"",
        ""actor_type"": ""name-566"",
        ""actor_name"": ""name-567"",
        ""actee"": ""guid-ac85b6c4-51a8-40a5-b11c-72189c3bc7e8"",
        ""actee_type"": ""name-568"",
        ""actee_name"": ""name-569"",
        ""timestamp"": ""2015-02-19T03:52:49+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""cbc0e6d5-56ab-4144-a1ae-3ed9004b2c62"",
        ""organization_guid"": ""5e8ca16b-2781-497a-8295-cf1ad493b58b""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""07e45357-1a98-431d-9185-147994574452"",
        ""url"": ""/v2/events/07e45357-1a98-431d-9185-147994574452"",
        ""created_at"": ""2015-02-19T03:52:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-573"",
        ""actor"": ""guid-65c84d32-15b6-4c5b-9c46-af6f85a36859"",
        ""actor_type"": ""name-574"",
        ""actor_name"": ""name-575"",
        ""actee"": ""guid-d7656286-fcc9-498b-af36-03c5b241b263"",
        ""actee_type"": ""name-576"",
        ""actee_name"": ""name-577"",
        ""timestamp"": ""2015-02-19T03:52:49+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""f20bee1b-5ad3-403b-9678-7bef4c8e242e"",
        ""organization_guid"": ""27411a1b-4b78-4be7-aaa7-9facf709aebd""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""9a9cf8f3-29f7-4b70-81bb-c5cbb87a41dd"",
        ""url"": ""/v2/events/9a9cf8f3-29f7-4b70-81bb-c5cbb87a41dd"",
        ""created_at"": ""2015-02-19T03:52:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-581"",
        ""actor"": ""guid-ca2c6fe8-6245-4b00-a818-81de7edda5f1"",
        ""actor_type"": ""name-582"",
        ""actor_name"": ""name-583"",
        ""actee"": ""guid-63dadfe3-2bc0-490a-aeb7-00408a965f74"",
        ""actee_type"": ""name-584"",
        ""actee_name"": ""name-585"",
        ""timestamp"": ""2015-02-19T03:52:49+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""b52add00-cede-4009-88c8-e1fb0657794b"",
        ""organization_guid"": ""2e3c8fc1-7861-4cd6-9b7e-06a3dede41bb""
      }
    }
  ]
}";
    
            PagedResponse<ListAllEventsResponse> page = Util.DeserializePage<ListAllEventsResponse>(json);
        
            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("e745dc7b-01d7-4ad2-b4f0-5cc5fa19630e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e745dc7b-01d7-4ad2-b4f0-5cc5fa19630e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-565", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("guid-5dc91dc5-73f4-4375-a4b6-5299679230a2", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("name-566", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-567", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("guid-ac85b6c4-51a8-40a5-b11c-72189c3bc7e8", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("name-568", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-569", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("cbc0e6d5-56ab-4144-a1ae-3ed9004b2c62", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("5e8ca16b-2781-497a-8295-cf1ad493b58b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
            
                Assert.AreEqual("07e45357-1a98-431d-9185-147994574452", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/07e45357-1a98-431d-9185-147994574452", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:49+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-573", TestUtil.ToTestableString(page[1].Type), true);
                  Assert.AreEqual("guid-65c84d32-15b6-4c5b-9c46-af6f85a36859", TestUtil.ToTestableString(page[1].Actor), true);
                  Assert.AreEqual("name-574", TestUtil.ToTestableString(page[1].ActorType), true);
                  Assert.AreEqual("name-575", TestUtil.ToTestableString(page[1].ActorName), true);
                  Assert.AreEqual("guid-d7656286-fcc9-498b-af36-03c5b241b263", TestUtil.ToTestableString(page[1].Actee), true);
                  Assert.AreEqual("name-576", TestUtil.ToTestableString(page[1].ActeeType), true);
                  Assert.AreEqual("name-577", TestUtil.ToTestableString(page[1].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:49+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
                  
                  Assert.AreEqual("f20bee1b-5ad3-403b-9678-7bef4c8e242e", TestUtil.ToTestableString(page[1].SpaceGuid), true);
                  Assert.AreEqual("27411a1b-4b78-4be7-aaa7-9facf709aebd", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
               
               
            
            
                Assert.AreEqual("9a9cf8f3-29f7-4b70-81bb-c5cbb87a41dd", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9a9cf8f3-29f7-4b70-81bb-c5cbb87a41dd", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:49+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-581", TestUtil.ToTestableString(page[2].Type), true);
                  Assert.AreEqual("guid-ca2c6fe8-6245-4b00-a818-81de7edda5f1", TestUtil.ToTestableString(page[2].Actor), true);
                  Assert.AreEqual("name-582", TestUtil.ToTestableString(page[2].ActorType), true);
                  Assert.AreEqual("name-583", TestUtil.ToTestableString(page[2].ActorName), true);
                  Assert.AreEqual("guid-63dadfe3-2bc0-490a-aeb7-00408a965f74", TestUtil.ToTestableString(page[2].Actee), true);
                  Assert.AreEqual("name-584", TestUtil.ToTestableString(page[2].ActeeType), true);
                  Assert.AreEqual("name-585", TestUtil.ToTestableString(page[2].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:49+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
                  
                  Assert.AreEqual("b52add00-cede-4009-88c8-e1fb0657794b", TestUtil.ToTestableString(page[2].SpaceGuid), true);
                  Assert.AreEqual("2e3c8fc1-7861-4cd6-9b7e-06a3dede41bb", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1f368d20-ea75-438f-b93d-c00c1460cbb0"",
        ""url"": ""/v2/events/1f368d20-ea75-438f-b93d-c00c1460cbb0"",
        ""created_at"": ""2015-02-19T03:52:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""9a37ecc9-5f72-4574-b04b-df217d19d871"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1106"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-02-19T03:52:54+00:00"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
    
            PagedResponse<ListServiceDashboardClientCreateEventsExperimentalResponse> page = Util.DeserializePage<ListServiceDashboardClientCreateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("1f368d20-ea75-438f-b93d-c00c1460cbb0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/1f368d20-ea75-438f-b93d-c00c1460cbb0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:54+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("9a37ecc9-5f72-4574-b04b-df217d19d871", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("name-1106", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:54+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ee89991b-2419-4954-ac98-13ae778718fc"",
        ""url"": ""/v2/events/ee89991b-2419-4954-ac98-13ae778718fc"",
        ""created_at"": ""2015-02-19T03:52:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-147"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""889f05d1-a510-4392-8cda-6e731189331c"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-02-19T03:52:53+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""f0c07831-07ba-4d81-b340-deb251bd30ca"",
            ""organization_guid"": ""4dccbe5b-e026-4088-bcd3-e5356de2e8cb""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""4dccbe5b-e026-4088-bcd3-e5356de2e8cb""
      }
    }
  ]
}";
    
            PagedResponse<ListServicePlanVisibilityUpdateEventsExperimentalResponse> page = Util.DeserializePage<ListServicePlanVisibilityUpdateEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("ee89991b-2419-4954-ac98-13ae778718fc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ee89991b-2419-4954-ac98-13ae778718fc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-147", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("889f05d1-a510-4392-8cda-6e731189331c", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:53+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("4dccbe5b-e026-4088-bcd3-e5356de2e8cb", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4f551ccd-b308-441c-8d12-8de795ef2473"",
        ""url"": ""/v2/events/4f551ccd-b308-441c-8d12-8de795ef2473"",
        ""created_at"": ""2015-02-19T03:52:51+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-125"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""ba5adb35-e148-4318-b49b-cbb34103bc32"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-741"",
        ""timestamp"": ""2015-02-19T03:52:51+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""d5d12f76-fa3f-44a5-8629-10402bd2ab6a"",
        ""organization_guid"": ""b0db3edd-a8bc-43b7-945e-fb9fd6620aa2""
      }
    }
  ]
}";
    
            PagedResponse<ListAppCreateEventsResponse> page = Util.DeserializePage<ListAppCreateEventsResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("4f551ccd-b308-441c-8d12-8de795ef2473", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4f551ccd-b308-441c-8d12-8de795ef2473", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:51+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-125", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("ba5adb35-e148-4318-b49b-cbb34103bc32", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-741", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:51+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("d5d12f76-fa3f-44a5-8629-10402bd2ab6a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("b0db3edd-a8bc-43b7-945e-fb9fd6620aa2", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e0a8a056-30de-4dcd-9e79-372dd7cde8dc"",
        ""url"": ""/v2/events/e0a8a056-30de-4dcd-9e79-372dd7cde8dc"",
        ""created_at"": ""2015-02-19T03:52:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-155"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""6313de0a-5953-409c-a58e-72919d2f4983"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1156"",
        ""timestamp"": ""2015-02-19T03:52:54+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""7fc242f6-44dc-4163-a080-72422049c0c0"",
        ""organization_guid"": ""12e30dc9-a28a-425e-9f7d-45952871a5da""
      }
    }
  ]
}";
    
            PagedResponse<ListServiceInstanceDeleteEventsExperimentalResponse> page = Util.DeserializePage<ListServiceInstanceDeleteEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("e0a8a056-30de-4dcd-9e79-372dd7cde8dc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/e0a8a056-30de-4dcd-9e79-372dd7cde8dc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:54+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-155", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("6313de0a-5953-409c-a58e-72919d2f4983", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1156", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:54+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("7fc242f6-44dc-4163-a080-72422049c0c0", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("12e30dc9-a28a-425e-9f7d-45952871a5da", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""87190f89-9833-4b16-90b1-a892a8269f93"",
        ""url"": ""/v2/events/87190f89-9833-4b16-90b1-a892a8269f93"",
        ""created_at"": ""2015-02-19T03:52:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-161"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""23254678-34f4-4495-9ebe-7ddfa7c8e777"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1237"",
        ""timestamp"": ""2015-02-19T03:52:55+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""141613df-dba9-4c54-9c6f-ea8531238fc3"",
        ""organization_guid"": ""6b82d972-70a8-4937-beae-6ec349af76b6""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""5ff6df41-c35e-4825-9be0-75e41c4a9d6e"",
        ""url"": ""/v2/events/5ff6df41-c35e-4825-9be0-75e41c4a9d6e"",
        ""created_at"": ""2015-02-19T03:52:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-161"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""23254678-34f4-4495-9ebe-7ddfa7c8e777"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1237"",
        ""timestamp"": ""2015-02-19T03:52:55+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""141613df-dba9-4c54-9c6f-ea8531238fc3"",
        ""organization_guid"": ""6b82d972-70a8-4937-beae-6ec349af76b6""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""913cea46-6ee7-495c-8f23-d71a8974d360"",
        ""url"": ""/v2/events/913cea46-6ee7-495c-8f23-d71a8974d360"",
        ""created_at"": ""2015-02-19T03:52:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-161"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""23254678-34f4-4495-9ebe-7ddfa7c8e777"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1237"",
        ""timestamp"": ""2015-02-19T03:52:55+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""141613df-dba9-4c54-9c6f-ea8531238fc3"",
        ""organization_guid"": ""6b82d972-70a8-4937-beae-6ec349af76b6""
      }
    }
  ]
}";
    
            PagedResponse<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Util.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json);
        
            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("87190f89-9833-4b16-90b1-a892a8269f93", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/87190f89-9833-4b16-90b1-a892a8269f93", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-161", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("23254678-34f4-4495-9ebe-7ddfa7c8e777", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1237", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("141613df-dba9-4c54-9c6f-ea8531238fc3", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("6b82d972-70a8-4937-beae-6ec349af76b6", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
            
                Assert.AreEqual("5ff6df41-c35e-4825-9be0-75e41c4a9d6e", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5ff6df41-c35e-4825-9be0-75e41c4a9d6e", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
                  Assert.AreEqual("uaa-id-161", TestUtil.ToTestableString(page[1].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[1].ActorName), true);
                  Assert.AreEqual("23254678-34f4-4495-9ebe-7ddfa7c8e777", TestUtil.ToTestableString(page[1].Actee), true);
                  Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
                  Assert.AreEqual("name-1237", TestUtil.ToTestableString(page[1].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
                  
                  Assert.AreEqual("141613df-dba9-4c54-9c6f-ea8531238fc3", TestUtil.ToTestableString(page[1].SpaceGuid), true);
                  Assert.AreEqual("6b82d972-70a8-4937-beae-6ec349af76b6", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
               
               
            
            
                Assert.AreEqual("913cea46-6ee7-495c-8f23-d71a8974d360", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/913cea46-6ee7-495c-8f23-d71a8974d360", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
                  Assert.AreEqual("uaa-id-161", TestUtil.ToTestableString(page[2].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[2].ActorName), true);
                  Assert.AreEqual("23254678-34f4-4495-9ebe-7ddfa7c8e777", TestUtil.ToTestableString(page[2].Actee), true);
                  Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
                  Assert.AreEqual("name-1237", TestUtil.ToTestableString(page[2].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:55+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
                  
                  Assert.AreEqual("141613df-dba9-4c54-9c6f-ea8531238fc3", TestUtil.ToTestableString(page[2].SpaceGuid), true);
                  Assert.AreEqual("6b82d972-70a8-4937-beae-6ec349af76b6", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cbf04528-4b67-46a8-a54d-d21e4232eb40"",
        ""url"": ""/v2/events/cbf04528-4b67-46a8-a54d-d21e4232eb40"",
        ""created_at"": ""2015-02-19T03:52:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-169"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9f417e0b-6526-4f83-a663-d8bd997d0bc7"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1350"",
        ""timestamp"": ""2015-02-19T03:52:56+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""9f417e0b-6526-4f83-a663-d8bd997d0bc7"",
        ""organization_guid"": ""87ca2ca4-923e-4215-a360-ff87530daf74""
      }
    }
  ]
}";
    
            PagedResponse<ListSpaceCreateEventsResponse> page = Util.DeserializePage<ListSpaceCreateEventsResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("cbf04528-4b67-46a8-a54d-d21e4232eb40", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/cbf04528-4b67-46a8-a54d-d21e4232eb40", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-169", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("9f417e0b-6526-4f83-a663-d8bd997d0bc7", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1350", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:56+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("9f417e0b-6526-4f83-a663-d8bd997d0bc7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("87ca2ca4-923e-4215-a360-ff87530daf74", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServiceBindingDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""18cc574b-932a-4b2a-a8a8-62f8134f0406"",
        ""url"": ""/v2/events/18cc574b-932a-4b2a-a8a8-62f8134f0406"",
        ""created_at"": ""2015-02-19T03:52:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-143"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""64b3948e-01f0-4fa4-aae3-c64b2df5ead5"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-02-19T03:52:53+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""09bd40a3-a3c7-420e-aced-568d4cf450d4"",
        ""organization_guid"": ""5a0af0af-96c2-47aa-950a-cc3fee00807a""
      }
    }
  ]
}";
    
            PagedResponse<ListServiceBindingDeleteEventsExperimentalResponse> page = Util.DeserializePage<ListServiceBindingDeleteEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("18cc574b-932a-4b2a-a8a8-62f8134f0406", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/18cc574b-932a-4b2a-a8a8-62f8134f0406", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-143", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("64b3948e-01f0-4fa4-aae3-c64b2df5ead5", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:53+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("09bd40a3-a3c7-420e-aced-568d4cf450d4", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("5a0af0af-96c2-47aa-950a-cc3fee00807a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3c5f629e-d21c-48c4-be99-956bc31e91bd"",
        ""url"": ""/v2/events/3c5f629e-d21c-48c4-be99-956bc31e91bd"",
        ""created_at"": ""2015-02-19T03:52:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-137"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""2302e01e-30b8-4d0a-9bd1-b7e01fd91183"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-02-19T03:52:52+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""7081d1ff-63bf-4f7d-9ca9-a2fa654707f7""
      }
    }
  ]
}";
    
            PagedResponse<ListServicePlanVisibilityDeleteEventsExperimentalResponse> page = Util.DeserializePage<ListServicePlanVisibilityDeleteEventsExperimentalResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("3c5f629e-d21c-48c4-be99-956bc31e91bd", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/3c5f629e-d21c-48c4-be99-956bc31e91bd", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-137", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("2302e01e-30b8-4d0a-9bd1-b7e01fd91183", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:52:52+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("7081d1ff-63bf-4f7d-9ca9-a2fa654707f7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    }
}
