//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListServiceBindingDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4d890a81-4116-4134-9b36-623ad3326e7e"",
        ""url"": ""/v2/events/4d890a81-4116-4134-9b36-623ad3326e7e"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-202"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""f73971ac-c64a-4780-bd20-cd316633eebb"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""ce274e71-86ad-4a79-8ec7-918ccd9b9c6b"",
        ""organization_guid"": ""891c5095-33cd-484a-93b6-7e9bb517e338""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4d890a81-4116-4134-9b36-623ad3326e7e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4d890a81-4116-4134-9b36-623ad3326e7e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-202", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f73971ac-c64a-4780-bd20-cd316633eebb", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ce274e71-86ad-4a79-8ec7-918ccd9b9c6b", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("891c5095-33cd-484a-93b6-7e9bb517e338", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""77e2143a-c9bf-4ce4-9c0b-ed00344f4e5c"",
        ""url"": ""/v2/events/77e2143a-c9bf-4ce4-9c0b-ed00344f4e5c"",
        ""created_at"": ""2015-03-19T13:19:48+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-197"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""10505c8d-017f-4c22-9d99-58dacfb9fdff"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1114"",
        ""timestamp"": ""2015-03-19T13:19:48+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("77e2143a-c9bf-4ce4-9c0b-ed00344f4e5c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/77e2143a-c9bf-4ce4-9c0b-ed00344f4e5c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-197", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("10505c8d-017f-4c22-9d99-58dacfb9fdff", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1114", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5053563d-68f9-4784-b38b-f6fa4f1b737c"",
        ""url"": ""/v2/events/5053563d-68f9-4784-b38b-f6fa4f1b737c"",
        ""created_at"": ""2015-03-19T13:19:48+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-187"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""9a1a0c58-86cd-4eef-bc96-06570820f80f"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-979"",
        ""timestamp"": ""2015-03-19T13:19:48+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""9a1a0c58-86cd-4eef-bc96-06570820f80f"",
        ""organization_guid"": ""dbeb9ebe-fb9f-41e9-83ac-ecd62b9ffeb6""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5053563d-68f9-4784-b38b-f6fa4f1b737c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5053563d-68f9-4784-b38b-f6fa4f1b737c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-187", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9a1a0c58-86cd-4eef-bc96-06570820f80f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-979", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9a1a0c58-86cd-4eef-bc96-06570820f80f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("dbeb9ebe-fb9f-41e9-83ac-ecd62b9ffeb6", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""84d40eb5-4f60-4fc7-85ab-9479383220d5"",
        ""url"": ""/v2/events/84d40eb5-4f60-4fc7-85ab-9479383220d5"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""5d995f4e-0ac6-4473-b23c-2671e34798f1"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1253"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""f5192546-2524-463b-8f15-a0b5db35812a"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("84d40eb5-4f60-4fc7-85ab-9479383220d5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/84d40eb5-4f60-4fc7-85ab-9479383220d5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("5d995f4e-0ac6-4473-b23c-2671e34798f1", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1253", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""308ff9e5-2b5d-4296-a629-fb507ac85d7d"",
        ""url"": ""/v2/events/308ff9e5-2b5d-4296-a629-fb507ac85d7d"",
        ""created_at"": ""2015-03-19T13:19:46+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-163"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""bd39af80-05c5-484e-adf7-12922c21b6c6"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-644"",
        ""timestamp"": ""2015-03-19T13:19:46+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-644"",
            ""space_guid"": ""8ac16d67-6bf5-4289-828c-8d890c49e242""
          }
        },
        ""space_guid"": ""8ac16d67-6bf5-4289-828c-8d890c49e242"",
        ""organization_guid"": ""9f6e058d-eb8d-437f-afdd-1e874bb91e50""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("308ff9e5-2b5d-4296-a629-fb507ac85d7d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/308ff9e5-2b5d-4296-a629-fb507ac85d7d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-163", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bd39af80-05c5-484e-adf7-12922c21b6c6", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-644", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8ac16d67-6bf5-4289-828c-8d890c49e242", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9f6e058d-eb8d-437f-afdd-1e874bb91e50", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""27d0eb30-ffef-43fe-ae6e-47ccb82c9167"",
        ""url"": ""/v2/events/27d0eb30-ffef-43fe-ae6e-47ccb82c9167"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""830254ec-c65c-4dec-b9c5-174ef3fffa69"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1278"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""830254ec-c65c-4dec-b9c5-174ef3fffa69"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("27d0eb30-ffef-43fe-ae6e-47ccb82c9167", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/27d0eb30-ffef-43fe-ae6e-47ccb82c9167", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("830254ec-c65c-4dec-b9c5-174ef3fffa69", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1278", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9bb99392-5310-4ca5-8227-766ef91a6b40"",
        ""url"": ""/v2/events/9bb99392-5310-4ca5-8227-766ef91a6b40"",
        ""created_at"": ""2015-03-19T13:19:48+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-195"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""7b729571-c5b5-4ece-a1e8-4f3fae2c1bf7"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-03-19T13:19:48+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9bb99392-5310-4ca5-8227-766ef91a6b40", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9bb99392-5310-4ca5-8227-766ef91a6b40", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-195", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7b729571-c5b5-4ece-a1e8-4f3fae2c1bf7", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d85a88ad-5d55-4822-8468-57f8b96a6e14"",
    ""url"": ""/v2/events/d85a88ad-5d55-4822-8468-57f8b96a6e14"",
    ""created_at"": ""2015-03-19T13:19:45+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-434"",
    ""actor"": ""guid-2ba6df09-0fee-4396-a34e-2ca7ec4388f7"",
    ""actor_type"": ""name-435"",
    ""actor_name"": ""name-436"",
    ""actee"": ""guid-37f8e4fb-a08a-429a-8dfd-0776d3b40a8f"",
    ""actee_type"": ""name-437"",
    ""actee_name"": ""name-438"",
    ""timestamp"": ""2015-03-19T13:19:45+00:00"",
    ""metadata"": {

    },
    ""space_guid"": ""148d32ba-3e80-4fd4-8bcd-c218a2eaf405"",
    ""organization_guid"": ""16925b9a-0fee-487f-81c2-c4462a5539ff""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("d85a88ad-5d55-4822-8468-57f8b96a6e14", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d85a88ad-5d55-4822-8468-57f8b96a6e14", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-434", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("guid-2ba6df09-0fee-4396-a34e-2ca7ec4388f7", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-435", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-436", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("guid-37f8e4fb-a08a-429a-8dfd-0776d3b40a8f", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-437", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-438", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("148d32ba-3e80-4fd4-8bcd-c218a2eaf405", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("16925b9a-0fee-487f-81c2-c4462a5539ff", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8fa48a8c-b551-4293-960d-86961c2c553d"",
        ""url"": ""/v2/events/8fa48a8c-b551-4293-960d-86961c2c553d"",
        ""created_at"": ""2015-03-19T13:19:46+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-167"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""f223af47-ba93-4ed5-ba69-2feca0c73094"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-700"",
        ""timestamp"": ""2015-03-19T13:19:46+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""2fd18cff-bec5-409b-b645-e0758fdf6c88""
          }
        },
        ""space_guid"": ""e30d14b6-ff99-4584-a711-833345c4790f"",
        ""organization_guid"": ""737cd6ab-4e1d-43b3-9536-9a6db71d7555""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8fa48a8c-b551-4293-960d-86961c2c553d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8fa48a8c-b551-4293-960d-86961c2c553d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-167", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f223af47-ba93-4ed5-ba69-2feca0c73094", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-700", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("e30d14b6-ff99-4584-a711-833345c4790f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("737cd6ab-4e1d-43b3-9536-9a6db71d7555", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ee5f491d-e7a4-4078-b2e8-55d7ec31e0cd"",
        ""url"": ""/v2/events/ee5f491d-e7a4-4078-b2e8-55d7ec31e0cd"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""a7d6b756-ddd6-4e44-97a8-9df52c0f737b"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1139"",
        ""actee"": ""a7d6b756-ddd6-4e44-97a8-9df52c0f737b"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1139"",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""f0e797f7-f87e-4954-a93c-24cfce3e6ee3"",
        ""organization_guid"": ""adf7217c-9a9c-45a2-9485-f71c04691176""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ee5f491d-e7a4-4078-b2e8-55d7ec31e0cd", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ee5f491d-e7a4-4078-b2e8-55d7ec31e0cd", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("a7d6b756-ddd6-4e44-97a8-9df52c0f737b", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1139", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("a7d6b756-ddd6-4e44-97a8-9df52c0f737b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1139", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("f0e797f7-f87e-4954-a93c-24cfce3e6ee3", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("adf7217c-9a9c-45a2-9485-f71c04691176", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""67d7fd67-aeba-4bde-93f9-275e58f325e4"",
        ""url"": ""/v2/events/67d7fd67-aeba-4bde-93f9-275e58f325e4"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-169"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e26ccca2-f3f2-4e6b-96a4-bdf38e09b88e"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-729"",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""b87522e9-15d2-4034-a4c5-d0d9fd08c639"",
        ""organization_guid"": ""90187b12-31dc-4713-8528-f0d00ff70a4a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""96066092-f3e1-40ba-8718-a78cb170633d"",
        ""url"": ""/v2/events/96066092-f3e1-40ba-8718-a78cb170633d"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-169"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e26ccca2-f3f2-4e6b-96a4-bdf38e09b88e"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-729"",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""b87522e9-15d2-4034-a4c5-d0d9fd08c639"",
        ""organization_guid"": ""90187b12-31dc-4713-8528-f0d00ff70a4a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d84b9120-8dc2-410f-a0cc-546a250e6636"",
        ""url"": ""/v2/events/d84b9120-8dc2-410f-a0cc-546a250e6636"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-169"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""e26ccca2-f3f2-4e6b-96a4-bdf38e09b88e"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-729"",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""b87522e9-15d2-4034-a4c5-d0d9fd08c639"",
        ""organization_guid"": ""90187b12-31dc-4713-8528-f0d00ff70a4a""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("67d7fd67-aeba-4bde-93f9-275e58f325e4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/67d7fd67-aeba-4bde-93f9-275e58f325e4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-169", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e26ccca2-f3f2-4e6b-96a4-bdf38e09b88e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-729", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b87522e9-15d2-4034-a4c5-d0d9fd08c639", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("90187b12-31dc-4713-8528-f0d00ff70a4a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("96066092-f3e1-40ba-8718-a78cb170633d", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/96066092-f3e1-40ba-8718-a78cb170633d", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-169", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("e26ccca2-f3f2-4e6b-96a4-bdf38e09b88e", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-729", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("b87522e9-15d2-4034-a4c5-d0d9fd08c639", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("90187b12-31dc-4713-8528-f0d00ff70a4a", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("d84b9120-8dc2-410f-a0cc-546a250e6636", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d84b9120-8dc2-410f-a0cc-546a250e6636", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-169", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("e26ccca2-f3f2-4e6b-96a4-bdf38e09b88e", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-729", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("b87522e9-15d2-4034-a4c5-d0d9fd08c639", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("90187b12-31dc-4713-8528-f0d00ff70a4a", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f53bf2d0-9b1d-4036-b8ec-83960304982a"",
        ""url"": ""/v2/events/f53bf2d0-9b1d-4036-b8ec-83960304982a"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-173"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""cddb9a4e-3199-4fbd-a839-4208c8e416ac"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""5cb46b5e-1ad3-4196-b746-d778284f206a"",
            ""organization_guid"": ""ee50e3d0-5f0b-43b1-8bec-b9d5464b94a5""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""ee50e3d0-5f0b-43b1-8bec-b9d5464b94a5""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f53bf2d0-9b1d-4036-b8ec-83960304982a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f53bf2d0-9b1d-4036-b8ec-83960304982a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-173", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("cddb9a4e-3199-4fbd-a839-4208c8e416ac", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("ee50e3d0-5f0b-43b1-8bec-b9d5464b94a5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b0cfdd83-0b23-42bf-bf34-c2c18df9a026"",
        ""url"": ""/v2/events/b0cfdd83-0b23-42bf-bf34-c2c18df9a026"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""79983bbf-c27a-4f7a-825d-399b403adf9c"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1227"",
        ""actee"": ""66338a25-2594-4ce4-9b5b-2b1992eba7f2"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1228"",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b0cfdd83-0b23-42bf-bf34-c2c18df9a026", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b0cfdd83-0b23-42bf-bf34-c2c18df9a026", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("79983bbf-c27a-4f7a-825d-399b403adf9c", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1227", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("66338a25-2594-4ce4-9b5b-2b1992eba7f2", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1228", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cb08167b-14eb-4b2d-ab1d-4f92b9dc0f42"",
        ""url"": ""/v2/events/cb08167b-14eb-4b2d-ab1d-4f92b9dc0f42"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1279"",
        ""actor"": ""guid-2972c79a-a324-4d25-b1d4-c87e54e7faa8"",
        ""actor_type"": ""name-1280"",
        ""actor_name"": ""name-1281"",
        ""actee"": ""guid-530bc878-7026-4b49-9770-477e5aa1c69c"",
        ""actee_type"": ""name-1282"",
        ""actee_name"": ""name-1283"",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""1af3c20f-552e-407b-aaf3-9aa73ddec440"",
        ""organization_guid"": ""6952e6a9-4fd2-4c5f-ac60-2120d73cc027""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""23bd680b-074e-4895-8d65-02c679b79271"",
        ""url"": ""/v2/events/23bd680b-074e-4895-8d65-02c679b79271"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1287"",
        ""actor"": ""guid-ff46629d-46a8-4e6e-bec3-f88c64e75c1e"",
        ""actor_type"": ""name-1288"",
        ""actor_name"": ""name-1289"",
        ""actee"": ""guid-e4a448e8-4bb2-4c17-ad9f-47d604ed3bac"",
        ""actee_type"": ""name-1290"",
        ""actee_name"": ""name-1291"",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""51e31f5d-23d6-43df-b169-0c35f06eb10e"",
        ""organization_guid"": ""297c5941-15ec-4578-9477-e0787a2c469b""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ce463898-a30e-4f98-a82b-21ce6466abcb"",
        ""url"": ""/v2/events/ce463898-a30e-4f98-a82b-21ce6466abcb"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1295"",
        ""actor"": ""guid-310b528c-49ea-4a7e-a877-6bc56fda23aa"",
        ""actor_type"": ""name-1296"",
        ""actor_name"": ""name-1297"",
        ""actee"": ""guid-3935b3b7-d237-4497-bdde-e9c2eb3efd3d"",
        ""actee_type"": ""name-1298"",
        ""actee_name"": ""name-1299"",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""805b481a-ce8b-45ff-8bd6-b0d94491fd6a"",
        ""organization_guid"": ""4f9cbdc4-6fd5-4935-8248-31c4f666d38a""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cb08167b-14eb-4b2d-ab1d-4f92b9dc0f42", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cb08167b-14eb-4b2d-ab1d-4f92b9dc0f42", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1279", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("guid-2972c79a-a324-4d25-b1d4-c87e54e7faa8", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-1280", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1281", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid-530bc878-7026-4b49-9770-477e5aa1c69c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-1282", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1283", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("1af3c20f-552e-407b-aaf3-9aa73ddec440", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6952e6a9-4fd2-4c5f-ac60-2120d73cc027", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("23bd680b-074e-4895-8d65-02c679b79271", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/23bd680b-074e-4895-8d65-02c679b79271", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1287", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("guid-ff46629d-46a8-4e6e-bec3-f88c64e75c1e", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-1288", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-1289", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("guid-e4a448e8-4bb2-4c17-ad9f-47d604ed3bac", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-1290", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1291", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("51e31f5d-23d6-43df-b169-0c35f06eb10e", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("297c5941-15ec-4578-9477-e0787a2c469b", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("ce463898-a30e-4f98-a82b-21ce6466abcb", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ce463898-a30e-4f98-a82b-21ce6466abcb", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1295", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("guid-310b528c-49ea-4a7e-a877-6bc56fda23aa", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-1296", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-1297", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("guid-3935b3b7-d237-4497-bdde-e9c2eb3efd3d", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-1298", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1299", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("805b481a-ce8b-45ff-8bd6-b0d94491fd6a", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("4f9cbdc4-6fd5-4935-8248-31c4f666d38a", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f7ee9d1d-3638-4f02-a62d-68c399f6e1bc"",
        ""url"": ""/v2/events/f7ee9d1d-3638-4f02-a62d-68c399f6e1bc"",
        ""created_at"": ""2015-03-19T13:19:45+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""d00872f6-2485-45c2-b07b-a90145d5f723"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-482"",
        ""actee"": ""9959772f-a6cb-42db-980c-011506715d6c"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-03-19T13:19:45+00:00"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f7ee9d1d-3638-4f02-a62d-68c399f6e1bc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f7ee9d1d-3638-4f02-a62d-68c399f6e1bc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("d00872f6-2485-45c2-b07b-a90145d5f723", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-482", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9959772f-a6cb-42db-980c-011506715d6c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2c64ecdd-25ba-498b-abd8-5fa16aa5ffc7"",
        ""url"": ""/v2/events/2c64ecdd-25ba-498b-abd8-5fa16aa5ffc7"",
        ""created_at"": ""2015-03-19T13:19:46+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-159"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0c796c4c-f590-49f8-9e63-fbc479dd9424"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-588"",
        ""timestamp"": ""2015-03-19T13:19:46+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""64d58e7f-af01-4636-b7ac-79a360313eb0"",
        ""organization_guid"": ""42f743b6-1d83-4002-b4af-db7e9b8c0b58""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2c64ecdd-25ba-498b-abd8-5fa16aa5ffc7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2c64ecdd-25ba-498b-abd8-5fa16aa5ffc7", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-159", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0c796c4c-f590-49f8-9e63-fbc479dd9424", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-588", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("64d58e7f-af01-4636-b7ac-79a360313eb0", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("42f743b6-1d83-4002-b4af-db7e9b8c0b58", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4dc5c222-edcc-4194-8cb6-29d2a25ca58a"",
        ""url"": ""/v2/events/4dc5c222-edcc-4194-8cb6-29d2a25ca58a"",
        ""created_at"": ""2015-03-19T13:19:48+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-185"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""dc2af8d8-8c4f-4917-b54e-fd340d11c35d"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-950"",
        ""timestamp"": ""2015-03-19T13:19:48+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""81a9e9b4-ca0d-43ac-9b60-c34a9effeac0"",
        ""organization_guid"": ""55465c14-fa21-47b9-882a-d4946d8d2694""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4dc5c222-edcc-4194-8cb6-29d2a25ca58a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4dc5c222-edcc-4194-8cb6-29d2a25ca58a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-185", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("dc2af8d8-8c4f-4917-b54e-fd340d11c35d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-950", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("81a9e9b4-ca0d-43ac-9b60-c34a9effeac0", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("55465c14-fa21-47b9-882a-d4946d8d2694", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e0354868-32ff-4df5-a9dc-bc31e4d15e21"",
        ""url"": ""/v2/events/e0354868-32ff-4df5-a9dc-bc31e4d15e21"",
        ""created_at"": ""2015-03-19T13:19:48+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""832bc2e3-572e-422a-a02a-c8ea56365be6"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-925"",
        ""actee"": ""84be39c1-2e9f-4ce0-8d9c-e7f3c7b231cb"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-03-19T13:19:48+00:00"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e0354868-32ff-4df5-a9dc-bc31e4d15e21", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e0354868-32ff-4df5-a9dc-bc31e4d15e21", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("832bc2e3-572e-422a-a02a-c8ea56365be6", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-925", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("84be39c1-2e9f-4ce0-8d9c-e7f3c7b231cb", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4a51eaab-1167-4b86-b2ff-d647880c6935"",
        ""url"": ""/v2/events/4a51eaab-1167-4b86-b2ff-d647880c6935"",
        ""created_at"": ""2015-03-19T13:19:46+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-155"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""563aa800-596e-45b3-89ca-2b0308d3c2ef"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-533"",
        ""timestamp"": ""2015-03-19T13:19:46+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""563aa800-596e-45b3-89ca-2b0308d3c2ef"",
        ""organization_guid"": ""391521eb-8976-4db9-91a8-3484e52b90a0""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4a51eaab-1167-4b86-b2ff-d647880c6935", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4a51eaab-1167-4b86-b2ff-d647880c6935", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-155", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("563aa800-596e-45b3-89ca-2b0308d3c2ef", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-533", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("563aa800-596e-45b3-89ca-2b0308d3c2ef", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("391521eb-8976-4db9-91a8-3484e52b90a0", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d187118f-fe91-435c-be5b-07ab56ff8bee"",
        ""url"": ""/v2/events/d187118f-fe91-435c-be5b-07ab56ff8bee"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-175"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""b45e7eb5-a300-49f8-b2a7-8678144ecab6"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-812"",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-812"",
            ""service_plan_guid"": ""0557fbe1-ee75-4cdb-90ab-d93c3b91a5d3"",
            ""space_guid"": ""610008a0-f390-46ae-88c5-8c44cb80b002""
          }
        },
        ""space_guid"": ""610008a0-f390-46ae-88c5-8c44cb80b002"",
        ""organization_guid"": ""c1023439-9fa2-451f-b62a-7c616ce5b010""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d187118f-fe91-435c-be5b-07ab56ff8bee", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d187118f-fe91-435c-be5b-07ab56ff8bee", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-175", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b45e7eb5-a300-49f8-b2a7-8678144ecab6", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-812", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("610008a0-f390-46ae-88c5-8c44cb80b002", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c1023439-9fa2-451f-b62a-7c616ce5b010", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""09d60d7f-8c20-4186-88bc-8bbabae248ab"",
        ""url"": ""/v2/events/09d60d7f-8c20-4186-88bc-8bbabae248ab"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-179"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""68c7bc3f-a946-40b1-84d2-284b5509117d"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-867"",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""2413c2d2-eee0-41c6-9508-dc9eebd0334d"",
        ""organization_guid"": ""f4332b51-c30d-439d-8f51-913d01c2fe9b""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("09d60d7f-8c20-4186-88bc-8bbabae248ab", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/09d60d7f-8c20-4186-88bc-8bbabae248ab", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-179", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("68c7bc3f-a946-40b1-84d2-284b5509117d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-867", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("2413c2d2-eee0-41c6-9508-dc9eebd0334d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f4332b51-c30d-439d-8f51-913d01c2fe9b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0b4e914b-bef9-44a1-84b2-792cd0eae2d7"",
        ""url"": ""/v2/events/0b4e914b-bef9-44a1-84b2-792cd0eae2d7"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""06b23591-b0ac-45e6-bbe0-69e15f4a9497"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-842"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0b4e914b-bef9-44a1-84b2-792cd0eae2d7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0b4e914b-bef9-44a1-84b2-792cd0eae2d7", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("06b23591-b0ac-45e6-bbe0-69e15f4a9497", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-842", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1f92241f-0a9a-4be5-ac2e-426f8c9f8e9b"",
        ""url"": ""/v2/events/1f92241f-0a9a-4be5-ac2e-426f8c9f8e9b"",
        ""created_at"": ""2015-03-19T13:19:45+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-153"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""36f7049b-54d0-41cf-8408-226c42189102"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-508"",
        ""timestamp"": ""2015-03-19T13:19:45+00:00"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1f92241f-0a9a-4be5-ac2e-426f8c9f8e9b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1f92241f-0a9a-4be5-ac2e-426f8c9f8e9b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-153", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("36f7049b-54d0-41cf-8408-226c42189102", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-508", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""aa88c9ee-565d-4e69-ab4f-1117d8f8173c"",
        ""url"": ""/v2/events/aa88c9ee-565d-4e69-ab4f-1117d8f8173c"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""0bdafcfd-b5f3-4975-8692-3b8ba4497118"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-759"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("aa88c9ee-565d-4e69-ab4f-1117d8f8173c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/aa88c9ee-565d-4e69-ab4f-1117d8f8173c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("0bdafcfd-b5f3-4975-8692-3b8ba4497118", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-759", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""19f28f83-7c86-4716-b10e-0f019dd985c5"",
        ""url"": ""/v2/events/19f28f83-7c86-4716-b10e-0f019dd985c5"",
        ""created_at"": ""2015-03-19T13:19:47+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-181"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""51246a29-fcd0-41b4-81d9-b391357f04c5"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-896"",
        ""timestamp"": ""2015-03-19T13:19:47+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""55cc3138-cbc3-4894-b8bd-da5daced752e"",
        ""organization_guid"": ""6ca7ffe7-fb02-4059-ba35-dc2f5f566a67""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("19f28f83-7c86-4716-b10e-0f019dd985c5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/19f28f83-7c86-4716-b10e-0f019dd985c5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-181", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("51246a29-fcd0-41b4-81d9-b391357f04c5", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-896", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:47+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("55cc3138-cbc3-4894-b8bd-da5daced752e", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6ca7ffe7-fb02-4059-ba35-dc2f5f566a67", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""477b8491-e0bc-4497-af51-420e3a91a4ba"",
        ""url"": ""/v2/events/477b8491-e0bc-4497-af51-420e3a91a4ba"",
        ""created_at"": ""2015-03-19T13:19:48+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-189"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""41f13380-c853-4a19-87bb-0e6b2dbd379e"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-19T13:19:48+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""33cd6acf-21ef-4ffd-9489-0dd48430ad98"",
            ""app_guid"": ""84c2c76c-8d74-4309-ad36-1f7b1fd77208""
          }
        },
        ""space_guid"": ""cb4e124f-3f27-416a-94d7-411037da58bb"",
        ""organization_guid"": ""4e1eeab5-c466-4110-ac9d-037b0fedc378""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("477b8491-e0bc-4497-af51-420e3a91a4ba", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/477b8491-e0bc-4497-af51-420e3a91a4ba", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-189", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("41f13380-c853-4a19-87bb-0e6b2dbd379e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("cb4e124f-3f27-416a-94d7-411037da58bb", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("4e1eeab5-c466-4110-ac9d-037b0fedc378", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6b3fe72e-8f78-469d-bbff-3643ffe726d6"",
        ""url"": ""/v2/events/6b3fe72e-8f78-469d-bbff-3643ffe726d6"",
        ""created_at"": ""2015-03-19T13:19:48+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-191"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""b23f689d-bc41-4951-b569-ab0a1e35e243"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1037"",
        ""timestamp"": ""2015-03-19T13:19:48+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""250ee3ae-0911-43e6-a5e1-9fe92a7861c1"",
        ""organization_guid"": ""9e6170f3-9653-461a-bda9-3fe76c41e425""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6b3fe72e-8f78-469d-bbff-3643ffe726d6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6b3fe72e-8f78-469d-bbff-3643ffe726d6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-191", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b23f689d-bc41-4951-b569-ab0a1e35e243", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1037", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("250ee3ae-0911-43e6-a5e1-9fe92a7861c1", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9e6170f3-9653-461a-bda9-3fe76c41e425", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2d86f109-1b91-49d7-852a-c4983bf73dbe"",
        ""url"": ""/v2/events/2d86f109-1b91-49d7-852a-c4983bf73dbe"",
        ""created_at"": ""2015-03-19T13:19:46+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-165"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""42dcde3b-348b-4456-a6f1-24c2eeb0e258"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-19T13:19:46+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""a2d06045-40e0-4bbf-82bb-0558887bac31""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2d86f109-1b91-49d7-852a-c4983bf73dbe", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2d86f109-1b91-49d7-852a-c4983bf73dbe", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-165", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("42dcde3b-348b-4456-a6f1-24c2eeb0e258", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a2d06045-40e0-4bbf-82bb-0558887bac31", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a15453e2-97d5-424f-8445-8cd96e2ae984"",
        ""url"": ""/v2/events/a15453e2-97d5-424f-8445-8cd96e2ae984"",
        ""created_at"": ""2015-03-19T13:19:49+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-200"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""ad9e1ed3-c183-4822-aa51-e97931c73c85"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1168"",
        ""timestamp"": ""2015-03-19T13:19:49+00:00"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""fd5a12df-82b1-4c58-9af4-03a074710233"",
        ""organization_guid"": ""6e3d8265-d971-40d4-af45-7e7601f2f203""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a15453e2-97d5-424f-8445-8cd96e2ae984", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a15453e2-97d5-424f-8445-8cd96e2ae984", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-200", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ad9e1ed3-c183-4822-aa51-e97931c73c85", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1168", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:49+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("fd5a12df-82b1-4c58-9af4-03a074710233", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6e3d8265-d971-40d4-af45-7e7601f2f203", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""31aa1b96-321b-483e-a054-af0c36eab0fb"",
        ""url"": ""/v2/events/31aa1b96-321b-483e-a054-af0c36eab0fb"",
        ""created_at"": ""2015-03-19T13:19:46+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-161"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""0df028fb-0fff-4173-805a-70b97a188879"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-617"",
        ""timestamp"": ""2015-03-19T13:19:46+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""0df028fb-0fff-4173-805a-70b97a188879"",
        ""organization_guid"": ""610d75aa-2564-4bb8-b67f-84236c2b5b88""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("31aa1b96-321b-483e-a054-af0c36eab0fb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/31aa1b96-321b-483e-a054-af0c36eab0fb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-161", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0df028fb-0fff-4173-805a-70b97a188879", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-617", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0df028fb-0fff-4173-805a-70b97a188879", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("610d75aa-2564-4bb8-b67f-84236c2b5b88", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c14dd12e-2d7a-4501-a245-18db121ea27d"",
        ""url"": ""/v2/events/c14dd12e-2d7a-4501-a245-18db121ea27d"",
        ""created_at"": ""2015-03-19T13:19:46+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-157"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""ca29d8cc-51e1-4490-b775-5c1a3427104f"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-03-19T13:19:46+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""07f2ed54-4728-4d34-9e07-1b2df77ade14"",
            ""organization_guid"": ""96ff9160-358d-4e7b-9dcc-24b6ea201db5""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""96ff9160-358d-4e7b-9dcc-24b6ea201db5""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c14dd12e-2d7a-4501-a245-18db121ea27d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c14dd12e-2d7a-4501-a245-18db121ea27d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-157", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ca29d8cc-51e1-4490-b775-5c1a3427104f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:46+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("96ff9160-358d-4e7b-9dcc-24b6ea201db5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ba2c714a-70c2-4d43-a6d2-13174d23a75e"",
        ""url"": ""/v2/events/ba2c714a-70c2-4d43-a6d2-13174d23a75e"",
        ""created_at"": ""2015-03-19T13:19:48+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""0fd498d4-8e36-4c4c-942f-92ebc708017c"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1065"",
        ""actee"": ""d5b4c6f2-bb50-496b-a6f2-0fa7a04a77a6"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-46"",
        ""timestamp"": ""2015-03-19T13:19:48+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsExperimentalResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ba2c714a-70c2-4d43-a6d2-13174d23a75e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ba2c714a-70c2-4d43-a6d2-13174d23a75e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("0fd498d4-8e36-4c4c-942f-92ebc708017c", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1065", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d5b4c6f2-bb50-496b-a6f2-0fa7a04a77a6", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-46", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:48+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}
