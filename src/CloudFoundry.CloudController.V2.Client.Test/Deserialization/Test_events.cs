//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListServiceBindingDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""178c7007-1aa9-486e-86e2-82c6919fff79"",
        ""url"": ""/v2/events/178c7007-1aa9-486e-86e2-82c6919fff79"",
        ""created_at"": ""2015-04-10T20:04:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-120"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""690f08a9-36e6-4611-b24a-d72a12c4673a"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T20:04:32+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""9083e186-d317-420e-8f1d-3dddeb344521"",
        ""organization_guid"": ""ddbc40ed-a499-4beb-ae9f-a982332872b1""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("178c7007-1aa9-486e-86e2-82c6919fff79", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/178c7007-1aa9-486e-86e2-82c6919fff79", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-120", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("690f08a9-36e6-4611-b24a-d72a12c4673a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9083e186-d317-420e-8f1d-3dddeb344521", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("ddbc40ed-a499-4beb-ae9f-a982332872b1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6a7842c9-ea9d-46ec-accf-812aa8c0db24"",
        ""url"": ""/v2/events/6a7842c9-ea9d-46ec-accf-812aa8c0db24"",
        ""created_at"": ""2015-04-10T20:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-118"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""98780fbc-50dd-4a25-a311-65aba2fe75ff"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-846"",
        ""timestamp"": ""2015-04-10T20:04:31+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6a7842c9-ea9d-46ec-accf-812aa8c0db24", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6a7842c9-ea9d-46ec-accf-812aa8c0db24", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-118", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("98780fbc-50dd-4a25-a311-65aba2fe75ff", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-846", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fd0f4d3e-e489-4793-9fc1-e337ad39be05"",
        ""url"": ""/v2/events/fd0f4d3e-e489-4793-9fc1-e337ad39be05"",
        ""created_at"": ""2015-04-10T20:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-108"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d2c35088-ee36-4736-a55b-8876c7b0e87c"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-708"",
        ""timestamp"": ""2015-04-10T20:04:31+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""d2c35088-ee36-4736-a55b-8876c7b0e87c"",
        ""organization_guid"": ""d06e4001-0b59-4cd7-8a52-8f434fe9b91b""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fd0f4d3e-e489-4793-9fc1-e337ad39be05", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fd0f4d3e-e489-4793-9fc1-e337ad39be05", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-108", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d2c35088-ee36-4736-a55b-8876c7b0e87c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-708", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("d2c35088-ee36-4736-a55b-8876c7b0e87c", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d06e4001-0b59-4cd7-8a52-8f434fe9b91b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c132483f-f993-4c6e-a2be-a76733d9fa8d"",
        ""url"": ""/v2/events/c132483f-f993-4c6e-a2be-a76733d9fa8d"",
        ""created_at"": ""2015-04-10T20:04:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""5c04f2fe-1306-43eb-8b72-6f5f17dcfd06"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-576"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-04-10T20:04:30+00:00"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""e827e2b2-d23e-458b-8683-1fced32ad317"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c132483f-f993-4c6e-a2be-a76733d9fa8d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c132483f-f993-4c6e-a2be-a76733d9fa8d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("5c04f2fe-1306-43eb-8b72-6f5f17dcfd06", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-576", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""540d5e38-ca84-47ea-8f46-9ab5b7853f4e"",
        ""url"": ""/v2/events/540d5e38-ca84-47ea-8f46-9ab5b7853f4e"",
        ""created_at"": ""2015-04-10T20:04:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-129"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""c29f50f3-4d66-40ed-9929-d9eb3c48debe"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1016"",
        ""timestamp"": ""2015-04-10T20:04:32+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1016"",
            ""space_guid"": ""b67cb422-5173-4892-bc5b-7fe4a2fb8b99""
          }
        },
        ""space_guid"": ""b67cb422-5173-4892-bc5b-7fe4a2fb8b99"",
        ""organization_guid"": ""d75ef6e3-29d5-46b1-90f1-4d8b164884f6""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("540d5e38-ca84-47ea-8f46-9ab5b7853f4e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/540d5e38-ca84-47ea-8f46-9ab5b7853f4e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-129", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c29f50f3-4d66-40ed-9929-d9eb3c48debe", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1016", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("b67cb422-5173-4892-bc5b-7fe4a2fb8b99", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d75ef6e3-29d5-46b1-90f1-4d8b164884f6", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""69ee5020-22c5-4e96-bf23-8b90c0c88d8c"",
        ""url"": ""/v2/events/69ee5020-22c5-4e96-bf23-8b90c0c88d8c"",
        ""created_at"": ""2015-04-10T20:04:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""8bd7bb4a-cd18-4fe2-9f68-10fd0d4ca2d5"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-627"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-04-10T20:04:30+00:00"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""8bd7bb4a-cd18-4fe2-9f68-10fd0d4ca2d5"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("69ee5020-22c5-4e96-bf23-8b90c0c88d8c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/69ee5020-22c5-4e96-bf23-8b90c0c88d8c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("8bd7bb4a-cd18-4fe2-9f68-10fd0d4ca2d5", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-627", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b49baddf-2c95-4857-9be2-550d12514190"",
        ""url"": ""/v2/events/b49baddf-2c95-4857-9be2-550d12514190"",
        ""created_at"": ""2015-04-10T20:04:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-131"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""bbc84024-c933-424a-b04e-7b24aa702cb7"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-04-10T20:04:33+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b49baddf-2c95-4857-9be2-550d12514190", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b49baddf-2c95-4857-9be2-550d12514190", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-131", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bbc84024-c933-424a-b04e-7b24aa702cb7", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""96ad33f3-9877-4ff2-9d50-8f96d3528399"",
    ""url"": ""/v2/events/96ad33f3-9877-4ff2-9d50-8f96d3528399"",
    ""created_at"": ""2015-04-10T20:04:30+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-528"",
    ""actor"": ""guid-2569abd3-404d-4b00-abc8-4e4d590db8a7"",
    ""actor_type"": ""name-529"",
    ""actor_name"": ""name-530"",
    ""actee"": ""guid-c4752963-2627-4694-94fd-217d988c53cd"",
    ""actee_type"": ""name-531"",
    ""actee_name"": ""name-532"",
    ""timestamp"": ""2015-04-10T20:04:30+00:00"",
    ""metadata"": {

    },
    ""space_guid"": ""4297b10f-25a3-4cd6-97ee-73f4d2e8dae2"",
    ""organization_guid"": ""85f74eea-a1a7-436f-ae40-93f4d432d9cb""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("96ad33f3-9877-4ff2-9d50-8f96d3528399", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/96ad33f3-9877-4ff2-9d50-8f96d3528399", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-528", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("guid-2569abd3-404d-4b00-abc8-4e4d590db8a7", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-529", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-530", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("guid-c4752963-2627-4694-94fd-217d988c53cd", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-531", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-532", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("4297b10f-25a3-4cd6-97ee-73f4d2e8dae2", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("85f74eea-a1a7-436f-ae40-93f4d432d9cb", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""79bd199b-e6f9-487d-89eb-48ed5e737c86"",
        ""url"": ""/v2/events/79bd199b-e6f9-487d-89eb-48ed5e737c86"",
        ""created_at"": ""2015-04-10T20:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-104"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""7ba08670-f237-404d-8fed-749aec212d59"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-652"",
        ""timestamp"": ""2015-04-10T20:04:31+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""8568de02-48d1-4daf-ae5e-56a3ded28645""
          }
        },
        ""space_guid"": ""8dd3ecde-d00b-4161-b584-fa7b4137eb00"",
        ""organization_guid"": ""a918642b-8acb-4a5b-af20-8918326a59ed""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("79bd199b-e6f9-487d-89eb-48ed5e737c86", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/79bd199b-e6f9-487d-89eb-48ed5e737c86", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-104", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7ba08670-f237-404d-8fed-749aec212d59", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-652", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8dd3ecde-d00b-4161-b584-fa7b4137eb00", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a918642b-8acb-4a5b-af20-8918326a59ed", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4350138a-6ec4-46f0-8d17-cffd3443d933"",
        ""url"": ""/v2/events/4350138a-6ec4-46f0-8d17-cffd3443d933"",
        ""created_at"": ""2015-04-10T20:04:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""654f295e-75fb-4b11-afc0-89d47f882765"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-959"",
        ""actee"": ""654f295e-75fb-4b11-afc0-89d47f882765"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-959"",
        ""timestamp"": ""2015-04-10T20:04:32+00:00"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""4065935d-34e8-42f4-9f9b-507ec6577fde"",
        ""organization_guid"": ""a5b8fdd8-03fa-453b-97e4-9f9165894005""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4350138a-6ec4-46f0-8d17-cffd3443d933", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4350138a-6ec4-46f0-8d17-cffd3443d933", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("654f295e-75fb-4b11-afc0-89d47f882765", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-959", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("654f295e-75fb-4b11-afc0-89d47f882765", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-959", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("4065935d-34e8-42f4-9f9b-507ec6577fde", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a5b8fdd8-03fa-453b-97e4-9f9165894005", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""53aaf5cf-7071-408f-b4ce-593f1c468895"",
        ""url"": ""/v2/events/53aaf5cf-7071-408f-b4ce-593f1c468895"",
        ""created_at"": ""2015-04-10T20:04:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-124"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""a2170402-d031-4414-a3e9-c03b9a539507"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-930"",
        ""timestamp"": ""2015-04-10T20:04:32+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""3fe71f93-956d-40b1-b8c7-e9f159d5543e"",
        ""organization_guid"": ""5a6bab0d-4666-4c19-ba86-c7c71bda6c13""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""63f0492a-a3b0-4a94-b59b-d8349099bdfb"",
        ""url"": ""/v2/events/63f0492a-a3b0-4a94-b59b-d8349099bdfb"",
        ""created_at"": ""2015-04-10T20:04:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-124"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""a2170402-d031-4414-a3e9-c03b9a539507"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-930"",
        ""timestamp"": ""2015-04-10T20:04:32+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""3fe71f93-956d-40b1-b8c7-e9f159d5543e"",
        ""organization_guid"": ""5a6bab0d-4666-4c19-ba86-c7c71bda6c13""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""78e8392c-f792-4a74-a13e-6ae6e54398eb"",
        ""url"": ""/v2/events/78e8392c-f792-4a74-a13e-6ae6e54398eb"",
        ""created_at"": ""2015-04-10T20:04:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-124"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""a2170402-d031-4414-a3e9-c03b9a539507"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-930"",
        ""timestamp"": ""2015-04-10T20:04:32+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""3fe71f93-956d-40b1-b8c7-e9f159d5543e"",
        ""organization_guid"": ""5a6bab0d-4666-4c19-ba86-c7c71bda6c13""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("53aaf5cf-7071-408f-b4ce-593f1c468895", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/53aaf5cf-7071-408f-b4ce-593f1c468895", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-124", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("a2170402-d031-4414-a3e9-c03b9a539507", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-930", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("3fe71f93-956d-40b1-b8c7-e9f159d5543e", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("5a6bab0d-4666-4c19-ba86-c7c71bda6c13", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("63f0492a-a3b0-4a94-b59b-d8349099bdfb", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/63f0492a-a3b0-4a94-b59b-d8349099bdfb", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-124", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("a2170402-d031-4414-a3e9-c03b9a539507", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-930", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("3fe71f93-956d-40b1-b8c7-e9f159d5543e", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("5a6bab0d-4666-4c19-ba86-c7c71bda6c13", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("78e8392c-f792-4a74-a13e-6ae6e54398eb", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/78e8392c-f792-4a74-a13e-6ae6e54398eb", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-124", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("a2170402-d031-4414-a3e9-c03b9a539507", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-930", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("3fe71f93-956d-40b1-b8c7-e9f159d5543e", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("5a6bab0d-4666-4c19-ba86-c7c71bda6c13", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3d2dada4-51fa-45fc-84d6-1135294d9839"",
        ""url"": ""/v2/events/3d2dada4-51fa-45fc-84d6-1135294d9839"",
        ""created_at"": ""2015-04-10T20:04:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-135"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""91041267-8c1f-4fc0-89d4-bd38fa1aca6a"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T20:04:33+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""e69d157d-0de6-419d-95ad-520ce3271266"",
            ""organization_guid"": ""da565043-5303-4327-b622-b45f604b3d12""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""da565043-5303-4327-b622-b45f604b3d12""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3d2dada4-51fa-45fc-84d6-1135294d9839", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3d2dada4-51fa-45fc-84d6-1135294d9839", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-135", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("91041267-8c1f-4fc0-89d4-bd38fa1aca6a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("da565043-5303-4327-b622-b45f604b3d12", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6ea3a763-350a-470c-bd4a-aeb9d601fd2c"",
        ""url"": ""/v2/events/6ea3a763-350a-470c-bd4a-aeb9d601fd2c"",
        ""created_at"": ""2015-04-10T20:04:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""3e73d2b0-fdfb-4372-8b61-9d50d8780b6a"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-601"",
        ""actee"": ""38bc1885-41cf-4097-8a0c-9f3b77607ec1"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-602"",
        ""timestamp"": ""2015-04-10T20:04:30+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6ea3a763-350a-470c-bd4a-aeb9d601fd2c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6ea3a763-350a-470c-bd4a-aeb9d601fd2c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("3e73d2b0-fdfb-4372-8b61-9d50d8780b6a", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-601", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("38bc1885-41cf-4097-8a0c-9f3b77607ec1", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-602", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cf868d8e-7e17-4cab-82bf-493c6e976f89"",
        ""url"": ""/v2/events/cf868d8e-7e17-4cab-82bf-493c6e976f89"",
        ""created_at"": ""2015-04-10T20:04:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-504"",
        ""actor"": ""guid-047649b0-8aeb-4f72-b57a-a34e05d35799"",
        ""actor_type"": ""name-505"",
        ""actor_name"": ""name-506"",
        ""actee"": ""guid-059b2db1-7d06-41c6-8fc3-a00d33b3dc65"",
        ""actee_type"": ""name-507"",
        ""actee_name"": ""name-508"",
        ""timestamp"": ""2015-04-10T20:04:30+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""2d5687c0-51c0-43b4-a7fd-37352fe80ca7"",
        ""organization_guid"": ""144eff9d-ff8c-47ac-bb7a-e61c12bbec35""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ddf1c892-16fd-4543-9691-4d9173d81213"",
        ""url"": ""/v2/events/ddf1c892-16fd-4543-9691-4d9173d81213"",
        ""created_at"": ""2015-04-10T20:04:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-512"",
        ""actor"": ""guid-0c1fd567-3cb8-4bcb-b2f4-619f73b6706c"",
        ""actor_type"": ""name-513"",
        ""actor_name"": ""name-514"",
        ""actee"": ""guid-abd7ed17-b5e5-475f-91d8-24599240f33c"",
        ""actee_type"": ""name-515"",
        ""actee_name"": ""name-516"",
        ""timestamp"": ""2015-04-10T20:04:30+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""5d33a0e8-fe20-4bb8-a6fd-b527e6695986"",
        ""organization_guid"": ""e40e1d03-b486-4e7f-80e1-7de75a56f833""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""b5c5117d-b908-4701-ac30-435159d16c5a"",
        ""url"": ""/v2/events/b5c5117d-b908-4701-ac30-435159d16c5a"",
        ""created_at"": ""2015-04-10T20:04:30+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-520"",
        ""actor"": ""guid-ce1e39c6-ebc4-40a7-bdae-03277914db92"",
        ""actor_type"": ""name-521"",
        ""actor_name"": ""name-522"",
        ""actee"": ""guid-d3f30f1a-03a0-4017-80e0-13886a3926e7"",
        ""actee_type"": ""name-523"",
        ""actee_name"": ""name-524"",
        ""timestamp"": ""2015-04-10T20:04:30+00:00"",
        ""metadata"": {

        },
        ""space_guid"": ""d5e73816-3a26-4895-bc6d-2b2637fe629b"",
        ""organization_guid"": ""d3961da8-c561-4685-9f16-5182603942a0""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cf868d8e-7e17-4cab-82bf-493c6e976f89", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cf868d8e-7e17-4cab-82bf-493c6e976f89", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-504", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("guid-047649b0-8aeb-4f72-b57a-a34e05d35799", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-505", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-506", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid-059b2db1-7d06-41c6-8fc3-a00d33b3dc65", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-507", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-508", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("2d5687c0-51c0-43b4-a7fd-37352fe80ca7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("144eff9d-ff8c-47ac-bb7a-e61c12bbec35", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("ddf1c892-16fd-4543-9691-4d9173d81213", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ddf1c892-16fd-4543-9691-4d9173d81213", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-512", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("guid-0c1fd567-3cb8-4bcb-b2f4-619f73b6706c", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-513", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-514", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("guid-abd7ed17-b5e5-475f-91d8-24599240f33c", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-515", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-516", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("5d33a0e8-fe20-4bb8-a6fd-b527e6695986", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("e40e1d03-b486-4e7f-80e1-7de75a56f833", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("b5c5117d-b908-4701-ac30-435159d16c5a", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b5c5117d-b908-4701-ac30-435159d16c5a", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-520", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("guid-ce1e39c6-ebc4-40a7-bdae-03277914db92", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-521", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-522", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("guid-d3f30f1a-03a0-4017-80e0-13886a3926e7", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-523", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-524", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:30+00:00", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("d5e73816-3a26-4895-bc6d-2b2637fe629b", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("d3961da8-c561-4685-9f16-5182603942a0", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""74c209de-8fbc-4997-8032-ce16cd9ef8ab"",
        ""url"": ""/v2/events/74c209de-8fbc-4997-8032-ce16cd9ef8ab"",
        ""created_at"": ""2015-04-10T20:04:34+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""23062593-2844-4e7e-87fa-04635f91fdb3"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1288"",
        ""actee"": ""387cae18-a661-443b-ad5b-1e913e571566"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-04-10T20:04:34+00:00"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("74c209de-8fbc-4997-8032-ce16cd9ef8ab", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/74c209de-8fbc-4997-8032-ce16cd9ef8ab", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("23062593-2844-4e7e-87fa-04635f91fdb3", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1288", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("387cae18-a661-443b-ad5b-1e913e571566", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a8ddd4aa-2ccb-4577-8a85-8b82ef2cf803"",
        ""url"": ""/v2/events/a8ddd4aa-2ccb-4577-8a85-8b82ef2cf803"",
        ""created_at"": ""2015-04-10T20:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-116"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""61bc5008-081e-4428-9ec6-a70f62f7e937"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-817"",
        ""timestamp"": ""2015-04-10T20:04:31+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""a2fdeba5-0920-436a-a562-bb63a29c6479"",
        ""organization_guid"": ""1d64a888-7a22-46db-bdc5-fb00463b1132""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a8ddd4aa-2ccb-4577-8a85-8b82ef2cf803", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a8ddd4aa-2ccb-4577-8a85-8b82ef2cf803", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-116", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("61bc5008-081e-4428-9ec6-a70f62f7e937", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-817", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("a2fdeba5-0920-436a-a562-bb63a29c6479", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1d64a888-7a22-46db-bdc5-fb00463b1132", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e93b133e-cb52-42dd-a3f9-8a733909357a"",
        ""url"": ""/v2/events/e93b133e-cb52-42dd-a3f9-8a733909357a"",
        ""created_at"": ""2015-04-10T20:04:34+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-153"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""c5cc7171-1431-4480-b420-10d6bb816a22"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1343"",
        ""timestamp"": ""2015-04-10T20:04:34+00:00"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""ba368244-9672-4483-a3f5-b3af54cbfc55"",
        ""organization_guid"": ""917c90e5-ff57-4046-9302-a55b86857f76""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e93b133e-cb52-42dd-a3f9-8a733909357a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e93b133e-cb52-42dd-a3f9-8a733909357a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-153", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c5cc7171-1431-4480-b420-10d6bb816a22", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1343", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ba368244-9672-4483-a3f5-b3af54cbfc55", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("917c90e5-ff57-4046-9302-a55b86857f76", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""16fa9b7f-34bd-406c-a1b5-057e9a6f6c7b"",
        ""url"": ""/v2/events/16fa9b7f-34bd-406c-a1b5-057e9a6f6c7b"",
        ""created_at"": ""2015-04-10T20:04:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""a6478966-c1b3-4ca1-a4c8-f274444443c9"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1124"",
        ""actee"": ""ca811fbf-9143-43c3-a0de-6195dfa89f1a"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-04-10T20:04:33+00:00"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("16fa9b7f-34bd-406c-a1b5-057e9a6f6c7b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/16fa9b7f-34bd-406c-a1b5-057e9a6f6c7b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("a6478966-c1b3-4ca1-a4c8-f274444443c9", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1124", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ca811fbf-9143-43c3-a0de-6195dfa89f1a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c76096b0-279f-4868-bcd8-0bf7b0c750d9"",
        ""url"": ""/v2/events/c76096b0-279f-4868-bcd8-0bf7b0c750d9"",
        ""created_at"": ""2015-04-10T20:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-106"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""ec5e69b7-7526-48e6-a437-1600a3bd03f3"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-681"",
        ""timestamp"": ""2015-04-10T20:04:31+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""ec5e69b7-7526-48e6-a437-1600a3bd03f3"",
        ""organization_guid"": ""a1fef67b-f066-422a-9f37-3df4182fc1ca""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c76096b0-279f-4868-bcd8-0bf7b0c750d9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c76096b0-279f-4868-bcd8-0bf7b0c750d9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-106", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ec5e69b7-7526-48e6-a437-1600a3bd03f3", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-681", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ec5e69b7-7526-48e6-a437-1600a3bd03f3", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a1fef67b-f066-422a-9f37-3df4182fc1ca", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2441e139-6ad1-42db-8217-854526c22d2c"",
        ""url"": ""/v2/events/2441e139-6ad1-42db-8217-854526c22d2c"",
        ""created_at"": ""2015-04-10T20:04:34+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-147"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d61fa2a9-e9c1-4445-a527-5e32a297ccbb"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1259"",
        ""timestamp"": ""2015-04-10T20:04:34+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1259"",
            ""service_plan_guid"": ""cc2d492a-e979-4bc9-9a89-9cd37aef8ea1"",
            ""space_guid"": ""5e529476-4e0e-43e8-ba7e-650081741486""
          }
        },
        ""space_guid"": ""5e529476-4e0e-43e8-ba7e-650081741486"",
        ""organization_guid"": ""6003f53c-76f5-40ea-8111-bb43d90b7954""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2441e139-6ad1-42db-8217-854526c22d2c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2441e139-6ad1-42db-8217-854526c22d2c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-147", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d61fa2a9-e9c1-4445-a527-5e32a297ccbb", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1259", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("5e529476-4e0e-43e8-ba7e-650081741486", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6003f53c-76f5-40ea-8111-bb43d90b7954", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9ab60f18-5dc4-4d14-907d-763031b6df3e"",
        ""url"": ""/v2/events/9ab60f18-5dc4-4d14-907d-763031b6df3e"",
        ""created_at"": ""2015-04-10T20:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-112"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""2ef13ae0-dae9-417f-931a-dbedd2fbe122"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-761"",
        ""timestamp"": ""2015-04-10T20:04:31+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""9c4030b6-e346-43e9-9ead-39fb93b14c72"",
        ""organization_guid"": ""e13f9c89-894b-4aec-a6f2-b42ae9715f6a""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9ab60f18-5dc4-4d14-907d-763031b6df3e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9ab60f18-5dc4-4d14-907d-763031b6df3e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-112", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("2ef13ae0-dae9-417f-931a-dbedd2fbe122", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-761", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9c4030b6-e346-43e9-9ead-39fb93b14c72", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("e13f9c89-894b-4aec-a6f2-b42ae9715f6a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""876867ea-9ff0-43e1-b61b-7170955b79d1"",
        ""url"": ""/v2/events/876867ea-9ff0-43e1-b61b-7170955b79d1"",
        ""created_at"": ""2015-04-10T20:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""e10e9d15-f925-4ca9-9bcc-31bd16c27a98"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-736"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-04-10T20:04:31+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("876867ea-9ff0-43e1-b61b-7170955b79d1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/876867ea-9ff0-43e1-b61b-7170955b79d1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("e10e9d15-f925-4ca9-9bcc-31bd16c27a98", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-736", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""48b69b33-6bef-4049-af6c-aab2477157ec"",
        ""url"": ""/v2/events/48b69b33-6bef-4049-af6c-aab2477157ec"",
        ""created_at"": ""2015-04-10T20:04:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-141"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""bd7a9651-0268-48d2-96e2-1de742ff2141"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1177"",
        ""timestamp"": ""2015-04-10T20:04:33+00:00"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("48b69b33-6bef-4049-af6c-aab2477157ec", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/48b69b33-6bef-4049-af6c-aab2477157ec", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-141", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bd7a9651-0268-48d2-96e2-1de742ff2141", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1177", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b0c299fd-0ad8-48fe-aeac-3b8e7b176aa4"",
        ""url"": ""/v2/events/b0c299fd-0ad8-48fe-aeac-3b8e7b176aa4"",
        ""created_at"": ""2015-04-10T20:04:34+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""f655bca8-ea31-461e-9528-887a6aa9460c"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1234"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-04-10T20:04:34+00:00"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b0c299fd-0ad8-48fe-aeac-3b8e7b176aa4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b0c299fd-0ad8-48fe-aeac-3b8e7b176aa4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("f655bca8-ea31-461e-9528-887a6aa9460c", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1234", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1eb2d4a8-d694-46eb-ad93-a4075409d99c"",
        ""url"": ""/v2/events/1eb2d4a8-d694-46eb-ad93-a4075409d99c"",
        ""created_at"": ""2015-04-10T20:04:34+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-151"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""d29fba78-edad-4a1d-8bf6-d7fb98ad6775"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1314"",
        ""timestamp"": ""2015-04-10T20:04:34+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""fc1dfe9a-233f-418b-a392-76dc68223edb"",
        ""organization_guid"": ""26500b73-93ed-4085-ae42-571a598cbdb5""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1eb2d4a8-d694-46eb-ad93-a4075409d99c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1eb2d4a8-d694-46eb-ad93-a4075409d99c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-151", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d29fba78-edad-4a1d-8bf6-d7fb98ad6775", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1314", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("fc1dfe9a-233f-418b-a392-76dc68223edb", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("26500b73-93ed-4085-ae42-571a598cbdb5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b87723eb-29ee-46dd-b0fa-7ce44be4059c"",
        ""url"": ""/v2/events/b87723eb-29ee-46dd-b0fa-7ce44be4059c"",
        ""created_at"": ""2015-04-10T20:04:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-143"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""92c5574b-05cc-4be0-90e1-897cbef0505c"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T20:04:33+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""97ea6797-290e-401e-9b05-d08a0e1f71ad"",
            ""app_guid"": ""239924c7-cbf5-4436-bfe6-5bd37d1937a6""
          }
        },
        ""space_guid"": ""0f8080e9-80da-4b1f-9f61-4120fdadcd6d"",
        ""organization_guid"": ""c45285a9-18f4-45cf-9320-736f41412bac""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b87723eb-29ee-46dd-b0fa-7ce44be4059c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b87723eb-29ee-46dd-b0fa-7ce44be4059c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-143", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("92c5574b-05cc-4be0-90e1-897cbef0505c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0f8080e9-80da-4b1f-9f61-4120fdadcd6d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c45285a9-18f4-45cf-9320-736f41412bac", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9a8e162b-bb5c-4169-a525-a8772811bf5e"",
        ""url"": ""/v2/events/9a8e162b-bb5c-4169-a525-a8772811bf5e"",
        ""created_at"": ""2015-04-10T20:04:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-139"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""aa85808f-9786-4208-9d2c-fa5ca36cbbae"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1149"",
        ""timestamp"": ""2015-04-10T20:04:33+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""e6997975-4d1b-478c-91f2-dc79af7f3892"",
        ""organization_guid"": ""6c0119cc-ecee-4618-ad09-0ede07643771""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9a8e162b-bb5c-4169-a525-a8772811bf5e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9a8e162b-bb5c-4169-a525-a8772811bf5e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-139", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("aa85808f-9786-4208-9d2c-fa5ca36cbbae", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1149", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("e6997975-4d1b-478c-91f2-dc79af7f3892", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6c0119cc-ecee-4618-ad09-0ede07643771", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""60082192-6dea-479e-bc70-7625dbdb6f8c"",
        ""url"": ""/v2/events/60082192-6dea-479e-bc70-7625dbdb6f8c"",
        ""created_at"": ""2015-04-10T20:04:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-122"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""7826e78b-9c11-4df1-9b5d-8c82f991272d"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T20:04:32+00:00"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""fc84e6cf-1fa0-46fe-ac1e-dfa911fc80bf""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("60082192-6dea-479e-bc70-7625dbdb6f8c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/60082192-6dea-479e-bc70-7625dbdb6f8c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-122", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7826e78b-9c11-4df1-9b5d-8c82f991272d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("fc84e6cf-1fa0-46fe-ac1e-dfa911fc80bf", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d73f2b8c-ced1-4610-b1c1-3eff77a53b6c"",
        ""url"": ""/v2/events/d73f2b8c-ced1-4610-b1c1-3eff77a53b6c"",
        ""created_at"": ""2015-04-10T20:04:33+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-133"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""6ef39f78-cbba-49f1-8e5b-671d8c55cb2f"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1068"",
        ""timestamp"": ""2015-04-10T20:04:33+00:00"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""ece32fec-089f-4711-9dd2-3506dc7d8796"",
        ""organization_guid"": ""37358981-4f91-46fa-aac3-10aef6c5910b""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d73f2b8c-ced1-4610-b1c1-3eff77a53b6c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d73f2b8c-ced1-4610-b1c1-3eff77a53b6c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-133", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6ef39f78-cbba-49f1-8e5b-671d8c55cb2f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1068", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:33+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ece32fec-089f-4711-9dd2-3506dc7d8796", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("37358981-4f91-46fa-aac3-10aef6c5910b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""73827258-7c31-4d51-8af0-51180a1e5e95"",
        ""url"": ""/v2/events/73827258-7c31-4d51-8af0-51180a1e5e95"",
        ""created_at"": ""2015-04-10T20:04:31+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-114"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""4d467f90-b323-43d2-88c2-c73b21a2893d"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-790"",
        ""timestamp"": ""2015-04-10T20:04:31+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""4d467f90-b323-43d2-88c2-c73b21a2893d"",
        ""organization_guid"": ""65da1e75-1dbf-40a1-9f72-da105bf40974""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("73827258-7c31-4d51-8af0-51180a1e5e95", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/73827258-7c31-4d51-8af0-51180a1e5e95", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-114", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4d467f90-b323-43d2-88c2-c73b21a2893d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-790", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:31+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("4d467f90-b323-43d2-88c2-c73b21a2893d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("65da1e75-1dbf-40a1-9f72-da105bf40974", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7c4842de-b65a-41be-aa75-fe526f4df389"",
        ""url"": ""/v2/events/7c4842de-b65a-41be-aa75-fe526f4df389"",
        ""created_at"": ""2015-04-10T20:04:32+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-127"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@email.com"",
        ""actee"": ""87f5010a-0c54-4377-9ab4-c6f4c9ca9997"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-04-10T20:04:32+00:00"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""9a56b973-0467-4af7-92d6-902e70bb4611"",
            ""organization_guid"": ""1e9fda62-4dc1-4134-84c8-79d1a7f561a9""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""1e9fda62-4dc1-4134-84c8-79d1a7f561a9""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsExperimentalResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7c4842de-b65a-41be-aa75-fe526f4df389", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/7c4842de-b65a-41be-aa75-fe526f4df389", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-127", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@email.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("87f5010a-0c54-4377-9ab4-c6f4c9ca9997", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:32+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1e9fda62-4dc1-4134-84c8-79d1a7f561a9", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsExperimentalResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a28f161b-7226-4c73-a0f8-9419da92b204"",
        ""url"": ""/v2/events/a28f161b-7226-4c73-a0f8-9419da92b204"",
        ""created_at"": ""2015-04-10T20:04:34+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""0aafb619-ef07-4b53-b5ec-d2420d7d11d7"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1372"",
        ""actee"": ""3369f97a-ae36-4220-93f6-39547cd4b543"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-60"",
        ""timestamp"": ""2015-04-10T20:04:34+00:00"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsExperimentalResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsExperimentalResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a28f161b-7226-4c73-a0f8-9419da92b204", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a28f161b-7226-4c73-a0f8-9419da92b204", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("0aafb619-ef07-4b53-b5ec-d2420d7d11d7", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1372", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3369f97a-ae36-4220-93f6-39547cd4b543", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-60", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T20:04:34+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}
