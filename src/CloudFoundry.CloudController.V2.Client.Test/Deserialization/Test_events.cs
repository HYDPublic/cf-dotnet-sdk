//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListServiceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""22aedfb6-ed0a-414a-8972-cfdc7923a311"",
        ""url"": ""/v2/events/dbaf9c4d-9670-4ce6-82be-16163f65715b"",
        ""created_at"": ""2016-05-05T14:14:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""fa6e0af5-a470-4843-8f50-7b76bc6c1a65"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-593"",
        ""actee"": ""fe8b5612-d104-4d85-bad9-888707b8418f"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2016-05-05T14:14:54Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("22aedfb6-ed0a-414a-8972-cfdc7923a311", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/dbaf9c4d-9670-4ce6-82be-16163f65715b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("fa6e0af5-a470-4843-8f50-7b76bc6c1a65", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-593", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("fe8b5612-d104-4d85-bad9-888707b8418f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9db41a9d-9933-4454-9bcd-a2feb72bc061"",
        ""url"": ""/v2/events/f55c5eb0-da84-4076-8899-cf3a0b715fda"",
        ""created_at"": ""2016-05-05T14:14:58Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-120"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""3cf035cc-67d2-4b43-bd9f-0ff980073b1f"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-05T14:14:58Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""9db41a9d-9933-4454-9bcd-a2feb72bc061"",
            ""organization_guid"": ""9db41a9d-9933-4454-9bcd-a2feb72bc061""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""9db41a9d-9933-4454-9bcd-a2feb72bc061""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9db41a9d-9933-4454-9bcd-a2feb72bc061", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f55c5eb0-da84-4076-8899-cf3a0b715fda", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-120", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3cf035cc-67d2-4b43-bd9f-0ff980073b1f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9db41a9d-9933-4454-9bcd-a2feb72bc061", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceKeyCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""eb49c305-2e7c-4c55-a301-94d580fdc900"",
        ""url"": ""/v2/events/d97d2576-64fd-466a-88ff-80842865875a"",
        ""created_at"": ""2016-05-05T14:14:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.create"",
        ""actor"": ""uaa-id-71"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""83fa6387-807a-46f6-b535-44c735cab94f"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-568"",
        ""timestamp"": ""2016-05-05T14:14:54Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""eb49c305-2e7c-4c55-a301-94d580fdc900"",
            ""name"": ""name-568""
          }
        },
        ""space_guid"": ""eb49c305-2e7c-4c55-a301-94d580fdc900"",
        ""organization_guid"": ""eb49c305-2e7c-4c55-a301-94d580fdc900""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceKeyCreateEventsResponse> page = Utilities.DeserializePage<ListServiceKeyCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("eb49c305-2e7c-4c55-a301-94d580fdc900", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d97d2576-64fd-466a-88ff-80842865875a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_key.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-71", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("83fa6387-807a-46f6-b535-44c735cab94f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_key", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-568", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("eb49c305-2e7c-4c55-a301-94d580fdc900", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("eb49c305-2e7c-4c55-a301-94d580fdc900", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""17d5e357-c082-4e6b-823b-6be1dee47e3b"",
        ""url"": ""/v2/events/e593adfe-eabb-41ae-b6cd-bb5dd4c71686"",
        ""created_at"": ""2016-05-05T14:14:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-126"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c860e0c5-c751-4c98-b79b-2de2cfb9fb5d"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1338"",
        ""timestamp"": ""2016-05-05T14:14:59Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""17d5e357-c082-4e6b-823b-6be1dee47e3b"",
        ""organization_guid"": ""17d5e357-c082-4e6b-823b-6be1dee47e3b""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("17d5e357-c082-4e6b-823b-6be1dee47e3b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e593adfe-eabb-41ae-b6cd-bb5dd4c71686", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-126", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c860e0c5-c751-4c98-b79b-2de2cfb9fb5d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1338", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("17d5e357-c082-4e6b-823b-6be1dee47e3b", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("17d5e357-c082-4e6b-823b-6be1dee47e3b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968"",
        ""url"": ""/v2/events/91359fd1-3be5-4e2b-b38f-3f7f431bb673"",
        ""created_at"": ""2016-05-05T14:14:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1343"",
        ""actor"": ""26ad5db4-5cc0-4565-a60e-59db6ebb9ca0"",
        ""actor_type"": ""name-1344"",
        ""actor_name"": ""name-1345"",
        ""actee"": ""abee7052-a032-4169-87f2-e0d720d4b88f"",
        ""actee_type"": ""name-1346"",
        ""actee_name"": ""name-1347"",
        ""timestamp"": ""2016-05-05T14:14:59Z"",
        ""metadata"": {

        },
        ""space_guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968"",
        ""organization_guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968"",
        ""url"": ""/v2/events/05415ad0-a419-4de5-b274-f5b81bdc99b9"",
        ""created_at"": ""2016-05-05T14:14:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1351"",
        ""actor"": ""15aa1386-faaa-4fb9-96a3-fbaa52870c4e"",
        ""actor_type"": ""name-1352"",
        ""actor_name"": ""name-1353"",
        ""actee"": ""cd33c9da-e761-4939-ba83-895edf80e952"",
        ""actee_type"": ""name-1354"",
        ""actee_name"": ""name-1355"",
        ""timestamp"": ""2016-05-05T14:14:59Z"",
        ""metadata"": {

        },
        ""space_guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968"",
        ""organization_guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968"",
        ""url"": ""/v2/events/463b0ea7-7c08-46e1-881e-a7dfdbd4cfff"",
        ""created_at"": ""2016-05-05T14:14:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1359"",
        ""actor"": ""204b6915-30b5-40c1-8088-263ff05d1f12"",
        ""actor_type"": ""name-1360"",
        ""actor_name"": ""name-1361"",
        ""actee"": ""f30a16e0-aaad-4c2d-bb41-ffc999b92726"",
        ""actee_type"": ""name-1362"",
        ""actee_name"": ""name-1363"",
        ""timestamp"": ""2016-05-05T14:14:59Z"",
        ""metadata"": {

        },
        ""space_guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968"",
        ""organization_guid"": ""bfb69cc1-1ed1-40df-807b-737036b77968""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/91359fd1-3be5-4e2b-b38f-3f7f431bb673", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1343", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("26ad5db4-5cc0-4565-a60e-59db6ebb9ca0", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-1344", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1345", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("abee7052-a032-4169-87f2-e0d720d4b88f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-1346", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1347", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/05415ad0-a419-4de5-b274-f5b81bdc99b9", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1351", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("15aa1386-faaa-4fb9-96a3-fbaa52870c4e", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-1352", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-1353", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("cd33c9da-e761-4939-ba83-895edf80e952", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-1354", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1355", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/463b0ea7-7c08-46e1-881e-a7dfdbd4cfff", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1359", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("204b6915-30b5-40c1-8088-263ff05d1f12", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-1360", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-1361", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("f30a16e0-aaad-4c2d-bb41-ffc999b92726", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-1362", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1363", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("bfb69cc1-1ed1-40df-807b-737036b77968", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""95454c79-597e-4aaa-849b-a6e840ed1748"",
        ""url"": ""/v2/events/4e354937-a9b5-4d90-8577-cf475760051d"",
        ""created_at"": ""2016-05-05T14:14:58Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""fe3aba15-ec22-480b-996e-931b8159cc8b"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1125"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-05-05T14:14:58Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("95454c79-597e-4aaa-849b-a6e840ed1748", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4e354937-a9b5-4d90-8577-cf475760051d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("fe3aba15-ec22-480b-996e-931b8159cc8b", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1125", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1210342e-d2de-4c46-9b47-156e94415bbd"",
        ""url"": ""/v2/events/1e002aaa-88de-431c-ba13-a6f5e301a29d"",
        ""created_at"": ""2016-05-05T14:14:58Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""964cf79a-3530-43c4-a3e7-2cc8abd0dde8"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1233"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2016-05-05T14:14:58Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""1210342e-d2de-4c46-9b47-156e94415bbd"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1210342e-d2de-4c46-9b47-156e94415bbd", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1e002aaa-88de-431c-ba13-a6f5e301a29d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("964cf79a-3530-43c4-a3e7-2cc8abd0dde8", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1233", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1fdcc952-4d5f-4456-bd9e-612b8644368d"",
        ""url"": ""/v2/events/cd9664e6-5209-42b7-acfc-471fa17edfe1"",
        ""created_at"": ""2016-05-05T14:14:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""8e13b0c4-9fc1-4180-9106-3f5c9bb100b3"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-903"",
        ""actee"": ""d66d8da7-425b-4c3e-ad09-a812b45fe99e"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2016-05-05T14:14:56Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1fdcc952-4d5f-4456-bd9e-612b8644368d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cd9664e6-5209-42b7-acfc-471fa17edfe1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("8e13b0c4-9fc1-4180-9106-3f5c9bb100b3", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-903", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d66d8da7-425b-4c3e-ad09-a812b45fe99e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a9f1d9f6-c4dd-422f-b9ec-980e69b0ba4c"",
        ""url"": ""/v2/events/eac30937-9e2a-492c-9ecb-3e6ff929b211"",
        ""created_at"": ""2016-05-05T14:14:57Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-100"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""137f605b-23bc-4ee8-accf-882b42c01f39"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-05T14:14:57Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""a9f1d9f6-c4dd-422f-b9ec-980e69b0ba4c""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a9f1d9f6-c4dd-422f-b9ec-980e69b0ba4c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/eac30937-9e2a-492c-9ecb-3e6ff929b211", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-100", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("137f605b-23bc-4ee8-accf-882b42c01f39", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a9f1d9f6-c4dd-422f-b9ec-980e69b0ba4c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""84a16983-aad8-4d07-81a3-669cff2e048c"",
        ""url"": ""/v2/events/20487ab8-3d16-47b7-897d-411e547738f1"",
        ""created_at"": ""2016-05-05T14:14:55Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-83"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ed26e61a-deb7-4dc5-ad39-d260f031b932"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-736"",
        ""timestamp"": ""2016-05-05T14:14:55Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""84a16983-aad8-4d07-81a3-669cff2e048c"",
        ""organization_guid"": ""84a16983-aad8-4d07-81a3-669cff2e048c""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("84a16983-aad8-4d07-81a3-669cff2e048c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/20487ab8-3d16-47b7-897d-411e547738f1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-83", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ed26e61a-deb7-4dc5-ad39-d260f031b932", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-736", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("84a16983-aad8-4d07-81a3-669cff2e048c", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("84a16983-aad8-4d07-81a3-669cff2e048c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStartEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5270d217-e083-4001-8db5-44777ebc59c2"",
        ""url"": ""/v2/events/39dd1965-5606-4570-8b24-53074ae4c0b8"",
        ""created_at"": ""2016-05-05T14:14:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-96"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b8f8de67-7d03-4747-bbed-a0323890db38"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-929"",
        ""timestamp"": ""2016-05-05T14:14:56Z"",
        ""metadata"": {

        },
        ""space_guid"": ""5270d217-e083-4001-8db5-44777ebc59c2"",
        ""organization_guid"": ""5270d217-e083-4001-8db5-44777ebc59c2""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStartEventsResponse> page = Utilities.DeserializePage<ListAppStartEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5270d217-e083-4001-8db5-44777ebc59c2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/39dd1965-5606-4570-8b24-53074ae4c0b8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-96", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b8f8de67-7d03-4747-bbed-a0323890db38", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("v3-app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-929", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("5270d217-e083-4001-8db5-44777ebc59c2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("5270d217-e083-4001-8db5-44777ebc59c2", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fe2556f0-628b-4324-9b51-c36025ff44b2"",
        ""url"": ""/v2/events/4096d55b-5bec-4a0c-b590-8db35950edbe"",
        ""created_at"": ""2016-05-05T14:14:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""17bdeff8-9a1b-48d1-9bb7-ded065b9cf37"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1313"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2016-05-05T14:14:59Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""fe2556f0-628b-4324-9b51-c36025ff44b2"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fe2556f0-628b-4324-9b51-c36025ff44b2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4096d55b-5bec-4a0c-b590-8db35950edbe", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("17bdeff8-9a1b-48d1-9bb7-ded065b9cf37", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1313", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e7ab74e0-99d4-4e28-ba16-f85c4b749124"",
        ""url"": ""/v2/events/d8c9fb12-4319-448e-99ae-bf0f67d8cae1"",
        ""created_at"": ""2016-05-05T14:14:57Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-98"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a43fc6bf-a8c8-44a0-8f77-3171548fcf8f"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-957"",
        ""timestamp"": ""2016-05-05T14:14:57Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e7ab74e0-99d4-4e28-ba16-f85c4b749124", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d8c9fb12-4319-448e-99ae-bf0f67d8cae1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-98", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("a43fc6bf-a8c8-44a0-8f77-3171548fcf8f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-957", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1eb8f4f5-d273-4aa8-803e-18b78bfed462"",
    ""url"": ""/v2/events/fc46a7e9-7c27-43a9-a0e1-eac51d0022d0"",
    ""created_at"": ""2016-05-05T14:14:53Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-236"",
    ""actor"": ""dcafe11c-1a60-4ce0-8d26-d702ec872bc0"",
    ""actor_type"": ""name-237"",
    ""actor_name"": ""name-238"",
    ""actee"": ""8dde2124-8ce2-4737-be63-aabae5cf72f2"",
    ""actee_type"": ""name-239"",
    ""actee_name"": ""name-240"",
    ""timestamp"": ""2016-05-05T14:14:53Z"",
    ""metadata"": {

    },
    ""space_guid"": ""1eb8f4f5-d273-4aa8-803e-18b78bfed462"",
    ""organization_guid"": ""1eb8f4f5-d273-4aa8-803e-18b78bfed462""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("1eb8f4f5-d273-4aa8-803e-18b78bfed462", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fc46a7e9-7c27-43a9-a0e1-eac51d0022d0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-236", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("dcafe11c-1a60-4ce0-8d26-d702ec872bc0", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-237", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-238", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("8dde2124-8ce2-4737-be63-aabae5cf72f2", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-239", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-240", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("1eb8f4f5-d273-4aa8-803e-18b78bfed462", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("1eb8f4f5-d273-4aa8-803e-18b78bfed462", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""901bdf79-284c-41a4-ac4b-43e47b2ef0d9"",
        ""url"": ""/v2/events/aa32263a-e09f-4863-84dd-70f68060820d"",
        ""created_at"": ""2016-05-05T14:14:58Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-116"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7121b46a-ed54-4688-9bfd-fddc9e296a37"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1205"",
        ""timestamp"": ""2016-05-05T14:14:58Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""901bdf79-284c-41a4-ac4b-43e47b2ef0d9"",
        ""organization_guid"": ""901bdf79-284c-41a4-ac4b-43e47b2ef0d9""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("901bdf79-284c-41a4-ac4b-43e47b2ef0d9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/aa32263a-e09f-4863-84dd-70f68060820d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-116", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7121b46a-ed54-4688-9bfd-fddc9e296a37", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1205", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("901bdf79-284c-41a4-ac4b-43e47b2ef0d9", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("901bdf79-284c-41a4-ac4b-43e47b2ef0d9", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceKeyDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9b44b5cd-e1f5-4ce8-a2e3-e4b1201f6c64"",
        ""url"": ""/v2/events/8db1dbc6-da8b-4f02-a8e2-b2eb93f9d47c"",
        ""created_at"": ""2016-05-05T14:14:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.delete"",
        ""actor"": ""uaa-id-53"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""8e85c953-4737-4f93-a8ed-3bd8e49e243e"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-317"",
        ""timestamp"": ""2016-05-05T14:14:53Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""9b44b5cd-e1f5-4ce8-a2e3-e4b1201f6c64"",
        ""organization_guid"": ""9b44b5cd-e1f5-4ce8-a2e3-e4b1201f6c64""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceKeyDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceKeyDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9b44b5cd-e1f5-4ce8-a2e3-e4b1201f6c64", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8db1dbc6-da8b-4f02-a8e2-b2eb93f9d47c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_key.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-53", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("8e85c953-4737-4f93-a8ed-3bd8e49e243e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_key", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-317", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9b44b5cd-e1f5-4ce8-a2e3-e4b1201f6c64", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9b44b5cd-e1f5-4ce8-a2e3-e4b1201f6c64", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e6a90f41-cd29-4620-8895-b0d8e4d5640f"",
        ""url"": ""/v2/events/e5760898-5d28-4010-9ca8-9ed3e14852e4"",
        ""created_at"": ""2016-05-05T14:14:55Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""b7c7429a-126d-4021-a80d-d6209dc06340"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-764"",
        ""actee"": ""d52f10f1-d4e0-43af-a148-08b74883e826"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-20"",
        ""timestamp"": ""2016-05-05T14:14:55Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e6a90f41-cd29-4620-8895-b0d8e4d5640f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e5760898-5d28-4010-9ca8-9ed3e14852e4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("b7c7429a-126d-4021-a80d-d6209dc06340", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-764", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d52f10f1-d4e0-43af-a148-08b74883e826", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-20", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e938fc2b-0498-4b22-a57d-6bcfd47998dd"",
        ""url"": ""/v2/events/1328e465-f8fa-425a-9a7f-693fdffa1f7a"",
        ""created_at"": ""2016-05-05T14:14:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-55"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""3f99f63d-ee2a-4943-897c-b25da5dfac3b"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-342"",
        ""timestamp"": ""2016-05-05T14:14:53Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e938fc2b-0498-4b22-a57d-6bcfd47998dd", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1328e465-f8fa-425a-9a7f-693fdffa1f7a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-55", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3f99f63d-ee2a-4943-897c-b25da5dfac3b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-342", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""76c051a2-e5e4-4b48-ae69-0a5a2614ec95"",
        ""url"": ""/v2/events/e293746f-5115-4b6c-9af2-95e569796f5c"",
        ""created_at"": ""2016-05-05T14:14:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-65"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0ac3264d-4694-4513-a8b4-4efe8776245a"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-477"",
        ""timestamp"": ""2016-05-05T14:14:54Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""76c051a2-e5e4-4b48-ae69-0a5a2614ec95"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""76c051a2-e5e4-4b48-ae69-0a5a2614ec95"",
        ""organization_guid"": ""76c051a2-e5e4-4b48-ae69-0a5a2614ec95""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("76c051a2-e5e4-4b48-ae69-0a5a2614ec95", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e293746f-5115-4b6c-9af2-95e569796f5c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-65", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0ac3264d-4694-4513-a8b4-4efe8776245a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-477", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("76c051a2-e5e4-4b48-ae69-0a5a2614ec95", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("76c051a2-e5e4-4b48-ae69-0a5a2614ec95", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e4ba82bc-0a27-4fb8-a3b4-a87f2d8223b1"",
        ""url"": ""/v2/events/f9f2965b-9e04-495c-9f8c-9c97fe9fdc4f"",
        ""created_at"": ""2016-05-05T14:14:57Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.update"",
        ""actor"": ""uaa-id-102"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""80f53cae-70ef-4f3d-8876-634799bd7ca4"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-17"",
        ""timestamp"": ""2016-05-05T14:14:57Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""e4ba82bc-0a27-4fb8-a3b4-a87f2d8223b1"",
            ""space_guid"": ""e4ba82bc-0a27-4fb8-a3b4-a87f2d8223b1""
          }
        },
        ""space_guid"": ""e4ba82bc-0a27-4fb8-a3b4-a87f2d8223b1"",
        ""organization_guid"": ""e4ba82bc-0a27-4fb8-a3b4-a87f2d8223b1""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteUpdateEventsResponse> page = Utilities.DeserializePage<ListRouteUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e4ba82bc-0a27-4fb8-a3b4-a87f2d8223b1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f9f2965b-9e04-495c-9f8c-9c97fe9fdc4f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-102", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("80f53cae-70ef-4f3d-8876-634799bd7ca4", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-17", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("e4ba82bc-0a27-4fb8-a3b4-a87f2d8223b1", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("e4ba82bc-0a27-4fb8-a3b4-a87f2d8223b1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""432d4ebe-f3a9-48ad-8cbc-3b9838abc5dd"",
        ""url"": ""/v2/events/b339d7db-2900-465c-b0b8-c066e7d570d6"",
        ""created_at"": ""2016-05-05T14:14:58Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""a036f115-5c3a-45e6-94ba-455578506fa8"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1179"",
        ""actee"": ""ab8f30c1-c9c1-4a2f-8619-0db6d783f4a9"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1180"",
        ""timestamp"": ""2016-05-05T14:14:58Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("432d4ebe-f3a9-48ad-8cbc-3b9838abc5dd", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b339d7db-2900-465c-b0b8-c066e7d570d6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("a036f115-5c3a-45e6-94ba-455578506fa8", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1179", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ab8f30c1-c9c1-4a2f-8619-0db6d783f4a9", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1180", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""19e34724-3ceb-49ac-8148-1495d2bdeefb"",
        ""url"": ""/v2/events/4fc84ad8-0a35-4a2f-badf-16aad45f8f6d"",
        ""created_at"": ""2016-05-05T14:14:57Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-108"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""37da0004-8e82-4518-858a-2c58b464572a"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1094"",
        ""timestamp"": ""2016-05-05T14:14:57Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1094"",
            ""service_plan_guid"": ""19e34724-3ceb-49ac-8148-1495d2bdeefb"",
            ""space_guid"": ""19e34724-3ceb-49ac-8148-1495d2bdeefb"",
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""19e34724-3ceb-49ac-8148-1495d2bdeefb"",
        ""organization_guid"": ""19e34724-3ceb-49ac-8148-1495d2bdeefb""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("19e34724-3ceb-49ac-8148-1495d2bdeefb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4fc84ad8-0a35-4a2f-badf-16aad45f8f6d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-108", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("37da0004-8e82-4518-858a-2c58b464572a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1094", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("19e34724-3ceb-49ac-8148-1495d2bdeefb", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("19e34724-3ceb-49ac-8148-1495d2bdeefb", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dabc0483-fb62-4ff1-a761-ac34241ab01a"",
        ""url"": ""/v2/events/90a3e37b-f123-4b54-8755-b8e361d52591"",
        ""created_at"": ""2016-05-05T14:14:58Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-112"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7f365551-9871-450c-9be4-b200c40a3a87"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1150"",
        ""timestamp"": ""2016-05-05T14:14:58Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""dabc0483-fb62-4ff1-a761-ac34241ab01a"",
        ""organization_guid"": ""dabc0483-fb62-4ff1-a761-ac34241ab01a""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dabc0483-fb62-4ff1-a761-ac34241ab01a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/90a3e37b-f123-4b54-8755-b8e361d52591", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-112", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7f365551-9871-450c-9be4-b200c40a3a87", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1150", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:58Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("dabc0483-fb62-4ff1-a761-ac34241ab01a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("dabc0483-fb62-4ff1-a761-ac34241ab01a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6ffa83f5-b648-44a9-8095-42133b8d38bb"",
        ""url"": ""/v2/events/27abeaeb-0483-4183-be77-6395b07e3aea"",
        ""created_at"": ""2016-05-05T14:14:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-59"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""16a99c6a-9466-4fa9-bcd9-0b0deaab8c65"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2016-05-05T14:14:53Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6ffa83f5-b648-44a9-8095-42133b8d38bb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/27abeaeb-0483-4183-be77-6395b07e3aea", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-59", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("16a99c6a-9466-4fa9-bcd9-0b0deaab8c65", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppSshAuthorizedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""331605fe-1865-4050-96ad-65ed4a5291ef"",
        ""url"": ""/v2/events/e1708d9c-8fc2-4635-aa17-778089253630"",
        ""created_at"": ""2016-05-05T14:14:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-authorized"",
        ""actor"": ""uaa-id-61"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c026c7ae-0860-472e-abd2-a91823721d3b"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-419"",
        ""timestamp"": ""2016-05-05T14:14:54Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""331605fe-1865-4050-96ad-65ed4a5291ef"",
        ""organization_guid"": ""331605fe-1865-4050-96ad-65ed4a5291ef""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppSshAuthorizedEventsResponse> page = Utilities.DeserializePage<ListAppSshAuthorizedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("331605fe-1865-4050-96ad-65ed4a5291ef", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e1708d9c-8fc2-4635-aa17-778089253630", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.ssh-authorized", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-61", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c026c7ae-0860-472e-abd2-a91823721d3b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-419", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("331605fe-1865-4050-96ad-65ed4a5291ef", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("331605fe-1865-4050-96ad-65ed4a5291ef", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6cf8fda9-a358-420e-ab8d-d8e9de3188fa"",
        ""url"": ""/v2/events/3d6a74f3-9cdc-4fc3-aaa3-76dbf2af07ec"",
        ""created_at"": ""2016-05-05T14:14:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-51"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""faf43763-978d-4fe9-bcdf-ebba414b03b1"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-284"",
        ""timestamp"": ""2016-05-05T14:14:53Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""6cf8fda9-a358-420e-ab8d-d8e9de3188fa"",
        ""organization_guid"": ""6cf8fda9-a358-420e-ab8d-d8e9de3188fa""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6cf8fda9-a358-420e-ab8d-d8e9de3188fa", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3d6a74f3-9cdc-4fc3-aaa3-76dbf2af07ec", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-51", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("faf43763-978d-4fe9-bcdf-ebba414b03b1", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-284", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("6cf8fda9-a358-420e-ab8d-d8e9de3188fa", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6cf8fda9-a358-420e-ab8d-d8e9de3188fa", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStopEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce4214fb-152e-45d4-8033-78656a8eeca7"",
        ""url"": ""/v2/events/a821541b-8d79-495f-bfda-30ffd7ffc330"",
        ""created_at"": ""2016-05-05T14:14:55Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-79"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""16141f65-e05a-45d4-a07e-0598f9739122"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-679"",
        ""timestamp"": ""2016-05-05T14:14:55Z"",
        ""metadata"": {

        },
        ""space_guid"": ""ce4214fb-152e-45d4-8033-78656a8eeca7"",
        ""organization_guid"": ""ce4214fb-152e-45d4-8033-78656a8eeca7""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStopEventsResponse> page = Utilities.DeserializePage<ListAppStopEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ce4214fb-152e-45d4-8033-78656a8eeca7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a821541b-8d79-495f-bfda-30ffd7ffc330", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-79", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("16141f65-e05a-45d4-a07e-0598f9739122", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("v3-app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-679", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ce4214fb-152e-45d4-8033-78656a8eeca7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("ce4214fb-152e-45d4-8033-78656a8eeca7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppSshUnauthorizedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bd761f53-ffc0-4bed-8180-7cf56efe926d"",
        ""url"": ""/v2/events/2571bda5-62a9-4a78-8281-830b601ee788"",
        ""created_at"": ""2016-05-05T14:14:55Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-unauthorized"",
        ""actor"": ""uaa-id-75"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a3ca0fb4-64b5-4ab4-8b4b-db680932c555"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-618"",
        ""timestamp"": ""2016-05-05T14:14:55Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""bd761f53-ffc0-4bed-8180-7cf56efe926d"",
        ""organization_guid"": ""bd761f53-ffc0-4bed-8180-7cf56efe926d""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppSshUnauthorizedEventsResponse> page = Utilities.DeserializePage<ListAppSshUnauthorizedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bd761f53-ffc0-4bed-8180-7cf56efe926d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2571bda5-62a9-4a78-8281-830b601ee788", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.ssh-unauthorized", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-75", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("a3ca0fb4-64b5-4ab4-8b4b-db680932c555", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-618", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("bd761f53-ffc0-4bed-8180-7cf56efe926d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("bd761f53-ffc0-4bed-8180-7cf56efe926d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a34306b8-afa5-4262-8fb9-b7904caab4e5"",
        ""url"": ""/v2/events/6bd0ff8d-a17b-4a42-9124-f9bcdb1adfba"",
        ""created_at"": ""2016-05-05T14:14:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.delete-request"",
        ""actor"": ""uaa-id-90"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""538ac0a2-e894-4c76-b7d3-8409bcc54670"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-16"",
        ""timestamp"": ""2016-05-05T14:14:56Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""a34306b8-afa5-4262-8fb9-b7904caab4e5"",
        ""organization_guid"": ""a34306b8-afa5-4262-8fb9-b7904caab4e5""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteDeleteEventsResponse> page = Utilities.DeserializePage<ListRouteDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a34306b8-afa5-4262-8fb9-b7904caab4e5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6bd0ff8d-a17b-4a42-9124-f9bcdb1adfba", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-90", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("538ac0a2-e894-4c76-b7d3-8409bcc54670", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-16", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("a34306b8-afa5-4262-8fb9-b7904caab4e5", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a34306b8-afa5-4262-8fb9-b7904caab4e5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListRouteCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c4057850-c0d7-4130-922e-e642d8b85d04"",
        ""url"": ""/v2/events/6bf17cec-1376-43e9-b00e-0e141304cd5c"",
        ""created_at"": ""2016-05-05T14:14:57Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.create"",
        ""actor"": ""uaa-id-106"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""72a7b29f-9f17-439e-afb1-a40dd008b1ea"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-18"",
        ""timestamp"": ""2016-05-05T14:14:57Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""c4057850-c0d7-4130-922e-e642d8b85d04"",
            ""space_guid"": ""c4057850-c0d7-4130-922e-e642d8b85d04""
          }
        },
        ""space_guid"": ""c4057850-c0d7-4130-922e-e642d8b85d04"",
        ""organization_guid"": ""c4057850-c0d7-4130-922e-e642d8b85d04""
      }
    }
  ]
}";

            PagedResponseCollection<ListRouteCreateEventsResponse> page = Utilities.DeserializePage<ListRouteCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c4057850-c0d7-4130-922e-e642d8b85d04", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6bf17cec-1376-43e9-b00e-0e141304cd5c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.route.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-106", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("72a7b29f-9f17-439e-afb1-a40dd008b1ea", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("route", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("host-18", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("c4057850-c0d7-4130-922e-e642d8b85d04", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c4057850-c0d7-4130-922e-e642d8b85d04", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""47931332-15c4-43ef-8538-e2b9bde80669"",
        ""url"": ""/v2/events/13f8c70f-22ef-4739-acb8-bde5d5ab387c"",
        ""created_at"": ""2016-05-05T14:14:55Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-81"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6ffa6bb7-3cb8-442b-88a1-cd372b84620c"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-707"",
        ""timestamp"": ""2016-05-05T14:14:55Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""47931332-15c4-43ef-8538-e2b9bde80669"",
        ""organization_guid"": ""47931332-15c4-43ef-8538-e2b9bde80669""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""47931332-15c4-43ef-8538-e2b9bde80669"",
        ""url"": ""/v2/events/65889848-85db-48cb-8017-baef8ec45336"",
        ""created_at"": ""2016-05-05T14:14:55Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-81"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6ffa6bb7-3cb8-442b-88a1-cd372b84620c"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-707"",
        ""timestamp"": ""2016-05-05T14:14:55Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""47931332-15c4-43ef-8538-e2b9bde80669"",
        ""organization_guid"": ""47931332-15c4-43ef-8538-e2b9bde80669""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""47931332-15c4-43ef-8538-e2b9bde80669"",
        ""url"": ""/v2/events/0073d878-ab40-46d3-bdb1-b16ebb3fb399"",
        ""created_at"": ""2016-05-05T14:14:55Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-81"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6ffa6bb7-3cb8-442b-88a1-cd372b84620c"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-707"",
        ""timestamp"": ""2016-05-05T14:14:55Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""47931332-15c4-43ef-8538-e2b9bde80669"",
        ""organization_guid"": ""47931332-15c4-43ef-8538-e2b9bde80669""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/13f8c70f-22ef-4739-acb8-bde5d5ab387c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-81", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6ffa6bb7-3cb8-442b-88a1-cd372b84620c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-707", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/65889848-85db-48cb-8017-baef8ec45336", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-81", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("6ffa6bb7-3cb8-442b-88a1-cd372b84620c", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-707", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0073d878-ab40-46d3-bdb1-b16ebb3fb399", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-81", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("6ffa6bb7-3cb8-442b-88a1-cd372b84620c", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-707", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("47931332-15c4-43ef-8538-e2b9bde80669", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2ae2f07d-6aa4-4cf2-9e7e-48f231395170"",
        ""url"": ""/v2/events/297f7f50-a872-43b3-928d-2e347f4fc73f"",
        ""created_at"": ""2016-05-05T14:14:57Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-104"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c9cc1613-cfc5-4bfe-847d-66f2a5c9359f"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1037"",
        ""timestamp"": ""2016-05-05T14:14:57Z"",
        ""metadata"": {
          ""request"": {
            ""parameters"": ""[PRIVATE DATA HIDDEN]""
          }
        },
        ""space_guid"": ""2ae2f07d-6aa4-4cf2-9e7e-48f231395170"",
        ""organization_guid"": ""2ae2f07d-6aa4-4cf2-9e7e-48f231395170""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2ae2f07d-6aa4-4cf2-9e7e-48f231395170", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/297f7f50-a872-43b3-928d-2e347f4fc73f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-104", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c9cc1613-cfc5-4bfe-847d-66f2a5c9359f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1037", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:57Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("2ae2f07d-6aa4-4cf2-9e7e-48f231395170", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("2ae2f07d-6aa4-4cf2-9e7e-48f231395170", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""458866a5-d1ad-4ee7-b6ab-f0b60d048eb2"",
        ""url"": ""/v2/events/9b78c1c6-2c36-4702-a886-60de9c9f0331"",
        ""created_at"": ""2016-05-05T14:14:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-122"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""509c9daa-7839-418d-974f-5a0299eee920"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1286"",
        ""timestamp"": ""2016-05-05T14:14:59Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""458866a5-d1ad-4ee7-b6ab-f0b60d048eb2"",
        ""organization_guid"": ""458866a5-d1ad-4ee7-b6ab-f0b60d048eb2""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("458866a5-d1ad-4ee7-b6ab-f0b60d048eb2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9b78c1c6-2c36-4702-a886-60de9c9f0331", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-122", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("509c9daa-7839-418d-974f-5a0299eee920", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1286", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:59Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("458866a5-d1ad-4ee7-b6ab-f0b60d048eb2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("458866a5-d1ad-4ee7-b6ab-f0b60d048eb2", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4d07a3a8-1732-489f-9304-0f7d34e5c676"",
        ""url"": ""/v2/events/28bf1a60-d240-4d9e-9798-ab306c5016b3"",
        ""created_at"": ""2016-05-05T14:14:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-67"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""890f9894-3e7c-4ee1-8e28-48d8b51b07c9"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-507"",
        ""timestamp"": ""2016-05-05T14:14:54Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-507"",
            ""space_guid"": ""4d07a3a8-1732-489f-9304-0f7d34e5c676""
          }
        },
        ""space_guid"": ""4d07a3a8-1732-489f-9304-0f7d34e5c676"",
        ""organization_guid"": ""4d07a3a8-1732-489f-9304-0f7d34e5c676""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4d07a3a8-1732-489f-9304-0f7d34e5c676", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/28bf1a60-d240-4d9e-9798-ab306c5016b3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-67", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("890f9894-3e7c-4ee1-8e28-48d8b51b07c9", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-507", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("4d07a3a8-1732-489f-9304-0f7d34e5c676", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("4d07a3a8-1732-489f-9304-0f7d34e5c676", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4c10ebee-a29e-4433-979f-dc149223b7fa"",
        ""url"": ""/v2/events/df1c6f24-1417-4e4a-8d48-35c28250e50f"",
        ""created_at"": ""2016-05-05T14:14:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""590d7ea5-2eb2-45fc-8327-3f8be762eb4d"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-815"",
        ""actee"": ""590d7ea5-2eb2-45fc-8327-3f8be762eb4d"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-815"",
        ""timestamp"": ""2016-05-05T14:14:56Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""4c10ebee-a29e-4433-979f-dc149223b7fa"",
        ""organization_guid"": ""4c10ebee-a29e-4433-979f-dc149223b7fa""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4c10ebee-a29e-4433-979f-dc149223b7fa", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/df1c6f24-1417-4e4a-8d48-35c28250e50f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("590d7ea5-2eb2-45fc-8327-3f8be762eb4d", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-815", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("590d7ea5-2eb2-45fc-8327-3f8be762eb4d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-815", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("4c10ebee-a29e-4433-979f-dc149223b7fa", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("4c10ebee-a29e-4433-979f-dc149223b7fa", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e41994ff-792a-4110-b625-934dc950f3bb"",
        ""url"": ""/v2/events/8d7812ef-4b84-4721-a5eb-051b1d5d366f"",
        ""created_at"": ""2016-05-05T14:14:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""c4637616-0fe2-485d-b0c4-557bb8484319"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-790"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-05-05T14:14:56Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e41994ff-792a-4110-b625-934dc950f3bb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8d7812ef-4b84-4721-a5eb-051b1d5d366f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("c4637616-0fe2-485d-b0c4-557bb8484319", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-790", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9c1e0998-f2de-46e8-9231-3bad89d80be6"",
        ""url"": ""/v2/events/36d9e560-c32f-4393-81ef-4b5559029402"",
        ""created_at"": ""2016-05-05T14:14:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-92"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5dcc704c-142f-4ab7-b6c8-8f6dec953efd"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-05T14:14:56Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""9c1e0998-f2de-46e8-9231-3bad89d80be6"",
        ""organization_guid"": ""9c1e0998-f2de-46e8-9231-3bad89d80be6""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9c1e0998-f2de-46e8-9231-3bad89d80be6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/36d9e560-c32f-4393-81ef-4b5559029402", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-92", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("5dcc704c-142f-4ab7-b6c8-8f6dec953efd", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:56Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9c1e0998-f2de-46e8-9231-3bad89d80be6", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9c1e0998-f2de-46e8-9231-3bad89d80be6", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""79a4b5a1-1789-4bf5-b715-ad828eb70054"",
        ""url"": ""/v2/events/872e72ad-2899-4411-b538-f224fd35b6b5"",
        ""created_at"": ""2016-05-05T14:14:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-57"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0a0e4e36-dc9b-4188-922d-db5b270ae710"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-05T14:14:53Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""79a4b5a1-1789-4bf5-b715-ad828eb70054"",
            ""organization_guid"": ""79a4b5a1-1789-4bf5-b715-ad828eb70054""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""79a4b5a1-1789-4bf5-b715-ad828eb70054""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("79a4b5a1-1789-4bf5-b715-ad828eb70054", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/872e72ad-2899-4411-b538-f224fd35b6b5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-57", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0a0e4e36-dc9b-4188-922d-db5b270ae710", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:53Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("79a4b5a1-1789-4bf5-b715-ad828eb70054", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f54fccbe-73b0-4744-a6fd-4d2b647336d7"",
        ""url"": ""/v2/events/280d8a2d-c845-4d91-bf47-78ecb1e38340"",
        ""created_at"": ""2016-05-05T14:14:55Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-77"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6ea24e44-2938-478e-8de9-0542ad407227"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-05-05T14:14:55Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""f54fccbe-73b0-4744-a6fd-4d2b647336d7"",
            ""app_guid"": ""f54fccbe-73b0-4744-a6fd-4d2b647336d7""
          }
        },
        ""space_guid"": ""f54fccbe-73b0-4744-a6fd-4d2b647336d7"",
        ""organization_guid"": ""f54fccbe-73b0-4744-a6fd-4d2b647336d7""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f54fccbe-73b0-4744-a6fd-4d2b647336d7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/280d8a2d-c845-4d91-bf47-78ecb1e38340", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-77", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6ea24e44-2938-478e-8de9-0542ad407227", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:55Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("f54fccbe-73b0-4744-a6fd-4d2b647336d7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("f54fccbe-73b0-4744-a6fd-4d2b647336d7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c80679b6-095a-4ba3-bd36-009076c02c5b"",
        ""url"": ""/v2/events/85c17def-4a7f-410f-b528-076907fe2935"",
        ""created_at"": ""2016-05-05T14:14:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-63"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""8070b946-c136-487c-b187-979db1c65830"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-448"",
        ""timestamp"": ""2016-05-05T14:14:54Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""c80679b6-095a-4ba3-bd36-009076c02c5b"",
        ""organization_guid"": ""c80679b6-095a-4ba3-bd36-009076c02c5b""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c80679b6-095a-4ba3-bd36-009076c02c5b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/85c17def-4a7f-410f-b528-076907fe2935", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-63", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("8070b946-c136-487c-b187-979db1c65830", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-448", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("c80679b6-095a-4ba3-bd36-009076c02c5b", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c80679b6-095a-4ba3-bd36-009076c02c5b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8fa891c0-21af-477f-bbc4-7ab1e735e816"",
        ""url"": ""/v2/events/20a6e24d-2452-405b-a61f-57d9d178bed1"",
        ""created_at"": ""2016-05-05T14:14:54Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-69"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""db55fc90-a716-422b-ba4c-08c95453062e"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-535"",
        ""timestamp"": ""2016-05-05T14:14:54Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""8fa891c0-21af-477f-bbc4-7ab1e735e816"",
        ""organization_guid"": ""8fa891c0-21af-477f-bbc4-7ab1e735e816""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8fa891c0-21af-477f-bbc4-7ab1e735e816", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/20a6e24d-2452-405b-a61f-57d9d178bed1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-69", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("db55fc90-a716-422b-ba4c-08c95453062e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-535", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-05-05T14:14:54Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8fa891c0-21af-477f-bbc4-7ab1e735e816", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8fa891c0-21af-477f-bbc4-7ab1e735e816", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}
