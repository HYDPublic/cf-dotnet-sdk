//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class BuildpacksTest
    {


        [TestMethod]
        public void TestChangePositionOfBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""41c9f9bc-6af7-4265-b6af-061b6063c0d6"",
    ""url"": ""/v2/buildpacks/41c9f9bc-6af7-4265-b6af-061b6063c0d6"",
    ""created_at"": ""2015-04-16T12:04:19+00:00"",
    ""updated_at"": ""2015-04-16T12:04:19+00:00""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 3,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": ""name-248""
  }
}";

            ChangePositionOfBuildpackResponse obj = Utilities.DeserializeJson<ChangePositionOfBuildpackResponse>(json);

            Assert.AreEqual("41c9f9bc-6af7-4265-b6af-061b6063c0d6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/41c9f9bc-6af7-4265-b6af-061b6063c0d6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("3", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("name-248", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestLockOrUnlockBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fd1965ac-0ff8-4e6e-8a86-bd0cae7128b8"",
    ""url"": ""/v2/buildpacks/fd1965ac-0ff8-4e6e-8a86-bd0cae7128b8"",
    ""created_at"": ""2015-04-16T12:04:19+00:00"",
    ""updated_at"": ""2015-04-16T12:04:19+00:00""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": true,
    ""filename"": ""name-251""
  }
}";

            LockOrUnlockBuildpackResponse obj = Utilities.DeserializeJson<LockOrUnlockBuildpackResponse>(json);

            Assert.AreEqual("fd1965ac-0ff8-4e6e-8a86-bd0cae7128b8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/fd1965ac-0ff8-4e6e-8a86-bd0cae7128b8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("name-251", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestEnableOrDisableBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9a9405c5-c9e3-4ffe-870f-4ef4f0176530"",
    ""url"": ""/v2/buildpacks/9a9405c5-c9e3-4ffe-870f-4ef4f0176530"",
    ""created_at"": ""2015-04-16T12:04:19+00:00"",
    ""updated_at"": ""2015-04-16T12:04:19+00:00""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": false,
    ""locked"": false,
    ""filename"": ""name-254""
  }
}";

            EnableOrDisableBuildpackResponse obj = Utilities.DeserializeJson<EnableOrDisableBuildpackResponse>(json);

            Assert.AreEqual("9a9405c5-c9e3-4ffe-870f-4ef4f0176530", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/9a9405c5-c9e3-4ffe-870f-4ef4f0176530", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("name-254", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestRetrieveBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ddd2d5f7-7c24-46b7-8d52-0169642ee59c"",
    ""url"": ""/v2/buildpacks/ddd2d5f7-7c24-46b7-8d52-0169642ee59c"",
    ""created_at"": ""2015-04-16T12:04:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": ""name-257""
  }
}";

            RetrieveBuildpackResponse obj = Utilities.DeserializeJson<RetrieveBuildpackResponse>(json);

            Assert.AreEqual("ddd2d5f7-7c24-46b7-8d52-0169642ee59c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/ddd2d5f7-7c24-46b7-8d52-0169642ee59c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("name-257", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestCreatesAdminBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a05fee66-f3a0-4460-b510-18718d6fa960"",
    ""url"": ""/v2/buildpacks/a05fee66-f3a0-4460-b510-18718d6fa960"",
    ""created_at"": ""2015-04-16T12:04:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""Golang_buildpack"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": null
  }
}";

            CreatesAdminBuildpackResponse obj = Utilities.DeserializeJson<CreatesAdminBuildpackResponse>(json);

            Assert.AreEqual("a05fee66-f3a0-4460-b510-18718d6fa960", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/a05fee66-f3a0-4460-b510-18718d6fa960", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("Golang_buildpack", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestListAllBuildpacksResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ffb11e47-5cc3-4126-8455-fdeb278d2544"",
        ""url"": ""/v2/buildpacks/ffb11e47-5cc3-4126-8455-fdeb278d2544"",
        ""created_at"": ""2015-04-16T12:04:19+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_1"",
        ""position"": 1,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-242""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""3bbdadfe-526e-47a0-a11a-92634f8e8513"",
        ""url"": ""/v2/buildpacks/3bbdadfe-526e-47a0-a11a-92634f8e8513"",
        ""created_at"": ""2015-04-16T12:04:19+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_2"",
        ""position"": 2,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-243""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ec19608e-0852-41f7-b751-92e8336e0561"",
        ""url"": ""/v2/buildpacks/ec19608e-0852-41f7-b751-92e8336e0561"",
        ""created_at"": ""2015-04-16T12:04:19+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_3"",
        ""position"": 3,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-244""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBuildpacksResponse> page = Utilities.DeserializePage<ListAllBuildpacksResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ffb11e47-5cc3-4126-8455-fdeb278d2544", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/ffb11e47-5cc3-4126-8455-fdeb278d2544", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Locked), true);
            Assert.AreEqual("name-242", TestUtil.ToTestableString(page[0].Filename), true);
            Assert.AreEqual("3bbdadfe-526e-47a0-a11a-92634f8e8513", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/3bbdadfe-526e-47a0-a11a-92634f8e8513", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_2", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page[1].Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Locked), true);
            Assert.AreEqual("name-243", TestUtil.ToTestableString(page[1].Filename), true);
            Assert.AreEqual("ec19608e-0852-41f7-b751-92e8336e0561", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/ec19608e-0852-41f7-b751-92e8336e0561", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:19+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_3", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("3", TestUtil.ToTestableString(page[2].Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[2].Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Locked), true);
            Assert.AreEqual("name-244", TestUtil.ToTestableString(page[2].Filename), true);
        }
    }
}
