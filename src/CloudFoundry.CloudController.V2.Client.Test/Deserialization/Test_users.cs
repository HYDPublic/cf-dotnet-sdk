//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fbeded46-fe32-442c-8d85-e5adafd7d113"",
        ""url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17"",
        ""created_at"": ""2016-03-21T10:59:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1169"",
        ""organization_guid"": ""fbeded46-fe32-442c-8d85-e5adafd7d113"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/dfb17174-def6-4905-b16b-93f9dc7a6051"",
        ""developers_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/developers"",
        ""managers_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/managers"",
        ""auditors_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/auditors"",
        ""apps_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/apps"",
        ""routes_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/routes"",
        ""domains_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/domains"",
        ""service_instances_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/service_instances"",
        ""app_events_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/app_events"",
        ""events_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/events"",
        ""security_groups_url"": ""/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fbeded46-fe32-442c-8d85-e5adafd7d113", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1169", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("fbeded46-fe32-442c-8d85-e5adafd7d113", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/dfb17174-def6-4905-b16b-93f9dc7a6051", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/73b03284-4acf-43f6-b6c0-a5206b997a17/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fb1cb130-87c1-445c-9575-24ac85b660fc"",
    ""url"": ""/v2/users/uaa-id-297"",
    ""created_at"": ""2016-03-21T10:59:41Z"",
    ""updated_at"": ""2016-03-21T10:59:41Z""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""fb1cb130-87c1-445c-9575-24ac85b660fc"",
    ""default_space_url"": ""/v2/spaces/3983cc6b-2793-4ef1-8b3e-8b7c7a6c71f4"",
    ""spaces_url"": ""/v2/users/uaa-id-297/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-297/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-297/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-297/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-297/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-297/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-297/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("fb1cb130-87c1-445c-9575-24ac85b660fc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-297", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-03-21T10:59:41Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("fb1cb130-87c1-445c-9575-24ac85b660fc", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/3983cc6b-2793-4ef1-8b3e-8b7c7a6c71f4", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
    ""created_at"": ""2016-03-21T10:59:54Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""organizations"": [
      {
        ""metadata"": {
          ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
          ""created_at"": ""2016-03-21T10:59:54Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2648"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
                ""created_at"": ""2016-03-21T10:59:54Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-2650""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
              ""created_at"": ""2016-03-21T10:59:54Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-2649"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
                ""created_at"": ""2016-03-21T10:59:54Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
          ""created_at"": ""2016-03-21T10:59:54Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2648"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
                ""created_at"": ""2016-03-21T10:59:54Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-2650""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
              ""created_at"": ""2016-03-21T10:59:54Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-2649"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
                ""created_at"": ""2016-03-21T10:59:54Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""billing_managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
          ""created_at"": ""2016-03-21T10:59:54Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2648"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
                ""created_at"": ""2016-03-21T10:59:54Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-2650""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
              ""created_at"": ""2016-03-21T10:59:54Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-2649"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
                ""created_at"": ""2016-03-21T10:59:54Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""audited_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
          ""created_at"": ""2016-03-21T10:59:54Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2648"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
                ""created_at"": ""2016-03-21T10:59:54Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-2650""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
              ""created_at"": ""2016-03-21T10:59:54Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-2649"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
                ""created_at"": ""2016-03-21T10:59:54Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""spaces"": [
      {
        ""metadata"": {
          ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
          ""created_at"": ""2016-03-21T10:59:54Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2650""
        }
      }
    ],
    ""managed_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
          ""created_at"": ""2016-03-21T10:59:54Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2650""
        }
      }
    ],
    ""audited_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""8ff61475-7a90-4b30-97fe-68e79fabe178"",
          ""created_at"": ""2016-03-21T10:59:54Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2650""
        }
      }
    ]
  }
}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("8ff61475-7a90-4b30-97fe-68e79fabe178", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-03-21T10:59:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""96e23ccd-9b8e-4381-b048-312704525c9c"",
        ""url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8"",
        ""created_at"": ""2016-03-21T10:59:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1203"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""96e23ccd-9b8e-4381-b048-312704525c9c"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/5198eb42-43a5-45fa-b8a0-3db575e3d655"",
        ""spaces_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/spaces"",
        ""domains_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/domains"",
        ""private_domains_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/private_domains"",
        ""users_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/users"",
        ""managers_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/managers"",
        ""billing_managers_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/billing_managers"",
        ""auditors_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/auditors"",
        ""app_events_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("96e23ccd-9b8e-4381-b048-312704525c9c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1203", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("96e23ccd-9b8e-4381-b048-312704525c9c", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/5198eb42-43a5-45fa-b8a0-3db575e3d655", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ecdba6f6-036e-4e0b-b06f-7ee45e581eb8/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b678127b-c23a-4ef7-99fa-4385d6911867"",
    ""url"": ""/v2/users/uaa-id-340"",
    ""created_at"": ""2016-03-21T10:59:43Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""b678127b-c23a-4ef7-99fa-4385d6911867"",
    ""default_space_url"": ""/v2/spaces/178b4db9-08f0-4022-958f-8c71c069e294"",
    ""spaces_url"": ""/v2/users/uaa-id-340/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-340/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-340/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-340/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-340/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-340/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-340/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("b678127b-c23a-4ef7-99fa-4385d6911867", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-340", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:43Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("b678127b-c23a-4ef7-99fa-4385d6911867", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/178b4db9-08f0-4022-958f-8c71c069e294", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e54f31c6-73c3-4aea-98df-a9fec7955dc5"",
    ""url"": ""/v2/users/uaa-id-313"",
    ""created_at"": ""2016-03-21T10:59:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""e54f31c6-73c3-4aea-98df-a9fec7955dc5"",
    ""default_space_url"": ""/v2/spaces/1476a398-58ac-402a-b3ca-d762d59fc7a5"",
    ""spaces_url"": ""/v2/users/uaa-id-313/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-313/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-313/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-313/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-313/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-313/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-313/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("e54f31c6-73c3-4aea-98df-a9fec7955dc5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-313", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("e54f31c6-73c3-4aea-98df-a9fec7955dc5", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/1476a398-58ac-402a-b3ca-d762d59fc7a5", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-313/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-313/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-313/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-313/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-313/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-313/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-313/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3298004e-1b0a-4d6c-89ff-ccfb5db631d0"",
        ""url"": ""/v2/users/uaa-id-289"",
        ""created_at"": ""2016-03-21T10:59:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""3298004e-1b0a-4d6c-89ff-ccfb5db631d0"",
        ""username"": ""user@example.com"",
        ""default_space_url"": ""/v2/spaces/dd574832-b248-463c-b93e-23b9c7198e0f"",
        ""spaces_url"": ""/v2/users/uaa-id-289/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-289/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-289/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-289/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-289/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-289/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-289/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""3298004e-1b0a-4d6c-89ff-ccfb5db631d0"",
        ""url"": ""/v2/users/uaa-id-290"",
        ""created_at"": ""2016-03-21T10:59:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": true,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-290/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-290/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-290/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-290/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-290/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-290/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-290/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3298004e-1b0a-4d6c-89ff-ccfb5db631d0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-289", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("3298004e-1b0a-4d6c-89ff-ccfb5db631d0", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/spaces/dd574832-b248-463c-b93e-23b9c7198e0f", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("3298004e-1b0a-4d6c-89ff-ccfb5db631d0", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-290", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:41Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-290/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-290/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-290/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-290/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-290/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-290/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-290/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e63fb0ba-80a9-4675-b3ad-fb538617482b"",
    ""url"": ""/v2/users/uaa-id-326"",
    ""created_at"": ""2016-03-21T10:59:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""e63fb0ba-80a9-4675-b3ad-fb538617482b"",
    ""default_space_url"": ""/v2/spaces/d590f9d9-9d64-4c68-a7fe-29ae0bac90af"",
    ""spaces_url"": ""/v2/users/uaa-id-326/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-326/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-326/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-326/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-326/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-326/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-326/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("e63fb0ba-80a9-4675-b3ad-fb538617482b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-326", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("e63fb0ba-80a9-4675-b3ad-fb538617482b", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/d590f9d9-9d64-4c68-a7fe-29ae0bac90af", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""26c2c46e-3771-4fa0-98c7-bfa660e4be50"",
        ""url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d"",
        ""created_at"": ""2016-03-21T10:59:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1143"",
        ""organization_guid"": ""26c2c46e-3771-4fa0-98c7-bfa660e4be50"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/ff180518-0e91-4af8-8f7d-0aaadd7a8641"",
        ""developers_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/developers"",
        ""managers_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/managers"",
        ""auditors_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/auditors"",
        ""apps_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/apps"",
        ""routes_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/routes"",
        ""domains_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/domains"",
        ""service_instances_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/service_instances"",
        ""app_events_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/app_events"",
        ""events_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/events"",
        ""security_groups_url"": ""/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("26c2c46e-3771-4fa0-98c7-bfa660e4be50", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1143", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("26c2c46e-3771-4fa0-98c7-bfa660e4be50", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/ff180518-0e91-4af8-8f7d-0aaadd7a8641", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/a3b544ae-aa37-4ce3-8a6c-83249b33f20d/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ba085a90-87ac-45b4-b054-10c90249dc35"",
    ""url"": ""/v2/users/uaa-id-334"",
    ""created_at"": ""2016-03-21T10:59:43Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""ba085a90-87ac-45b4-b054-10c90249dc35"",
    ""default_space_url"": ""/v2/spaces/b1ed8f5c-e6e4-4196-8c9c-d20bb618340e"",
    ""spaces_url"": ""/v2/users/uaa-id-334/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-334/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-334/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-334/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-334/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-334/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-334/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("ba085a90-87ac-45b4-b054-10c90249dc35", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-334", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:43Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("ba085a90-87ac-45b4-b054-10c90249dc35", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/b1ed8f5c-e6e4-4196-8c9c-d20bb618340e", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""13b633b1-574e-47d8-a3d3-66759c12518a"",
    ""url"": ""/v2/users/uaa-id-309"",
    ""created_at"": ""2016-03-21T10:59:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""13b633b1-574e-47d8-a3d3-66759c12518a"",
    ""default_space_url"": ""/v2/spaces/100e8ffb-c6aa-40b6-a1d7-b901956d168a"",
    ""spaces_url"": ""/v2/users/uaa-id-309/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-309/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-309/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-309/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-309/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-309/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-309/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("13b633b1-574e-47d8-a3d3-66759c12518a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-309", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("13b633b1-574e-47d8-a3d3-66759c12518a", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/100e8ffb-c6aa-40b6-a1d7-b901956d168a", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4194f7ab-a030-48e5-85d1-5d4a87875027"",
    ""url"": ""/v2/users/uaa-id-317"",
    ""created_at"": ""2016-03-21T10:59:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""4194f7ab-a030-48e5-85d1-5d4a87875027"",
    ""default_space_url"": ""/v2/spaces/bed81300-6f0b-4868-b600-4c9f3096b5f8"",
    ""spaces_url"": ""/v2/users/uaa-id-317/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-317/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-317/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-317/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-317/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-317/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-317/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("4194f7ab-a030-48e5-85d1-5d4a87875027", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-317", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("4194f7ab-a030-48e5-85d1-5d4a87875027", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/bed81300-6f0b-4868-b600-4c9f3096b5f8", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0a414230-309b-45b6-9cdf-1af2759ee6a0"",
    ""url"": ""/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e"",
    ""created_at"": ""2016-03-21T10:59:41Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/spaces"",
    ""organizations_url"": ""/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/organizations"",
    ""managed_organizations_url"": ""/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("0a414230-309b-45b6-9cdf-1af2759ee6a0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/1b3ddc97-3181-46b6-a8b7-afdc9c1a754e/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f600fc57-518d-4356-a7c9-93ab4a28aac7"",
        ""url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1"",
        ""created_at"": ""2016-03-21T10:59:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1226"",
        ""organization_guid"": ""f600fc57-518d-4356-a7c9-93ab4a28aac7"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/8b8ea87e-4b4c-4836-b315-26c04961cac9"",
        ""developers_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/developers"",
        ""managers_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/managers"",
        ""auditors_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/auditors"",
        ""apps_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/apps"",
        ""routes_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/routes"",
        ""domains_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/domains"",
        ""service_instances_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/service_instances"",
        ""app_events_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/app_events"",
        ""events_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/events"",
        ""security_groups_url"": ""/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f600fc57-518d-4356-a7c9-93ab4a28aac7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1226", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("f600fc57-518d-4356-a7c9-93ab4a28aac7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/8b8ea87e-4b4c-4836-b315-26c04961cac9", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/b930673b-ae78-4fae-9d7b-e9ec2d4541d1/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8f77d92e-77cb-45d1-9d9e-76a4830e4524"",
        ""url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679"",
        ""created_at"": ""2016-03-21T10:59:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1258"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""8f77d92e-77cb-45d1-9d9e-76a4830e4524"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/31c2153f-3f02-4f4f-8544-96120f9e0fde"",
        ""spaces_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/spaces"",
        ""domains_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/domains"",
        ""private_domains_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/private_domains"",
        ""users_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/users"",
        ""managers_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/managers"",
        ""billing_managers_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/billing_managers"",
        ""auditors_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/auditors"",
        ""app_events_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8f77d92e-77cb-45d1-9d9e-76a4830e4524", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1258", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("8f77d92e-77cb-45d1-9d9e-76a4830e4524", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/31c2153f-3f02-4f4f-8544-96120f9e0fde", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/dd5e667f-6a83-463a-9faf-1859220c1679/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a6781d29-5da5-49b4-ba7f-415a8cf0199a"",
        ""url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28"",
        ""created_at"": ""2016-03-21T10:59:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1152"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""a6781d29-5da5-49b4-ba7f-415a8cf0199a"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/2ffc65e9-bbc5-4c0e-a15d-42c6538a0bde"",
        ""spaces_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/spaces"",
        ""domains_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/domains"",
        ""private_domains_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/private_domains"",
        ""users_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/users"",
        ""managers_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/managers"",
        ""billing_managers_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/billing_managers"",
        ""auditors_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/auditors"",
        ""app_events_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a6781d29-5da5-49b4-ba7f-415a8cf0199a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1152", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("a6781d29-5da5-49b4-ba7f-415a8cf0199a", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/2ffc65e9-bbc5-4c0e-a15d-42c6538a0bde", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/4530632a-9ae9-43ee-8bf2-d89858889c28/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""029eba39-1929-42aa-8cc8-c51e6b0283e0"",
    ""url"": ""/v2/users/uaa-id-299"",
    ""created_at"": ""2016-03-21T10:59:41Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""029eba39-1929-42aa-8cc8-c51e6b0283e0"",
    ""default_space_url"": ""/v2/spaces/72170845-82b6-4627-a6bb-7a0f695252dd"",
    ""spaces_url"": ""/v2/users/uaa-id-299/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-299/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-299/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-299/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-299/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-299/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-299/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("029eba39-1929-42aa-8cc8-c51e6b0283e0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-299", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("029eba39-1929-42aa-8cc8-c51e6b0283e0", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/72170845-82b6-4627-a6bb-7a0f695252dd", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-299/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-299/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-299/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-299/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-299/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-299/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-299/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5fb4a7ac-9e38-46d1-9800-e2ccc7abb8cc"",
        ""url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216"",
        ""created_at"": ""2016-03-21T10:59:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1251"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""5fb4a7ac-9e38-46d1-9800-e2ccc7abb8cc"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/af964ae2-eee9-46a8-8636-cce5ec6d34de"",
        ""spaces_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/spaces"",
        ""domains_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/domains"",
        ""private_domains_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/private_domains"",
        ""users_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/users"",
        ""managers_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/managers"",
        ""billing_managers_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/billing_managers"",
        ""auditors_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/auditors"",
        ""app_events_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5fb4a7ac-9e38-46d1-9800-e2ccc7abb8cc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1251", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("5fb4a7ac-9e38-46d1-9800-e2ccc7abb8cc", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/af964ae2-eee9-46a8-8636-cce5ec6d34de", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/cc6dd4ce-132f-41e2-9fba-43f6e0a81216/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c6882d87-d2d3-4e30-9f27-73da0c19fdcf"",
    ""url"": ""/v2/users/uaa-id-293"",
    ""created_at"": ""2016-03-21T10:59:41Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""c6882d87-d2d3-4e30-9f27-73da0c19fdcf"",
    ""default_space_url"": ""/v2/spaces/095985e1-cd96-44bd-b24c-294b2f1e2000"",
    ""spaces_url"": ""/v2/users/uaa-id-293/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-293/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-293/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-293/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-293/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-293/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-293/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("c6882d87-d2d3-4e30-9f27-73da0c19fdcf", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-293", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("c6882d87-d2d3-4e30-9f27-73da0c19fdcf", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/095985e1-cd96-44bd-b24c-294b2f1e2000", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-293/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-293/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-293/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-293/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-293/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-293/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-293/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }
    }
}
