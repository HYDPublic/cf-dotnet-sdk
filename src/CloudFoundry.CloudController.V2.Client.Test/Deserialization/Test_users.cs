//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a710de01-fe1e-410a-a320-1982b8d71cbb"",
    ""url"": ""/v2/users/uaa-id-350"",
    ""created_at"": ""2016-07-07T09:17:11Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""a710de01-fe1e-410a-a320-1982b8d71cbb"",
    ""default_space_url"": ""/v2/spaces/9ddd74af-f93f-4542-b5c1-e02976073951"",
    ""spaces_url"": ""/v2/users/uaa-id-350/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-350/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-350/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-350/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-350/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-350/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-350/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("a710de01-fe1e-410a-a320-1982b8d71cbb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-350", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:11Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("a710de01-fe1e-410a-a320-1982b8d71cbb", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/9ddd74af-f93f-4542-b5c1-e02976073951", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-350/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-350/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-350/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-350/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-350/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-350/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-350/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5190d75e-cb96-433b-8d3a-7167301df5ba"",
    ""url"": ""/v2/users/uaa-id-367"",
    ""created_at"": ""2016-07-07T09:17:11Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""5190d75e-cb96-433b-8d3a-7167301df5ba"",
    ""default_space_url"": ""/v2/spaces/0a69576d-2583-4960-90f5-a6ce65dfc0ae"",
    ""spaces_url"": ""/v2/users/uaa-id-367/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-367/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-367/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-367/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-367/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-367/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-367/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("5190d75e-cb96-433b-8d3a-7167301df5ba", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-367", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:11Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("5190d75e-cb96-433b-8d3a-7167301df5ba", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/0a69576d-2583-4960-90f5-a6ce65dfc0ae", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-367/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-367/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-367/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-367/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-367/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-367/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-367/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e3dede65-9d8b-43fc-942d-ac47428d002e"",
    ""url"": ""/v2/users/uaa-id-338"",
    ""created_at"": ""2016-07-07T09:17:10Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""e3dede65-9d8b-43fc-942d-ac47428d002e"",
    ""default_space_url"": ""/v2/spaces/2e7e11fb-32a3-4f38-935a-43c10cdfca16"",
    ""spaces_url"": ""/v2/users/uaa-id-338/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-338/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-338/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-338/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-338/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-338/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-338/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("e3dede65-9d8b-43fc-942d-ac47428d002e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-338", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("e3dede65-9d8b-43fc-942d-ac47428d002e", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/2e7e11fb-32a3-4f38-935a-43c10cdfca16", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-338/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-338/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-338/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-338/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-338/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-338/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-338/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ef456c41-3ecc-4a82-8f93-81d2ff0437f1"",
    ""url"": ""/v2/users/uaa-id-352"",
    ""created_at"": ""2016-07-07T09:17:11Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""ef456c41-3ecc-4a82-8f93-81d2ff0437f1"",
    ""default_space_url"": ""/v2/spaces/154175d1-8cfa-4aef-98ea-22e5bd9c06a6"",
    ""spaces_url"": ""/v2/users/uaa-id-352/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-352/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-352/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-352/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-352/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-352/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-352/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("ef456c41-3ecc-4a82-8f93-81d2ff0437f1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-352", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:11Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("ef456c41-3ecc-4a82-8f93-81d2ff0437f1", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/154175d1-8cfa-4aef-98ea-22e5bd9c06a6", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-352/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-352/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-352/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-352/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-352/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-352/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-352/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b7586189-0fcb-4f19-9c2a-3a44a5421ecb"",
    ""url"": ""/v2/users/uaa-id-344"",
    ""created_at"": ""2016-07-07T09:17:10Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""b7586189-0fcb-4f19-9c2a-3a44a5421ecb"",
    ""default_space_url"": ""/v2/spaces/42dd49bc-636e-4d4c-b59d-1ddb42b9a21d"",
    ""spaces_url"": ""/v2/users/uaa-id-344/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-344/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-344/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-344/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-344/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-344/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-344/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("b7586189-0fcb-4f19-9c2a-3a44a5421ecb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-344", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("b7586189-0fcb-4f19-9c2a-3a44a5421ecb", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/42dd49bc-636e-4d4c-b59d-1ddb42b9a21d", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""93479bad-7a1e-473e-b5d6-9d0a4aefe4a8"",
    ""url"": ""/v2/users/uaa-id-373"",
    ""created_at"": ""2016-07-07T09:17:12Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""93479bad-7a1e-473e-b5d6-9d0a4aefe4a8"",
    ""default_space_url"": ""/v2/spaces/a9074c22-4b97-4214-a653-5780f1f96b7b"",
    ""spaces_url"": ""/v2/users/uaa-id-373/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-373/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-373/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-373/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-373/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-373/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-373/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("93479bad-7a1e-473e-b5d6-9d0a4aefe4a8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-373", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:12Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("93479bad-7a1e-473e-b5d6-9d0a4aefe4a8", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/a9074c22-4b97-4214-a653-5780f1f96b7b", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-373/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-373/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-373/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-373/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-373/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-373/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-373/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ac395510-814f-4349-bef8-a8c36de6e726"",
    ""url"": ""/v2/users/uaa-id-363"",
    ""created_at"": ""2016-07-07T09:17:11Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""ac395510-814f-4349-bef8-a8c36de6e726"",
    ""default_space_url"": ""/v2/spaces/38b366ff-6297-4180-84eb-c9ea0921dc1a"",
    ""spaces_url"": ""/v2/users/uaa-id-363/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-363/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-363/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-363/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-363/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-363/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-363/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("ac395510-814f-4349-bef8-a8c36de6e726", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-363", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:11Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("ac395510-814f-4349-bef8-a8c36de6e726", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/38b366ff-6297-4180-84eb-c9ea0921dc1a", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a854756a-7710-4a30-ab88-0f40371a59e3"",
    ""url"": ""/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982"",
    ""created_at"": ""2016-07-07T09:17:09Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/spaces"",
    ""organizations_url"": ""/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/organizations"",
    ""managed_organizations_url"": ""/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("a854756a-7710-4a30-ab88-0f40371a59e3", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:09Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/b51a8069-44e6-4b05-a87a-5bd6d2084982/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
    ""created_at"": ""2016-07-07T09:17:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""organizations"": [
      {
        ""metadata"": {
          ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
          ""created_at"": ""2016-07-07T09:17:19Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2542"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
                ""created_at"": ""2016-07-07T09:17:19Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-2544""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
              ""created_at"": ""2016-07-07T09:17:18Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-2543"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
                ""created_at"": ""2016-07-07T09:17:19Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
          ""created_at"": ""2016-07-07T09:17:19Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2542"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
                ""created_at"": ""2016-07-07T09:17:19Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-2544""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
              ""created_at"": ""2016-07-07T09:17:18Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-2543"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
                ""created_at"": ""2016-07-07T09:17:19Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""billing_managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
          ""created_at"": ""2016-07-07T09:17:19Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2542"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
                ""created_at"": ""2016-07-07T09:17:19Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-2544""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
              ""created_at"": ""2016-07-07T09:17:18Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-2543"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
                ""created_at"": ""2016-07-07T09:17:19Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""audited_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
          ""created_at"": ""2016-07-07T09:17:19Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2542"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
                ""created_at"": ""2016-07-07T09:17:19Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-2544""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
              ""created_at"": ""2016-07-07T09:17:18Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-2543"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
                ""created_at"": ""2016-07-07T09:17:19Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""spaces"": [
      {
        ""metadata"": {
          ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
          ""created_at"": ""2016-07-07T09:17:19Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2544""
        }
      }
    ],
    ""managed_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
          ""created_at"": ""2016-07-07T09:17:19Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2544""
        }
      }
    ],
    ""audited_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""7c031c49-6fd6-47e3-9923-5f3c299a82d9"",
          ""created_at"": ""2016-07-07T09:17:19Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-2544""
        }
      }
    ]
  }
}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("7c031c49-6fd6-47e3-9923-5f3c299a82d9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-07-07T09:17:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9b3dc46f-b1f7-4f7a-b7c3-c248d5c0ca95"",
        ""url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352"",
        ""created_at"": ""2016-07-07T09:17:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2071"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""9b3dc46f-b1f7-4f7a-b7c3-c248d5c0ca95"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/1ebc0145-281f-4a9a-a2f5-0cd13e7182d0"",
        ""spaces_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/spaces"",
        ""domains_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/domains"",
        ""private_domains_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/private_domains"",
        ""users_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/users"",
        ""managers_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/managers"",
        ""billing_managers_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/billing_managers"",
        ""auditors_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/auditors"",
        ""app_events_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9b3dc46f-b1f7-4f7a-b7c3-c248d5c0ca95", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:11Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2071", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("9b3dc46f-b1f7-4f7a-b7c3-c248d5c0ca95", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/1ebc0145-281f-4a9a-a2f5-0cd13e7182d0", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/2727b845-4e82-420f-9077-4b5939a53352/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""76771005-d7ec-4528-88ea-8d8336ad7490"",
        ""url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102"",
        ""created_at"": ""2016-07-07T09:17:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2147"",
        ""organization_guid"": ""76771005-d7ec-4528-88ea-8d8336ad7490"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/6711cd26-9aa8-4ee3-b84a-6bf987b696cf"",
        ""developers_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/developers"",
        ""managers_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/managers"",
        ""auditors_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/auditors"",
        ""apps_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/apps"",
        ""routes_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/routes"",
        ""domains_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/domains"",
        ""service_instances_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/service_instances"",
        ""app_events_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/app_events"",
        ""events_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/events"",
        ""security_groups_url"": ""/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("76771005-d7ec-4528-88ea-8d8336ad7490", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:12Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2147", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("76771005-d7ec-4528-88ea-8d8336ad7490", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/6711cd26-9aa8-4ee3-b84a-6bf987b696cf", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/778d703e-898d-4bb8-9aa2-1f0518f4c102/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""97ec9418-5345-42a9-a628-3408b0a41a0a"",
        ""url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7"",
        ""created_at"": ""2016-07-07T09:17:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2023"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""97ec9418-5345-42a9-a628-3408b0a41a0a"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/ac573ace-278e-4dad-a184-e20f9b93b32b"",
        ""spaces_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/spaces"",
        ""domains_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/domains"",
        ""private_domains_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/private_domains"",
        ""users_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/users"",
        ""managers_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/managers"",
        ""billing_managers_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/billing_managers"",
        ""auditors_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/auditors"",
        ""app_events_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("97ec9418-5345-42a9-a628-3408b0a41a0a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2023", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("97ec9418-5345-42a9-a628-3408b0a41a0a", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/ac573ace-278e-4dad-a184-e20f9b93b32b", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/55c4a0fd-3061-4272-888c-151663c223d7/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a3cc654c-b536-4fc3-bf1c-4929e74de183"",
        ""url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc"",
        ""created_at"": ""2016-07-07T09:17:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2099"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""a3cc654c-b536-4fc3-bf1c-4929e74de183"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/6cdcdb87-c4aa-447e-b309-6bcebf0066c1"",
        ""spaces_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/spaces"",
        ""domains_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/domains"",
        ""private_domains_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/private_domains"",
        ""users_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/users"",
        ""managers_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/managers"",
        ""billing_managers_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/billing_managers"",
        ""auditors_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/auditors"",
        ""app_events_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a3cc654c-b536-4fc3-bf1c-4929e74de183", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:11Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2099", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("a3cc654c-b536-4fc3-bf1c-4929e74de183", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/6cdcdb87-c4aa-447e-b309-6bcebf0066c1", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a9e5cd95-912e-492e-9bf1-9754d4f382dc/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""49445fd1-969c-4593-86c3-9830b23cf7d1"",
        ""url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025"",
        ""created_at"": ""2016-07-07T09:17:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2051"",
        ""organization_guid"": ""49445fd1-969c-4593-86c3-9830b23cf7d1"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/5cd2c687-7584-4c0a-ae64-20101376cb1f"",
        ""developers_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/developers"",
        ""managers_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/managers"",
        ""auditors_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/auditors"",
        ""apps_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/apps"",
        ""routes_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/routes"",
        ""domains_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/domains"",
        ""service_instances_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/service_instances"",
        ""app_events_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/app_events"",
        ""events_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/events"",
        ""security_groups_url"": ""/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("49445fd1-969c-4593-86c3-9830b23cf7d1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2051", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("49445fd1-969c-4593-86c3-9830b23cf7d1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/5cd2c687-7584-4c0a-ae64-20101376cb1f", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/dfe49b4f-1031-4ecc-b911-629d0dd05025/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0fb8ff61-4adf-4fd8-98f8-0728047b4f83"",
        ""url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969"",
        ""created_at"": ""2016-07-07T09:17:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2163"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""0fb8ff61-4adf-4fd8-98f8-0728047b4f83"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/b3e73018-c56f-4402-900d-366d3546cfbc"",
        ""spaces_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/spaces"",
        ""domains_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/domains"",
        ""private_domains_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/private_domains"",
        ""users_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/users"",
        ""managers_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/managers"",
        ""billing_managers_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/billing_managers"",
        ""auditors_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/auditors"",
        ""app_events_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0fb8ff61-4adf-4fd8-98f8-0728047b4f83", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:12Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2163", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("0fb8ff61-4adf-4fd8-98f8-0728047b4f83", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/b3e73018-c56f-4402-900d-366d3546cfbc", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/0550e1fc-384d-4d5a-a357-efd075c80969/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d74b0904-5b6d-487b-bd29-b7535b73a906"",
        ""url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f"",
        ""created_at"": ""2016-07-07T09:17:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2111"",
        ""organization_guid"": ""d74b0904-5b6d-487b-bd29-b7535b73a906"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/fc978611-4d28-4ddb-9748-6a337f0c649f"",
        ""developers_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/developers"",
        ""managers_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/managers"",
        ""auditors_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/auditors"",
        ""apps_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/apps"",
        ""routes_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/routes"",
        ""domains_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/domains"",
        ""service_instances_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/service_instances"",
        ""app_events_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/app_events"",
        ""events_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/events"",
        ""security_groups_url"": ""/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d74b0904-5b6d-487b-bd29-b7535b73a906", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:11Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2111", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("d74b0904-5b6d-487b-bd29-b7535b73a906", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/fc978611-4d28-4ddb-9748-6a337f0c649f", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/a6c5d382-2fe1-47d9-a290-dfedd4ff332f/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4cec2009-9251-4bc4-90e0-7cef74c08111"",
        ""url"": ""/v2/users/uaa-id-326"",
        ""created_at"": ""2016-07-07T09:17:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""4cec2009-9251-4bc4-90e0-7cef74c08111"",
        ""username"": ""user@example.com"",
        ""default_space_url"": ""/v2/spaces/43a6000d-c898-4ac5-80d6-8038c56188bc"",
        ""spaces_url"": ""/v2/users/uaa-id-326/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-326/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-326/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-326/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-326/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-326/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-326/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""4cec2009-9251-4bc4-90e0-7cef74c08111"",
        ""url"": ""/v2/users/uaa-id-327"",
        ""created_at"": ""2016-07-07T09:17:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": true,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-327/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-327/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-327/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-327/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-327/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-327/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-327/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4cec2009-9251-4bc4-90e0-7cef74c08111", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-326", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("4cec2009-9251-4bc4-90e0-7cef74c08111", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/spaces/43a6000d-c898-4ac5-80d6-8038c56188bc", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-326/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("4cec2009-9251-4bc4-90e0-7cef74c08111", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-327", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-327/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-327/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-327/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-327/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-327/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-327/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-327/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6d71d870-9e24-4f36-8ecc-16d9cf70c9b9"",
    ""url"": ""/v2/users/uaa-id-328"",
    ""created_at"": ""2016-07-07T09:17:10Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""6d71d870-9e24-4f36-8ecc-16d9cf70c9b9"",
    ""default_space_url"": ""/v2/spaces/00923b20-43a3-46b4-9882-670c3d7daaf2"",
    ""spaces_url"": ""/v2/users/uaa-id-328/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-328/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-328/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-328/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-328/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-328/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-328/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("6d71d870-9e24-4f36-8ecc-16d9cf70c9b9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-328", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("6d71d870-9e24-4f36-8ecc-16d9cf70c9b9", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/00923b20-43a3-46b4-9882-670c3d7daaf2", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5fd48819-cfaf-4bf4-b13b-e21bd331778a"",
    ""url"": ""/v2/users/uaa-id-330"",
    ""created_at"": ""2016-07-07T09:17:10Z"",
    ""updated_at"": ""2016-07-07T09:17:10Z""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""5fd48819-cfaf-4bf4-b13b-e21bd331778a"",
    ""default_space_url"": ""/v2/spaces/4dfd3353-d905-4907-be61-7a564305a219"",
    ""spaces_url"": ""/v2/users/uaa-id-330/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-330/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-330/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-330/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-330/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-330/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-330/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("5fd48819-cfaf-4bf4-b13b-e21bd331778a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-330", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-07T09:17:10Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("5fd48819-cfaf-4bf4-b13b-e21bd331778a", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/4dfd3353-d905-4907-be61-7a564305a219", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }
    }
}
