//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ed2689cf-288b-4706-ac6d-aadb9bfb0ac1"",
        ""url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd"",
        ""created_at"": ""2016-07-27T14:03:00Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2486"",
        ""organization_guid"": ""ed2689cf-288b-4706-ac6d-aadb9bfb0ac1"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/36251625-67bd-4a1b-bca1-0e4578be0018"",
        ""developers_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/developers"",
        ""managers_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/managers"",
        ""auditors_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/auditors"",
        ""apps_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/apps"",
        ""routes_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/routes"",
        ""domains_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/domains"",
        ""service_instances_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/service_instances"",
        ""app_events_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/app_events"",
        ""events_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/events"",
        ""security_groups_url"": ""/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ed2689cf-288b-4706-ac6d-aadb9bfb0ac1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:00Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2486", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("ed2689cf-288b-4706-ac6d-aadb9bfb0ac1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/36251625-67bd-4a1b-bca1-0e4578be0018", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/d44a6703-d36f-4418-9f67-52879ff845cd/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6ee8cf87-2575-4096-82ca-e3f143bebbe2"",
    ""url"": ""/v2/users/uaa-id-428"",
    ""created_at"": ""2016-07-27T14:03:01Z"",
    ""updated_at"": ""2016-07-27T14:03:01Z""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""6ee8cf87-2575-4096-82ca-e3f143bebbe2"",
    ""default_space_url"": ""/v2/spaces/3aa272c6-e1e6-4aad-b333-4f7723b321e9"",
    ""spaces_url"": ""/v2/users/uaa-id-428/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-428/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-428/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-428/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-428/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-428/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-428/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("6ee8cf87-2575-4096-82ca-e3f143bebbe2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-428", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-27T14:03:01Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("6ee8cf87-2575-4096-82ca-e3f143bebbe2", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/3aa272c6-e1e6-4aad-b333-4f7723b321e9", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-428/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-428/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-428/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-428/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-428/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-428/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-428/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
    ""created_at"": ""2016-07-27T14:02:45Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""organizations"": [
      {
        ""metadata"": {
          ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
          ""created_at"": ""2016-07-27T14:02:45Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-892"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
                ""created_at"": ""2016-07-27T14:02:45Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-894""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
              ""created_at"": ""2016-07-27T14:02:45Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-893"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
                ""created_at"": ""2016-07-27T14:02:45Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
          ""created_at"": ""2016-07-27T14:02:45Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-892"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
                ""created_at"": ""2016-07-27T14:02:45Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-894""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
              ""created_at"": ""2016-07-27T14:02:45Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-893"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
                ""created_at"": ""2016-07-27T14:02:45Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""billing_managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
          ""created_at"": ""2016-07-27T14:02:45Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-892"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
                ""created_at"": ""2016-07-27T14:02:45Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-894""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
              ""created_at"": ""2016-07-27T14:02:45Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-893"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
                ""created_at"": ""2016-07-27T14:02:45Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""audited_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
          ""created_at"": ""2016-07-27T14:02:45Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-892"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
                ""created_at"": ""2016-07-27T14:02:45Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-894""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
              ""created_at"": ""2016-07-27T14:02:45Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-893"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
                ""created_at"": ""2016-07-27T14:02:45Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""spaces"": [
      {
        ""metadata"": {
          ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
          ""created_at"": ""2016-07-27T14:02:45Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-894""
        }
      }
    ],
    ""managed_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
          ""created_at"": ""2016-07-27T14:02:45Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-894""
        }
      }
    ],
    ""audited_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""d2234da9-3474-46f0-9bfc-b9a8f7de7380"",
          ""created_at"": ""2016-07-27T14:02:45Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-894""
        }
      }
    ]
  }
}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("d2234da9-3474-46f0-9bfc-b9a8f7de7380", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-07-27T14:02:45Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""35dca905-635c-46de-ba1c-ecf048992539"",
        ""url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e"",
        ""created_at"": ""2016-07-27T14:03:00Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2446"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""35dca905-635c-46de-ba1c-ecf048992539"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/5972937f-a388-49ce-8f77-3c3ff1690d95"",
        ""spaces_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/spaces"",
        ""domains_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/domains"",
        ""private_domains_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/private_domains"",
        ""users_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/users"",
        ""managers_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/managers"",
        ""billing_managers_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/billing_managers"",
        ""auditors_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/auditors"",
        ""app_events_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("35dca905-635c-46de-ba1c-ecf048992539", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:00Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2446", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("35dca905-635c-46de-ba1c-ecf048992539", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/5972937f-a388-49ce-8f77-3c3ff1690d95", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a4002dd1-d642-4e33-8d80-20459639de8e/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""10b6bbe6-bb56-4e4d-a956-36d59fb83ed9"",
    ""url"": ""/v2/users/uaa-id-412"",
    ""created_at"": ""2016-07-27T14:03:00Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""10b6bbe6-bb56-4e4d-a956-36d59fb83ed9"",
    ""default_space_url"": ""/v2/spaces/d2b0d9e8-daf6-4f59-800c-433b8a1ea14b"",
    ""spaces_url"": ""/v2/users/uaa-id-412/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-412/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-412/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-412/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-412/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-412/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-412/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("10b6bbe6-bb56-4e4d-a956-36d59fb83ed9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-412", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:00Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("10b6bbe6-bb56-4e4d-a956-36d59fb83ed9", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/d2b0d9e8-daf6-4f59-800c-433b8a1ea14b", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""81164060-e14a-4873-8478-90656ed405c7"",
    ""url"": ""/v2/users/uaa-id-416"",
    ""created_at"": ""2016-07-27T14:03:01Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""81164060-e14a-4873-8478-90656ed405c7"",
    ""default_space_url"": ""/v2/spaces/f3495918-9232-4666-b02a-bd4bb32132dc"",
    ""spaces_url"": ""/v2/users/uaa-id-416/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-416/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-416/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-416/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-416/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-416/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-416/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("81164060-e14a-4873-8478-90656ed405c7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-416", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("81164060-e14a-4873-8478-90656ed405c7", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/f3495918-9232-4666-b02a-bd4bb32132dc", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-416/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-416/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-416/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-416/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-416/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-416/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-416/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e4765b32-8b2c-4eda-b1af-f3417925edf5"",
        ""url"": ""/v2/users/uaa-id-422"",
        ""created_at"": ""2016-07-27T14:03:01Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""e4765b32-8b2c-4eda-b1af-f3417925edf5"",
        ""username"": ""user@example.com"",
        ""default_space_url"": ""/v2/spaces/0abcc7c6-95be-4d43-a0f9-7e53ecd15bc0"",
        ""spaces_url"": ""/v2/users/uaa-id-422/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-422/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-422/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-422/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-422/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-422/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-422/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""e4765b32-8b2c-4eda-b1af-f3417925edf5"",
        ""url"": ""/v2/users/uaa-id-423"",
        ""created_at"": ""2016-07-27T14:03:01Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": true,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-423/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-423/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-423/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-423/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-423/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-423/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-423/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e4765b32-8b2c-4eda-b1af-f3417925edf5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-422", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:01Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("e4765b32-8b2c-4eda-b1af-f3417925edf5", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/spaces/0abcc7c6-95be-4d43-a0f9-7e53ecd15bc0", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-422/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-422/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-422/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-422/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-422/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-422/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-422/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("e4765b32-8b2c-4eda-b1af-f3417925edf5", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-423", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:01Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-423/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-423/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-423/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-423/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-423/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-423/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-423/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f149941d-a229-4111-aec6-6811ac63b3a2"",
    ""url"": ""/v2/users/uaa-id-379"",
    ""created_at"": ""2016-07-27T14:02:59Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f149941d-a229-4111-aec6-6811ac63b3a2"",
    ""default_space_url"": ""/v2/spaces/629dc87c-de4a-442c-b5a5-54f05eb9ddfe"",
    ""spaces_url"": ""/v2/users/uaa-id-379/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-379/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-379/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-379/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-379/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-379/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-379/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("f149941d-a229-4111-aec6-6811ac63b3a2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-379", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:59Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f149941d-a229-4111-aec6-6811ac63b3a2", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/629dc87c-de4a-442c-b5a5-54f05eb9ddfe", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-379/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-379/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-379/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-379/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-379/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-379/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-379/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""77bd0256-80e6-41c9-b73e-bc7419f20111"",
        ""url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab"",
        ""created_at"": ""2016-07-27T14:03:00Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2435"",
        ""organization_guid"": ""77bd0256-80e6-41c9-b73e-bc7419f20111"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/92a58303-7c82-4dd7-a4df-4e8cdd8d522a"",
        ""developers_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/developers"",
        ""managers_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/managers"",
        ""auditors_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/auditors"",
        ""apps_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/apps"",
        ""routes_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/routes"",
        ""domains_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/domains"",
        ""service_instances_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/service_instances"",
        ""app_events_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/app_events"",
        ""events_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/events"",
        ""security_groups_url"": ""/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("77bd0256-80e6-41c9-b73e-bc7419f20111", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:00Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2435", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("77bd0256-80e6-41c9-b73e-bc7419f20111", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/92a58303-7c82-4dd7-a4df-4e8cdd8d522a", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/53ee7633-1e86-4e65-b2f9-6a26d8f010ab/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""41bf3463-6150-4b63-b1b0-11cae66ffa60"",
    ""url"": ""/v2/users/uaa-id-381"",
    ""created_at"": ""2016-07-27T14:02:59Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""41bf3463-6150-4b63-b1b0-11cae66ffa60"",
    ""default_space_url"": ""/v2/spaces/115b8142-b1ac-4106-a8f9-3849dfce77c4"",
    ""spaces_url"": ""/v2/users/uaa-id-381/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-381/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-381/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-381/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-381/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-381/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-381/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("41bf3463-6150-4b63-b1b0-11cae66ffa60", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-381", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:59Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("41bf3463-6150-4b63-b1b0-11cae66ffa60", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/115b8142-b1ac-4106-a8f9-3849dfce77c4", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-381/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-381/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-381/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-381/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-381/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-381/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-381/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e2cdf7cb-b248-40be-afe1-142f0799851e"",
    ""url"": ""/v2/users/uaa-id-389"",
    ""created_at"": ""2016-07-27T14:02:59Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""e2cdf7cb-b248-40be-afe1-142f0799851e"",
    ""default_space_url"": ""/v2/spaces/841d79ea-3522-475a-9a5e-84dc2846eb96"",
    ""spaces_url"": ""/v2/users/uaa-id-389/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-389/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-389/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-389/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-389/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-389/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-389/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("e2cdf7cb-b248-40be-afe1-142f0799851e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-389", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:59Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("e2cdf7cb-b248-40be-afe1-142f0799851e", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/841d79ea-3522-475a-9a5e-84dc2846eb96", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-389/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-389/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-389/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-389/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-389/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-389/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-389/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""18d7cf50-db17-4935-ae8b-d9f50dde0257"",
    ""url"": ""/v2/users/uaa-id-405"",
    ""created_at"": ""2016-07-27T14:03:00Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""18d7cf50-db17-4935-ae8b-d9f50dde0257"",
    ""default_space_url"": ""/v2/spaces/daae0192-79d5-4367-8119-dc9fd8ac939a"",
    ""spaces_url"": ""/v2/users/uaa-id-405/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-405/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-405/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-405/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-405/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-405/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-405/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("18d7cf50-db17-4935-ae8b-d9f50dde0257", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-405", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:00Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("18d7cf50-db17-4935-ae8b-d9f50dde0257", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/daae0192-79d5-4367-8119-dc9fd8ac939a", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-405/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-405/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-405/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-405/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-405/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-405/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-405/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1b4c8f55-7e74-459c-9f4b-1c03c4d27e41"",
    ""url"": ""/v2/users/832d5539-f009-4e91-bb91-5b9da7584998"",
    ""created_at"": ""2016-07-27T14:03:01Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/spaces"",
    ""organizations_url"": ""/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/organizations"",
    ""managed_organizations_url"": ""/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("1b4c8f55-7e74-459c-9f4b-1c03c4d27e41", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/832d5539-f009-4e91-bb91-5b9da7584998", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/832d5539-f009-4e91-bb91-5b9da7584998/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2db7fd62-a7a7-4cbd-9fb6-f27ffb05d247"",
        ""url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de"",
        ""created_at"": ""2016-07-27T14:02:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2352"",
        ""organization_guid"": ""2db7fd62-a7a7-4cbd-9fb6-f27ffb05d247"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/ded58f6a-7aa5-4ba0-b9dd-6bea67e76b34"",
        ""developers_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/developers"",
        ""managers_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/managers"",
        ""auditors_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/auditors"",
        ""apps_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/apps"",
        ""routes_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/routes"",
        ""domains_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/domains"",
        ""service_instances_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/service_instances"",
        ""app_events_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/app_events"",
        ""events_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/events"",
        ""security_groups_url"": ""/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2db7fd62-a7a7-4cbd-9fb6-f27ffb05d247", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2352", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("2db7fd62-a7a7-4cbd-9fb6-f27ffb05d247", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/ded58f6a-7aa5-4ba0-b9dd-6bea67e76b34", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/ad911e04-b2d6-46ad-98e4-7cebf27965de/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce2e9e43-c210-4ef2-83f2-592f8c648a2e"",
        ""url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b"",
        ""created_at"": ""2016-07-27T14:03:00Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2467"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""ce2e9e43-c210-4ef2-83f2-592f8c648a2e"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/31ca1e15-1294-4f88-b9bc-b89e729d29ea"",
        ""spaces_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/spaces"",
        ""domains_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/domains"",
        ""private_domains_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/private_domains"",
        ""users_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/users"",
        ""managers_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/managers"",
        ""billing_managers_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/billing_managers"",
        ""auditors_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/auditors"",
        ""app_events_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ce2e9e43-c210-4ef2-83f2-592f8c648a2e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:00Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2467", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("ce2e9e43-c210-4ef2-83f2-592f8c648a2e", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/31ca1e15-1294-4f88-b9bc-b89e729d29ea", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/58c8d058-ac36-4d98-83b6-064a1644176b/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""993a11a1-3cf4-4c1c-9d98-6f87b5b52c18"",
        ""url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70"",
        ""created_at"": ""2016-07-27T14:02:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2400"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""993a11a1-3cf4-4c1c-9d98-6f87b5b52c18"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/0ccebafe-0ded-4943-9ad3-bba6973e18de"",
        ""spaces_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/spaces"",
        ""domains_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/domains"",
        ""private_domains_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/private_domains"",
        ""users_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/users"",
        ""managers_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/managers"",
        ""billing_managers_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/billing_managers"",
        ""auditors_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/auditors"",
        ""app_events_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("993a11a1-3cf4-4c1c-9d98-6f87b5b52c18", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2400", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("993a11a1-3cf4-4c1c-9d98-6f87b5b52c18", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/0ccebafe-0ded-4943-9ad3-bba6973e18de", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/f23507ab-33c9-4383-a742-1e14b2a69c70/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""09cdadf3-2ca3-4104-8772-47b2badf607f"",
    ""url"": ""/v2/users/uaa-id-393"",
    ""created_at"": ""2016-07-27T14:02:59Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""09cdadf3-2ca3-4104-8772-47b2badf607f"",
    ""default_space_url"": ""/v2/spaces/c394cd02-91a4-4d81-bde7-a41b03b4ff1a"",
    ""spaces_url"": ""/v2/users/uaa-id-393/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-393/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-393/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-393/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-393/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-393/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-393/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("09cdadf3-2ca3-4104-8772-47b2badf607f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-393", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:59Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("09cdadf3-2ca3-4104-8772-47b2badf607f", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/c394cd02-91a4-4d81-bde7-a41b03b4ff1a", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-393/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-393/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-393/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-393/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-393/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-393/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-393/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""666a4749-8b8c-498f-84e1-c400fef176d8"",
        ""url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708"",
        ""created_at"": ""2016-07-27T14:02:59Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2395"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""666a4749-8b8c-498f-84e1-c400fef176d8"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/2d9d6a34-476d-4152-a3fd-b6452c79eb2c"",
        ""spaces_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/spaces"",
        ""domains_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/domains"",
        ""private_domains_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/private_domains"",
        ""users_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/users"",
        ""managers_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/managers"",
        ""billing_managers_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/billing_managers"",
        ""auditors_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/auditors"",
        ""app_events_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("666a4749-8b8c-498f-84e1-c400fef176d8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:59Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2395", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("666a4749-8b8c-498f-84e1-c400fef176d8", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/2d9d6a34-476d-4152-a3fd-b6452c79eb2c", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/d26bf1b5-04c6-415a-9b05-8a6fa82f5708/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8cb2b439-d327-460c-a7aa-ab630ec747c3"",
    ""url"": ""/v2/users/uaa-id-420"",
    ""created_at"": ""2016-07-27T14:03:01Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""8cb2b439-d327-460c-a7aa-ab630ec747c3"",
    ""default_space_url"": ""/v2/spaces/72ba65fc-f047-4ec8-ab49-12df69326e4b"",
    ""spaces_url"": ""/v2/users/uaa-id-420/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-420/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-420/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-420/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-420/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-420/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-420/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("8cb2b439-d327-460c-a7aa-ab630ec747c3", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-420", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:03:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("8cb2b439-d327-460c-a7aa-ab630ec747c3", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/72ba65fc-f047-4ec8-ab49-12df69326e4b", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-420/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-420/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-420/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-420/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-420/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-420/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-420/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }
    }
}
