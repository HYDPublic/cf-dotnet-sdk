//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""239a42b2-0c65-4b94-9d95-e63ec0ce5c17"",
        ""url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df"",
        ""created_at"": ""2016-05-26T11:34:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-447"",
        ""organization_guid"": ""239a42b2-0c65-4b94-9d95-e63ec0ce5c17"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/c94a9506-da7d-4acb-8a9b-484ff5a2fcc7"",
        ""developers_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/developers"",
        ""managers_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/managers"",
        ""auditors_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/auditors"",
        ""apps_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/apps"",
        ""routes_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/routes"",
        ""domains_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/domains"",
        ""service_instances_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/service_instances"",
        ""app_events_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/app_events"",
        ""events_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/events"",
        ""security_groups_url"": ""/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("239a42b2-0c65-4b94-9d95-e63ec0ce5c17", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-447", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("239a42b2-0c65-4b94-9d95-e63ec0ce5c17", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/c94a9506-da7d-4acb-8a9b-484ff5a2fcc7", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/eadbb8df-0820-4c2d-ab69-20769d1e65df/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6029e26e-dae0-4870-b2c1-a2432f83d892"",
    ""url"": ""/v2/users/uaa-id-132"",
    ""created_at"": ""2016-05-26T11:34:29Z"",
    ""updated_at"": ""2016-05-26T11:34:29Z""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""6029e26e-dae0-4870-b2c1-a2432f83d892"",
    ""default_space_url"": ""/v2/spaces/4bddd5ce-d7b8-4003-bc16-973ecc8b2be4"",
    ""spaces_url"": ""/v2/users/uaa-id-132/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-132/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-132/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-132/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-132/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-132/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-132/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("6029e26e-dae0-4870-b2c1-a2432f83d892", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-132", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("6029e26e-dae0-4870-b2c1-a2432f83d892", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/4bddd5ce-d7b8-4003-bc16-973ecc8b2be4", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-132/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-132/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-132/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-132/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-132/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-132/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-132/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
    ""created_at"": ""2016-05-26T11:34:24Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""organizations"": [
      {
        ""metadata"": {
          ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
          ""created_at"": ""2016-05-26T11:34:24Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-140"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
                ""created_at"": ""2016-05-26T11:34:24Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-142""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
              ""created_at"": ""2016-05-26T11:34:24Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-141"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
                ""created_at"": ""2016-05-26T11:34:24Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
          ""created_at"": ""2016-05-26T11:34:24Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-140"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
                ""created_at"": ""2016-05-26T11:34:24Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-142""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
              ""created_at"": ""2016-05-26T11:34:24Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-141"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
                ""created_at"": ""2016-05-26T11:34:24Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""billing_managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
          ""created_at"": ""2016-05-26T11:34:24Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-140"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
                ""created_at"": ""2016-05-26T11:34:24Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-142""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
              ""created_at"": ""2016-05-26T11:34:24Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-141"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
                ""created_at"": ""2016-05-26T11:34:24Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""audited_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
          ""created_at"": ""2016-05-26T11:34:24Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-140"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
                ""created_at"": ""2016-05-26T11:34:24Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-142""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
              ""created_at"": ""2016-05-26T11:34:24Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-141"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
                ""created_at"": ""2016-05-26T11:34:24Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""spaces"": [
      {
        ""metadata"": {
          ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
          ""created_at"": ""2016-05-26T11:34:24Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-142""
        }
      }
    ],
    ""managed_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
          ""created_at"": ""2016-05-26T11:34:24Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-142""
        }
      }
    ],
    ""audited_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""0f9e29de-3d83-4f72-8f6f-1bb674f3a487"",
          ""created_at"": ""2016-05-26T11:34:24Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-142""
        }
      }
    ]
  }
}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("0f9e29de-3d83-4f72-8f6f-1bb674f3a487", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-05-26T11:34:24Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b278639f-fd59-418f-b826-eada991b7f6f"",
        ""url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e"",
        ""created_at"": ""2016-05-26T11:34:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-503"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""b278639f-fd59-418f-b826-eada991b7f6f"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/c5bd1e88-622c-41b8-b541-06df1d9fade0"",
        ""spaces_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/spaces"",
        ""domains_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/domains"",
        ""private_domains_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/private_domains"",
        ""users_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/users"",
        ""managers_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/managers"",
        ""billing_managers_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/billing_managers"",
        ""auditors_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/auditors"",
        ""app_events_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b278639f-fd59-418f-b826-eada991b7f6f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-503", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("b278639f-fd59-418f-b826-eada991b7f6f", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/c5bd1e88-622c-41b8-b541-06df1d9fade0", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/e44c789a-fc7e-419e-8f7e-c3d54f071e9e/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ea0804b6-0cd6-4f44-8592-1fda88e9a81b"",
    ""url"": ""/v2/users/uaa-id-150"",
    ""created_at"": ""2016-05-26T11:34:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""ea0804b6-0cd6-4f44-8592-1fda88e9a81b"",
    ""default_space_url"": ""/v2/spaces/a5236a8b-9016-49df-809f-941d70540714"",
    ""spaces_url"": ""/v2/users/uaa-id-150/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-150/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-150/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-150/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-150/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-150/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-150/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("ea0804b6-0cd6-4f44-8592-1fda88e9a81b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-150", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("ea0804b6-0cd6-4f44-8592-1fda88e9a81b", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/a5236a8b-9016-49df-809f-941d70540714", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""df2e18d3-8e34-4d7c-aa1e-769fc5696bd6"",
    ""url"": ""/v2/users/uaa-id-158"",
    ""created_at"": ""2016-05-26T11:34:30Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""df2e18d3-8e34-4d7c-aa1e-769fc5696bd6"",
    ""default_space_url"": ""/v2/spaces/d987be76-b5ab-4ba0-bb3c-6d1a2c3fb9af"",
    ""spaces_url"": ""/v2/users/uaa-id-158/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-158/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-158/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-158/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-158/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-158/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-158/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("df2e18d3-8e34-4d7c-aa1e-769fc5696bd6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-158", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:30Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("df2e18d3-8e34-4d7c-aa1e-769fc5696bd6", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/d987be76-b5ab-4ba0-bb3c-6d1a2c3fb9af", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""86e5ba46-b3cd-4f25-8c8f-7d93778dc453"",
        ""url"": ""/v2/users/uaa-id-128"",
        ""created_at"": ""2016-05-26T11:34:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""86e5ba46-b3cd-4f25-8c8f-7d93778dc453"",
        ""username"": ""user@example.com"",
        ""default_space_url"": ""/v2/spaces/f18643de-2021-416c-b874-891a9749d6d4"",
        ""spaces_url"": ""/v2/users/uaa-id-128/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-128/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-128/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-128/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-128/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-128/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-128/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""86e5ba46-b3cd-4f25-8c8f-7d93778dc453"",
        ""url"": ""/v2/users/uaa-id-129"",
        ""created_at"": ""2016-05-26T11:34:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": true,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-129/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-129/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-129/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-129/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-129/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-129/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-129/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("86e5ba46-b3cd-4f25-8c8f-7d93778dc453", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-128", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("86e5ba46-b3cd-4f25-8c8f-7d93778dc453", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/spaces/f18643de-2021-416c-b874-891a9749d6d4", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-128/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-128/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-128/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-128/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-128/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-128/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-128/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("86e5ba46-b3cd-4f25-8c8f-7d93778dc453", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-129", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-129/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-129/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-129/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-129/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-129/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-129/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-129/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""aaa5d805-0ae7-47e2-81f2-80f91523c8cc"",
    ""url"": ""/v2/users/uaa-id-146"",
    ""created_at"": ""2016-05-26T11:34:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""aaa5d805-0ae7-47e2-81f2-80f91523c8cc"",
    ""default_space_url"": ""/v2/spaces/41719f6c-6d98-427f-b286-16d438b7da11"",
    ""spaces_url"": ""/v2/users/uaa-id-146/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-146/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-146/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-146/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-146/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-146/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-146/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("aaa5d805-0ae7-47e2-81f2-80f91523c8cc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-146", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("aaa5d805-0ae7-47e2-81f2-80f91523c8cc", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/41719f6c-6d98-427f-b286-16d438b7da11", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""01aa8b3c-e207-4503-a29b-2c16616f7f7e"",
        ""url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef"",
        ""created_at"": ""2016-05-26T11:34:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-453"",
        ""organization_guid"": ""01aa8b3c-e207-4503-a29b-2c16616f7f7e"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/60195b7f-38de-4124-a729-a4da5b77d7fd"",
        ""developers_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/developers"",
        ""managers_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/managers"",
        ""auditors_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/auditors"",
        ""apps_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/apps"",
        ""routes_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/routes"",
        ""domains_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/domains"",
        ""service_instances_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/service_instances"",
        ""app_events_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/app_events"",
        ""events_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/events"",
        ""security_groups_url"": ""/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("01aa8b3c-e207-4503-a29b-2c16616f7f7e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-453", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("01aa8b3c-e207-4503-a29b-2c16616f7f7e", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/60195b7f-38de-4124-a729-a4da5b77d7fd", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/32e194dc-4916-44ca-b424-11f5b5fd82ef/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c2213d13-b559-4658-89bc-e9675c7c6d49"",
    ""url"": ""/v2/users/uaa-id-170"",
    ""created_at"": ""2016-05-26T11:34:30Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""c2213d13-b559-4658-89bc-e9675c7c6d49"",
    ""default_space_url"": ""/v2/spaces/dfc2e001-d4e7-43f6-853e-02aa2fdf46bf"",
    ""spaces_url"": ""/v2/users/uaa-id-170/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-170/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-170/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-170/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-170/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-170/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-170/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("c2213d13-b559-4658-89bc-e9675c7c6d49", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-170", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:30Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("c2213d13-b559-4658-89bc-e9675c7c6d49", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/dfc2e001-d4e7-43f6-853e-02aa2fdf46bf", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-170/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-170/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-170/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-170/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-170/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-170/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-170/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e4db6a3b-3254-4a08-9cb3-423e2c91e532"",
    ""url"": ""/v2/users/uaa-id-142"",
    ""created_at"": ""2016-05-26T11:34:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""e4db6a3b-3254-4a08-9cb3-423e2c91e532"",
    ""default_space_url"": ""/v2/spaces/f9bdb04c-0e09-4a2c-9df8-32712d233797"",
    ""spaces_url"": ""/v2/users/uaa-id-142/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-142/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-142/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-142/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-142/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-142/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-142/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("e4db6a3b-3254-4a08-9cb3-423e2c91e532", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-142", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("e4db6a3b-3254-4a08-9cb3-423e2c91e532", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/f9bdb04c-0e09-4a2c-9df8-32712d233797", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-142/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-142/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-142/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-142/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-142/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-142/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-142/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""656ddc88-b187-44d7-bdd6-90b3581ac40e"",
    ""url"": ""/v2/users/uaa-id-180"",
    ""created_at"": ""2016-05-26T11:34:31Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""656ddc88-b187-44d7-bdd6-90b3581ac40e"",
    ""default_space_url"": ""/v2/spaces/e909eed2-3626-44e1-9caf-72f9ec565cd7"",
    ""spaces_url"": ""/v2/users/uaa-id-180/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-180/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-180/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-180/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-180/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-180/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-180/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("656ddc88-b187-44d7-bdd6-90b3581ac40e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-180", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:31Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("656ddc88-b187-44d7-bdd6-90b3581ac40e", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/e909eed2-3626-44e1-9caf-72f9ec565cd7", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-180/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-180/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-180/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-180/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-180/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-180/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-180/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f8d4b17b-5fb0-4746-85af-0ee186914b1b"",
    ""url"": ""/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094"",
    ""created_at"": ""2016-05-26T11:34:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/spaces"",
    ""organizations_url"": ""/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/organizations"",
    ""managed_organizations_url"": ""/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("f8d4b17b-5fb0-4746-85af-0ee186914b1b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/5a1475a4-3ca1-4339-b9b0-4aed29cec094/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9f4b401a-287d-4de1-8f6a-e9aacd6ef488"",
        ""url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9"",
        ""created_at"": ""2016-05-26T11:34:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-387"",
        ""organization_guid"": ""9f4b401a-287d-4de1-8f6a-e9aacd6ef488"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/260cc838-9b09-437a-b4f2-f2b31a832899"",
        ""developers_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/developers"",
        ""managers_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/managers"",
        ""auditors_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/auditors"",
        ""apps_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/apps"",
        ""routes_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/routes"",
        ""domains_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/domains"",
        ""service_instances_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/service_instances"",
        ""app_events_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/app_events"",
        ""events_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/events"",
        ""security_groups_url"": ""/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9f4b401a-287d-4de1-8f6a-e9aacd6ef488", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-387", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("9f4b401a-287d-4de1-8f6a-e9aacd6ef488", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/260cc838-9b09-437a-b4f2-f2b31a832899", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/f13d0fde-50cf-4529-a30a-a702908d79c9/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cc8ca8b4-5561-4730-92d3-d6d81a446693"",
        ""url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf"",
        ""created_at"": ""2016-05-26T11:34:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-430"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""cc8ca8b4-5561-4730-92d3-d6d81a446693"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/7c14977a-441b-4996-96c9-f4d2e9e1b7c0"",
        ""spaces_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/spaces"",
        ""domains_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/domains"",
        ""private_domains_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/private_domains"",
        ""users_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/users"",
        ""managers_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/managers"",
        ""billing_managers_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/billing_managers"",
        ""auditors_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/auditors"",
        ""app_events_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cc8ca8b4-5561-4730-92d3-d6d81a446693", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-430", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("cc8ca8b4-5561-4730-92d3-d6d81a446693", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/7c14977a-441b-4996-96c9-f4d2e9e1b7c0", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/3b59b4ab-0882-4817-91f2-92a4555e46bf/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2280cec0-2b8f-4d1e-9d91-4ff51623241f"",
        ""url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3"",
        ""created_at"": ""2016-05-26T11:34:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-370"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""2280cec0-2b8f-4d1e-9d91-4ff51623241f"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/88bcfeaf-d3d7-452b-b5b4-e2781df30174"",
        ""spaces_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/spaces"",
        ""domains_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/domains"",
        ""private_domains_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/private_domains"",
        ""users_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/users"",
        ""managers_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/managers"",
        ""billing_managers_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/billing_managers"",
        ""auditors_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/auditors"",
        ""app_events_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2280cec0-2b8f-4d1e-9d91-4ff51623241f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-370", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("2280cec0-2b8f-4d1e-9d91-4ff51623241f", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/88bcfeaf-d3d7-452b-b5b4-e2781df30174", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/c775fe02-816a-45c5-9a48-55e8a7daf5e3/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b8772232-ebb4-4053-b660-d30ebcd19558"",
    ""url"": ""/v2/users/uaa-id-164"",
    ""created_at"": ""2016-05-26T11:34:30Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""b8772232-ebb4-4053-b660-d30ebcd19558"",
    ""default_space_url"": ""/v2/spaces/2773db7d-333b-483f-81d2-1c1c757c6e64"",
    ""spaces_url"": ""/v2/users/uaa-id-164/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-164/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-164/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-164/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-164/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-164/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-164/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("b8772232-ebb4-4053-b660-d30ebcd19558", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-164", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:30Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("b8772232-ebb4-4053-b660-d30ebcd19558", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/2773db7d-333b-483f-81d2-1c1c757c6e64", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e814b525-c4cb-4d34-8dbc-118bdcdda003"",
        ""url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4"",
        ""created_at"": ""2016-05-26T11:34:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-482"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""e814b525-c4cb-4d34-8dbc-118bdcdda003"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/bef1c09d-a386-405c-9037-9f8c99abe615"",
        ""spaces_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/spaces"",
        ""domains_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/domains"",
        ""private_domains_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/private_domains"",
        ""users_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/users"",
        ""managers_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/managers"",
        ""billing_managers_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/billing_managers"",
        ""auditors_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/auditors"",
        ""app_events_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e814b525-c4cb-4d34-8dbc-118bdcdda003", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-482", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("e814b525-c4cb-4d34-8dbc-118bdcdda003", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/bef1c09d-a386-405c-9037-9f8c99abe615", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/f065c4f3-bc1d-4d29-9703-f268045b0cc4/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""84625bb4-d2d3-4c92-b349-d7689116353d"",
    ""url"": ""/v2/users/uaa-id-136"",
    ""created_at"": ""2016-05-26T11:34:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""84625bb4-d2d3-4c92-b349-d7689116353d"",
    ""default_space_url"": ""/v2/spaces/bae17c8e-84bc-483b-afed-7aad5962d5a0"",
    ""spaces_url"": ""/v2/users/uaa-id-136/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-136/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-136/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-136/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-136/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-136/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-136/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("84625bb4-d2d3-4c92-b349-d7689116353d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-136", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("84625bb4-d2d3-4c92-b349-d7689116353d", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/bae17c8e-84bc-483b-afed-7aad5962d5a0", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-136/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-136/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-136/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-136/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-136/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-136/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-136/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }
    }
}
