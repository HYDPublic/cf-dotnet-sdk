//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{""metadata"":{""guid"":""uaa-id-135"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""organizations"":[{""metadata"":{""guid"":""e1a15c7c-ec1c-4b6a-891b-f084c7374f15"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-568"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""7397400b-3318-4bf1-a077-87505cf20047"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-570""}}],""quota_definition"":{""metadata"":{""guid"":""926d502d-8f6c-4433-b162-954057e07ca1"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-569"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-135"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""managed_organizations"":[{""metadata"":{""guid"":""e1a15c7c-ec1c-4b6a-891b-f084c7374f15"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-568"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""7397400b-3318-4bf1-a077-87505cf20047"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-570""}}],""quota_definition"":{""metadata"":{""guid"":""926d502d-8f6c-4433-b162-954057e07ca1"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-569"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-135"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""billing_managed_organizations"":[{""metadata"":{""guid"":""e1a15c7c-ec1c-4b6a-891b-f084c7374f15"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-568"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""7397400b-3318-4bf1-a077-87505cf20047"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-570""}}],""quota_definition"":{""metadata"":{""guid"":""926d502d-8f6c-4433-b162-954057e07ca1"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-569"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-135"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""audited_organizations"":[{""metadata"":{""guid"":""e1a15c7c-ec1c-4b6a-891b-f084c7374f15"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-568"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""7397400b-3318-4bf1-a077-87505cf20047"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-570""}}],""quota_definition"":{""metadata"":{""guid"":""926d502d-8f6c-4433-b162-954057e07ca1"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-569"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-135"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""spaces"":[{""metadata"":{""guid"":""7397400b-3318-4bf1-a077-87505cf20047"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-570""}}],""managed_spaces"":[{""metadata"":{""guid"":""7397400b-3318-4bf1-a077-87505cf20047"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-570""}}],""audited_spaces"":[{""metadata"":{""guid"":""7397400b-3318-4bf1-a077-87505cf20047"",""created_at"":""2015-05-19T15:27:11+00:00"",""updated_at"":null},""entity"":{""name"":""name-570""}}]}}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("uaa-id-135", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-340"",
    ""url"": ""/v2/users/uaa-id-340"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""dc36e8bc-c991-4a74-a775-20dd2385033b"",
    ""default_space_url"": ""/v2/spaces/dc36e8bc-c991-4a74-a775-20dd2385033b"",
    ""spaces_url"": ""/v2/users/uaa-id-340/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-340/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-340/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-340/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-340/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-340/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-340/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-340", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-340", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("dc36e8bc-c991-4a74-a775-20dd2385033b", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/dc36e8bc-c991-4a74-a775-20dd2385033b", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""66159a73-663d-4a0b-8769-320379e3adde"",
        ""url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde"",
        ""created_at"": ""2015-05-19T15:27:23+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1832"",
        ""organization_guid"": ""aba681ed-7d15-42e2-801b-2d667233d49d"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/aba681ed-7d15-42e2-801b-2d667233d49d"",
        ""developers_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/developers"",
        ""managers_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/managers"",
        ""auditors_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/auditors"",
        ""apps_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/apps"",
        ""routes_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/routes"",
        ""domains_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/domains"",
        ""service_instances_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/service_instances"",
        ""app_events_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/app_events"",
        ""events_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/events"",
        ""security_groups_url"": ""/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("66159a73-663d-4a0b-8769-320379e3adde", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1832", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("aba681ed-7d15-42e2-801b-2d667233d49d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/aba681ed-7d15-42e2-801b-2d667233d49d", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/66159a73-663d-4a0b-8769-320379e3adde/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ba807a09-30c3-4c54-9904-82651be421ca"",
        ""url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca"",
        ""created_at"": ""2015-05-19T15:27:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1884"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""e0c620ae-5044-4a40-870a-c0a982eee0fc"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/e0c620ae-5044-4a40-870a-c0a982eee0fc"",
        ""spaces_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/spaces"",
        ""domains_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/domains"",
        ""private_domains_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/private_domains"",
        ""users_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/users"",
        ""managers_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/managers"",
        ""billing_managers_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/billing_managers"",
        ""auditors_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/auditors"",
        ""app_events_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ba807a09-30c3-4c54-9904-82651be421ca", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1884", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("e0c620ae-5044-4a40-870a-c0a982eee0fc", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/e0c620ae-5044-4a40-870a-c0a982eee0fc", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ba807a09-30c3-4c54-9904-82651be421ca/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""61d4128e-029f-43e4-958b-4ab613c9bad7"",
        ""url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7"",
        ""created_at"": ""2015-05-19T15:27:23+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1788"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""be8fd168-4d8a-4cb1-88e5-aa91659d3d8c"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/be8fd168-4d8a-4cb1-88e5-aa91659d3d8c"",
        ""spaces_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/spaces"",
        ""domains_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/domains"",
        ""private_domains_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/private_domains"",
        ""users_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/users"",
        ""managers_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/managers"",
        ""billing_managers_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/billing_managers"",
        ""auditors_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/auditors"",
        ""app_events_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("61d4128e-029f-43e4-958b-4ab613c9bad7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1788", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("be8fd168-4d8a-4cb1-88e5-aa91659d3d8c", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/be8fd168-4d8a-4cb1-88e5-aa91659d3d8c", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/61d4128e-029f-43e4-958b-4ab613c9bad7/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-363"",
    ""url"": ""/v2/users/uaa-id-363"",
    ""created_at"": ""2015-05-19T15:27:24+00:00"",
    ""updated_at"": ""2015-05-19T15:27:24+00:00""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""076efaf3-160e-4c25-8871-88789319b127"",
    ""default_space_url"": ""/v2/spaces/076efaf3-160e-4c25-8871-88789319b127"",
    ""spaces_url"": ""/v2/users/uaa-id-363/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-363/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-363/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-363/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-363/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-363/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-363/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("uaa-id-363", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-363", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("076efaf3-160e-4c25-8871-88789319b127", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/076efaf3-160e-4c25-8871-88789319b127", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-363/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-318"",
    ""url"": ""/v2/users/uaa-id-318"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f98ec0ff-72a9-474e-ac11-00e636424c24"",
    ""default_space_url"": ""/v2/spaces/f98ec0ff-72a9-474e-ac11-00e636424c24"",
    ""spaces_url"": ""/v2/users/uaa-id-318/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-318/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-318/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-318/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-318/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-318/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-318/audited_spaces""
  }
}";

            RemoveSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-318", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-318", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f98ec0ff-72a9-474e-ac11-00e636424c24", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/f98ec0ff-72a9-474e-ac11-00e636424c24", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-318/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-318/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-318/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-318/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-318/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-318/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-318/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-316"",
    ""url"": ""/v2/users/uaa-id-316"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""3d8c7a98-81f3-409c-91ce-0e452002da78"",
    ""default_space_url"": ""/v2/spaces/3d8c7a98-81f3-409c-91ce-0e452002da78"",
    ""spaces_url"": ""/v2/users/uaa-id-316/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-316/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-316/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-316/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-316/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-316/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-316/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-316", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-316", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("3d8c7a98-81f3-409c-91ce-0e452002da78", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/3d8c7a98-81f3-409c-91ce-0e452002da78", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-357"",
    ""url"": ""/v2/users/uaa-id-357"",
    ""created_at"": ""2015-05-19T15:27:24+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""76c69165-3d3a-46c4-b706-804a1363ddde"",
    ""default_space_url"": ""/v2/spaces/76c69165-3d3a-46c4-b706-804a1363ddde"",
    ""spaces_url"": ""/v2/users/uaa-id-357/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-357/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-357/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-357/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-357/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-357/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-357/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("uaa-id-357", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-357", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("76c69165-3d3a-46c4-b706-804a1363ddde", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/76c69165-3d3a-46c4-b706-804a1363ddde", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-357/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-357/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-357/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-357/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-357/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-357/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-357/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveBillingManagedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-312"",
    ""url"": ""/v2/users/uaa-id-312"",
    ""created_at"": ""2015-05-19T15:27:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""00231ede-bf02-4974-b024-81bea78b28a6"",
    ""default_space_url"": ""/v2/spaces/00231ede-bf02-4974-b024-81bea78b28a6"",
    ""spaces_url"": ""/v2/users/uaa-id-312/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-312/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-312/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-312/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-312/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-312/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-312/audited_spaces""
  }
}";

            RemoveBillingManagedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveBillingManagedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-312", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-312", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("00231ede-bf02-4974-b024-81bea78b28a6", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/00231ede-bf02-4974-b024-81bea78b28a6", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-312/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-312/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-312/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-312/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-312/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-312/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-312/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""da7400bd-45d9-498c-9a83-d99924b09c0f"",
        ""url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f"",
        ""created_at"": ""2015-05-19T15:27:22+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1753"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""2aad1e71-dd41-4855-86ab-fbc80b9b56d5"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/2aad1e71-dd41-4855-86ab-fbc80b9b56d5"",
        ""spaces_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/spaces"",
        ""domains_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/domains"",
        ""private_domains_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/private_domains"",
        ""users_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/users"",
        ""managers_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/managers"",
        ""billing_managers_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/billing_managers"",
        ""auditors_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/auditors"",
        ""app_events_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("da7400bd-45d9-498c-9a83-d99924b09c0f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:22+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1753", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("2aad1e71-dd41-4855-86ab-fbc80b9b56d5", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/2aad1e71-dd41-4855-86ab-fbc80b9b56d5", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/da7400bd-45d9-498c-9a83-d99924b09c0f/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditedSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-342"",
    ""url"": ""/v2/users/uaa-id-342"",
    ""created_at"": ""2015-05-19T15:27:24+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""c53136a6-6b03-4baf-b6c5-a373f67e4d83"",
    ""default_space_url"": ""/v2/spaces/c53136a6-6b03-4baf-b6c5-a373f67e4d83"",
    ""spaces_url"": ""/v2/users/uaa-id-342/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-342/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-342/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-342/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-342/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-342/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-342/audited_spaces""
  }
}";

            RemoveAuditedSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveAuditedSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-342", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-342", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("c53136a6-6b03-4baf-b6c5-a373f67e4d83", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/c53136a6-6b03-4baf-b6c5-a373f67e4d83", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-342/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-342/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-342/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-342/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-342/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-342/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-342/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-334"",
    ""url"": ""/v2/users/uaa-id-334"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""392c68da-db83-402e-8bea-6834d6be11ba"",
    ""default_space_url"": ""/v2/spaces/392c68da-db83-402e-8bea-6834d6be11ba"",
    ""spaces_url"": ""/v2/users/uaa-id-334/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-334/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-334/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-334/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-334/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-334/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-334/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-334", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-334", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("392c68da-db83-402e-8bea-6834d6be11ba", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/392c68da-db83-402e-8bea-6834d6be11ba", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-334/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-310"",
    ""url"": ""/v2/users/uaa-id-310"",
    ""created_at"": ""2015-05-19T15:27:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""c3dc2419-e751-4465-88ac-e991679524cb"",
    ""default_space_url"": ""/v2/spaces/c3dc2419-e751-4465-88ac-e991679524cb"",
    ""spaces_url"": ""/v2/users/uaa-id-310/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-310/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-310/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-310/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-310/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-310/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-310/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-310", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-310", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("c3dc2419-e751-4465-88ac-e991679524cb", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/c3dc2419-e751-4465-88ac-e991679524cb", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-310/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-310/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-310/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-310/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-310/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-310/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-310/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-355"",
        ""url"": ""/v2/users/uaa-id-355"",
        ""created_at"": ""2015-05-19T15:27:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""737f0c2b-a687-4d8c-b988-2ba1fbeb3b1d"",
        ""default_space_url"": ""/v2/spaces/737f0c2b-a687-4d8c-b988-2ba1fbeb3b1d"",
        ""spaces_url"": ""/v2/users/uaa-id-355/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-355/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-355/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-355/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-355/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-355/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-355/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""uaa-id-356"",
        ""url"": ""/v2/users/uaa-id-356"",
        ""created_at"": ""2015-05-19T15:27:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": true,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-356/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-356/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-356/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-356/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-356/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-356/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-356/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-355", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-355", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("737f0c2b-a687-4d8c-b988-2ba1fbeb3b1d", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/737f0c2b-a687-4d8c-b988-2ba1fbeb3b1d", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-355/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-355/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-355/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-355/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-355/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-355/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-355/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("uaa-id-356", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-356", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-356/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-356/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-356/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-356/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-356/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-356/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-356/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0e8ac3e3-4d63-480a-919a-949d20bd0d08"",
        ""url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08"",
        ""created_at"": ""2015-05-19T15:27:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1859"",
        ""organization_guid"": ""86c02e72-b9fd-439d-96b1-ece41533db69"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/86c02e72-b9fd-439d-96b1-ece41533db69"",
        ""developers_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/developers"",
        ""managers_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/managers"",
        ""auditors_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/auditors"",
        ""apps_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/apps"",
        ""routes_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/routes"",
        ""domains_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/domains"",
        ""service_instances_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/service_instances"",
        ""app_events_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/app_events"",
        ""events_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/events"",
        ""security_groups_url"": ""/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0e8ac3e3-4d63-480a-919a-949d20bd0d08", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1859", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("86c02e72-b9fd-439d-96b1-ece41533db69", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/86c02e72-b9fd-439d-96b1-ece41533db69", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/0e8ac3e3-4d63-480a-919a-949d20bd0d08/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-330"",
    ""url"": ""/v2/users/uaa-id-330"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""413f6266-81eb-4220-ae86-2505b833b85f"",
    ""default_space_url"": ""/v2/spaces/413f6266-81eb-4220-ae86-2505b833b85f"",
    ""spaces_url"": ""/v2/users/uaa-id-330/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-330/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-330/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-330/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-330/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-330/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-330/audited_spaces""
  }
}";

            RemoveAuditedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveAuditedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-330", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-330", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("413f6266-81eb-4220-ae86-2505b833b85f", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/413f6266-81eb-4220-ae86-2505b833b85f", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-330/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagedSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-336"",
    ""url"": ""/v2/users/uaa-id-336"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""da744e7c-f0b5-4843-8849-9bb5ee770cd6"",
    ""default_space_url"": ""/v2/spaces/da744e7c-f0b5-4843-8849-9bb5ee770cd6"",
    ""spaces_url"": ""/v2/users/uaa-id-336/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-336/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-336/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-336/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-336/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-336/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-336/audited_spaces""
  }
}";

            RemoveManagedSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveManagedSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-336", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-336", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("da744e7c-f0b5-4843-8849-9bb5ee770cd6", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/da744e7c-f0b5-4843-8849-9bb5ee770cd6", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-336/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-336/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-336/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-336/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-336/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-336/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-336/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""guid-9ca6119b-7311-48fa-96f8-6ab604dca950"",
    ""url"": ""/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950"",
    ""created_at"": ""2015-05-19T15:27:24+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/spaces"",
    ""organizations_url"": ""/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/organizations"",
    ""managed_organizations_url"": ""/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("guid-9ca6119b-7311-48fa-96f8-6ab604dca950", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/guid-9ca6119b-7311-48fa-96f8-6ab604dca950/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-346"",
    ""url"": ""/v2/users/uaa-id-346"",
    ""created_at"": ""2015-05-19T15:27:24+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""4ffe907f-72fa-4f67-b923-611ba801e708"",
    ""default_space_url"": ""/v2/spaces/4ffe907f-72fa-4f67-b923-611ba801e708"",
    ""spaces_url"": ""/v2/users/uaa-id-346/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-346/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-346/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-346/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-346/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-346/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-346/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-346", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-346", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("4ffe907f-72fa-4f67-b923-611ba801e708", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/4ffe907f-72fa-4f67-b923-611ba801e708", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-346/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-346/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-346/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-346/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-346/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-346/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-346/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""13ce2b51-5c19-4616-8d7d-e4ccf79dfac0"",
        ""url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0"",
        ""created_at"": ""2015-05-19T15:27:23+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1770"",
        ""organization_guid"": ""dc5f2845-c44c-4d9d-9f32-487a599973a5"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/dc5f2845-c44c-4d9d-9f32-487a599973a5"",
        ""developers_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/developers"",
        ""managers_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/managers"",
        ""auditors_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/auditors"",
        ""apps_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/apps"",
        ""routes_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/routes"",
        ""domains_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/domains"",
        ""service_instances_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/service_instances"",
        ""app_events_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/app_events"",
        ""events_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/events"",
        ""security_groups_url"": ""/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("13ce2b51-5c19-4616-8d7d-e4ccf79dfac0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1770", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("dc5f2845-c44c-4d9d-9f32-487a599973a5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/dc5f2845-c44c-4d9d-9f32-487a599973a5", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/13ce2b51-5c19-4616-8d7d-e4ccf79dfac0/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-324"",
    ""url"": ""/v2/users/uaa-id-324"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""87b605be-43ee-41e6-87fa-b606f3435143"",
    ""default_space_url"": ""/v2/spaces/87b605be-43ee-41e6-87fa-b606f3435143"",
    ""spaces_url"": ""/v2/users/uaa-id-324/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-324/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-324/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-324/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-324/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-324/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-324/audited_spaces""
  }
}";

            RemoveOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-324", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-324", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("87b605be-43ee-41e6-87fa-b606f3435143", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/87b605be-43ee-41e6-87fa-b606f3435143", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-349"",
    ""url"": ""/v2/users/uaa-id-349"",
    ""created_at"": ""2015-05-19T15:27:24+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""8ee6def9-3cc4-4d4d-bd3b-0a9f68c0d5c9"",
    ""default_space_url"": ""/v2/spaces/8ee6def9-3cc4-4d4d-bd3b-0a9f68c0d5c9"",
    ""spaces_url"": ""/v2/users/uaa-id-349/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-349/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-349/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-349/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-349/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-349/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-349/audited_spaces""
  }
}";

            RemoveManagedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveManagedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-349", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-349", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:24+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("8ee6def9-3cc4-4d4d-bd3b-0a9f68c0d5c9", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/8ee6def9-3cc4-4d4d-bd3b-0a9f68c0d5c9", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-349/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-349/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-349/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-349/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-349/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-349/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-349/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6b3c6342-5e7c-43ba-8f34-90d3ba950f74"",
        ""url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74"",
        ""created_at"": ""2015-05-19T15:27:23+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1809"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""48b0c37d-776e-47b2-ae4f-939d241ed844"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/48b0c37d-776e-47b2-ae4f-939d241ed844"",
        ""spaces_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/spaces"",
        ""domains_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/domains"",
        ""private_domains_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/private_domains"",
        ""users_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/users"",
        ""managers_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/managers"",
        ""billing_managers_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/billing_managers"",
        ""auditors_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/auditors"",
        ""app_events_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6b3c6342-5e7c-43ba-8f34-90d3ba950f74", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1809", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("48b0c37d-776e-47b2-ae4f-939d241ed844", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/48b0c37d-776e-47b2-ae4f-939d241ed844", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/6b3c6342-5e7c-43ba-8f34-90d3ba950f74/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-328"",
    ""url"": ""/v2/users/uaa-id-328"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""d60c6263-f363-4fe9-a2fc-f9f0afffc6ab"",
    ""default_space_url"": ""/v2/spaces/d60c6263-f363-4fe9-a2fc-f9f0afffc6ab"",
    ""spaces_url"": ""/v2/users/uaa-id-328/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-328/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-328/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-328/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-328/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-328/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-328/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-328", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-328", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("d60c6263-f363-4fe9-a2fc-f9f0afffc6ab", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/d60c6263-f363-4fe9-a2fc-f9f0afffc6ab", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-328/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-322"",
    ""url"": ""/v2/users/uaa-id-322"",
    ""created_at"": ""2015-05-19T15:27:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""77470541-8609-4e67-8e9d-7c175887b856"",
    ""default_space_url"": ""/v2/spaces/77470541-8609-4e67-8e9d-7c175887b856"",
    ""spaces_url"": ""/v2/users/uaa-id-322/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-322/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-322/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-322/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-322/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-322/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-322/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-322", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-322", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("77470541-8609-4e67-8e9d-7c175887b856", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/77470541-8609-4e67-8e9d-7c175887b856", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-322/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-322/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-322/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-322/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-322/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-322/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-322/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }
    }
}
