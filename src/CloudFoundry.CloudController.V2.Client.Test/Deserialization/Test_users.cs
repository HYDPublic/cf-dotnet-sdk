//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{""metadata"":{""guid"":""uaa-id-273"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""organizations"":[{""metadata"":{""guid"":""31b1999e-5be7-483c-bfd1-ad72108c53c8"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-858"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""bb849ad5-1844-49e2-b982-99400f4d8ef5"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-860""}}],""quota_definition"":{""metadata"":{""guid"":""8f704694-ff00-4b5f-ac3a-ed404d30b362"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-859"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-273"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""managed_organizations"":[{""metadata"":{""guid"":""31b1999e-5be7-483c-bfd1-ad72108c53c8"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-858"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""bb849ad5-1844-49e2-b982-99400f4d8ef5"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-860""}}],""quota_definition"":{""metadata"":{""guid"":""8f704694-ff00-4b5f-ac3a-ed404d30b362"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-859"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-273"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""billing_managed_organizations"":[{""metadata"":{""guid"":""31b1999e-5be7-483c-bfd1-ad72108c53c8"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-858"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""bb849ad5-1844-49e2-b982-99400f4d8ef5"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-860""}}],""quota_definition"":{""metadata"":{""guid"":""8f704694-ff00-4b5f-ac3a-ed404d30b362"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-859"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-273"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""audited_organizations"":[{""metadata"":{""guid"":""31b1999e-5be7-483c-bfd1-ad72108c53c8"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-858"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""bb849ad5-1844-49e2-b982-99400f4d8ef5"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-860""}}],""quota_definition"":{""metadata"":{""guid"":""8f704694-ff00-4b5f-ac3a-ed404d30b362"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-859"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-273"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""spaces"":[{""metadata"":{""guid"":""bb849ad5-1844-49e2-b982-99400f4d8ef5"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-860""}}],""managed_spaces"":[{""metadata"":{""guid"":""bb849ad5-1844-49e2-b982-99400f4d8ef5"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-860""}}],""audited_spaces"":[{""metadata"":{""guid"":""bb849ad5-1844-49e2-b982-99400f4d8ef5"",""created_at"":""2015-03-23T16:53:27+00:00"",""updated_at"":null},""entity"":{""name"":""name-860""}}]}}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("uaa-id-273", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-03-23T16:53:27+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-59"",
    ""url"": ""/v2/users/uaa-id-59"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""be04cacd-498e-4e51-acc0-616f38fccb68"",
    ""default_space_url"": ""/v2/spaces/be04cacd-498e-4e51-acc0-616f38fccb68"",
    ""spaces_url"": ""/v2/users/uaa-id-59/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-59/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-59/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-59/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-59/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-59/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-59/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-59", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-59", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("be04cacd-498e-4e51-acc0-616f38fccb68", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/be04cacd-498e-4e51-acc0-616f38fccb68", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-59/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-59/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-59/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-59/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-59/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-59/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-59/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6261f794-e045-4c66-8f4b-271651b42fbc"",
        ""url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc"",
        ""created_at"": ""2015-03-23T16:53:19+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-416"",
        ""organization_guid"": ""db9df3d2-d9d4-41d9-a858-7df550164e6d"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/db9df3d2-d9d4-41d9-a858-7df550164e6d"",
        ""developers_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/developers"",
        ""managers_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/managers"",
        ""auditors_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/auditors"",
        ""apps_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/apps"",
        ""routes_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/routes"",
        ""domains_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/domains"",
        ""service_instances_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/service_instances"",
        ""app_events_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/app_events"",
        ""events_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/events"",
        ""security_groups_url"": ""/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6261f794-e045-4c66-8f4b-271651b42fbc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-416", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("db9df3d2-d9d4-41d9-a858-7df550164e6d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/db9df3d2-d9d4-41d9-a858-7df550164e6d", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/6261f794-e045-4c66-8f4b-271651b42fbc/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4845e0b1-6a6f-4a71-9950-d03f2953865c"",
        ""url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c"",
        ""created_at"": ""2015-03-23T16:53:19+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-443"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""8b1d08fb-d358-4c54-bb65-5e33523bfb96"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/8b1d08fb-d358-4c54-bb65-5e33523bfb96"",
        ""spaces_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/spaces"",
        ""domains_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/domains"",
        ""private_domains_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/private_domains"",
        ""users_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/users"",
        ""managers_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/managers"",
        ""billing_managers_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/billing_managers"",
        ""auditors_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/auditors"",
        ""app_events_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4845e0b1-6a6f-4a71-9950-d03f2953865c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-443", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("8b1d08fb-d358-4c54-bb65-5e33523bfb96", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/8b1d08fb-d358-4c54-bb65-5e33523bfb96", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/4845e0b1-6a6f-4a71-9950-d03f2953865c/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""432a1acb-9e17-446e-b487-4cbf48b49bc9"",
        ""url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9"",
        ""created_at"": ""2015-03-23T16:53:18+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-395"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""3c226d83-6c82-4e48-b0b1-b5ebf93fc3e9"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/3c226d83-6c82-4e48-b0b1-b5ebf93fc3e9"",
        ""spaces_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/spaces"",
        ""domains_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/domains"",
        ""private_domains_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/private_domains"",
        ""users_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/users"",
        ""managers_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/managers"",
        ""billing_managers_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/billing_managers"",
        ""auditors_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/auditors"",
        ""app_events_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("432a1acb-9e17-446e-b487-4cbf48b49bc9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-395", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("3c226d83-6c82-4e48-b0b1-b5ebf93fc3e9", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/3c226d83-6c82-4e48-b0b1-b5ebf93fc3e9", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/432a1acb-9e17-446e-b487-4cbf48b49bc9/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-41"",
    ""url"": ""/v2/users/uaa-id-41"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": ""2015-03-23T16:53:18+00:00""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""194c3ac0-8111-40df-a90c-52f46e68ea0b"",
    ""default_space_url"": ""/v2/spaces/194c3ac0-8111-40df-a90c-52f46e68ea0b"",
    ""spaces_url"": ""/v2/users/uaa-id-41/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-41/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-41/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-41/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-41/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-41/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-41/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("uaa-id-41", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-41", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("194c3ac0-8111-40df-a90c-52f46e68ea0b", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/194c3ac0-8111-40df-a90c-52f46e68ea0b", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-41/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-41/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-41/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-41/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-41/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-41/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-41/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-82"",
    ""url"": ""/v2/users/uaa-id-82"",
    ""created_at"": ""2015-03-23T16:53:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""dab16e99-8ecf-4ba1-9ad6-c4d671f76759"",
    ""default_space_url"": ""/v2/spaces/dab16e99-8ecf-4ba1-9ad6-c4d671f76759"",
    ""spaces_url"": ""/v2/users/uaa-id-82/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-82/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-82/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-82/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-82/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-82/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-82/audited_spaces""
  }
}";

            RemoveSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-82", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-82", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("dab16e99-8ecf-4ba1-9ad6-c4d671f76759", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/dab16e99-8ecf-4ba1-9ad6-c4d671f76759", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-82/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-82/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-82/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-82/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-82/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-82/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-82/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-86"",
    ""url"": ""/v2/users/uaa-id-86"",
    ""created_at"": ""2015-03-23T16:53:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""61d5bb30-0bfc-4838-ab0d-8ad39fe9bb25"",
    ""default_space_url"": ""/v2/spaces/61d5bb30-0bfc-4838-ab0d-8ad39fe9bb25"",
    ""spaces_url"": ""/v2/users/uaa-id-86/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-86/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-86/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-86/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-86/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-86/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-86/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-86", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-86", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("61d5bb30-0bfc-4838-ab0d-8ad39fe9bb25", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/61d5bb30-0bfc-4838-ab0d-8ad39fe9bb25", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-86/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-86/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-86/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-86/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-86/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-86/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-86/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-39"",
    ""url"": ""/v2/users/uaa-id-39"",
    ""created_at"": ""2015-03-23T16:53:17+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""b710b1c6-f1bb-4cb1-9a8d-bec5dcb526a6"",
    ""default_space_url"": ""/v2/spaces/b710b1c6-f1bb-4cb1-9a8d-bec5dcb526a6"",
    ""spaces_url"": ""/v2/users/uaa-id-39/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-39/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-39/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-39/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-39/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-39/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-39/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("uaa-id-39", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-39", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:17+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("b710b1c6-f1bb-4cb1-9a8d-bec5dcb526a6", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/b710b1c6-f1bb-4cb1-9a8d-bec5dcb526a6", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveBillingManagedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-88"",
    ""url"": ""/v2/users/uaa-id-88"",
    ""created_at"": ""2015-03-23T16:53:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""1592f2ac-510d-4eb1-b0c1-1d20091a7e14"",
    ""default_space_url"": ""/v2/spaces/1592f2ac-510d-4eb1-b0c1-1d20091a7e14"",
    ""spaces_url"": ""/v2/users/uaa-id-88/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-88/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-88/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-88/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-88/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-88/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-88/audited_spaces""
  }
}";

            RemoveBillingManagedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveBillingManagedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-88", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-88", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("1592f2ac-510d-4eb1-b0c1-1d20091a7e14", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/1592f2ac-510d-4eb1-b0c1-1d20091a7e14", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""afca17b7-cdc7-4dea-8bed-e80622bd5034"",
        ""url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034"",
        ""created_at"": ""2015-03-23T16:53:19+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-482"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""ca04ea5b-9ee9-4235-b9ad-c646ddcfb286"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/ca04ea5b-9ee9-4235-b9ad-c646ddcfb286"",
        ""spaces_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/spaces"",
        ""domains_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/domains"",
        ""private_domains_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/private_domains"",
        ""users_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/users"",
        ""managers_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/managers"",
        ""billing_managers_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/billing_managers"",
        ""auditors_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/auditors"",
        ""app_events_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("afca17b7-cdc7-4dea-8bed-e80622bd5034", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-482", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("ca04ea5b-9ee9-4235-b9ad-c646ddcfb286", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/ca04ea5b-9ee9-4235-b9ad-c646ddcfb286", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/afca17b7-cdc7-4dea-8bed-e80622bd5034/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditedSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-55"",
    ""url"": ""/v2/users/uaa-id-55"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f571fcd4-85c4-454f-8248-efd621483d7e"",
    ""default_space_url"": ""/v2/spaces/f571fcd4-85c4-454f-8248-efd621483d7e"",
    ""spaces_url"": ""/v2/users/uaa-id-55/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-55/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-55/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-55/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-55/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-55/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-55/audited_spaces""
  }
}";

            RemoveAuditedSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveAuditedSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-55", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-55", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f571fcd4-85c4-454f-8248-efd621483d7e", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/f571fcd4-85c4-454f-8248-efd621483d7e", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-71"",
    ""url"": ""/v2/users/uaa-id-71"",
    ""created_at"": ""2015-03-23T16:53:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f028b698-b164-45a6-98e9-9998e83c5d26"",
    ""default_space_url"": ""/v2/spaces/f028b698-b164-45a6-98e9-9998e83c5d26"",
    ""spaces_url"": ""/v2/users/uaa-id-71/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-71/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-71/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-71/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-71/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-71/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-71/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-71", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-71", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f028b698-b164-45a6-98e9-9998e83c5d26", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/f028b698-b164-45a6-98e9-9998e83c5d26", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-71/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-71/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-71/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-71/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-71/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-71/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-71/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-92"",
    ""url"": ""/v2/users/uaa-id-92"",
    ""created_at"": ""2015-03-23T16:53:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""65e3cc8d-cd13-4fb2-a0e3-360789bf0b3c"",
    ""default_space_url"": ""/v2/spaces/65e3cc8d-cd13-4fb2-a0e3-360789bf0b3c"",
    ""spaces_url"": ""/v2/users/uaa-id-92/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-92/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-92/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-92/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-92/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-92/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-92/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-92", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-92", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("65e3cc8d-cd13-4fb2-a0e3-360789bf0b3c", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/65e3cc8d-cd13-4fb2-a0e3-360789bf0b3c", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-92/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-92/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-92/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-92/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-92/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-92/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-92/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-47"",
        ""url"": ""/v2/users/uaa-id-47"",
        ""created_at"": ""2015-03-23T16:53:18+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""82e2223e-30d0-4448-9057-733836d935e4"",
        ""default_space_url"": ""/v2/spaces/82e2223e-30d0-4448-9057-733836d935e4"",
        ""spaces_url"": ""/v2/users/uaa-id-47/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-47/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-47/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-47/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-47/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-47/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-47/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""uaa-id-48"",
        ""url"": ""/v2/users/uaa-id-48"",
        ""created_at"": ""2015-03-23T16:53:18+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": true,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-48/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-48/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-48/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-48/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-48/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-48/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-48/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-47", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-47", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("82e2223e-30d0-4448-9057-733836d935e4", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/82e2223e-30d0-4448-9057-733836d935e4", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-47/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-47/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-47/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-47/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-47/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-47/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-47/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("uaa-id-48", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-48", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-48/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""463024e1-3a00-401b-b26a-21220768fca2"",
        ""url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2"",
        ""created_at"": ""2015-03-23T16:53:18+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-372"",
        ""organization_guid"": ""163b2aea-bb6d-4477-bddb-fc888cb30e5c"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/163b2aea-bb6d-4477-bddb-fc888cb30e5c"",
        ""developers_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/developers"",
        ""managers_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/managers"",
        ""auditors_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/auditors"",
        ""apps_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/apps"",
        ""routes_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/routes"",
        ""domains_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/domains"",
        ""service_instances_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/service_instances"",
        ""app_events_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/app_events"",
        ""events_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/events"",
        ""security_groups_url"": ""/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("463024e1-3a00-401b-b26a-21220768fca2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-372", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("163b2aea-bb6d-4477-bddb-fc888cb30e5c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/163b2aea-bb6d-4477-bddb-fc888cb30e5c", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/463024e1-3a00-401b-b26a-21220768fca2/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-49"",
    ""url"": ""/v2/users/uaa-id-49"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""35e80ed9-426e-40b0-af82-f96816e16d20"",
    ""default_space_url"": ""/v2/spaces/35e80ed9-426e-40b0-af82-f96816e16d20"",
    ""spaces_url"": ""/v2/users/uaa-id-49/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-49/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-49/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-49/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-49/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-49/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-49/audited_spaces""
  }
}";

            RemoveAuditedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveAuditedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-49", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-49", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("35e80ed9-426e-40b0-af82-f96816e16d20", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/35e80ed9-426e-40b0-af82-f96816e16d20", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-49/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-49/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-49/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-49/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-49/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-49/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-49/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagedSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-67"",
    ""url"": ""/v2/users/uaa-id-67"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""26fb07a1-4240-4782-a8e6-c68177a2fb2f"",
    ""default_space_url"": ""/v2/spaces/26fb07a1-4240-4782-a8e6-c68177a2fb2f"",
    ""spaces_url"": ""/v2/users/uaa-id-67/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-67/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-67/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-67/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-67/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-67/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-67/audited_spaces""
  }
}";

            RemoveManagedSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveManagedSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-67", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-67", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("26fb07a1-4240-4782-a8e6-c68177a2fb2f", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/26fb07a1-4240-4782-a8e6-c68177a2fb2f", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-67/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-67/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-67/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-67/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-67/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-67/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-67/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""guid-c8760dc7-d397-4334-86ad-d85eb6af79e1"",
    ""url"": ""/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/spaces"",
    ""organizations_url"": ""/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/organizations"",
    ""managed_organizations_url"": ""/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("guid-c8760dc7-d397-4334-86ad-d85eb6af79e1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/guid-c8760dc7-d397-4334-86ad-d85eb6af79e1/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-79"",
    ""url"": ""/v2/users/uaa-id-79"",
    ""created_at"": ""2015-03-23T16:53:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""17acb309-fa49-4152-959b-7ac7ffe4cb3a"",
    ""default_space_url"": ""/v2/spaces/17acb309-fa49-4152-959b-7ac7ffe4cb3a"",
    ""spaces_url"": ""/v2/users/uaa-id-79/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-79/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-79/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-79/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-79/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-79/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-79/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-79", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-79", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("17acb309-fa49-4152-959b-7ac7ffe4cb3a", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/17acb309-fa49-4152-959b-7ac7ffe4cb3a", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-79/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-79/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-79/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-79/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-79/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-79/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-79/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f130410b-1797-4193-84e5-33272801494c"",
        ""url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c"",
        ""created_at"": ""2015-03-23T16:53:19+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-461"",
        ""organization_guid"": ""1d380cb2-0911-4431-94d1-2f41959b0161"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/1d380cb2-0911-4431-94d1-2f41959b0161"",
        ""developers_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/developers"",
        ""managers_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/managers"",
        ""auditors_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/auditors"",
        ""apps_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/apps"",
        ""routes_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/routes"",
        ""domains_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/domains"",
        ""service_instances_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/service_instances"",
        ""app_events_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/app_events"",
        ""events_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/events"",
        ""security_groups_url"": ""/v2/spaces/f130410b-1797-4193-84e5-33272801494c/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f130410b-1797-4193-84e5-33272801494c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-461", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("1d380cb2-0911-4431-94d1-2f41959b0161", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/1d380cb2-0911-4431-94d1-2f41959b0161", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/f130410b-1797-4193-84e5-33272801494c/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-61"",
    ""url"": ""/v2/users/uaa-id-61"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""2a7c0159-58b7-468b-8a52-2ef3b06061ed"",
    ""default_space_url"": ""/v2/spaces/2a7c0159-58b7-468b-8a52-2ef3b06061ed"",
    ""spaces_url"": ""/v2/users/uaa-id-61/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-61/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-61/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-61/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-61/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-61/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-61/audited_spaces""
  }
}";

            RemoveOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-61", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-61", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("2a7c0159-58b7-468b-8a52-2ef3b06061ed", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/2a7c0159-58b7-468b-8a52-2ef3b06061ed", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-61/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-61/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-61/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-61/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-61/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-61/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-61/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-73"",
    ""url"": ""/v2/users/uaa-id-73"",
    ""created_at"": ""2015-03-23T16:53:19+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""83c636b5-3fb3-4871-8f05-0fce832e2766"",
    ""default_space_url"": ""/v2/spaces/83c636b5-3fb3-4871-8f05-0fce832e2766"",
    ""spaces_url"": ""/v2/users/uaa-id-73/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-73/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-73/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-73/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-73/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-73/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-73/audited_spaces""
  }
}";

            RemoveManagedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveManagedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-73", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-73", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:19+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("83c636b5-3fb3-4871-8f05-0fce832e2766", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/83c636b5-3fb3-4871-8f05-0fce832e2766", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-73/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-73/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-73/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-73/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-73/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-73/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-73/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8bc9aff8-89e9-4882-a358-851d2feac0ea"",
        ""url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea"",
        ""created_at"": ""2015-03-23T16:53:18+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-351"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""26a5e771-e797-444a-910c-163037b7186c"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/26a5e771-e797-444a-910c-163037b7186c"",
        ""spaces_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/spaces"",
        ""domains_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/domains"",
        ""private_domains_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/private_domains"",
        ""users_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/users"",
        ""managers_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/managers"",
        ""billing_managers_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/billing_managers"",
        ""auditors_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/auditors"",
        ""app_events_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8bc9aff8-89e9-4882-a358-851d2feac0ea", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-351", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("26a5e771-e797-444a-910c-163037b7186c", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/26a5e771-e797-444a-910c-163037b7186c", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/8bc9aff8-89e9-4882-a358-851d2feac0ea/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-53"",
    ""url"": ""/v2/users/uaa-id-53"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""163740a5-6d65-4970-8dcc-a6a821d2041b"",
    ""default_space_url"": ""/v2/spaces/163740a5-6d65-4970-8dcc-a6a821d2041b"",
    ""spaces_url"": ""/v2/users/uaa-id-53/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-53/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-53/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-53/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-53/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-53/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-53/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-53", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-53", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("163740a5-6d65-4970-8dcc-a6a821d2041b", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/163740a5-6d65-4970-8dcc-a6a821d2041b", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-53/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-53/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-53/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-53/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-53/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-53/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-53/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-65"",
    ""url"": ""/v2/users/uaa-id-65"",
    ""created_at"": ""2015-03-23T16:53:18+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""396a9875-96d0-460c-8ead-88a7c9b97bfa"",
    ""default_space_url"": ""/v2/spaces/396a9875-96d0-460c-8ead-88a7c9b97bfa"",
    ""spaces_url"": ""/v2/users/uaa-id-65/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-65/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-65/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-65/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-65/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-65/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-65/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-65", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-65", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:18+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("396a9875-96d0-460c-8ead-88a7c9b97bfa", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/396a9875-96d0-460c-8ead-88a7c9b97bfa", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }
    }
}
