//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SharedDomainsTest
    {


        [TestMethod]
        public void TestListAllSharedDomainsResponse()
        {
            string json = @"{
  ""total_results"": 6,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3"",
        ""url"": ""/v2/shared_domains/92c59386-d553-4945-acb2-73882544e7b9"",
        ""created_at"": ""2016-05-26T11:34:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3"",
        ""url"": ""/v2/shared_domains/64e2d7eb-e71f-4649-8b0e-96b47c344a16"",
        ""created_at"": ""2016-05-26T11:34:46Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3"",
        ""url"": ""/v2/shared_domains/89835d20-5616-4eb5-bcd7-b1834992ab73"",
        ""created_at"": ""2016-05-26T11:34:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-59.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3"",
        ""url"": ""/v2/shared_domains/36342bd5-f46e-46b3-b5b5-8c13c6994801"",
        ""created_at"": ""2016-05-26T11:34:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-60.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3"",
        ""url"": ""/v2/shared_domains/c8ed2e9a-8fee-4093-83d5-32e704d12031"",
        ""created_at"": ""2016-05-26T11:34:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-61.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3"",
        ""url"": ""/v2/shared_domains/8714a707-b6fe-4778-83a9-0a6e5e03d389"",
        ""created_at"": ""2016-05-26T11:34:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-62.example.com"",
        ""router_group_guid"": ""a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3"",
        ""router_group_type"": ""tcp""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedDomainsResponse> page = Utilities.DeserializePage<ListAllSharedDomainsResponse>(json, null);

            Assert.AreEqual("6", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/92c59386-d553-4945-acb2-73882544e7b9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupType), true);
            Assert.AreEqual("a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/64e2d7eb-e71f-4649-8b0e-96b47c344a16", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:46Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupType), true);
            Assert.AreEqual("a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/89835d20-5616-4eb5-bcd7-b1834992ab73", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:48Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-59.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupType), true);
            Assert.AreEqual("a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/36342bd5-f46e-46b3-b5b5-8c13c6994801", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:48Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-60.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupType), true);
            Assert.AreEqual("a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/c8ed2e9a-8fee-4093-83d5-32e704d12031", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:48Z", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-61.example.com", TestUtil.ToTestableString(page[4].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupType), true);
            Assert.AreEqual("a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3", TestUtil.ToTestableString(page[5].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/8714a707-b6fe-4778-83a9-0a6e5e03d389", TestUtil.ToTestableString(page[5].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:48Z", TestUtil.ToTestableString(page[5].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[5].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-62.example.com", TestUtil.ToTestableString(page[5].Name), true);
            Assert.AreEqual("a9edb9f3-03d7-4dbf-85ea-86c6c171d5c3", TestUtil.ToTestableString(page[5].RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(page[5].RouterGroupType), true);
        }

        [TestMethod]
        public void TestRetrieveSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""259c61fa-f2e6-48f3-982f-b2b1caf5af35"",
    ""url"": ""/v2/shared_domains/92c59386-d553-4945-acb2-73882544e7b9"",
    ""created_at"": ""2016-05-26T11:34:46Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""customer-app-domain1.com"",
    ""router_group_guid"": null,
    ""router_group_type"": null
  }
}";

            RetrieveSharedDomainResponse obj = Utilities.DeserializeJson<RetrieveSharedDomainResponse>(json);

            Assert.AreEqual("259c61fa-f2e6-48f3-982f-b2b1caf5af35", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/92c59386-d553-4945-acb2-73882544e7b9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:46Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupType), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""45ae118a-7a1d-4912-8111-b82fac884cc4"",
    ""url"": ""/v2/shared_domains/ce2cb8e2-6ea7-4750-936a-62816e3159c8"",
    ""created_at"": ""2016-05-26T11:34:48Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""router_group_guid"": ""45ae118a-7a1d-4912-8111-b82fac884cc4"",
    ""router_group_type"": ""tcp""
  }
}";

            CreateSharedDomainResponse obj = Utilities.DeserializeJson<CreateSharedDomainResponse>(json);

            Assert.AreEqual("45ae118a-7a1d-4912-8111-b82fac884cc4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/ce2cb8e2-6ea7-4750-936a-62816e3159c8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:48Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("45ae118a-7a1d-4912-8111-b82fac884cc4", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(obj.RouterGroupType), true);
        }

        [TestMethod]
        public void TestFilterSharedDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3a22c119-a9bc-4511-9f9a-115ec676e991"",
        ""url"": ""/v2/shared_domains/01badfc8-ec25-4952-a529-f8cb502d4e3a"",
        ""created_at"": ""2016-05-26T11:34:48Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""shared-domain.com"",
        ""router_group_guid"": ""3a22c119-a9bc-4511-9f9a-115ec676e991"",
        ""router_group_type"": ""tcp""
      }
    }
  ]
}";

            PagedResponseCollection<FilterSharedDomainsByNameResponse> page = Utilities.DeserializePage<FilterSharedDomainsByNameResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3a22c119-a9bc-4511-9f9a-115ec676e991", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/01badfc8-ec25-4952-a529-f8cb502d4e3a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("shared-domain.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("3a22c119-a9bc-4511-9f9a-115ec676e991", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(page[0].RouterGroupType), true);
        }
    }
}
