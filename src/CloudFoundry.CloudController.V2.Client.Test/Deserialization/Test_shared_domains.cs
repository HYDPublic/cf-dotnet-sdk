//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SharedDomainsTest
    {


        [TestMethod]
        public void TestListAllSharedDomainsResponse()
        {
            string json = @"{
  ""total_results"": 6,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef"",
        ""url"": ""/v2/shared_domains/ebc60470-1d5f-4bde-a8c2-8a6daa408328"",
        ""created_at"": ""2016-09-02T11:52:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef"",
        ""url"": ""/v2/shared_domains/17dfca74-9414-44f7-b5a4-9f0c299dab79"",
        ""created_at"": ""2016-09-02T11:52:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef"",
        ""url"": ""/v2/shared_domains/d5d1d9fa-f36e-40b3-98c2-0306c0eb90c6"",
        ""created_at"": ""2016-09-02T11:52:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-73.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef"",
        ""url"": ""/v2/shared_domains/c106ce12-e66a-4b2f-838e-91834cb3df1b"",
        ""created_at"": ""2016-09-02T11:52:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-74.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef"",
        ""url"": ""/v2/shared_domains/a05cdf23-fd63-4254-b17c-67e79f81a543"",
        ""created_at"": ""2016-09-02T11:52:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-75.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef"",
        ""url"": ""/v2/shared_domains/aeb593d6-8f7b-46ce-a5a9-6669b49aa59c"",
        ""created_at"": ""2016-09-02T11:52:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-76.example.com"",
        ""router_group_guid"": ""2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef"",
        ""router_group_type"": ""tcp""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedDomainsResponse> page = Utilities.DeserializePage<ListAllSharedDomainsResponse>(json, null);

            Assert.AreEqual("6", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/ebc60470-1d5f-4bde-a8c2-8a6daa408328", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:15Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupType), true);
            Assert.AreEqual("2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/17dfca74-9414-44f7-b5a4-9f0c299dab79", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:15Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupType), true);
            Assert.AreEqual("2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/d5d1d9fa-f36e-40b3-98c2-0306c0eb90c6", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:25Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-73.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupType), true);
            Assert.AreEqual("2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/c106ce12-e66a-4b2f-838e-91834cb3df1b", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:25Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-74.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupType), true);
            Assert.AreEqual("2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/a05cdf23-fd63-4254-b17c-67e79f81a543", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:25Z", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-75.example.com", TestUtil.ToTestableString(page[4].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupType), true);
            Assert.AreEqual("2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef", TestUtil.ToTestableString(page[5].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/aeb593d6-8f7b-46ce-a5a9-6669b49aa59c", TestUtil.ToTestableString(page[5].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:25Z", TestUtil.ToTestableString(page[5].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[5].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-76.example.com", TestUtil.ToTestableString(page[5].Name), true);
            Assert.AreEqual("2b6a5eb5-0f1a-4c83-a08e-1a771b8fa6ef", TestUtil.ToTestableString(page[5].RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(page[5].RouterGroupType), true);
        }

        [TestMethod]
        public void TestRetrieveSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""62369967-6a2a-4881-85cf-4150b5189bd0"",
    ""url"": ""/v2/shared_domains/ebc60470-1d5f-4bde-a8c2-8a6daa408328"",
    ""created_at"": ""2016-09-02T11:52:15Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""customer-app-domain1.com"",
    ""router_group_guid"": null,
    ""router_group_type"": null
  }
}";

            RetrieveSharedDomainResponse obj = Utilities.DeserializeJson<RetrieveSharedDomainResponse>(json);

            Assert.AreEqual("62369967-6a2a-4881-85cf-4150b5189bd0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/ebc60470-1d5f-4bde-a8c2-8a6daa408328", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupType), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5ab49251-e559-405a-8093-cf0b09c7a901"",
    ""url"": ""/v2/shared_domains/76e8f903-fe03-472f-94cc-32d885c70a91"",
    ""created_at"": ""2016-09-02T11:52:25Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""router_group_guid"": ""5ab49251-e559-405a-8093-cf0b09c7a901"",
    ""router_group_type"": ""tcp""
  }
}";

            CreateSharedDomainResponse obj = Utilities.DeserializeJson<CreateSharedDomainResponse>(json);

            Assert.AreEqual("5ab49251-e559-405a-8093-cf0b09c7a901", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/76e8f903-fe03-472f-94cc-32d885c70a91", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:25Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("5ab49251-e559-405a-8093-cf0b09c7a901", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(obj.RouterGroupType), true);
        }

        [TestMethod]
        public void TestFilterSharedDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""86e66b08-2a5e-4216-a702-dc71656f797c"",
        ""url"": ""/v2/shared_domains/c415ed02-92c2-4bb6-b8bc-f6f17600692d"",
        ""created_at"": ""2016-09-02T11:52:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""shared-domain.com"",
        ""router_group_guid"": ""86e66b08-2a5e-4216-a702-dc71656f797c"",
        ""router_group_type"": ""tcp""
      }
    }
  ]
}";

            PagedResponseCollection<FilterSharedDomainsByNameResponse> page = Utilities.DeserializePage<FilterSharedDomainsByNameResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("86e66b08-2a5e-4216-a702-dc71656f797c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/c415ed02-92c2-4bb6-b8bc-f6f17600692d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:24Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("shared-domain.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("86e66b08-2a5e-4216-a702-dc71656f797c", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(page[0].RouterGroupType), true);
        }
    }
}
