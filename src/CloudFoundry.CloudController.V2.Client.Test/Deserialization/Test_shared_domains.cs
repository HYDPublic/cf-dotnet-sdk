//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SharedDomainsTest
    {


        [TestMethod]
        public void TestListAllSharedDomainsResponse()
        {
            string json = @"{
  ""total_results"": 6,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8ad18906-592d-4974-94c6-d0948326abfe"",
        ""url"": ""/v2/shared_domains/865d4490-4732-4ffc-902e-b3e4ca1e5c84"",
        ""created_at"": ""2016-03-21T10:59:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8ad18906-592d-4974-94c6-d0948326abfe"",
        ""url"": ""/v2/shared_domains/572e0541-2cf1-43a4-95c4-2dc021d95527"",
        ""created_at"": ""2016-03-21T10:59:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8ad18906-592d-4974-94c6-d0948326abfe"",
        ""url"": ""/v2/shared_domains/2c9efa88-aaef-43b8-9ab8-62e571cc8cb7"",
        ""created_at"": ""2016-03-21T10:59:35Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-57.example.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8ad18906-592d-4974-94c6-d0948326abfe"",
        ""url"": ""/v2/shared_domains/64cf071e-89e2-4a82-b6ba-9dae3e3e4a76"",
        ""created_at"": ""2016-03-21T10:59:35Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-58.example.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8ad18906-592d-4974-94c6-d0948326abfe"",
        ""url"": ""/v2/shared_domains/f3b5c49a-e8a7-436b-8e33-b8f7e48bb92c"",
        ""created_at"": ""2016-03-21T10:59:35Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-59.example.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8ad18906-592d-4974-94c6-d0948326abfe"",
        ""url"": ""/v2/shared_domains/e9a76f72-af48-42a5-9e46-92d6ce08236e"",
        ""created_at"": ""2016-03-21T10:59:35Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-60.example.com"",
        ""router_group_guid"": ""8ad18906-592d-4974-94c6-d0948326abfe"",
        ""router_group_types"": [
          ""tcp""
        ]
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedDomainsResponse> page = Utilities.DeserializePage<ListAllSharedDomainsResponse>(json, null);

            Assert.AreEqual("6", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8ad18906-592d-4974-94c6-d0948326abfe", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/865d4490-4732-4ffc-902e-b3e4ca1e5c84", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:24Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("8ad18906-592d-4974-94c6-d0948326abfe", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/572e0541-2cf1-43a4-95c4-2dc021d95527", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:24Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("8ad18906-592d-4974-94c6-d0948326abfe", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/2c9efa88-aaef-43b8-9ab8-62e571cc8cb7", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-57.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupGuid), true);
            Assert.AreEqual("8ad18906-592d-4974-94c6-d0948326abfe", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/64cf071e-89e2-4a82-b6ba-9dae3e3e4a76", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-58.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupGuid), true);
            Assert.AreEqual("8ad18906-592d-4974-94c6-d0948326abfe", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/f3b5c49a-e8a7-436b-8e33-b8f7e48bb92c", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-59.example.com", TestUtil.ToTestableString(page[4].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupGuid), true);
            Assert.AreEqual("8ad18906-592d-4974-94c6-d0948326abfe", TestUtil.ToTestableString(page[5].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/e9a76f72-af48-42a5-9e46-92d6ce08236e", TestUtil.ToTestableString(page[5].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(page[5].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[5].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-60.example.com", TestUtil.ToTestableString(page[5].Name), true);
            Assert.AreEqual("8ad18906-592d-4974-94c6-d0948326abfe", TestUtil.ToTestableString(page[5].RouterGroupGuid), true);
        }

        [TestMethod]
        public void TestRetrieveSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""88954d53-1fee-48ff-a410-3e857843814f"",
    ""url"": ""/v2/shared_domains/865d4490-4732-4ffc-902e-b3e4ca1e5c84"",
    ""created_at"": ""2016-03-21T10:59:24Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""customer-app-domain1.com"",
    ""router_group_guid"": null
  }
}";

            RetrieveSharedDomainResponse obj = Utilities.DeserializeJson<RetrieveSharedDomainResponse>(json);

            Assert.AreEqual("88954d53-1fee-48ff-a410-3e857843814f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/865d4490-4732-4ffc-902e-b3e4ca1e5c84", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:24Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1aea0e4e-ac85-4777-9832-c1d990c7bfc9"",
    ""url"": ""/v2/shared_domains/2fafd2c4-e994-4803-80f0-c88d5d1707c5"",
    ""created_at"": ""2016-03-21T10:59:35Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""router_group_guid"": ""1aea0e4e-ac85-4777-9832-c1d990c7bfc9"",
    ""router_group_types"": [
      ""tcp""
    ]
  }
}";

            CreateSharedDomainResponse obj = Utilities.DeserializeJson<CreateSharedDomainResponse>(json);

            Assert.AreEqual("1aea0e4e-ac85-4777-9832-c1d990c7bfc9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/2fafd2c4-e994-4803-80f0-c88d5d1707c5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1aea0e4e-ac85-4777-9832-c1d990c7bfc9", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
        }

        [TestMethod]
        public void TestFilterSharedDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6d62281d-4b51-4058-8f5c-ae53facc5ca9"",
        ""url"": ""/v2/shared_domains/97b16861-776e-4c53-998b-880e0445990c"",
        ""created_at"": ""2016-03-21T10:59:35Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""shared-domain.com"",
        ""router_group_guid"": ""6d62281d-4b51-4058-8f5c-ae53facc5ca9"",
        ""router_group_types"": [
          ""tcp""
        ]
      }
    }
  ]
}";

            PagedResponseCollection<FilterSharedDomainsByNameResponse> page = Utilities.DeserializePage<FilterSharedDomainsByNameResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6d62281d-4b51-4058-8f5c-ae53facc5ca9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/97b16861-776e-4c53-998b-880e0445990c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:35Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("shared-domain.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("6d62281d-4b51-4058-8f5c-ae53facc5ca9", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
        }
    }
}
