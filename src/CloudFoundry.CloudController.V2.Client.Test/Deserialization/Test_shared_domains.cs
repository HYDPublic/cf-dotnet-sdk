//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SharedDomainsTest
    {


        [TestMethod]
        public void TestListAllSharedDomainsResponse()
        {
            string json = @"{
  ""total_results"": 5,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""859d4bbf-7168-4605-9bf2-3ca30eaabe89"",
        ""url"": ""/v2/shared_domains/859d4bbf-7168-4605-9bf2-3ca30eaabe89"",
        ""created_at"": ""2015-02-19T03:52:35+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a5ad3443-8491-4ccc-bc05-899f96595902"",
        ""url"": ""/v2/shared_domains/a5ad3443-8491-4ccc-bc05-899f96595902"",
        ""created_at"": ""2015-02-19T03:52:35+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a500dceb-2df5-49b2-9a52-4c20a6351252"",
        ""url"": ""/v2/shared_domains/a500dceb-2df5-49b2-9a52-4c20a6351252"",
        ""created_at"": ""2015-02-19T03:52:59+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-37.example.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""831a4a6a-deb7-4cfa-aa39-ca8a7153d6cd"",
        ""url"": ""/v2/shared_domains/831a4a6a-deb7-4cfa-aa39-ca8a7153d6cd"",
        ""created_at"": ""2015-02-19T03:52:59+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-38.example.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""719d8042-95cd-4ed5-8dfe-7ac7b107f0f0"",
        ""url"": ""/v2/shared_domains/719d8042-95cd-4ed5-8dfe-7ac7b107f0f0"",
        ""created_at"": ""2015-02-19T03:52:59+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-39.example.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedDomainsResponse> page = Utilities.DeserializePage<ListAllSharedDomainsResponse>(json);

            Assert.AreEqual("5", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("859d4bbf-7168-4605-9bf2-3ca30eaabe89", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/859d4bbf-7168-4605-9bf2-3ca30eaabe89", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:35+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("a5ad3443-8491-4ccc-bc05-899f96595902", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/a5ad3443-8491-4ccc-bc05-899f96595902", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:35+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("a500dceb-2df5-49b2-9a52-4c20a6351252", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/a500dceb-2df5-49b2-9a52-4c20a6351252", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-37.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("831a4a6a-deb7-4cfa-aa39-ca8a7153d6cd", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/831a4a6a-deb7-4cfa-aa39-ca8a7153d6cd", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-38.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("719d8042-95cd-4ed5-8dfe-7ac7b107f0f0", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/719d8042-95cd-4ed5-8dfe-7ac7b107f0f0", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-39.example.com", TestUtil.ToTestableString(page[4].Name), true);
        }

        [TestMethod]
        public void TestFilterSharedDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""096b57d2-0338-4591-8b42-f2715dd47daa"",
        ""url"": ""/v2/shared_domains/096b57d2-0338-4591-8b42-f2715dd47daa"",
        ""created_at"": ""2015-02-19T03:53:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""shared-domain.com""
      }
    }
  ]
}";

            PagedResponseCollection<FilterSharedDomainsByNameResponse> page = Utilities.DeserializePage<FilterSharedDomainsByNameResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("096b57d2-0338-4591-8b42-f2715dd47daa", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/096b57d2-0338-4591-8b42-f2715dd47daa", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:00+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("shared-domain.com", TestUtil.ToTestableString(page[0].Name), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1f7c7eb0-d881-4abb-8e88-7ef3fc8cbd84"",
    ""url"": ""/v2/shared_domains/1f7c7eb0-d881-4abb-8e88-7ef3fc8cbd84"",
    ""created_at"": ""2015-02-19T03:52:59+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com""
  }
}";

            CreateSharedDomainResponse obj = Utilities.DeserializeJson<CreateSharedDomainResponse>(json);

            Assert.AreEqual("1f7c7eb0-d881-4abb-8e88-7ef3fc8cbd84", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/1f7c7eb0-d881-4abb-8e88-7ef3fc8cbd84", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestRetrieveSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""859d4bbf-7168-4605-9bf2-3ca30eaabe89"",
    ""url"": ""/v2/shared_domains/859d4bbf-7168-4605-9bf2-3ca30eaabe89"",
    ""created_at"": ""2015-02-19T03:52:35+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""customer-app-domain1.com""
  }
}";

            RetrieveSharedDomainResponse obj = Utilities.DeserializeJson<RetrieveSharedDomainResponse>(json);

            Assert.AreEqual("859d4bbf-7168-4605-9bf2-3ca30eaabe89", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/859d4bbf-7168-4605-9bf2-3ca30eaabe89", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:35+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj.Name), true);
        }
    }
}
