//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SharedDomainsTest
    {


        [TestMethod]
        public void TestFilterSharedDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fc1659e7-cf6f-455c-a254-a3f9b8a00580"",
        ""url"": ""/v2/shared_domains/fc1659e7-cf6f-455c-a254-a3f9b8a00580"",
        ""created_at"": ""2015-04-10T19:42:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""shared-domain.com""
      }
    }
  ]
}";

            PagedResponseCollection<FilterSharedDomainsByNameResponse> page = Utilities.DeserializePage<FilterSharedDomainsByNameResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fc1659e7-cf6f-455c-a254-a3f9b8a00580", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/fc1659e7-cf6f-455c-a254-a3f9b8a00580", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("shared-domain.com", TestUtil.ToTestableString(page[0].Name), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b9ce0722-ec1e-4ddd-b8c0-ca617d84311b"",
    ""url"": ""/v2/shared_domains/b9ce0722-ec1e-4ddd-b8c0-ca617d84311b"",
    ""created_at"": ""2015-04-10T19:42:07+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com""
  }
}";

            CreateSharedDomainResponse obj = Utilities.DeserializeJson<CreateSharedDomainResponse>(json);

            Assert.AreEqual("b9ce0722-ec1e-4ddd-b8c0-ca617d84311b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/b9ce0722-ec1e-4ddd-b8c0-ca617d84311b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestListAllSharedDomainsResponse()
        {
            string json = @"{
  ""total_results"": 5,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fff92d6c-ccb2-4b69-9416-4e474464feab"",
        ""url"": ""/v2/shared_domains/fff92d6c-ccb2-4b69-9416-4e474464feab"",
        ""created_at"": ""2015-04-10T19:41:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d51e4ec4-ea5f-4899-94a9-589732072942"",
        ""url"": ""/v2/shared_domains/d51e4ec4-ea5f-4899-94a9-589732072942"",
        ""created_at"": ""2015-04-10T19:41:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d2a9fea1-93e8-4ce2-9929-af509123204f"",
        ""url"": ""/v2/shared_domains/d2a9fea1-93e8-4ce2-9929-af509123204f"",
        ""created_at"": ""2015-04-10T19:42:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-34.example.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""7dd1ed6c-4975-4158-98ff-b43dff24fcd4"",
        ""url"": ""/v2/shared_domains/7dd1ed6c-4975-4158-98ff-b43dff24fcd4"",
        ""created_at"": ""2015-04-10T19:42:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-35.example.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a0994a46-3405-4e75-a69b-4acd1b5dbd62"",
        ""url"": ""/v2/shared_domains/a0994a46-3405-4e75-a69b-4acd1b5dbd62"",
        ""created_at"": ""2015-04-10T19:42:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-36.example.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedDomainsResponse> page = Utilities.DeserializePage<ListAllSharedDomainsResponse>(json);

            Assert.AreEqual("5", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fff92d6c-ccb2-4b69-9416-4e474464feab", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/fff92d6c-ccb2-4b69-9416-4e474464feab", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:57+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("d51e4ec4-ea5f-4899-94a9-589732072942", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/d51e4ec4-ea5f-4899-94a9-589732072942", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:57+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("d2a9fea1-93e8-4ce2-9929-af509123204f", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/d2a9fea1-93e8-4ce2-9929-af509123204f", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-34.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("7dd1ed6c-4975-4158-98ff-b43dff24fcd4", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/7dd1ed6c-4975-4158-98ff-b43dff24fcd4", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-35.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("a0994a46-3405-4e75-a69b-4acd1b5dbd62", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/a0994a46-3405-4e75-a69b-4acd1b5dbd62", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:06+00:00", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-36.example.com", TestUtil.ToTestableString(page[4].Name), true);
        }

        [TestMethod]
        public void TestRetrieveSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fff92d6c-ccb2-4b69-9416-4e474464feab"",
    ""url"": ""/v2/shared_domains/fff92d6c-ccb2-4b69-9416-4e474464feab"",
    ""created_at"": ""2015-04-10T19:41:57+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""customer-app-domain1.com""
  }
}";

            RetrieveSharedDomainResponse obj = Utilities.DeserializeJson<RetrieveSharedDomainResponse>(json);

            Assert.AreEqual("fff92d6c-ccb2-4b69-9416-4e474464feab", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/fff92d6c-ccb2-4b69-9416-4e474464feab", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:57+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj.Name), true);
        }
    }
}
