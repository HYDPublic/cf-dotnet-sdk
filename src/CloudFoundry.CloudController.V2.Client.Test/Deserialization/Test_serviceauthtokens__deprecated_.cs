//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceauthtokensDeprecatedTest
    {


        [TestMethod]
        public void TestListAllServiceAuthTokensDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9767f57d-9a2c-40ce-9179-653907d486a6"",
        ""url"": ""/v2/service_auth_tokens/9767f57d-9a2c-40ce-9179-653907d486a6"",
        ""created_at"": ""2015-04-10T20:21:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-1"",
        ""provider"": ""provider-1""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""21e044e1-5150-4cd9-9554-e301a11cf8a8"",
        ""url"": ""/v2/service_auth_tokens/21e044e1-5150-4cd9-9554-e301a11cf8a8"",
        ""created_at"": ""2015-04-10T20:21:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-2"",
        ""provider"": ""provider-2""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c84e0203-1a1a-411d-bd6e-cb3b1c2905d8"",
        ""url"": ""/v2/service_auth_tokens/c84e0203-1a1a-411d-bd6e-cb3b1c2905d8"",
        ""created_at"": ""2015-04-10T20:21:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-3"",
        ""provider"": ""provider-3""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceAuthTokensDeprecatedResponse> page = Utilities.DeserializePage<ListAllServiceAuthTokensDeprecatedResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9767f57d-9a2c-40ce-9179-653907d486a6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/9767f57d-9a2c-40ce-9179-653907d486a6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:21:06+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-1", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-1", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("21e044e1-5150-4cd9-9554-e301a11cf8a8", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/21e044e1-5150-4cd9-9554-e301a11cf8a8", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:21:06+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-2", TestUtil.ToTestableString(page[1].Label), true);
            Assert.AreEqual("provider-2", TestUtil.ToTestableString(page[1].Provider), true);
            Assert.AreEqual("c84e0203-1a1a-411d-bd6e-cb3b1c2905d8", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/c84e0203-1a1a-411d-bd6e-cb3b1c2905d8", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:21:06+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-3", TestUtil.ToTestableString(page[2].Label), true);
            Assert.AreEqual("provider-3", TestUtil.ToTestableString(page[2].Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByLabelDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ed2b7b8a-f5fc-4748-a1f7-5a89e1a57d07"",
        ""url"": ""/v2/service_auth_tokens/ed2b7b8a-f5fc-4748-a1f7-5a89e1a57d07"",
        ""created_at"": ""2015-04-10T20:21:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""Nic-Token"",
        ""provider"": ""provider-13""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByLabelDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByLabelDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ed2b7b8a-f5fc-4748-a1f7-5a89e1a57d07", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/ed2b7b8a-f5fc-4748-a1f7-5a89e1a57d07", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:21:06+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("Nic-Token", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-13", TestUtil.ToTestableString(page[0].Provider), true);
        }

        [TestMethod]
        public void TestRetrieveServiceAuthTokenDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e156f522-1656-4454-8a3b-3e2ed62d9676"",
    ""url"": ""/v2/service_auth_tokens/e156f522-1656-4454-8a3b-3e2ed62d9676"",
    ""created_at"": ""2015-04-10T20:21:06+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""label"": ""label-4"",
    ""provider"": ""provider-4""
  }
}";

            RetrieveServiceAuthTokenDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveServiceAuthTokenDeprecatedResponse>(json);

            Assert.AreEqual("e156f522-1656-4454-8a3b-3e2ed62d9676", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/e156f522-1656-4454-8a3b-3e2ed62d9676", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:21:06+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-4", TestUtil.ToTestableString(obj.Label), true);
            Assert.AreEqual("provider-4", TestUtil.ToTestableString(obj.Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByProviderDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""946cee6b-9577-4fc0-b956-86b530b5d79c"",
        ""url"": ""/v2/service_auth_tokens/946cee6b-9577-4fc0-b956-86b530b5d79c"",
        ""created_at"": ""2015-04-10T20:21:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-10"",
        ""provider"": ""Face-Offer""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByProviderDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByProviderDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("946cee6b-9577-4fc0-b956-86b530b5d79c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/946cee6b-9577-4fc0-b956-86b530b5d79c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:21:06+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-10", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("Face-Offer", TestUtil.ToTestableString(page[0].Provider), true);
        }
    }
}
