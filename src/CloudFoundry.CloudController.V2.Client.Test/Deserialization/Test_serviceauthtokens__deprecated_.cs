//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by cf-sdk-builder
// 

using System;
using System.CodeDom.Compiler;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CloudFoundry.CloudController.V2.Client.Data;
using CloudFoundry.CloudController.V2;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceauthtokensDeprecatedTest
    {

    
        [TestMethod]
        public void TestListAllServiceAuthTokensDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""864817ac-59fd-44df-9d68-d508f9bfdfe4"",
        ""url"": ""/v2/service_auth_tokens/864817ac-59fd-44df-9d68-d508f9bfdfe4"",
        ""created_at"": ""2015-02-19T03:52:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-53"",
        ""provider"": ""provider-44""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d9a419bb-ec4d-43dd-929c-e0cf4a8ccc98"",
        ""url"": ""/v2/service_auth_tokens/d9a419bb-ec4d-43dd-929c-e0cf4a8ccc98"",
        ""created_at"": ""2015-02-19T03:52:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-54"",
        ""provider"": ""provider-45""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""5cbd9f78-1a7d-4aad-a4ce-0466e7f301f0"",
        ""url"": ""/v2/service_auth_tokens/5cbd9f78-1a7d-4aad-a4ce-0466e7f301f0"",
        ""created_at"": ""2015-02-19T03:52:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-55"",
        ""provider"": ""provider-46""
      }
    }
  ]
}";
    
            PagedResponse<ListAllServiceAuthTokensDeprecatedResponse> page = Util.DeserializePage<ListAllServiceAuthTokensDeprecatedResponse>(json);
        
            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("864817ac-59fd-44df-9d68-d508f9bfdfe4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_auth_tokens/864817ac-59fd-44df-9d68-d508f9bfdfe4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:58+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("label-53", TestUtil.ToTestableString(page[0].Label), true);
                  Assert.AreEqual("provider-44", TestUtil.ToTestableString(page[0].Provider), true);
               
               
            
            
                Assert.AreEqual("d9a419bb-ec4d-43dd-929c-e0cf4a8ccc98", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_auth_tokens/d9a419bb-ec4d-43dd-929c-e0cf4a8ccc98", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:58+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("label-54", TestUtil.ToTestableString(page[1].Label), true);
                  Assert.AreEqual("provider-45", TestUtil.ToTestableString(page[1].Provider), true);
               
               
            
            
                Assert.AreEqual("5cbd9f78-1a7d-4aad-a4ce-0466e7f301f0", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_auth_tokens/5cbd9f78-1a7d-4aad-a4ce-0466e7f301f0", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:58+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("label-55", TestUtil.ToTestableString(page[2].Label), true);
                  Assert.AreEqual("provider-46", TestUtil.ToTestableString(page[2].Provider), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestFilterResultSetByLabelDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce255070-b17b-449f-8528-cb5c342c8a32"",
        ""url"": ""/v2/service_auth_tokens/ce255070-b17b-449f-8528-cb5c342c8a32"",
        ""created_at"": ""2015-02-19T03:52:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""Nic-Token"",
        ""provider"": ""provider-53""
      }
    }
  ]
}";
    
            PagedResponse<FilterResultSetByLabelDeprecatedResponse> page = Util.DeserializePage<FilterResultSetByLabelDeprecatedResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("ce255070-b17b-449f-8528-cb5c342c8a32", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_auth_tokens/ce255070-b17b-449f-8528-cb5c342c8a32", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:58+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("Nic-Token", TestUtil.ToTestableString(page[0].Label), true);
                  Assert.AreEqual("provider-53", TestUtil.ToTestableString(page[0].Provider), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestRetrieveServiceAuthTokenDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9f0a41e6-cd37-4504-baed-ff8f56935014"",
    ""url"": ""/v2/service_auth_tokens/9f0a41e6-cd37-4504-baed-ff8f56935014"",
    ""created_at"": ""2015-02-19T03:52:58+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""label"": ""label-66"",
    ""provider"": ""provider-57""
  }
}";
    
            RetrieveServiceAuthTokenDeprecatedResponse obj = Util.DeserializeJson<RetrieveServiceAuthTokenDeprecatedResponse>(json);
        
            Assert.AreEqual("9f0a41e6-cd37-4504-baed-ff8f56935014", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/9f0a41e6-cd37-4504-baed-ff8f56935014", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-66", TestUtil.ToTestableString(obj.Label), true);
            Assert.AreEqual("provider-57", TestUtil.ToTestableString(obj.Provider), true);
            
            
        }

    
        [TestMethod]
        public void TestFilterResultSetByProviderDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ea5c176b-85b3-4a33-99bd-1a9da8cd2d7d"",
        ""url"": ""/v2/service_auth_tokens/ea5c176b-85b3-4a33-99bd-1a9da8cd2d7d"",
        ""created_at"": ""2015-02-19T03:52:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-65"",
        ""provider"": ""Face-Offer""
      }
    }
  ]
}";
    
            PagedResponse<FilterResultSetByProviderDeprecatedResponse> page = Util.DeserializePage<FilterResultSetByProviderDeprecatedResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("ea5c176b-85b3-4a33-99bd-1a9da8cd2d7d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_auth_tokens/ea5c176b-85b3-4a33-99bd-1a9da8cd2d7d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:52:58+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("label-65", TestUtil.ToTestableString(page[0].Label), true);
                  Assert.AreEqual("Face-Offer", TestUtil.ToTestableString(page[0].Provider), true);
               
               
            
    
        }

    }
}
