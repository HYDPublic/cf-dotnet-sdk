//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceauthtokensDeprecatedTest
    {


        [TestMethod]
        public void TestListAllServiceAuthTokensDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""54ef5908-7871-461f-a260-355a170c0cf5"",
        ""url"": ""/v2/service_auth_tokens/54ef5908-7871-461f-a260-355a170c0cf5"",
        ""created_at"": ""2015-04-10T20:04:41+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-64"",
        ""provider"": ""provider-55""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d65907ec-6942-4061-8e03-d430035aa0d8"",
        ""url"": ""/v2/service_auth_tokens/d65907ec-6942-4061-8e03-d430035aa0d8"",
        ""created_at"": ""2015-04-10T20:04:41+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-65"",
        ""provider"": ""provider-56""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""7d517628-cb5c-4f3c-876a-f58f9522408f"",
        ""url"": ""/v2/service_auth_tokens/7d517628-cb5c-4f3c-876a-f58f9522408f"",
        ""created_at"": ""2015-04-10T20:04:41+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-66"",
        ""provider"": ""provider-57""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceAuthTokensDeprecatedResponse> page = Utilities.DeserializePage<ListAllServiceAuthTokensDeprecatedResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("54ef5908-7871-461f-a260-355a170c0cf5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/54ef5908-7871-461f-a260-355a170c0cf5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:41+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-64", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-55", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("d65907ec-6942-4061-8e03-d430035aa0d8", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/d65907ec-6942-4061-8e03-d430035aa0d8", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:41+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-65", TestUtil.ToTestableString(page[1].Label), true);
            Assert.AreEqual("provider-56", TestUtil.ToTestableString(page[1].Provider), true);
            Assert.AreEqual("7d517628-cb5c-4f3c-876a-f58f9522408f", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/7d517628-cb5c-4f3c-876a-f58f9522408f", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:41+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-66", TestUtil.ToTestableString(page[2].Label), true);
            Assert.AreEqual("provider-57", TestUtil.ToTestableString(page[2].Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByLabelDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3a862754-30d6-4a5d-ac64-65ba9705f3a4"",
        ""url"": ""/v2/service_auth_tokens/3a862754-30d6-4a5d-ac64-65ba9705f3a4"",
        ""created_at"": ""2015-04-10T20:04:41+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""Nic-Token"",
        ""provider"": ""provider-67""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByLabelDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByLabelDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3a862754-30d6-4a5d-ac64-65ba9705f3a4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/3a862754-30d6-4a5d-ac64-65ba9705f3a4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:41+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("Nic-Token", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-67", TestUtil.ToTestableString(page[0].Provider), true);
        }

        [TestMethod]
        public void TestRetrieveServiceAuthTokenDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b3840de4-918c-41fd-8ff4-9afe76eedf30"",
    ""url"": ""/v2/service_auth_tokens/b3840de4-918c-41fd-8ff4-9afe76eedf30"",
    ""created_at"": ""2015-04-10T20:04:41+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""label"": ""label-67"",
    ""provider"": ""provider-58""
  }
}";

            RetrieveServiceAuthTokenDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveServiceAuthTokenDeprecatedResponse>(json);

            Assert.AreEqual("b3840de4-918c-41fd-8ff4-9afe76eedf30", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/b3840de4-918c-41fd-8ff4-9afe76eedf30", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:41+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-67", TestUtil.ToTestableString(obj.Label), true);
            Assert.AreEqual("provider-58", TestUtil.ToTestableString(obj.Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByProviderDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""80439cf8-4e6a-4b7d-b6d0-9f3c5111d3b0"",
        ""url"": ""/v2/service_auth_tokens/80439cf8-4e6a-4b7d-b6d0-9f3c5111d3b0"",
        ""created_at"": ""2015-04-10T20:04:41+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-73"",
        ""provider"": ""Face-Offer""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByProviderDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByProviderDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("80439cf8-4e6a-4b7d-b6d0-9f3c5111d3b0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/80439cf8-4e6a-4b7d-b6d0-9f3c5111d3b0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:41+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-73", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("Face-Offer", TestUtil.ToTestableString(page[0].Provider), true);
        }
    }
}
