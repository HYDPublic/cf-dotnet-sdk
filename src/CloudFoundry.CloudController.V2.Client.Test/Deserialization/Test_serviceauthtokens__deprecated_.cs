//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceauthtokensDeprecatedTest
    {


        [TestMethod]
        public void TestListAllServiceAuthTokensDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f3504247-e027-4818-9df8-6580fdf377d8"",
        ""url"": ""/v2/service_auth_tokens/f3504247-e027-4818-9df8-6580fdf377d8"",
        ""created_at"": ""2015-03-19T13:19:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-79"",
        ""provider"": ""provider-70""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a8a4f154-0268-4c1d-8d66-414fa45b8bf3"",
        ""url"": ""/v2/service_auth_tokens/a8a4f154-0268-4c1d-8d66-414fa45b8bf3"",
        ""created_at"": ""2015-03-19T13:19:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-80"",
        ""provider"": ""provider-71""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""824b2e94-d92f-4817-9b5b-8737da359451"",
        ""url"": ""/v2/service_auth_tokens/824b2e94-d92f-4817-9b5b-8737da359451"",
        ""created_at"": ""2015-03-19T13:19:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-81"",
        ""provider"": ""provider-72""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceAuthTokensDeprecatedResponse> page = Utilities.DeserializePage<ListAllServiceAuthTokensDeprecatedResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f3504247-e027-4818-9df8-6580fdf377d8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/f3504247-e027-4818-9df8-6580fdf377d8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:58+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-79", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-70", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("a8a4f154-0268-4c1d-8d66-414fa45b8bf3", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/a8a4f154-0268-4c1d-8d66-414fa45b8bf3", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:58+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-80", TestUtil.ToTestableString(page[1].Label), true);
            Assert.AreEqual("provider-71", TestUtil.ToTestableString(page[1].Provider), true);
            Assert.AreEqual("824b2e94-d92f-4817-9b5b-8737da359451", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/824b2e94-d92f-4817-9b5b-8737da359451", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:58+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-81", TestUtil.ToTestableString(page[2].Label), true);
            Assert.AreEqual("provider-72", TestUtil.ToTestableString(page[2].Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByLabelDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c768a263-4ce9-4082-8ba7-be94a6c13593"",
        ""url"": ""/v2/service_auth_tokens/c768a263-4ce9-4082-8ba7-be94a6c13593"",
        ""created_at"": ""2015-03-19T13:19:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""Nic-Token"",
        ""provider"": ""provider-66""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByLabelDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByLabelDeprecatedResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c768a263-4ce9-4082-8ba7-be94a6c13593", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/c768a263-4ce9-4082-8ba7-be94a6c13593", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:58+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("Nic-Token", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-66", TestUtil.ToTestableString(page[0].Provider), true);
        }

        [TestMethod]
        public void TestRetrieveServiceAuthTokenDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6b5a8745-d2fb-437a-9706-c748cef2ed91"",
    ""url"": ""/v2/service_auth_tokens/6b5a8745-d2fb-437a-9706-c748cef2ed91"",
    ""created_at"": ""2015-03-19T13:19:58+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""label"": ""label-66"",
    ""provider"": ""provider-57""
  }
}";

            RetrieveServiceAuthTokenDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveServiceAuthTokenDeprecatedResponse>(json);

            Assert.AreEqual("6b5a8745-d2fb-437a-9706-c748cef2ed91", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/6b5a8745-d2fb-437a-9706-c748cef2ed91", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:58+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-66", TestUtil.ToTestableString(obj.Label), true);
            Assert.AreEqual("provider-57", TestUtil.ToTestableString(obj.Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByProviderDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6c899861-6e10-478e-a11d-832c11abf156"",
        ""url"": ""/v2/service_auth_tokens/6c899861-6e10-478e-a11d-832c11abf156"",
        ""created_at"": ""2015-03-19T13:19:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-72"",
        ""provider"": ""Face-Offer""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByProviderDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByProviderDeprecatedResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6c899861-6e10-478e-a11d-832c11abf156", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/6c899861-6e10-478e-a11d-832c11abf156", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:58+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-72", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("Face-Offer", TestUtil.ToTestableString(page[0].Provider), true);
        }
    }
}
