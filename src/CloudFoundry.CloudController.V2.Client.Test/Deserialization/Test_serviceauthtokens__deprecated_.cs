//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceauthtokensDeprecatedTest
    {


        [TestMethod]
        public void TestListAllServiceAuthTokensDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a2481a14-d007-4810-a08e-e9b59e01cecc"",
        ""url"": ""/v2/service_auth_tokens/a2481a14-d007-4810-a08e-e9b59e01cecc"",
        ""created_at"": ""2015-03-23T16:53:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-29"",
        ""provider"": ""provider-29""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""62cc17af-6346-4704-9f68-b834fea84072"",
        ""url"": ""/v2/service_auth_tokens/62cc17af-6346-4704-9f68-b834fea84072"",
        ""created_at"": ""2015-03-23T16:53:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-30"",
        ""provider"": ""provider-30""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c391951d-a137-4722-9fa9-1d5b19214bc7"",
        ""url"": ""/v2/service_auth_tokens/c391951d-a137-4722-9fa9-1d5b19214bc7"",
        ""created_at"": ""2015-03-23T16:53:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-31"",
        ""provider"": ""provider-31""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceAuthTokensDeprecatedResponse> page = Utilities.DeserializePage<ListAllServiceAuthTokensDeprecatedResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a2481a14-d007-4810-a08e-e9b59e01cecc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/a2481a14-d007-4810-a08e-e9b59e01cecc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:24+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-29", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-29", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("62cc17af-6346-4704-9f68-b834fea84072", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/62cc17af-6346-4704-9f68-b834fea84072", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:24+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-30", TestUtil.ToTestableString(page[1].Label), true);
            Assert.AreEqual("provider-30", TestUtil.ToTestableString(page[1].Provider), true);
            Assert.AreEqual("c391951d-a137-4722-9fa9-1d5b19214bc7", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/c391951d-a137-4722-9fa9-1d5b19214bc7", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:24+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-31", TestUtil.ToTestableString(page[2].Label), true);
            Assert.AreEqual("provider-31", TestUtil.ToTestableString(page[2].Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByLabelDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7b77ae68-bb1e-4c1c-9538-89471bb78bc5"",
        ""url"": ""/v2/service_auth_tokens/7b77ae68-bb1e-4c1c-9538-89471bb78bc5"",
        ""created_at"": ""2015-03-23T16:53:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""Nic-Token"",
        ""provider"": ""provider-22""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByLabelDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByLabelDeprecatedResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7b77ae68-bb1e-4c1c-9538-89471bb78bc5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/7b77ae68-bb1e-4c1c-9538-89471bb78bc5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:24+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("Nic-Token", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-22", TestUtil.ToTestableString(page[0].Provider), true);
        }

        [TestMethod]
        public void TestRetrieveServiceAuthTokenDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1c3751ee-aab2-4012-b9f4-b775d2582805"",
    ""url"": ""/v2/service_auth_tokens/1c3751ee-aab2-4012-b9f4-b775d2582805"",
    ""created_at"": ""2015-03-23T16:53:24+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""label"": ""label-32"",
    ""provider"": ""provider-32""
  }
}";

            RetrieveServiceAuthTokenDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveServiceAuthTokenDeprecatedResponse>(json);

            Assert.AreEqual("1c3751ee-aab2-4012-b9f4-b775d2582805", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/1c3751ee-aab2-4012-b9f4-b775d2582805", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:24+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-32", TestUtil.ToTestableString(obj.Label), true);
            Assert.AreEqual("provider-32", TestUtil.ToTestableString(obj.Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByProviderDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""95a3e093-9726-4441-b3be-8963b58649e3"",
        ""url"": ""/v2/service_auth_tokens/95a3e093-9726-4441-b3be-8963b58649e3"",
        ""created_at"": ""2015-03-23T16:53:24+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-25"",
        ""provider"": ""Face-Offer""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByProviderDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByProviderDeprecatedResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("95a3e093-9726-4441-b3be-8963b58649e3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/95a3e093-9726-4441-b3be-8963b58649e3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:24+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-25", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("Face-Offer", TestUtil.ToTestableString(page[0].Provider), true);
        }
    }
}
