//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpacesTest
    {


        [TestMethod]
        public void TestGetSpaceSummaryResponse()
        {
            string json = @"{
  ""guid"": ""15942d9e-ce57-414f-80e9-87dd37a8f43b"",
  ""name"": ""name-1062"",
  ""apps"": [
    {
      ""guid"": ""ca71b873-651b-4d86-a242-1d0c313ac69f"",
      ""urls"": [
        ""host-10.domain-26.example.com""
      ],
      ""routes"": [
        {
          ""guid"": ""3843d9ee-47b3-43f7-be7c-c6158a7b287d"",
          ""host"": ""host-10"",
          ""domain"": {
            ""guid"": ""c0f708ae-be8a-4732-9861-e7cda5ab24c5"",
            ""name"": ""domain-26.example.com""
          }
        }
      ],
      ""service_count"": 1,
      ""service_names"": [
        ""name-1067""
      ],
      ""running_instances"": 0,
      ""name"": ""name-1065"",
      ""production"": false,
      ""space_guid"": ""15942d9e-ce57-414f-80e9-87dd37a8f43b"",
      ""stack_guid"": ""00fbc1e2-d2bb-4b5d-9523-ae68b34bc71b"",
      ""buildpack"": null,
      ""detected_buildpack"": null,
      ""environment_json"": null,
      ""memory"": 1024,
      ""instances"": 1,
      ""disk_quota"": 1024,
      ""state"": ""STOPPED"",
      ""version"": ""540bd741-4a8d-4797-a3e9-66add8a7cbb8"",
      ""command"": null,
      ""console"": false,
      ""debug"": null,
      ""staging_task_id"": null,
      ""package_state"": ""PENDING"",
      ""health_check_type"": ""port"",
      ""health_check_timeout"": null,
      ""staging_failed_reason"": null,
      ""docker_image"": null,
      ""package_updated_at"": ""2015-04-10T19:41:56+00:00"",
      ""detected_start_command"": """"
    }
  ],
  ""services"": [
    {
      ""guid"": ""1bb05958-38d4-4f4e-b87d-0400ad951d70"",
      ""name"": ""name-1067"",
      ""bound_app_count"": 1,
      ""dashboard_url"": null,
      ""service_plan"": {
        ""guid"": ""7f876427-9985-41fd-9c9f-e9ac4dcae2a6"",
        ""name"": ""name-1068"",
        ""service"": {
          ""guid"": ""a9e0bb73-eb33-4a4b-9323-5f759c9c1f2e"",
          ""label"": ""label-23"",
          ""provider"": ""provider-23"",
          ""version"": ""version-23""
        }
      }
    }
  ]
}";

            GetSpaceSummaryResponse obj = Utilities.DeserializeJson<GetSpaceSummaryResponse>(json);

            Assert.AreEqual("15942d9e-ce57-414f-80e9-87dd37a8f43b", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1062", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a54170ca-966c-40a5-9ded-96f6adb437f5"",
    ""url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5"",
    ""created_at"": ""2015-04-10T19:42:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1917"",
    ""organization_guid"": ""18d22ae3-6687-4ccf-bf15-9d54774972d6"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/18d22ae3-6687-4ccf-bf15-9d54774972d6"",
    ""developers_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/developers"",
    ""managers_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/managers"",
    ""auditors_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/auditors"",
    ""apps_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/apps"",
    ""routes_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/routes"",
    ""domains_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/domains"",
    ""service_instances_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/service_instances"",
    ""app_events_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/app_events"",
    ""events_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/events"",
    ""security_groups_url"": ""/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/security_groups""
  }
}";

            AssociateAuditorWithSpaceResponse obj = Utilities.DeserializeJson<AssociateAuditorWithSpaceResponse>(json);

            Assert.AreEqual("a54170ca-966c-40a5-9ded-96f6adb437f5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1917", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("18d22ae3-6687-4ccf-bf15-9d54774972d6", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/18d22ae3-6687-4ccf-bf15-9d54774972d6", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/a54170ca-966c-40a5-9ded-96f6adb437f5/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllDevelopersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-319"",
        ""url"": ""/v2/users/uaa-id-319"",
        ""created_at"": ""2015-04-10T19:42:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-319/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-319/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-319/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-319/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-319/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-319/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-319/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDevelopersForSpaceResponse> page = Utilities.DeserializePage<ListAllDevelopersForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-319", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-319", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-319/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-319/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-319/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-319/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-319/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-319/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-319/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSecurityGroupFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8b504ac5-7965-4124-8cfa-8bb2dbc00710"",
    ""url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710"",
    ""created_at"": ""2015-04-10T19:42:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1924"",
    ""organization_guid"": ""d274f335-65b9-451a-b158-ff206aab458a"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/d274f335-65b9-451a-b158-ff206aab458a"",
    ""developers_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/developers"",
    ""managers_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/managers"",
    ""auditors_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/auditors"",
    ""apps_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/apps"",
    ""routes_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/routes"",
    ""domains_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/domains"",
    ""service_instances_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/service_instances"",
    ""app_events_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/app_events"",
    ""events_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/events"",
    ""security_groups_url"": ""/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/security_groups""
  }
}";

            RemoveSecurityGroupFromSpaceResponse obj = Utilities.DeserializeJson<RemoveSecurityGroupFromSpaceResponse>(json);

            Assert.AreEqual("8b504ac5-7965-4124-8cfa-8bb2dbc00710", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1924", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("d274f335-65b9-451a-b158-ff206aab458a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/d274f335-65b9-451a-b158-ff206aab458a", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/8b504ac5-7965-4124-8cfa-8bb2dbc00710/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestCreateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""129f905c-2b35-4083-b71d-2e0d67e0f1d6"",
    ""url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6"",
    ""created_at"": ""2015-04-10T19:42:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""development"",
    ""organization_guid"": ""03a430bf-ec6b-4ea3-861e-9b4f91516d7a"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/03a430bf-ec6b-4ea3-861e-9b4f91516d7a"",
    ""developers_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/developers"",
    ""managers_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/managers"",
    ""auditors_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/auditors"",
    ""apps_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/apps"",
    ""routes_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/routes"",
    ""domains_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/domains"",
    ""service_instances_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/service_instances"",
    ""app_events_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/app_events"",
    ""events_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/events"",
    ""security_groups_url"": ""/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/security_groups""
  }
}";

            CreateSpaceResponse obj = Utilities.DeserializeJson<CreateSpaceResponse>(json);

            Assert.AreEqual("129f905c-2b35-4083-b71d-2e0d67e0f1d6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("development", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("03a430bf-ec6b-4ea3-861e-9b4f91516d7a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/03a430bf-ec6b-4ea3-861e-9b4f91516d7a", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/129f905c-2b35-4083-b71d-2e0d67e0f1d6/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveDeveloperFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""eac272a1-ce6b-4fce-8504-ed48a754674a"",
    ""url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a"",
    ""created_at"": ""2015-04-10T19:42:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1885"",
    ""organization_guid"": ""cf1237b9-1f50-4d90-929b-50c41b9d7777"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/cf1237b9-1f50-4d90-929b-50c41b9d7777"",
    ""developers_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/developers"",
    ""managers_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/managers"",
    ""auditors_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/auditors"",
    ""apps_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/apps"",
    ""routes_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/routes"",
    ""domains_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/domains"",
    ""service_instances_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/service_instances"",
    ""app_events_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/app_events"",
    ""events_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/events"",
    ""security_groups_url"": ""/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/security_groups""
  }
}";

            RemoveDeveloperFromSpaceResponse obj = Utilities.DeserializeJson<RemoveDeveloperFromSpaceResponse>(json);

            Assert.AreEqual("eac272a1-ce6b-4fce-8504-ed48a754674a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1885", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("cf1237b9-1f50-4d90-929b-50c41b9d7777", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/cf1237b9-1f50-4d90-929b-50c41b9d7777", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/eac272a1-ce6b-4fce-8504-ed48a754674a/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-331"",
        ""url"": ""/v2/users/uaa-id-331"",
        ""created_at"": ""2015-04-10T19:42:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-331/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-331/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-331/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-331/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-331/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-331/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-331/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForSpaceResponse> page = Utilities.DeserializePage<ListAllManagersForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-331", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-331", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-331/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-331/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-331/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-331/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-331/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-331/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-331/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fb4f32e0-7c99-4523-8e57-3c84bd95f5a3"",
        ""url"": ""/v2/service_instances/fb4f32e0-7c99-4523-8e57-3c84bd95f5a3"",
        ""created_at"": ""2015-04-10T19:42:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1880"",
        ""credentials"": {
          ""creds-key-531"": ""creds-val-531""
        },
        ""service_plan_guid"": ""e42e6f54-28d1-40c0-8af2-62348ddb50c1"",
        ""space_guid"": ""06522ca5-c463-4d2e-8214-388ba76f3f57"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/06522ca5-c463-4d2e-8214-388ba76f3f57"",
        ""service_plan_url"": ""/v2/service_plans/e42e6f54-28d1-40c0-8af2-62348ddb50c1"",
        ""service_bindings_url"": ""/v2/service_instances/fb4f32e0-7c99-4523-8e57-3c84bd95f5a3/service_bindings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForSpaceResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fb4f32e0-7c99-4523-8e57-3c84bd95f5a3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/fb4f32e0-7c99-4523-8e57-3c84bd95f5a3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1880", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("e42e6f54-28d1-40c0-8af2-62348ddb50c1", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("06522ca5-c463-4d2e-8214-388ba76f3f57", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/06522ca5-c463-4d2e-8214-388ba76f3f57", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/e42e6f54-28d1-40c0-8af2-62348ddb50c1", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/fb4f32e0-7c99-4523-8e57-3c84bd95f5a3/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditorFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""859d3859-6a7e-4c75-94ee-743adbfde185"",
    ""url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185"",
    ""created_at"": ""2015-04-10T19:42:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1914"",
    ""organization_guid"": ""ddee8805-401a-4855-87ee-e170d9abbbc1"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/ddee8805-401a-4855-87ee-e170d9abbbc1"",
    ""developers_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/developers"",
    ""managers_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/managers"",
    ""auditors_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/auditors"",
    ""apps_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/apps"",
    ""routes_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/routes"",
    ""domains_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/domains"",
    ""service_instances_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/service_instances"",
    ""app_events_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/app_events"",
    ""events_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/events"",
    ""security_groups_url"": ""/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/security_groups""
  }
}";

            RemoveAuditorFromSpaceResponse obj = Utilities.DeserializeJson<RemoveAuditorFromSpaceResponse>(json);

            Assert.AreEqual("859d3859-6a7e-4c75-94ee-743adbfde185", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1914", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ddee8805-401a-4855-87ee-e170d9abbbc1", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/ddee8805-401a-4855-87ee-e170d9abbbc1", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/859d3859-6a7e-4c75-94ee-743adbfde185/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3bae8891-de98-40b7-b60d-84d8e4df21ca"",
        ""url"": ""/v2/apps/3bae8891-de98-40b7-b60d-84d8e4df21ca"",
        ""created_at"": ""2015-04-10T19:42:09+00:00"",
        ""updated_at"": ""2015-04-10T19:42:09+00:00""
      },
      ""entity"": {
        ""name"": ""name-1897"",
        ""production"": false,
        ""space_guid"": ""eb25995e-b703-4042-86e2-2ffbaa2da7f6"",
        ""stack_guid"": ""956a3c98-dc23-415a-8bf5-f2b181fd3edd"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""13c204a9-9014-468c-8fcb-8413d47fd6c3"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-04-10T19:42:09+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/eb25995e-b703-4042-86e2-2ffbaa2da7f6"",
        ""stack_url"": ""/v2/stacks/956a3c98-dc23-415a-8bf5-f2b181fd3edd"",
        ""events_url"": ""/v2/apps/3bae8891-de98-40b7-b60d-84d8e4df21ca/events"",
        ""service_bindings_url"": ""/v2/apps/3bae8891-de98-40b7-b60d-84d8e4df21ca/service_bindings"",
        ""routes_url"": ""/v2/apps/3bae8891-de98-40b7-b60d-84d8e4df21ca/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsForSpaceResponse> page = Utilities.DeserializePage<ListAllAppsForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3bae8891-de98-40b7-b60d-84d8e4df21ca", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/3bae8891-de98-40b7-b60d-84d8e4df21ca", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1897", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("eb25995e-b703-4042-86e2-2ffbaa2da7f6", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("956a3c98-dc23-415a-8bf5-f2b181fd3edd", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("13c204a9-9014-468c-8fcb-8413d47fd6c3", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/eb25995e-b703-4042-86e2-2ffbaa2da7f6", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/956a3c98-dc23-415a-8bf5-f2b181fd3edd", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/3bae8891-de98-40b7-b60d-84d8e4df21ca/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/3bae8891-de98-40b7-b60d-84d8e4df21ca/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/3bae8891-de98-40b7-b60d-84d8e4df21ca/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c052d717-d70c-46ee-978f-d7ad27f52535"",
    ""url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535"",
    ""created_at"": ""2015-04-10T19:42:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1867"",
    ""organization_guid"": ""20f26ece-aa3f-44fb-8dfe-01c9418dfd51"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/20f26ece-aa3f-44fb-8dfe-01c9418dfd51"",
    ""developers_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/developers"",
    ""managers_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/managers"",
    ""auditors_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/auditors"",
    ""apps_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/apps"",
    ""routes_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/routes"",
    ""domains_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/domains"",
    ""service_instances_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/service_instances"",
    ""app_events_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/app_events"",
    ""events_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/events"",
    ""security_groups_url"": ""/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/security_groups""
  }
}";

            RetrieveSpaceResponse obj = Utilities.DeserializeJson<RetrieveSpaceResponse>(json);

            Assert.AreEqual("c052d717-d70c-46ee-978f-d7ad27f52535", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1867", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("20f26ece-aa3f-44fb-8dfe-01c9418dfd51", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/20f26ece-aa3f-44fb-8dfe-01c9418dfd51", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/c052d717-d70c-46ee-978f-d7ad27f52535/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllEventsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cc275e2b-57ef-42a3-8035-248edd0feb98"",
        ""url"": ""/v2/events/cc275e2b-57ef-42a3-8035-248edd0feb98"",
        ""created_at"": ""2015-04-10T19:42:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-316"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""6efde68d-b0be-4170-a404-f883633e9196"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1874"",
        ""timestamp"": ""2015-04-10T19:42:09+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new_name""
          }
        },
        ""space_guid"": ""6efde68d-b0be-4170-a404-f883633e9196"",
        ""organization_guid"": ""3b89e76e-c77d-4817-8513-e1b77034b0b8""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsForSpaceResponse> page = Utilities.DeserializePage<ListAllEventsForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cc275e2b-57ef-42a3-8035-248edd0feb98", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cc275e2b-57ef-42a3-8035-248edd0feb98", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-316", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6efde68d-b0be-4170-a404-f883633e9196", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1874", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("6efde68d-b0be-4170-a404-f883633e9196", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("3b89e76e-c77d-4817-8513-e1b77034b0b8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestAssociateSecurityGroupWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ff5b1b17-ce45-4e1f-b637-12a8abd0269b"",
    ""url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b"",
    ""created_at"": ""2015-04-10T19:42:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1928"",
    ""organization_guid"": ""3948a8e3-a110-4808-a4ad-bc11c446b3dd"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/3948a8e3-a110-4808-a4ad-bc11c446b3dd"",
    ""developers_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/developers"",
    ""managers_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/managers"",
    ""auditors_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/auditors"",
    ""apps_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/apps"",
    ""routes_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/routes"",
    ""domains_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/domains"",
    ""service_instances_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/service_instances"",
    ""app_events_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/app_events"",
    ""events_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/events"",
    ""security_groups_url"": ""/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/security_groups""
  }
}";

            AssociateSecurityGroupWithSpaceResponse obj = Utilities.DeserializeJson<AssociateSecurityGroupWithSpaceResponse>(json);

            Assert.AreEqual("ff5b1b17-ce45-4e1f-b637-12a8abd0269b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1928", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("3948a8e3-a110-4808-a4ad-bc11c446b3dd", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/3948a8e3-a110-4808-a4ad-bc11c446b3dd", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/ff5b1b17-ce45-4e1f-b637-12a8abd0269b/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagerFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f96bc846-b0f2-4fa6-bb1d-86a621843bc9"",
    ""url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9"",
    ""created_at"": ""2015-04-10T19:42:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1905"",
    ""organization_guid"": ""b9fe1efe-91dd-4a03-af80-b098edac9740"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/b9fe1efe-91dd-4a03-af80-b098edac9740"",
    ""developers_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/developers"",
    ""managers_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/managers"",
    ""auditors_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/auditors"",
    ""apps_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/apps"",
    ""routes_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/routes"",
    ""domains_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/domains"",
    ""service_instances_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/service_instances"",
    ""app_events_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/app_events"",
    ""events_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/events"",
    ""security_groups_url"": ""/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/security_groups""
  }
}";

            RemoveManagerFromSpaceResponse obj = Utilities.DeserializeJson<RemoveManagerFromSpaceResponse>(json);

            Assert.AreEqual("f96bc846-b0f2-4fa6-bb1d-86a621843bc9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1905", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("b9fe1efe-91dd-4a03-af80-b098edac9740", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/b9fe1efe-91dd-4a03-af80-b098edac9740", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/f96bc846-b0f2-4fa6-bb1d-86a621843bc9/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f9e88776-5b7d-446d-b0f8-fa78ab934a91"",
        ""url"": ""/v2/services/f9e88776-5b7d-446d-b0f8-fa78ab934a91"",
        ""created_at"": ""2015-04-10T19:42:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-80"",
        ""provider"": ""provider-71"",
        ""url"": ""https://foo.com/url-101"",
        ""description"": ""desc-185"",
        ""long_description"": null,
        ""version"": ""version-55"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""345d0539-c476-47d7-98ca-6bd35f4421f9"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/f9e88776-5b7d-446d-b0f8-fa78ab934a91/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForSpaceResponse> page = Utilities.DeserializePage<ListAllServicesForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f9e88776-5b7d-446d-b0f8-fa78ab934a91", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/f9e88776-5b7d-446d-b0f8-fa78ab934a91", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-80", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-71", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("https://foo.com/url-101", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-185", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("version-55", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("345d0539-c476-47d7-98ca-6bd35f4421f9", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/f9e88776-5b7d-446d-b0f8-fa78ab934a91/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestAssociateDeveloperWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2076baea-f455-4486-9770-47d7a4b2db4a"",
    ""url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a"",
    ""created_at"": ""2015-04-10T19:42:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1888"",
    ""organization_guid"": ""369fbde6-b531-4f3d-b9e0-d3d0f2eda98a"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/369fbde6-b531-4f3d-b9e0-d3d0f2eda98a"",
    ""developers_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/developers"",
    ""managers_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/managers"",
    ""auditors_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/auditors"",
    ""apps_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/apps"",
    ""routes_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/routes"",
    ""domains_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/domains"",
    ""service_instances_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/service_instances"",
    ""app_events_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/app_events"",
    ""events_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/events"",
    ""security_groups_url"": ""/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/security_groups""
  }
}";

            AssociateDeveloperWithSpaceResponse obj = Utilities.DeserializeJson<AssociateDeveloperWithSpaceResponse>(json);

            Assert.AreEqual("2076baea-f455-4486-9770-47d7a4b2db4a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1888", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("369fbde6-b531-4f3d-b9e0-d3d0f2eda98a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/369fbde6-b531-4f3d-b9e0-d3d0f2eda98a", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/2076baea-f455-4486-9770-47d7a4b2db4a/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllSecurityGroupsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8542382d-e613-4e69-91d0-e8500c4de728"",
        ""url"": ""/v2/security_groups/8542382d-e613-4e69-91d0-e8500c4de728"",
        ""created_at"": ""2015-04-10T19:42:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1923"",
        ""rules"": [
          {
            ""protocol"": ""udp"",
            ""ports"": ""8080"",
            ""destination"": ""198.41.191.47/1""
          }
        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/8542382d-e613-4e69-91d0-e8500c4de728/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSecurityGroupsForSpaceResponse> page = Utilities.DeserializePage<ListAllSecurityGroupsForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8542382d-e613-4e69-91d0-e8500c4de728", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/8542382d-e613-4e69-91d0-e8500c4de728", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1923", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/8542382d-e613-4e69-91d0-e8500c4de728/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForSpaceDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fff92d6c-ccb2-4b69-9416-4e474464feab"",
        ""url"": ""/v2/domains/fff92d6c-ccb2-4b69-9416-4e474464feab"",
        ""created_at"": ""2015-04-10T19:41:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d51e4ec4-ea5f-4899-94a9-589732072942"",
        ""url"": ""/v2/domains/d51e4ec4-ea5f-4899-94a9-589732072942"",
        ""created_at"": ""2015-04-10T19:41:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForSpaceDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForSpaceDeprecatedResponse>(json);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fff92d6c-ccb2-4b69-9416-4e474464feab", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/fff92d6c-ccb2-4b69-9416-4e474464feab", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:57+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("d51e4ec4-ea5f-4899-94a9-589732072942", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/d51e4ec4-ea5f-4899-94a9-589732072942", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:57+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
        }

        [TestMethod]
        public void TestListAllRoutesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e7e96f58-174b-480b-b969-3b6972fa92e1"",
        ""url"": ""/v2/routes/e7e96f58-174b-480b-b969-3b6972fa92e1"",
        ""created_at"": ""2015-04-10T19:42:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-18"",
        ""domain_guid"": ""377c07f1-c76c-4f63-96d4-ecb1d74da2bc"",
        ""space_guid"": ""4508b552-2bb3-40bf-8dc4-10b04a15653a"",
        ""domain_url"": ""/v2/domains/377c07f1-c76c-4f63-96d4-ecb1d74da2bc"",
        ""space_url"": ""/v2/spaces/4508b552-2bb3-40bf-8dc4-10b04a15653a"",
        ""apps_url"": ""/v2/routes/e7e96f58-174b-480b-b969-3b6972fa92e1/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForSpaceResponse> page = Utilities.DeserializePage<ListAllRoutesForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e7e96f58-174b-480b-b969-3b6972fa92e1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/e7e96f58-174b-480b-b969-3b6972fa92e1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-18", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("377c07f1-c76c-4f63-96d4-ecb1d74da2bc", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("4508b552-2bb3-40bf-8dc4-10b04a15653a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/377c07f1-c76c-4f63-96d4-ecb1d74da2bc", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/4508b552-2bb3-40bf-8dc4-10b04a15653a", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/e7e96f58-174b-480b-b969-3b6972fa92e1/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ed54b436-09b4-4449-950e-95ec50bc3c20"",
        ""url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20"",
        ""created_at"": ""2015-04-10T19:42:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1853"",
        ""organization_guid"": ""b52fba02-161a-42c2-a2ee-b7351eb016da"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/b52fba02-161a-42c2-a2ee-b7351eb016da"",
        ""developers_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/developers"",
        ""managers_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/managers"",
        ""auditors_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/auditors"",
        ""apps_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/apps"",
        ""routes_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/routes"",
        ""domains_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/domains"",
        ""service_instances_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/service_instances"",
        ""app_events_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/app_events"",
        ""events_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/events"",
        ""security_groups_url"": ""/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesResponse> page = Utilities.DeserializePage<ListAllSpacesResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ed54b436-09b4-4449-950e-95ec50bc3c20", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1853", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("b52fba02-161a-42c2-a2ee-b7351eb016da", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/b52fba02-161a-42c2-a2ee-b7351eb016da", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/ed54b436-09b4-4449-950e-95ec50bc3c20/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba"",
    ""url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba"",
    ""created_at"": ""2015-04-10T19:42:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1908"",
    ""organization_guid"": ""4c04cdc4-6fa2-4e0b-bdc2-911788b60c09"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/4c04cdc4-6fa2-4e0b-bdc2-911788b60c09"",
    ""developers_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/developers"",
    ""managers_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/managers"",
    ""auditors_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/auditors"",
    ""apps_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/apps"",
    ""routes_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/routes"",
    ""domains_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/domains"",
    ""service_instances_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/service_instances"",
    ""app_events_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/app_events"",
    ""events_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/events"",
    ""security_groups_url"": ""/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/security_groups""
  }
}";

            AssociateManagerWithSpaceResponse obj = Utilities.DeserializeJson<AssociateManagerWithSpaceResponse>(json);

            Assert.AreEqual("4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1908", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("4c04cdc4-6fa2-4e0b-bdc2-911788b60c09", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/4c04cdc4-6fa2-4e0b-bdc2-911788b60c09", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/4404bb47-a1eb-4fcc-bf2d-e8e64a40ceba/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""27ca3626-3d58-41e4-a0df-c7dee241a2c7"",
    ""url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7"",
    ""created_at"": ""2015-04-10T19:42:08+00:00"",
    ""updated_at"": ""2015-04-10T19:42:08+00:00""
  },
  ""entity"": {
    ""name"": ""New Space Name"",
    ""organization_guid"": ""66a0b3d5-f6f5-463c-816c-d828ad0959bf"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/66a0b3d5-f6f5-463c-816c-d828ad0959bf"",
    ""developers_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/developers"",
    ""managers_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/managers"",
    ""auditors_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/auditors"",
    ""apps_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/apps"",
    ""routes_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/routes"",
    ""domains_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/domains"",
    ""service_instances_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/service_instances"",
    ""app_events_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/app_events"",
    ""events_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/events"",
    ""security_groups_url"": ""/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/security_groups""
  }
}";

            UpdateSpaceResponse obj = Utilities.DeserializeJson<UpdateSpaceResponse>(json);

            Assert.AreEqual("27ca3626-3d58-41e4-a0df-c7dee241a2c7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Space Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("66a0b3d5-f6f5-463c-816c-d828ad0959bf", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/66a0b3d5-f6f5-463c-816c-d828ad0959bf", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/27ca3626-3d58-41e4-a0df-c7dee241a2c7/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-340"",
        ""url"": ""/v2/users/uaa-id-340"",
        ""created_at"": ""2015-04-10T19:42:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-340/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-340/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-340/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-340/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-340/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-340/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-340/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForSpaceResponse> page = Utilities.DeserializePage<ListAllAuditorsForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-340", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-340", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-340/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-340/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }
    }
}
