//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpacesTest
    {


        [TestMethod]
        public void TestGetSpaceSummaryResponse()
        {
            string json = @"{
  ""guid"": ""acaf082b-e03c-425a-abcd-dab429fbd40a"",
  ""name"": ""name-349"",
  ""apps"": [
    {
      ""guid"": ""30273d3f-d96a-42cb-b0cd-d26feced369c"",
      ""urls"": [
        ""host-10.domain-46.example.com""
      ],
      ""routes"": [
        {
          ""guid"": ""96aed0ca-bfdc-4f79-8470-a1bcc0a30b6b"",
          ""host"": ""host-10"",
          ""domain"": {
            ""guid"": ""8d7e7fcf-9be0-46d4-8b8e-36581c6fbc4a"",
            ""name"": ""domain-46.example.com""
          }
        }
      ],
      ""service_count"": 1,
      ""service_names"": [
        ""name-354""
      ],
      ""running_instances"": 0,
      ""name"": ""name-352"",
      ""production"": false,
      ""space_guid"": ""acaf082b-e03c-425a-abcd-dab429fbd40a"",
      ""stack_guid"": ""1e54ca10-a5f5-4861-a582-3f27feb7c59f"",
      ""buildpack"": null,
      ""detected_buildpack"": null,
      ""environment_json"": null,
      ""memory"": 1024,
      ""instances"": 1,
      ""disk_quota"": 1024,
      ""state"": ""STOPPED"",
      ""version"": ""5bf83cab-525c-47d9-a5de-f20386c2cec9"",
      ""command"": null,
      ""console"": false,
      ""debug"": null,
      ""staging_task_id"": null,
      ""package_state"": ""PENDING"",
      ""health_check_type"": ""port"",
      ""health_check_timeout"": null,
      ""staging_failed_reason"": null,
      ""docker_image"": null,
      ""package_updated_at"": ""2015-03-19T13:19:43+00:00"",
      ""detected_start_command"": """"
    }
  ],
  ""services"": [
    {
      ""guid"": ""3f76aff3-0937-4987-94c1-378c0bb12896"",
      ""name"": ""name-354"",
      ""bound_app_count"": 1,
      ""dashboard_url"": null,
      ""service_plan"": {
        ""guid"": ""fcfb9768-e345-4a22-81ef-3e723e8f5fac"",
        ""name"": ""name-355"",
        ""service"": {
          ""guid"": ""afa18de0-d830-483c-b816-199548cb791e"",
          ""label"": ""label-29"",
          ""provider"": ""provider-29"",
          ""version"": ""version-29""
        }
      }
    }
  ]
}";

            GetSpaceSummaryResponse obj = Utilities.DeserializeJson<GetSpaceSummaryResponse>(json);

            Assert.AreEqual("acaf082b-e03c-425a-abcd-dab429fbd40a", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-349", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""04ca2f18-d9c6-45d2-8c55-028ca65fa9ae"",
    ""url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1531"",
    ""organization_guid"": ""fc0565e4-caa2-464f-8f8a-e1d6a1e5fd95"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/fc0565e4-caa2-464f-8f8a-e1d6a1e5fd95"",
    ""developers_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/developers"",
    ""managers_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/managers"",
    ""auditors_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/auditors"",
    ""apps_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/apps"",
    ""routes_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/routes"",
    ""domains_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/domains"",
    ""service_instances_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/service_instances"",
    ""app_events_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/app_events"",
    ""events_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/events"",
    ""security_groups_url"": ""/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/security_groups""
  }
}";

            AssociateAuditorWithSpaceResponse obj = Utilities.DeserializeJson<AssociateAuditorWithSpaceResponse>(json);

            Assert.AreEqual("04ca2f18-d9c6-45d2-8c55-028ca65fa9ae", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1531", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("fc0565e4-caa2-464f-8f8a-e1d6a1e5fd95", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/fc0565e4-caa2-464f-8f8a-e1d6a1e5fd95", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/04ca2f18-d9c6-45d2-8c55-028ca65fa9ae/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllDevelopersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-307"",
        ""url"": ""/v2/users/uaa-id-307"",
        ""created_at"": ""2015-03-19T13:19:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-307/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-307/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-307/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-307/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-307/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-307/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-307/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDevelopersForSpaceResponse> page = Utilities.DeserializePage<ListAllDevelopersForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-307", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-307", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-307/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-307/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-307/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-307/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-307/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-307/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-307/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSecurityGroupFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d3a02ca6-a9e0-44b0-a50d-e3a1958c109f"",
    ""url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1562"",
    ""organization_guid"": ""8e0d772e-3131-4edb-8709-5b7aa0846100"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/8e0d772e-3131-4edb-8709-5b7aa0846100"",
    ""developers_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/developers"",
    ""managers_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/managers"",
    ""auditors_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/auditors"",
    ""apps_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/apps"",
    ""routes_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/routes"",
    ""domains_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/domains"",
    ""service_instances_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/service_instances"",
    ""app_events_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/app_events"",
    ""events_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/events"",
    ""security_groups_url"": ""/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/security_groups""
  }
}";

            RemoveSecurityGroupFromSpaceResponse obj = Utilities.DeserializeJson<RemoveSecurityGroupFromSpaceResponse>(json);

            Assert.AreEqual("d3a02ca6-a9e0-44b0-a50d-e3a1958c109f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1562", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("8e0d772e-3131-4edb-8709-5b7aa0846100", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/8e0d772e-3131-4edb-8709-5b7aa0846100", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/d3a02ca6-a9e0-44b0-a50d-e3a1958c109f/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestCreateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fe6c4aca-d5cf-4c2a-ba08-336983ac792d"",
    ""url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""development"",
    ""organization_guid"": ""81bb558b-2aad-4d52-90a6-893094f300a8"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/81bb558b-2aad-4d52-90a6-893094f300a8"",
    ""developers_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/developers"",
    ""managers_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/managers"",
    ""auditors_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/auditors"",
    ""apps_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/apps"",
    ""routes_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/routes"",
    ""domains_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/domains"",
    ""service_instances_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/service_instances"",
    ""app_events_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/app_events"",
    ""events_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/events"",
    ""security_groups_url"": ""/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/security_groups""
  }
}";

            CreateSpaceResponse obj = Utilities.DeserializeJson<CreateSpaceResponse>(json);

            Assert.AreEqual("fe6c4aca-d5cf-4c2a-ba08-336983ac792d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("development", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("81bb558b-2aad-4d52-90a6-893094f300a8", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/81bb558b-2aad-4d52-90a6-893094f300a8", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/fe6c4aca-d5cf-4c2a-ba08-336983ac792d/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveDeveloperFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""355ab057-1187-429d-a880-d5e5e5c27ab7"",
    ""url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1548"",
    ""organization_guid"": ""6aeed12d-2f60-4347-b4e8-12174fdd7170"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/6aeed12d-2f60-4347-b4e8-12174fdd7170"",
    ""developers_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/developers"",
    ""managers_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/managers"",
    ""auditors_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/auditors"",
    ""apps_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/apps"",
    ""routes_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/routes"",
    ""domains_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/domains"",
    ""service_instances_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/service_instances"",
    ""app_events_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/app_events"",
    ""events_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/events"",
    ""security_groups_url"": ""/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/security_groups""
  }
}";

            RemoveDeveloperFromSpaceResponse obj = Utilities.DeserializeJson<RemoveDeveloperFromSpaceResponse>(json);

            Assert.AreEqual("355ab057-1187-429d-a880-d5e5e5c27ab7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1548", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("6aeed12d-2f60-4347-b4e8-12174fdd7170", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/6aeed12d-2f60-4347-b4e8-12174fdd7170", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/355ab057-1187-429d-a880-d5e5e5c27ab7/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-288"",
        ""url"": ""/v2/users/uaa-id-288"",
        ""created_at"": ""2015-03-19T13:19:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-288/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-288/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-288/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-288/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-288/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-288/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-288/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForSpaceResponse> page = Utilities.DeserializePage<ListAllManagersForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-288", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-288", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-288/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-288/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-288/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-288/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-288/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-288/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-288/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bae52d37-4a06-4523-b6ff-5228208993f2"",
        ""url"": ""/v2/service_instances/bae52d37-4a06-4523-b6ff-5228208993f2"",
        ""created_at"": ""2015-03-19T13:19:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1543"",
        ""credentials"": {
          ""creds-key-467"": ""creds-val-467""
        },
        ""service_plan_guid"": ""a03e6d7c-71c5-4f56-9088-f70607ff5e1c"",
        ""space_guid"": ""8f479095-06bd-4a2b-86b7-99cc948a1f34"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/8f479095-06bd-4a2b-86b7-99cc948a1f34"",
        ""service_plan_url"": ""/v2/service_plans/a03e6d7c-71c5-4f56-9088-f70607ff5e1c"",
        ""service_bindings_url"": ""/v2/service_instances/bae52d37-4a06-4523-b6ff-5228208993f2/service_bindings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForSpaceResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bae52d37-4a06-4523-b6ff-5228208993f2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/bae52d37-4a06-4523-b6ff-5228208993f2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1543", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("a03e6d7c-71c5-4f56-9088-f70607ff5e1c", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("8f479095-06bd-4a2b-86b7-99cc948a1f34", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/8f479095-06bd-4a2b-86b7-99cc948a1f34", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/a03e6d7c-71c5-4f56-9088-f70607ff5e1c", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/bae52d37-4a06-4523-b6ff-5228208993f2/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditorFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a8040553-3be9-4a30-8ee5-988b395d7250"",
    ""url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1534"",
    ""organization_guid"": ""039450a5-46b9-4568-b1f8-abd21cafb977"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/039450a5-46b9-4568-b1f8-abd21cafb977"",
    ""developers_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/developers"",
    ""managers_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/managers"",
    ""auditors_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/auditors"",
    ""apps_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/apps"",
    ""routes_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/routes"",
    ""domains_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/domains"",
    ""service_instances_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/service_instances"",
    ""app_events_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/app_events"",
    ""events_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/events"",
    ""security_groups_url"": ""/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/security_groups""
  }
}";

            RemoveAuditorFromSpaceResponse obj = Utilities.DeserializeJson<RemoveAuditorFromSpaceResponse>(json);

            Assert.AreEqual("a8040553-3be9-4a30-8ee5-988b395d7250", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1534", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("039450a5-46b9-4568-b1f8-abd21cafb977", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/039450a5-46b9-4568-b1f8-abd21cafb977", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/a8040553-3be9-4a30-8ee5-988b395d7250/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0ea02d36-ce14-43c3-afb2-199461408ea4"",
        ""url"": ""/v2/apps/0ea02d36-ce14-43c3-afb2-199461408ea4"",
        ""created_at"": ""2015-03-19T13:19:52+00:00"",
        ""updated_at"": ""2015-03-19T13:19:52+00:00""
      },
      ""entity"": {
        ""name"": ""name-1513"",
        ""production"": false,
        ""space_guid"": ""fd82f59c-e9e1-4566-aa8d-c0f01a04b9f6"",
        ""stack_guid"": ""e402c4e8-1c64-4084-adad-a4e6df4b4524"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""0cfd94dc-7e6c-4739-a0ab-893be4aa12a3"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-03-19T13:19:52+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/fd82f59c-e9e1-4566-aa8d-c0f01a04b9f6"",
        ""stack_url"": ""/v2/stacks/e402c4e8-1c64-4084-adad-a4e6df4b4524"",
        ""events_url"": ""/v2/apps/0ea02d36-ce14-43c3-afb2-199461408ea4/events"",
        ""service_bindings_url"": ""/v2/apps/0ea02d36-ce14-43c3-afb2-199461408ea4/service_bindings"",
        ""routes_url"": ""/v2/apps/0ea02d36-ce14-43c3-afb2-199461408ea4/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsForSpaceResponse> page = Utilities.DeserializePage<ListAllAppsForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0ea02d36-ce14-43c3-afb2-199461408ea4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/0ea02d36-ce14-43c3-afb2-199461408ea4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:52+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-19T13:19:52+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1513", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("fd82f59c-e9e1-4566-aa8d-c0f01a04b9f6", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("e402c4e8-1c64-4084-adad-a4e6df4b4524", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("0cfd94dc-7e6c-4739-a0ab-893be4aa12a3", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2015-03-19T13:19:52+00:00", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/fd82f59c-e9e1-4566-aa8d-c0f01a04b9f6", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/e402c4e8-1c64-4084-adad-a4e6df4b4524", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/0ea02d36-ce14-43c3-afb2-199461408ea4/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/0ea02d36-ce14-43c3-afb2-199461408ea4/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/0ea02d36-ce14-43c3-afb2-199461408ea4/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e1d5aff9-76c0-4f54-9cdc-aac42ba13b34"",
    ""url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1573"",
    ""organization_guid"": ""5995437e-654a-462b-94ba-b3875d8f5104"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/5995437e-654a-462b-94ba-b3875d8f5104"",
    ""developers_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/developers"",
    ""managers_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/managers"",
    ""auditors_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/auditors"",
    ""apps_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/apps"",
    ""routes_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/routes"",
    ""domains_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/domains"",
    ""service_instances_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/service_instances"",
    ""app_events_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/app_events"",
    ""events_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/events"",
    ""security_groups_url"": ""/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/security_groups""
  }
}";

            RetrieveSpaceResponse obj = Utilities.DeserializeJson<RetrieveSpaceResponse>(json);

            Assert.AreEqual("e1d5aff9-76c0-4f54-9cdc-aac42ba13b34", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1573", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("5995437e-654a-462b-94ba-b3875d8f5104", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/5995437e-654a-462b-94ba-b3875d8f5104", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/e1d5aff9-76c0-4f54-9cdc-aac42ba13b34/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllEventsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dfda93d1-4a2b-4304-8b83-213776d38b92"",
        ""url"": ""/v2/events/dfda93d1-4a2b-4304-8b83-213776d38b92"",
        ""created_at"": ""2015-03-19T13:19:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-310"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0814ecdb-a538-4e03-9b12-20f447dccc9a"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1554"",
        ""timestamp"": ""2015-03-19T13:19:53+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new_name""
          }
        },
        ""space_guid"": ""0814ecdb-a538-4e03-9b12-20f447dccc9a"",
        ""organization_guid"": ""6a825033-cb6d-4ee7-9925-d1b7763612c8""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsForSpaceResponse> page = Utilities.DeserializePage<ListAllEventsForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dfda93d1-4a2b-4304-8b83-213776d38b92", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/dfda93d1-4a2b-4304-8b83-213776d38b92", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-310", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0814ecdb-a538-4e03-9b12-20f447dccc9a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1554", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0814ecdb-a538-4e03-9b12-20f447dccc9a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6a825033-cb6d-4ee7-9925-d1b7763612c8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestAssociateSecurityGroupWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""177d5e2a-feb4-40a5-9ca4-2796bb52b3e0"",
    ""url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1557"",
    ""organization_guid"": ""ac5fc136-3cf3-4dc4-8c5d-23e795a0c257"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/ac5fc136-3cf3-4dc4-8c5d-23e795a0c257"",
    ""developers_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/developers"",
    ""managers_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/managers"",
    ""auditors_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/auditors"",
    ""apps_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/apps"",
    ""routes_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/routes"",
    ""domains_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/domains"",
    ""service_instances_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/service_instances"",
    ""app_events_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/app_events"",
    ""events_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/events"",
    ""security_groups_url"": ""/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/security_groups""
  }
}";

            AssociateSecurityGroupWithSpaceResponse obj = Utilities.DeserializeJson<AssociateSecurityGroupWithSpaceResponse>(json);

            Assert.AreEqual("177d5e2a-feb4-40a5-9ca4-2796bb52b3e0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1557", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ac5fc136-3cf3-4dc4-8c5d-23e795a0c257", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/ac5fc136-3cf3-4dc4-8c5d-23e795a0c257", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/177d5e2a-feb4-40a5-9ca4-2796bb52b3e0/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagerFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab"",
    ""url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab"",
    ""created_at"": ""2015-03-19T13:19:52+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1525"",
    ""organization_guid"": ""f1af0244-1954-4b1a-a43c-cf2bcd38e10e"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/f1af0244-1954-4b1a-a43c-cf2bcd38e10e"",
    ""developers_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/developers"",
    ""managers_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/managers"",
    ""auditors_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/auditors"",
    ""apps_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/apps"",
    ""routes_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/routes"",
    ""domains_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/domains"",
    ""service_instances_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/service_instances"",
    ""app_events_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/app_events"",
    ""events_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/events"",
    ""security_groups_url"": ""/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/security_groups""
  }
}";

            RemoveManagerFromSpaceResponse obj = Utilities.DeserializeJson<RemoveManagerFromSpaceResponse>(json);

            Assert.AreEqual("d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:52+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1525", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("f1af0244-1954-4b1a-a43c-cf2bcd38e10e", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/f1af0244-1954-4b1a-a43c-cf2bcd38e10e", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/d8e2dc6c-bfe8-4862-a4aa-eff4ef3d1eab/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3d37e360-4f89-4787-b9e9-805265f1b20c"",
        ""url"": ""/v2/services/3d37e360-4f89-4787-b9e9-805265f1b20c"",
        ""created_at"": ""2015-03-19T13:19:52+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-60"",
        ""provider"": ""provider-51"",
        ""url"": ""https://foo.com/url-97"",
        ""description"": ""desc-116"",
        ""long_description"": null,
        ""version"": ""version-51"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""1d4c63f0-26d3-492c-b3c9-4c82ae62545f"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/3d37e360-4f89-4787-b9e9-805265f1b20c/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForSpaceResponse> page = Utilities.DeserializePage<ListAllServicesForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3d37e360-4f89-4787-b9e9-805265f1b20c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/3d37e360-4f89-4787-b9e9-805265f1b20c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:52+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-60", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-51", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("https://foo.com/url-97", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-116", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("version-51", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("1d4c63f0-26d3-492c-b3c9-4c82ae62545f", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/3d37e360-4f89-4787-b9e9-805265f1b20c/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestAssociateDeveloperWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""57950c78-5359-407f-8626-7fb55949d4cb"",
    ""url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1545"",
    ""organization_guid"": ""ec77a809-2630-41f1-a49e-de400885f17f"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/ec77a809-2630-41f1-a49e-de400885f17f"",
    ""developers_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/developers"",
    ""managers_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/managers"",
    ""auditors_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/auditors"",
    ""apps_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/apps"",
    ""routes_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/routes"",
    ""domains_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/domains"",
    ""service_instances_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/service_instances"",
    ""app_events_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/app_events"",
    ""events_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/events"",
    ""security_groups_url"": ""/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/security_groups""
  }
}";

            AssociateDeveloperWithSpaceResponse obj = Utilities.DeserializeJson<AssociateDeveloperWithSpaceResponse>(json);

            Assert.AreEqual("57950c78-5359-407f-8626-7fb55949d4cb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1545", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ec77a809-2630-41f1-a49e-de400885f17f", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/ec77a809-2630-41f1-a49e-de400885f17f", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/57950c78-5359-407f-8626-7fb55949d4cb/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllSecurityGroupsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""eea2948c-7b46-49e2-810b-dfe63e6ab3c8"",
        ""url"": ""/v2/security_groups/eea2948c-7b46-49e2-810b-dfe63e6ab3c8"",
        ""created_at"": ""2015-03-19T13:19:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1569"",
        ""rules"": [
          {
            ""protocol"": ""udp"",
            ""ports"": ""8080"",
            ""destination"": ""198.41.191.47/1""
          }
        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/eea2948c-7b46-49e2-810b-dfe63e6ab3c8/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSecurityGroupsForSpaceResponse> page = Utilities.DeserializePage<ListAllSecurityGroupsForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("eea2948c-7b46-49e2-810b-dfe63e6ab3c8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/eea2948c-7b46-49e2-810b-dfe63e6ab3c8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1569", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/eea2948c-7b46-49e2-810b-dfe63e6ab3c8/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForSpaceDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a1c053fc-a728-4e64-bfff-2f3a32a8472a"",
        ""url"": ""/v2/domains/a1c053fc-a728-4e64-bfff-2f3a32a8472a"",
        ""created_at"": ""2015-03-19T13:19:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""982373af-4164-4c5d-9b8d-879f69e58976"",
        ""url"": ""/v2/domains/982373af-4164-4c5d-9b8d-879f69e58976"",
        ""created_at"": ""2015-03-19T13:19:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForSpaceDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForSpaceDeprecatedResponse>(json);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a1c053fc-a728-4e64-bfff-2f3a32a8472a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/a1c053fc-a728-4e64-bfff-2f3a32a8472a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:50+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("982373af-4164-4c5d-9b8d-879f69e58976", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/982373af-4164-4c5d-9b8d-879f69e58976", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:50+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
        }

        [TestMethod]
        public void TestListAllRoutesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ec5d7341-8a20-4974-a36a-2c295999d428"",
        ""url"": ""/v2/routes/ec5d7341-8a20-4974-a36a-2c295999d428"",
        ""created_at"": ""2015-03-19T13:19:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-12"",
        ""domain_guid"": ""8cc92e9d-77a8-4a23-88a3-9971b4f21e76"",
        ""space_guid"": ""1230303c-7222-4a94-ad39-9d2219d6786b"",
        ""domain_url"": ""/v2/domains/8cc92e9d-77a8-4a23-88a3-9971b4f21e76"",
        ""space_url"": ""/v2/spaces/1230303c-7222-4a94-ad39-9d2219d6786b"",
        ""apps_url"": ""/v2/routes/ec5d7341-8a20-4974-a36a-2c295999d428/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForSpaceResponse> page = Utilities.DeserializePage<ListAllRoutesForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ec5d7341-8a20-4974-a36a-2c295999d428", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/ec5d7341-8a20-4974-a36a-2c295999d428", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-12", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("8cc92e9d-77a8-4a23-88a3-9971b4f21e76", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("1230303c-7222-4a94-ad39-9d2219d6786b", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/8cc92e9d-77a8-4a23-88a3-9971b4f21e76", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/1230303c-7222-4a94-ad39-9d2219d6786b", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/ec5d7341-8a20-4974-a36a-2c295999d428/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""65ed55c4-0db6-4bca-a914-ca298dbf5b9c"",
        ""url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c"",
        ""created_at"": ""2015-03-19T13:19:54+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1587"",
        ""organization_guid"": ""2f351c1e-6636-41ab-a88d-c87c993b5275"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/2f351c1e-6636-41ab-a88d-c87c993b5275"",
        ""developers_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/developers"",
        ""managers_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/managers"",
        ""auditors_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/auditors"",
        ""apps_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/apps"",
        ""routes_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/routes"",
        ""domains_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/domains"",
        ""service_instances_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/service_instances"",
        ""app_events_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/app_events"",
        ""events_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/events"",
        ""security_groups_url"": ""/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesResponse> page = Utilities.DeserializePage<ListAllSpacesResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("65ed55c4-0db6-4bca-a914-ca298dbf5b9c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:54+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1587", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("2f351c1e-6636-41ab-a88d-c87c993b5275", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/2f351c1e-6636-41ab-a88d-c87c993b5275", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/65ed55c4-0db6-4bca-a914-ca298dbf5b9c/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e"",
    ""url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e"",
    ""created_at"": ""2015-03-19T13:19:52+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1522"",
    ""organization_guid"": ""b7aef9b0-3652-4541-ad93-106c41bba0d3"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/b7aef9b0-3652-4541-ad93-106c41bba0d3"",
    ""developers_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/developers"",
    ""managers_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/managers"",
    ""auditors_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/auditors"",
    ""apps_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/apps"",
    ""routes_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/routes"",
    ""domains_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/domains"",
    ""service_instances_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/service_instances"",
    ""app_events_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/app_events"",
    ""events_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/events"",
    ""security_groups_url"": ""/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/security_groups""
  }
}";

            AssociateManagerWithSpaceResponse obj = Utilities.DeserializeJson<AssociateManagerWithSpaceResponse>(json);

            Assert.AreEqual("8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:52+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1522", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("b7aef9b0-3652-4541-ad93-106c41bba0d3", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/b7aef9b0-3652-4541-ad93-106c41bba0d3", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/8f578b8b-ee05-4ddc-b63a-1c8e8e2ac37e/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8899cb60-3ac7-4ce7-bdd9-70c56c076e43"",
    ""url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43"",
    ""created_at"": ""2015-03-19T13:19:53+00:00"",
    ""updated_at"": ""2015-03-19T13:19:53+00:00""
  },
  ""entity"": {
    ""name"": ""New Space Name"",
    ""organization_guid"": ""38e2e0d6-221d-4616-bb35-43f74c2dd1bf"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/38e2e0d6-221d-4616-bb35-43f74c2dd1bf"",
    ""developers_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/developers"",
    ""managers_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/managers"",
    ""auditors_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/auditors"",
    ""apps_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/apps"",
    ""routes_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/routes"",
    ""domains_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/domains"",
    ""service_instances_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/service_instances"",
    ""app_events_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/app_events"",
    ""events_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/events"",
    ""security_groups_url"": ""/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/security_groups""
  }
}";

            UpdateSpaceResponse obj = Utilities.DeserializeJson<UpdateSpaceResponse>(json);

            Assert.AreEqual("8899cb60-3ac7-4ce7-bdd9-70c56c076e43", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Space Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("38e2e0d6-221d-4616-bb35-43f74c2dd1bf", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/38e2e0d6-221d-4616-bb35-43f74c2dd1bf", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/8899cb60-3ac7-4ce7-bdd9-70c56c076e43/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-297"",
        ""url"": ""/v2/users/uaa-id-297"",
        ""created_at"": ""2015-03-19T13:19:53+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-297/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-297/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-297/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-297/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-297/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-297/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-297/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForSpaceResponse> page = Utilities.DeserializePage<ListAllAuditorsForSpaceResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-297", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-297", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:53+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-297/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-297/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }
    }
}
