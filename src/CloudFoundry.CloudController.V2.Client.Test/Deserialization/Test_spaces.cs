//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by cf-sdk-builder
// 

using System;
using System.CodeDom.Compiler;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CloudFoundry.CloudController.V2.Client.Data;
using CloudFoundry.CloudController.V2;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpacesTest
    {

    
        [TestMethod]
        public void TestRemoveSecurityGroupFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""cc64b313-7264-438e-ba2e-155a3cabc411"",
    ""url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411"",
    ""created_at"": ""2015-02-19T03:53:07+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1803"",
    ""organization_guid"": ""249a6828-3b22-4eb8-9771-396617964f9b"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/249a6828-3b22-4eb8-9771-396617964f9b"",
    ""developers_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/developers"",
    ""managers_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/managers"",
    ""auditors_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/auditors"",
    ""apps_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/apps"",
    ""routes_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/routes"",
    ""domains_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/domains"",
    ""service_instances_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/service_instances"",
    ""app_events_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/app_events"",
    ""events_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/events"",
    ""security_groups_url"": ""/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/security_groups""
  }
}";
    
            RemoveSecurityGroupFromSpaceResponse obj = Util.DeserializeJson<RemoveSecurityGroupFromSpaceResponse>(json);
        
            Assert.AreEqual("cc64b313-7264-438e-ba2e-155a3cabc411", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1803", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("249a6828-3b22-4eb8-9771-396617964f9b", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/249a6828-3b22-4eb8-9771-396617964f9b", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/cc64b313-7264-438e-ba2e-155a3cabc411/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestListAllSecurityGroupsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""381a2d58-ae34-493e-abff-3cf50b4df659"",
        ""url"": ""/v2/security_groups/381a2d58-ae34-493e-abff-3cf50b4df659"",
        ""created_at"": ""2015-02-19T03:53:07+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1802"",
        ""rules"": [
          {
            ""protocol"": ""udp"",
            ""ports"": ""8080"",
            ""destination"": ""198.41.191.47/1""
          }
        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/381a2d58-ae34-493e-abff-3cf50b4df659/spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllSecurityGroupsForSpaceResponse> page = Util.DeserializePage<ListAllSecurityGroupsForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("381a2d58-ae34-493e-abff-3cf50b4df659", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/security_groups/381a2d58-ae34-493e-abff-3cf50b4df659", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-1802", TestUtil.ToTestableString(page[0].Name), true);
                  
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].RunningDefault), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].StagingDefault), true);
                  Assert.AreEqual("/v2/security_groups/381a2d58-ae34-493e-abff-3cf50b4df659/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllServiceInstancesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""da4a9c57-e385-4cdf-9c77-1a3c6365aeef"",
        ""url"": ""/v2/service_instances/da4a9c57-e385-4cdf-9c77-1a3c6365aeef"",
        ""created_at"": ""2015-02-19T03:53:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1839"",
        ""credentials"": {
          ""creds-key-519"": ""creds-val-519""
        },
        ""service_plan_guid"": ""691fd136-6d1e-448f-af32-900faedc7160"",
        ""space_guid"": ""334aaff0-3619-408a-ac11-2753d17d3a25"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/334aaff0-3619-408a-ac11-2753d17d3a25"",
        ""service_plan_url"": ""/v2/service_plans/691fd136-6d1e-448f-af32-900faedc7160"",
        ""service_bindings_url"": ""/v2/service_instances/da4a9c57-e385-4cdf-9c77-1a3c6365aeef/service_bindings""
      }
    }
  ]
}";
    
            PagedResponse<ListAllServiceInstancesForSpaceResponse> page = Util.DeserializePage<ListAllServiceInstancesForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("da4a9c57-e385-4cdf-9c77-1a3c6365aeef", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/da4a9c57-e385-4cdf-9c77-1a3c6365aeef", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-1839", TestUtil.ToTestableString(page[0].Name), true);
                  
                  Assert.AreEqual("691fd136-6d1e-448f-af32-900faedc7160", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
                  Assert.AreEqual("334aaff0-3619-408a-ac11-2753d17d3a25", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
                  Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("/v2/spaces/334aaff0-3619-408a-ac11-2753d17d3a25", TestUtil.ToTestableString(page[0].SpaceUrl), true);
                  Assert.AreEqual("/v2/service_plans/691fd136-6d1e-448f-af32-900faedc7160", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
                  Assert.AreEqual("/v2/service_instances/da4a9c57-e385-4cdf-9c77-1a3c6365aeef/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllAuditorsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-285"",
        ""url"": ""/v2/users/uaa-id-285"",
        ""created_at"": ""2015-02-19T03:53:07+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-285/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-285/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-285/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-285/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-285/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-285/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-285/audited_spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllAuditorsForSpaceResponse> page = Util.DeserializePage<ListAllAuditorsForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("uaa-id-285", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/users/uaa-id-285", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
                  Assert.AreEqual("/v2/users/uaa-id-285/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-285/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-285/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-285/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-285/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-285/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-285/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestAssociateSecurityGroupWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""693f0778-a529-4b24-b2d3-51de68baf33a"",
    ""url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a"",
    ""created_at"": ""2015-02-19T03:53:07+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1807"",
    ""organization_guid"": ""6a5df795-603c-44d1-a040-8ce879f769ec"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/6a5df795-603c-44d1-a040-8ce879f769ec"",
    ""developers_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/developers"",
    ""managers_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/managers"",
    ""auditors_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/auditors"",
    ""apps_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/apps"",
    ""routes_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/routes"",
    ""domains_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/domains"",
    ""service_instances_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/service_instances"",
    ""app_events_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/app_events"",
    ""events_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/events"",
    ""security_groups_url"": ""/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/security_groups""
  }
}";
    
            AssociateSecurityGroupWithSpaceResponse obj = Util.DeserializeJson<AssociateSecurityGroupWithSpaceResponse>(json);
        
            Assert.AreEqual("693f0778-a529-4b24-b2d3-51de68baf33a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1807", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("6a5df795-603c-44d1-a040-8ce879f769ec", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/6a5df795-603c-44d1-a040-8ce879f769ec", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/693f0778-a529-4b24-b2d3-51de68baf33a/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestListAllDevelopersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-309"",
        ""url"": ""/v2/users/uaa-id-309"",
        ""created_at"": ""2015-02-19T03:53:09+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-309/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-309/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-309/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-309/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-309/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-309/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-309/audited_spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllDevelopersForSpaceResponse> page = Util.DeserializePage<ListAllDevelopersForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("uaa-id-309", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/users/uaa-id-309", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:09+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
                  Assert.AreEqual("/v2/users/uaa-id-309/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-309/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-309/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-309/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-309/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-309/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-309/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllServicesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""17a5ab87-99dd-4c0d-8699-cc15a21ace89"",
        ""url"": ""/v2/services/17a5ab87-99dd-4c0d-8699-cc15a21ace89"",
        ""created_at"": ""2015-02-19T03:53:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-79"",
        ""provider"": ""provider-70"",
        ""url"": ""https://foo.com/url-100"",
        ""description"": ""desc-183"",
        ""long_description"": null,
        ""version"": ""version-54"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""efe7319f-26f3-4fdf-ac49-bffff88709cb"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/17a5ab87-99dd-4c0d-8699-cc15a21ace89/service_plans""
      }
    }
  ]
}";
    
            PagedResponse<ListAllServicesForSpaceResponse> page = Util.DeserializePage<ListAllServicesForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("17a5ab87-99dd-4c0d-8699-cc15a21ace89", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/services/17a5ab87-99dd-4c0d-8699-cc15a21ace89", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("label-79", TestUtil.ToTestableString(page[0].Label), true);
                  Assert.AreEqual("provider-70", TestUtil.ToTestableString(page[0].Provider), true);
                  Assert.AreEqual("https://foo.com/url-100", TestUtil.ToTestableString(page[0].Url), true);
                  Assert.AreEqual("desc-183", TestUtil.ToTestableString(page[0].Description), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
                  Assert.AreEqual("version-54", TestUtil.ToTestableString(page[0].Version), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
                  Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
                  Assert.AreEqual("efe7319f-26f3-4fdf-ac49-bffff88709cb", TestUtil.ToTestableString(page[0].UniqueId), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
                  
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
                  Assert.AreEqual("/v2/services/17a5ab87-99dd-4c0d-8699-cc15a21ace89/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestAssociateAuditorWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9a99dd8c-9181-495b-8b5c-b943696621ef"",
    ""url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef"",
    ""created_at"": ""2015-02-19T03:53:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1818"",
    ""organization_guid"": ""1be7ea8e-122a-4eb2-9ddf-0b71f7196cb1"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/1be7ea8e-122a-4eb2-9ddf-0b71f7196cb1"",
    ""developers_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/developers"",
    ""managers_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/managers"",
    ""auditors_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/auditors"",
    ""apps_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/apps"",
    ""routes_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/routes"",
    ""domains_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/domains"",
    ""service_instances_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/service_instances"",
    ""app_events_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/app_events"",
    ""events_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/events"",
    ""security_groups_url"": ""/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/security_groups""
  }
}";
    
            AssociateAuditorWithSpaceResponse obj = Util.DeserializeJson<AssociateAuditorWithSpaceResponse>(json);
        
            Assert.AreEqual("9a99dd8c-9181-495b-8b5c-b943696621ef", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1818", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1be7ea8e-122a-4eb2-9ddf-0b71f7196cb1", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/1be7ea8e-122a-4eb2-9ddf-0b71f7196cb1", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/9a99dd8c-9181-495b-8b5c-b943696621ef/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestUpdateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62"",
    ""url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62"",
    ""created_at"": ""2015-02-19T03:53:07+00:00"",
    ""updated_at"": ""2015-02-19T03:53:07+00:00""
  },
  ""entity"": {
    ""name"": ""New Space Name"",
    ""organization_guid"": ""e2247309-acbf-470a-9b53-957022512123"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/e2247309-acbf-470a-9b53-957022512123"",
    ""developers_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/developers"",
    ""managers_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/managers"",
    ""auditors_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/auditors"",
    ""apps_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/apps"",
    ""routes_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/routes"",
    ""domains_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/domains"",
    ""service_instances_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/service_instances"",
    ""app_events_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/app_events"",
    ""events_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/events"",
    ""security_groups_url"": ""/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/security_groups""
  }
}";
    
            UpdateSpaceResponse obj = Util.DeserializeJson<UpdateSpaceResponse>(json);
        
            Assert.AreEqual("9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Space Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("e2247309-acbf-470a-9b53-957022512123", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/e2247309-acbf-470a-9b53-957022512123", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/9cc4a0ef-3364-4ccd-96b4-fb3e72be6c62/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestAssociateDeveloperWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""eb72e521-3164-4048-a4c6-31bdbad9e6d5"",
    ""url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5"",
    ""created_at"": ""2015-02-19T03:53:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1854"",
    ""organization_guid"": ""ab24cb65-612e-4839-9682-ff2b4ec3690b"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/ab24cb65-612e-4839-9682-ff2b4ec3690b"",
    ""developers_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/developers"",
    ""managers_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/managers"",
    ""auditors_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/auditors"",
    ""apps_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/apps"",
    ""routes_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/routes"",
    ""domains_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/domains"",
    ""service_instances_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/service_instances"",
    ""app_events_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/app_events"",
    ""events_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/events"",
    ""security_groups_url"": ""/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/security_groups""
  }
}";
    
            AssociateDeveloperWithSpaceResponse obj = Util.DeserializeJson<AssociateDeveloperWithSpaceResponse>(json);
        
            Assert.AreEqual("eb72e521-3164-4048-a4c6-31bdbad9e6d5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1854", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ab24cb65-612e-4839-9682-ff2b4ec3690b", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/ab24cb65-612e-4839-9682-ff2b4ec3690b", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/eb72e521-3164-4048-a4c6-31bdbad9e6d5/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestRemoveAuditorFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6588d508-67d9-42a5-90ea-682a360b9707"",
    ""url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707"",
    ""created_at"": ""2015-02-19T03:53:07+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1815"",
    ""organization_guid"": ""11ac9467-77e0-47eb-8a9c-2516c702ff13"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/11ac9467-77e0-47eb-8a9c-2516c702ff13"",
    ""developers_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/developers"",
    ""managers_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/managers"",
    ""auditors_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/auditors"",
    ""apps_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/apps"",
    ""routes_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/routes"",
    ""domains_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/domains"",
    ""service_instances_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/service_instances"",
    ""app_events_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/app_events"",
    ""events_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/events"",
    ""security_groups_url"": ""/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/security_groups""
  }
}";
    
            RemoveAuditorFromSpaceResponse obj = Util.DeserializeJson<RemoveAuditorFromSpaceResponse>(json);
        
            Assert.AreEqual("6588d508-67d9-42a5-90ea-682a360b9707", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1815", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("11ac9467-77e0-47eb-8a9c-2516c702ff13", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/11ac9467-77e0-47eb-8a9c-2516c702ff13", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/6588d508-67d9-42a5-90ea-682a360b9707/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestRemoveManagerFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2719c5fa-0e2c-4eed-b8be-9e6c18ed0271"",
    ""url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271"",
    ""created_at"": ""2015-02-19T03:53:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1827"",
    ""organization_guid"": ""80d283dd-4e8c-46f5-a3b3-21db63240166"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/80d283dd-4e8c-46f5-a3b3-21db63240166"",
    ""developers_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/developers"",
    ""managers_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/managers"",
    ""auditors_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/auditors"",
    ""apps_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/apps"",
    ""routes_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/routes"",
    ""domains_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/domains"",
    ""service_instances_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/service_instances"",
    ""app_events_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/app_events"",
    ""events_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/events"",
    ""security_groups_url"": ""/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/security_groups""
  }
}";
    
            RemoveManagerFromSpaceResponse obj = Util.DeserializeJson<RemoveManagerFromSpaceResponse>(json);
        
            Assert.AreEqual("2719c5fa-0e2c-4eed-b8be-9e6c18ed0271", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1827", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("80d283dd-4e8c-46f5-a3b3-21db63240166", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/80d283dd-4e8c-46f5-a3b3-21db63240166", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/2719c5fa-0e2c-4eed-b8be-9e6c18ed0271/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestRetrieveSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c45a464f-9eea-4015-bab6-7f80bc0cae71"",
    ""url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71"",
    ""created_at"": ""2015-02-19T03:53:07+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1791"",
    ""organization_guid"": ""b11017f4-d81c-4c42-925c-09ebbfe556fc"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/b11017f4-d81c-4c42-925c-09ebbfe556fc"",
    ""developers_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/developers"",
    ""managers_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/managers"",
    ""auditors_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/auditors"",
    ""apps_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/apps"",
    ""routes_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/routes"",
    ""domains_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/domains"",
    ""service_instances_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/service_instances"",
    ""app_events_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/app_events"",
    ""events_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/events"",
    ""security_groups_url"": ""/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/security_groups""
  }
}";
    
            RetrieveSpaceResponse obj = Util.DeserializeJson<RetrieveSpaceResponse>(json);
        
            Assert.AreEqual("c45a464f-9eea-4015-bab6-7f80bc0cae71", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1791", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("b11017f4-d81c-4c42-925c-09ebbfe556fc", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/b11017f4-d81c-4c42-925c-09ebbfe556fc", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/c45a464f-9eea-4015-bab6-7f80bc0cae71/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestListAllManagersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-295"",
        ""url"": ""/v2/users/uaa-id-295"",
        ""created_at"": ""2015-02-19T03:53:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-295/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-295/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-295/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-295/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-295/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-295/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-295/audited_spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllManagersForSpaceResponse> page = Util.DeserializePage<ListAllManagersForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("uaa-id-295", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/users/uaa-id-295", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
                  Assert.AreEqual("/v2/users/uaa-id-295/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-295/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-295/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-295/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-295/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-295/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-295/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllDomainsForSpaceDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fd4449a2-4dd2-4105-947e-b820c3d83dfe"",
        ""url"": ""/v2/domains/fd4449a2-4dd2-4105-947e-b820c3d83dfe"",
        ""created_at"": ""2015-02-19T03:53:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""10ae00ff-371c-4fb1-949f-0a691cb423f8"",
        ""url"": ""/v2/domains/10ae00ff-371c-4fb1-949f-0a691cb423f8"",
        ""created_at"": ""2015-02-19T03:53:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";
    
            PagedResponse<ListAllDomainsForSpaceDeprecatedResponse> page = Util.DeserializePage<ListAllDomainsForSpaceDeprecatedResponse>(json);
        
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("fd4449a2-4dd2-4105-947e-b820c3d83dfe", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/fd4449a2-4dd2-4105-947e-b820c3d83dfe", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:00+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
               
               
            
            
                Assert.AreEqual("10ae00ff-371c-4fb1-949f-0a691cb423f8", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/10ae00ff-371c-4fb1-949f-0a691cb423f8", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:00+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestAssociateManagerWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6718d532-4d2d-4002-a344-d8abe6a04c4c"",
    ""url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c"",
    ""created_at"": ""2015-02-19T03:53:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1830"",
    ""organization_guid"": ""d8a142e0-e032-4bb5-be3c-424c5b31fec3"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/d8a142e0-e032-4bb5-be3c-424c5b31fec3"",
    ""developers_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/developers"",
    ""managers_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/managers"",
    ""auditors_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/auditors"",
    ""apps_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/apps"",
    ""routes_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/routes"",
    ""domains_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/domains"",
    ""service_instances_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/service_instances"",
    ""app_events_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/app_events"",
    ""events_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/events"",
    ""security_groups_url"": ""/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/security_groups""
  }
}";
    
            AssociateManagerWithSpaceResponse obj = Util.DeserializeJson<AssociateManagerWithSpaceResponse>(json);
        
            Assert.AreEqual("6718d532-4d2d-4002-a344-d8abe6a04c4c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1830", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("d8a142e0-e032-4bb5-be3c-424c5b31fec3", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/d8a142e0-e032-4bb5-be3c-424c5b31fec3", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/6718d532-4d2d-4002-a344-d8abe6a04c4c/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestListAllEventsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d6b2a585-74f2-4001-a14c-060940a1d328"",
        ""url"": ""/v2/events/d6b2a585-74f2-4001-a14c-060940a1d328"",
        ""created_at"": ""2015-02-19T03:53:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-304"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""3132f3e9-ba04-4f90-9ea1-1f0768055815"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1833"",
        ""timestamp"": ""2015-02-19T03:53:08+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new_name""
          }
        },
        ""space_guid"": ""3132f3e9-ba04-4f90-9ea1-1f0768055815"",
        ""organization_guid"": ""2617999d-10af-4417-936b-80b7af85514d""
      }
    }
  ]
}";
    
            PagedResponse<ListAllEventsForSpaceResponse> page = Util.DeserializePage<ListAllEventsForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("d6b2a585-74f2-4001-a14c-060940a1d328", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/d6b2a585-74f2-4001-a14c-060940a1d328", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
                  Assert.AreEqual("uaa-id-304", TestUtil.ToTestableString(page[0].Actor), true);
                  Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
                  Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
                  Assert.AreEqual("3132f3e9-ba04-4f90-9ea1-1f0768055815", TestUtil.ToTestableString(page[0].Actee), true);
                  Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
                  Assert.AreEqual("name-1833", TestUtil.ToTestableString(page[0].ActeeName), true);
                  Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
                  
                  Assert.AreEqual("3132f3e9-ba04-4f90-9ea1-1f0768055815", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("2617999d-10af-4417-936b-80b7af85514d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllSpacesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""415dba42-3478-4e2b-86e1-6bee40d91a74"",
        ""url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74"",
        ""created_at"": ""2015-02-19T03:53:06+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1777"",
        ""organization_guid"": ""e1ca4d42-32a3-4464-9ea0-2c964c1a80d3"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/e1ca4d42-32a3-4464-9ea0-2c964c1a80d3"",
        ""developers_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/developers"",
        ""managers_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/managers"",
        ""auditors_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/auditors"",
        ""apps_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/apps"",
        ""routes_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/routes"",
        ""domains_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/domains"",
        ""service_instances_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/service_instances"",
        ""app_events_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/app_events"",
        ""events_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/events"",
        ""security_groups_url"": ""/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/security_groups""
      }
    }
  ]
}";
    
            PagedResponse<ListAllSpacesResponse> page = Util.DeserializePage<ListAllSpacesResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("415dba42-3478-4e2b-86e1-6bee40d91a74", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:06+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-1777", TestUtil.ToTestableString(page[0].Name), true);
                  Assert.AreEqual("e1ca4d42-32a3-4464-9ea0-2c964c1a80d3", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
                  Assert.AreEqual("/v2/organizations/e1ca4d42-32a3-4464-9ea0-2c964c1a80d3", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
                  Assert.AreEqual("/v2/spaces/415dba42-3478-4e2b-86e1-6bee40d91a74/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestRemoveDeveloperFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c"",
    ""url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c"",
    ""created_at"": ""2015-02-19T03:53:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1851"",
    ""organization_guid"": ""30577019-f730-483b-a28b-1ec8a90df669"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/30577019-f730-483b-a28b-1ec8a90df669"",
    ""developers_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/developers"",
    ""managers_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/managers"",
    ""auditors_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/auditors"",
    ""apps_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/apps"",
    ""routes_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/routes"",
    ""domains_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/domains"",
    ""service_instances_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/service_instances"",
    ""app_events_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/app_events"",
    ""events_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/events"",
    ""security_groups_url"": ""/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/security_groups""
  }
}";
    
            RemoveDeveloperFromSpaceResponse obj = Util.DeserializeJson<RemoveDeveloperFromSpaceResponse>(json);
        
            Assert.AreEqual("c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1851", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("30577019-f730-483b-a28b-1ec8a90df669", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/30577019-f730-483b-a28b-1ec8a90df669", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/c2dc2fb4-2fc2-4d96-ab11-89fd6a0c949c/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestCreateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""358310ce-85f8-44c1-89f9-3df7c3ccbecc"",
    ""url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc"",
    ""created_at"": ""2015-02-19T03:53:06+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""development"",
    ""organization_guid"": ""7f08d0d5-27aa-4245-aa1d-881507e79194"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/7f08d0d5-27aa-4245-aa1d-881507e79194"",
    ""developers_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/developers"",
    ""managers_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/managers"",
    ""auditors_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/auditors"",
    ""apps_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/apps"",
    ""routes_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/routes"",
    ""domains_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/domains"",
    ""service_instances_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/service_instances"",
    ""app_events_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/app_events"",
    ""events_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/events"",
    ""security_groups_url"": ""/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/security_groups""
  }
}";
    
            CreateSpaceResponse obj = Util.DeserializeJson<CreateSpaceResponse>(json);
        
            Assert.AreEqual("358310ce-85f8-44c1-89f9-3df7c3ccbecc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:06+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("development", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("7f08d0d5-27aa-4245-aa1d-881507e79194", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/7f08d0d5-27aa-4245-aa1d-881507e79194", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/358310ce-85f8-44c1-89f9-3df7c3ccbecc/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestListAllAppsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""86e72a32-2230-4f96-a903-431ab182ae49"",
        ""url"": ""/v2/apps/86e72a32-2230-4f96-a903-431ab182ae49"",
        ""created_at"": ""2015-02-19T03:53:07+00:00"",
        ""updated_at"": ""2015-02-19T03:53:07+00:00""
      },
      ""entity"": {
        ""name"": ""name-1797"",
        ""production"": false,
        ""space_guid"": ""b3656629-0db0-468b-a4d8-97d93a139756"",
        ""stack_guid"": ""4245cfff-c803-4311-a162-758345253500"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""959df70b-1607-40e8-b2b5-a39bce293350"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-02-19T03:53:07+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/b3656629-0db0-468b-a4d8-97d93a139756"",
        ""stack_url"": ""/v2/stacks/4245cfff-c803-4311-a162-758345253500"",
        ""events_url"": ""/v2/apps/86e72a32-2230-4f96-a903-431ab182ae49/events"",
        ""service_bindings_url"": ""/v2/apps/86e72a32-2230-4f96-a903-431ab182ae49/service_bindings"",
        ""routes_url"": ""/v2/apps/86e72a32-2230-4f96-a903-431ab182ae49/routes""
      }
    }
  ]
}";
    
            PagedResponse<ListAllAppsForSpaceResponse> page = Util.DeserializePage<ListAllAppsForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("86e72a32-2230-4f96-a903-431ab182ae49", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/apps/86e72a32-2230-4f96-a903-431ab182ae49", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-1797", TestUtil.ToTestableString(page[0].Name), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
                  Assert.AreEqual("b3656629-0db0-468b-a4d8-97d93a139756", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("4245cfff-c803-4311-a162-758345253500", TestUtil.ToTestableString(page[0].StackGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
                  Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
                  Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
                  Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
                  Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
                  Assert.AreEqual("959df70b-1607-40e8-b2b5-a39bce293350", TestUtil.ToTestableString(page[0].Version), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
                  Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
                  Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
                  Assert.AreEqual("2015-02-19T03:53:07+00:00", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
                  Assert.AreEqual("/v2/spaces/b3656629-0db0-468b-a4d8-97d93a139756", TestUtil.ToTestableString(page[0].SpaceUrl), true);
                  Assert.AreEqual("/v2/stacks/4245cfff-c803-4311-a162-758345253500", TestUtil.ToTestableString(page[0].StackUrl), true);
                  Assert.AreEqual("/v2/apps/86e72a32-2230-4f96-a903-431ab182ae49/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
                  Assert.AreEqual("/v2/apps/86e72a32-2230-4f96-a903-431ab182ae49/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
                  Assert.AreEqual("/v2/apps/86e72a32-2230-4f96-a903-431ab182ae49/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllRoutesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6c35e62f-b58d-44fc-964c-dd724c023fef"",
        ""url"": ""/v2/routes/6c35e62f-b58d-44fc-964c-dd724c023fef"",
        ""created_at"": ""2015-02-19T03:53:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-17"",
        ""domain_guid"": ""dccfc8bb-fd3a-416a-be8b-496f62c4a766"",
        ""space_guid"": ""74d18fae-9387-4487-8607-bcc878b9f723"",
        ""domain_url"": ""/v2/domains/dccfc8bb-fd3a-416a-be8b-496f62c4a766"",
        ""space_url"": ""/v2/spaces/74d18fae-9387-4487-8607-bcc878b9f723"",
        ""apps_url"": ""/v2/routes/6c35e62f-b58d-44fc-964c-dd724c023fef/apps""
      }
    }
  ]
}";
    
            PagedResponse<ListAllRoutesForSpaceResponse> page = Util.DeserializePage<ListAllRoutesForSpaceResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("6c35e62f-b58d-44fc-964c-dd724c023fef", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/routes/6c35e62f-b58d-44fc-964c-dd724c023fef", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:08+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("host-17", TestUtil.ToTestableString(page[0].Host), true);
                  Assert.AreEqual("dccfc8bb-fd3a-416a-be8b-496f62c4a766", TestUtil.ToTestableString(page[0].DomainGuid), true);
                  Assert.AreEqual("74d18fae-9387-4487-8607-bcc878b9f723", TestUtil.ToTestableString(page[0].SpaceGuid), true);
                  Assert.AreEqual("/v2/domains/dccfc8bb-fd3a-416a-be8b-496f62c4a766", TestUtil.ToTestableString(page[0].DomainUrl), true);
                  Assert.AreEqual("/v2/spaces/74d18fae-9387-4487-8607-bcc878b9f723", TestUtil.ToTestableString(page[0].SpaceUrl), true);
                  Assert.AreEqual("/v2/routes/6c35e62f-b58d-44fc-964c-dd724c023fef/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestGetSpaceSummaryResponse()
        {
            string json = @"{
  ""guid"": ""96665f17-9e14-403c-af5f-f9a1103c0431"",
  ""name"": ""name-1600"",
  ""apps"": [
    {
      ""guid"": ""5d9c6c4e-1a18-4192-a215-a81929687ed8"",
      ""urls"": [
        ""host-16.domain-52.example.com""
      ],
      ""routes"": [
        {
          ""guid"": ""aea4b48c-76a9-439e-97b7-67e1e7b5d483"",
          ""host"": ""host-16"",
          ""domain"": {
            ""guid"": ""460c8db0-36e4-4da6-aad3-cc0f4f4a4930"",
            ""name"": ""domain-52.example.com""
          }
        }
      ],
      ""service_count"": 1,
      ""service_names"": [
        ""name-1605""
      ],
      ""running_instances"": 0,
      ""name"": ""name-1603"",
      ""production"": false,
      ""space_guid"": ""96665f17-9e14-403c-af5f-f9a1103c0431"",
      ""stack_guid"": ""724ad12d-eb12-41ac-9836-fdaf40888e26"",
      ""buildpack"": null,
      ""detected_buildpack"": null,
      ""environment_json"": null,
      ""memory"": 1024,
      ""instances"": 1,
      ""disk_quota"": 1024,
      ""state"": ""STOPPED"",
      ""version"": ""9fe9c38c-7fe9-47d5-8395-2973c13a81fd"",
      ""command"": null,
      ""console"": false,
      ""debug"": null,
      ""staging_task_id"": null,
      ""package_state"": ""PENDING"",
      ""health_check_type"": ""port"",
      ""health_check_timeout"": null,
      ""staging_failed_reason"": null,
      ""docker_image"": null,
      ""package_updated_at"": ""2015-02-19T03:53:02+00:00"",
      ""detected_start_command"": """"
    }
  ],
  ""services"": [
    {
      ""guid"": ""01c7c948-0baf-4d65-88b9-443cb722bde8"",
      ""name"": ""name-1605"",
      ""bound_app_count"": 1,
      ""dashboard_url"": null,
      ""service_plan"": {
        ""guid"": ""b0a3c0d4-0f57-4540-b528-7c57ee4ccdb3"",
        ""name"": ""name-1606"",
        ""service"": {
          ""guid"": ""a852b318-0afc-467a-b066-4b45fc97fd04"",
          ""label"": ""label-77"",
          ""provider"": ""provider-68"",
          ""version"": ""version-52""
        }
      }
    }
  ]
}";
    
            GetSpaceSummaryResponse obj = Util.DeserializeJson<GetSpaceSummaryResponse>(json);
        
            Assert.AreEqual("96665f17-9e14-403c-af5f-f9a1103c0431", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1600", TestUtil.ToTestableString(obj.Name), true);
            
            
        }

    }
}
