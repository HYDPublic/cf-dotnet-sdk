//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpacesTest
    {


        [TestMethod]
        public void TestGetSpaceSummaryResponse()
        {
            string json = @"{
  ""guid"": ""6f40184f-491d-4964-945a-bf07396e901a"",
  ""name"": ""name-1897"",
  ""apps"": [
    {
      ""guid"": ""6caca521-c227-49fd-a40d-e546f4b71c4f"",
      ""urls"": [
        ""host-18.domain-40.example.com""
      ],
      ""routes"": [
        {
          ""guid"": ""f321c59d-c364-403f-a81c-4b6c728d543d"",
          ""host"": ""host-18"",
          ""domain"": {
            ""guid"": ""4fc3cd1c-b7de-40b9-bb99-0736a7caf55b"",
            ""name"": ""domain-40.example.com""
          }
        }
      ],
      ""service_count"": 1,
      ""service_names"": [
        ""name-1902""
      ],
      ""running_instances"": 0,
      ""name"": ""name-1900"",
      ""production"": false,
      ""space_guid"": ""6f40184f-491d-4964-945a-bf07396e901a"",
      ""stack_guid"": ""93949ade-2c51-4f0b-b771-e32fb5b53aa7"",
      ""buildpack"": null,
      ""detected_buildpack"": null,
      ""environment_json"": null,
      ""memory"": 1024,
      ""instances"": 1,
      ""disk_quota"": 1024,
      ""state"": ""STOPPED"",
      ""version"": ""f17d995d-cccd-427f-9b77-87354f975050"",
      ""command"": null,
      ""console"": false,
      ""debug"": null,
      ""staging_task_id"": null,
      ""package_state"": ""PENDING"",
      ""health_check_type"": ""port"",
      ""health_check_timeout"": null,
      ""staging_failed_reason"": null,
      ""docker_image"": null,
      ""package_updated_at"": ""2015-04-16T12:04:37+00:00"",
      ""detected_start_command"": """"
    }
  ],
  ""services"": [
    {
      ""guid"": ""696d4a00-b451-4a29-a741-51bd4311ba9e"",
      ""name"": ""name-1902"",
      ""bound_app_count"": 1,
      ""dashboard_url"": null,
      ""service_plan"": {
        ""guid"": ""aeda00a0-1ba2-4327-884f-7351ec6c1baa"",
        ""name"": ""name-1903"",
        ""service"": {
          ""guid"": ""073a4ba5-3183-4557-a32a-f34a7cc9752f"",
          ""label"": ""label-72"",
          ""provider"": ""provider-72"",
          ""version"": ""version-56""
        }
      }
    }
  ]
}";

            GetSpaceSummaryResponse obj = Utilities.DeserializeJson<GetSpaceSummaryResponse>(json);

            Assert.AreEqual("6f40184f-491d-4964-945a-bf07396e901a", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1897", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""14eb4e7a-24ea-45f7-acd7-0dd7e781c935"",
    ""url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935"",
    ""created_at"": ""2015-04-16T12:04:21+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-346"",
    ""organization_guid"": ""3619e778-e34c-42ee-b1dd-965959d3c2ed"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/3619e778-e34c-42ee-b1dd-965959d3c2ed"",
    ""developers_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/developers"",
    ""managers_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/managers"",
    ""auditors_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/auditors"",
    ""apps_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/apps"",
    ""routes_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/routes"",
    ""domains_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/domains"",
    ""service_instances_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/service_instances"",
    ""app_events_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/app_events"",
    ""events_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/events"",
    ""security_groups_url"": ""/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/security_groups""
  }
}";

            AssociateAuditorWithSpaceResponse obj = Utilities.DeserializeJson<AssociateAuditorWithSpaceResponse>(json);

            Assert.AreEqual("14eb4e7a-24ea-45f7-acd7-0dd7e781c935", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-346", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("3619e778-e34c-42ee-b1dd-965959d3c2ed", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/3619e778-e34c-42ee-b1dd-965959d3c2ed", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/14eb4e7a-24ea-45f7-acd7-0dd7e781c935/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllDevelopersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-126"",
        ""url"": ""/v2/users/uaa-id-126"",
        ""created_at"": ""2015-04-16T12:04:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-126/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-126/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-126/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-126/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-126/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-126/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-126/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDevelopersForSpaceResponse> page = Utilities.DeserializePage<ListAllDevelopersForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-126", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-126", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:20+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-126/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSecurityGroupFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b6aa14ee-54b2-464e-a63e-a9d55e4fbef5"",
    ""url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5"",
    ""created_at"": ""2015-04-16T12:04:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-374"",
    ""organization_guid"": ""87d0c058-492a-49ec-ab04-a7af4df00219"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/87d0c058-492a-49ec-ab04-a7af4df00219"",
    ""developers_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/developers"",
    ""managers_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/managers"",
    ""auditors_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/auditors"",
    ""apps_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/apps"",
    ""routes_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/routes"",
    ""domains_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/domains"",
    ""service_instances_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/service_instances"",
    ""app_events_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/app_events"",
    ""events_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/events"",
    ""security_groups_url"": ""/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/security_groups""
  }
}";

            RemoveSecurityGroupFromSpaceResponse obj = Utilities.DeserializeJson<RemoveSecurityGroupFromSpaceResponse>(json);

            Assert.AreEqual("b6aa14ee-54b2-464e-a63e-a9d55e4fbef5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-374", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("87d0c058-492a-49ec-ab04-a7af4df00219", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/87d0c058-492a-49ec-ab04-a7af4df00219", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/b6aa14ee-54b2-464e-a63e-a9d55e4fbef5/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestCreateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74"",
    ""url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74"",
    ""created_at"": ""2015-04-16T12:04:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""development"",
    ""organization_guid"": ""2028c684-827a-4eb8-a233-2bc624b92af1"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/2028c684-827a-4eb8-a233-2bc624b92af1"",
    ""developers_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/developers"",
    ""managers_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/managers"",
    ""auditors_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/auditors"",
    ""apps_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/apps"",
    ""routes_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/routes"",
    ""domains_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/domains"",
    ""service_instances_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/service_instances"",
    ""app_events_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/app_events"",
    ""events_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/events"",
    ""security_groups_url"": ""/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/security_groups""
  }
}";

            CreateSpaceResponse obj = Utilities.DeserializeJson<CreateSpaceResponse>(json);

            Assert.AreEqual("67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("development", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("2028c684-827a-4eb8-a233-2bc624b92af1", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/2028c684-827a-4eb8-a233-2bc624b92af1", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/67e7e9e1-9fba-4a4e-aaad-7e58fcbfcd74/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveDeveloperFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bb7fb4ee-3800-4ff8-9818-9f6a5584910c"",
    ""url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c"",
    ""created_at"": ""2015-04-16T12:04:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-323"",
    ""organization_guid"": ""ea24bd81-38af-4827-9f33-df984f5db6a7"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/ea24bd81-38af-4827-9f33-df984f5db6a7"",
    ""developers_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/developers"",
    ""managers_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/managers"",
    ""auditors_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/auditors"",
    ""apps_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/apps"",
    ""routes_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/routes"",
    ""domains_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/domains"",
    ""service_instances_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/service_instances"",
    ""app_events_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/app_events"",
    ""events_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/events"",
    ""security_groups_url"": ""/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/security_groups""
  }
}";

            RemoveDeveloperFromSpaceResponse obj = Utilities.DeserializeJson<RemoveDeveloperFromSpaceResponse>(json);

            Assert.AreEqual("bb7fb4ee-3800-4ff8-9818-9f6a5584910c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-323", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ea24bd81-38af-4827-9f33-df984f5db6a7", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/ea24bd81-38af-4827-9f33-df984f5db6a7", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/bb7fb4ee-3800-4ff8-9818-9f6a5584910c/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-150"",
        ""url"": ""/v2/users/uaa-id-150"",
        ""created_at"": ""2015-04-16T12:04:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-150/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-150/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-150/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-150/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-150/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-150/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-150/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForSpaceResponse> page = Utilities.DeserializePage<ListAllManagersForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-150", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-150", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-150/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-150/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e56c98e0-42d8-4210-bb59-d96a461d13f2"",
        ""url"": ""/v2/service_instances/e56c98e0-42d8-4210-bb59-d96a461d13f2"",
        ""created_at"": ""2015-04-16T12:04:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-352"",
        ""credentials"": {
          ""creds-key-242"": ""creds-val-242""
        },
        ""service_plan_guid"": ""20051954-4541-4eef-a883-918168dd70f4"",
        ""space_guid"": ""08b371c2-9e8e-4be9-ba59-00dc00bcc6a7"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/08b371c2-9e8e-4be9-ba59-00dc00bcc6a7"",
        ""service_plan_url"": ""/v2/service_plans/20051954-4541-4eef-a883-918168dd70f4"",
        ""service_bindings_url"": ""/v2/service_instances/e56c98e0-42d8-4210-bb59-d96a461d13f2/service_bindings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForSpaceResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e56c98e0-42d8-4210-bb59-d96a461d13f2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/e56c98e0-42d8-4210-bb59-d96a461d13f2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-352", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("20051954-4541-4eef-a883-918168dd70f4", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("08b371c2-9e8e-4be9-ba59-00dc00bcc6a7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/08b371c2-9e8e-4be9-ba59-00dc00bcc6a7", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/20051954-4541-4eef-a883-918168dd70f4", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/e56c98e0-42d8-4210-bb59-d96a461d13f2/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditorFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2bd60f4e-24e8-4537-ba16-bf691867dfbc"",
    ""url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc"",
    ""created_at"": ""2015-04-16T12:04:21+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-343"",
    ""organization_guid"": ""586c82b2-8f8c-4609-aa4c-8254a932b8f0"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/586c82b2-8f8c-4609-aa4c-8254a932b8f0"",
    ""developers_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/developers"",
    ""managers_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/managers"",
    ""auditors_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/auditors"",
    ""apps_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/apps"",
    ""routes_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/routes"",
    ""domains_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/domains"",
    ""service_instances_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/service_instances"",
    ""app_events_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/app_events"",
    ""events_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/events"",
    ""security_groups_url"": ""/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/security_groups""
  }
}";

            RemoveAuditorFromSpaceResponse obj = Utilities.DeserializeJson<RemoveAuditorFromSpaceResponse>(json);

            Assert.AreEqual("2bd60f4e-24e8-4537-ba16-bf691867dfbc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-343", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("586c82b2-8f8c-4609-aa4c-8254a932b8f0", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/586c82b2-8f8c-4609-aa4c-8254a932b8f0", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/2bd60f4e-24e8-4537-ba16-bf691867dfbc/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d1ea45ce-5e54-4890-96a7-292c00f35688"",
        ""url"": ""/v2/apps/d1ea45ce-5e54-4890-96a7-292c00f35688"",
        ""created_at"": ""2015-04-16T12:04:21+00:00"",
        ""updated_at"": ""2015-04-16T12:04:21+00:00""
      },
      ""entity"": {
        ""name"": ""name-332"",
        ""production"": false,
        ""space_guid"": ""b0acb0d8-5fed-47df-893a-28d5269afa33"",
        ""stack_guid"": ""11d27f18-502e-4322-abe5-34f4acfe6d7e"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""fd7f4232-0fc2-478b-b829-a1cc6b4232ae"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-04-16T12:04:21+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/b0acb0d8-5fed-47df-893a-28d5269afa33"",
        ""stack_url"": ""/v2/stacks/11d27f18-502e-4322-abe5-34f4acfe6d7e"",
        ""events_url"": ""/v2/apps/d1ea45ce-5e54-4890-96a7-292c00f35688/events"",
        ""service_bindings_url"": ""/v2/apps/d1ea45ce-5e54-4890-96a7-292c00f35688/service_bindings"",
        ""routes_url"": ""/v2/apps/d1ea45ce-5e54-4890-96a7-292c00f35688/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsForSpaceResponse> page = Utilities.DeserializePage<ListAllAppsForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d1ea45ce-5e54-4890-96a7-292c00f35688", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/d1ea45ce-5e54-4890-96a7-292c00f35688", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-332", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("b0acb0d8-5fed-47df-893a-28d5269afa33", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("11d27f18-502e-4322-abe5-34f4acfe6d7e", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("fd7f4232-0fc2-478b-b829-a1cc6b4232ae", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/b0acb0d8-5fed-47df-893a-28d5269afa33", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/11d27f18-502e-4322-abe5-34f4acfe6d7e", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/d1ea45ce-5e54-4890-96a7-292c00f35688/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/d1ea45ce-5e54-4890-96a7-292c00f35688/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/d1ea45ce-5e54-4890-96a7-292c00f35688/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b86809f2-99aa-4041-ba72-355733caf00b"",
    ""url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b"",
    ""created_at"": ""2015-04-16T12:04:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-312"",
    ""organization_guid"": ""2207d07c-81d4-4bf2-a8eb-a171fbdd348d"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/2207d07c-81d4-4bf2-a8eb-a171fbdd348d"",
    ""developers_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/developers"",
    ""managers_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/managers"",
    ""auditors_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/auditors"",
    ""apps_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/apps"",
    ""routes_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/routes"",
    ""domains_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/domains"",
    ""service_instances_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/service_instances"",
    ""app_events_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/app_events"",
    ""events_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/events"",
    ""security_groups_url"": ""/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/security_groups""
  }
}";

            RetrieveSpaceResponse obj = Utilities.DeserializeJson<RetrieveSpaceResponse>(json);

            Assert.AreEqual("b86809f2-99aa-4041-ba72-355733caf00b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-312", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("2207d07c-81d4-4bf2-a8eb-a171fbdd348d", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/2207d07c-81d4-4bf2-a8eb-a171fbdd348d", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/b86809f2-99aa-4041-ba72-355733caf00b/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllEventsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""39580bd6-7c34-4a00-bfad-7f675a6a12e5"",
        ""url"": ""/v2/events/39580bd6-7c34-4a00-bfad-7f675a6a12e5"",
        ""created_at"": ""2015-04-16T12:04:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-137"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""504308f4-3343-48c9-aaac-f04f86cb92d9"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-337"",
        ""timestamp"": ""2015-04-16T12:04:21+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new_name""
          }
        },
        ""space_guid"": ""504308f4-3343-48c9-aaac-f04f86cb92d9"",
        ""organization_guid"": ""6bb8cee0-09dd-4c64-b2d4-887a3d02a139""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsForSpaceResponse> page = Utilities.DeserializePage<ListAllEventsForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("39580bd6-7c34-4a00-bfad-7f675a6a12e5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/39580bd6-7c34-4a00-bfad-7f675a6a12e5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-137", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("504308f4-3343-48c9-aaac-f04f86cb92d9", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-337", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("504308f4-3343-48c9-aaac-f04f86cb92d9", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6bb8cee0-09dd-4c64-b2d4-887a3d02a139", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestAssociateSecurityGroupWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""31e001c4-5d49-4019-8262-f353c150ff08"",
    ""url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08"",
    ""created_at"": ""2015-04-16T12:04:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-378"",
    ""organization_guid"": ""3f4464b1-869a-441d-9a19-5e9881a1ff8f"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/3f4464b1-869a-441d-9a19-5e9881a1ff8f"",
    ""developers_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/developers"",
    ""managers_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/managers"",
    ""auditors_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/auditors"",
    ""apps_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/apps"",
    ""routes_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/routes"",
    ""domains_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/domains"",
    ""service_instances_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/service_instances"",
    ""app_events_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/app_events"",
    ""events_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/events"",
    ""security_groups_url"": ""/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/security_groups""
  }
}";

            AssociateSecurityGroupWithSpaceResponse obj = Utilities.DeserializeJson<AssociateSecurityGroupWithSpaceResponse>(json);

            Assert.AreEqual("31e001c4-5d49-4019-8262-f353c150ff08", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-378", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("3f4464b1-869a-441d-9a19-5e9881a1ff8f", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/3f4464b1-869a-441d-9a19-5e9881a1ff8f", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/31e001c4-5d49-4019-8262-f353c150ff08/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagerFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""99927350-d7c8-4ce0-a5dd-3ab89175ae1e"",
    ""url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e"",
    ""created_at"": ""2015-04-16T12:04:21+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-361"",
    ""organization_guid"": ""c2c7d955-8828-4b85-9571-0ac5dd092b3b"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/c2c7d955-8828-4b85-9571-0ac5dd092b3b"",
    ""developers_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/developers"",
    ""managers_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/managers"",
    ""auditors_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/auditors"",
    ""apps_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/apps"",
    ""routes_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/routes"",
    ""domains_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/domains"",
    ""service_instances_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/service_instances"",
    ""app_events_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/app_events"",
    ""events_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/events"",
    ""security_groups_url"": ""/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/security_groups""
  }
}";

            RemoveManagerFromSpaceResponse obj = Utilities.DeserializeJson<RemoveManagerFromSpaceResponse>(json);

            Assert.AreEqual("99927350-d7c8-4ce0-a5dd-3ab89175ae1e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-361", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("c2c7d955-8828-4b85-9571-0ac5dd092b3b", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/c2c7d955-8828-4b85-9571-0ac5dd092b3b", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/99927350-d7c8-4ce0-a5dd-3ab89175ae1e/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d387b003-9c1c-433c-854e-8a22dab7cffa"",
        ""url"": ""/v2/services/d387b003-9c1c-433c-854e-8a22dab7cffa"",
        ""created_at"": ""2015-04-16T12:04:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-29"",
        ""provider"": ""provider-29"",
        ""url"": ""https://foo.com/url-19"",
        ""description"": ""desc-42"",
        ""long_description"": null,
        ""version"": ""version-13"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""34108a73-0b42-4a37-bef0-5fbceb2ba36e"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/d387b003-9c1c-433c-854e-8a22dab7cffa/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForSpaceResponse> page = Utilities.DeserializePage<ListAllServicesForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d387b003-9c1c-433c-854e-8a22dab7cffa", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/d387b003-9c1c-433c-854e-8a22dab7cffa", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-29", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-29", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("https://foo.com/url-19", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-42", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("version-13", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("34108a73-0b42-4a37-bef0-5fbceb2ba36e", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/d387b003-9c1c-433c-854e-8a22dab7cffa/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestAssociateDeveloperWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d7369280-3ff1-4f26-899d-449b79d9635b"",
    ""url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b"",
    ""created_at"": ""2015-04-16T12:04:21+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-326"",
    ""organization_guid"": ""7534e9e3-9631-4fbe-b62a-04704a67b26c"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/7534e9e3-9631-4fbe-b62a-04704a67b26c"",
    ""developers_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/developers"",
    ""managers_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/managers"",
    ""auditors_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/auditors"",
    ""apps_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/apps"",
    ""routes_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/routes"",
    ""domains_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/domains"",
    ""service_instances_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/service_instances"",
    ""app_events_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/app_events"",
    ""events_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/events"",
    ""security_groups_url"": ""/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/security_groups""
  }
}";

            AssociateDeveloperWithSpaceResponse obj = Utilities.DeserializeJson<AssociateDeveloperWithSpaceResponse>(json);

            Assert.AreEqual("d7369280-3ff1-4f26-899d-449b79d9635b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-326", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("7534e9e3-9631-4fbe-b62a-04704a67b26c", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/7534e9e3-9631-4fbe-b62a-04704a67b26c", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/d7369280-3ff1-4f26-899d-449b79d9635b/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllSecurityGroupsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""607c408a-40fa-471d-a148-bc7f377ad7d6"",
        ""url"": ""/v2/security_groups/607c408a-40fa-471d-a148-bc7f377ad7d6"",
        ""created_at"": ""2015-04-16T12:04:22+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-373"",
        ""rules"": [
          {
            ""protocol"": ""udp"",
            ""ports"": ""8080"",
            ""destination"": ""198.41.191.47/1""
          }
        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/607c408a-40fa-471d-a148-bc7f377ad7d6/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSecurityGroupsForSpaceResponse> page = Utilities.DeserializePage<ListAllSecurityGroupsForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("607c408a-40fa-471d-a148-bc7f377ad7d6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/607c408a-40fa-471d-a148-bc7f377ad7d6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:22+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-373", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/607c408a-40fa-471d-a148-bc7f377ad7d6/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForSpaceDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0210f9ef-64f7-48c4-b37e-5cd5e4080da5"",
        ""url"": ""/v2/domains/0210f9ef-64f7-48c4-b37e-5cd5e4080da5"",
        ""created_at"": ""2015-04-16T12:04:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""0359e25a-338d-42e0-ac6c-f7fc3dd3032d"",
        ""url"": ""/v2/domains/0359e25a-338d-42e0-ac6c-f7fc3dd3032d"",
        ""created_at"": ""2015-04-16T12:04:14+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForSpaceDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForSpaceDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0210f9ef-64f7-48c4-b37e-5cd5e4080da5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/0210f9ef-64f7-48c4-b37e-5cd5e4080da5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:14+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("0359e25a-338d-42e0-ac6c-f7fc3dd3032d", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/0359e25a-338d-42e0-ac6c-f7fc3dd3032d", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:14+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
        }

        [TestMethod]
        public void TestListAllRoutesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2bf1f265-0ef8-45bf-a264-0455bd0acafa"",
        ""url"": ""/v2/routes/2bf1f265-0ef8-45bf-a264-0455bd0acafa"",
        ""created_at"": ""2015-04-16T12:04:22+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-10"",
        ""domain_guid"": ""e493705b-a11e-4a4b-8913-cb2e455cef17"",
        ""space_guid"": ""a25299f7-1edc-4526-9fdc-080c0c33d170"",
        ""domain_url"": ""/v2/domains/e493705b-a11e-4a4b-8913-cb2e455cef17"",
        ""space_url"": ""/v2/spaces/a25299f7-1edc-4526-9fdc-080c0c33d170"",
        ""apps_url"": ""/v2/routes/2bf1f265-0ef8-45bf-a264-0455bd0acafa/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForSpaceResponse> page = Utilities.DeserializePage<ListAllRoutesForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2bf1f265-0ef8-45bf-a264-0455bd0acafa", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/2bf1f265-0ef8-45bf-a264-0455bd0acafa", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:22+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-10", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("e493705b-a11e-4a4b-8913-cb2e455cef17", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("a25299f7-1edc-4526-9fdc-080c0c33d170", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/e493705b-a11e-4a4b-8913-cb2e455cef17", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/a25299f7-1edc-4526-9fdc-080c0c33d170", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/2bf1f265-0ef8-45bf-a264-0455bd0acafa/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0a3019ea-3208-4111-a27d-68a6643deeef"",
        ""url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef"",
        ""created_at"": ""2015-04-16T12:04:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-303"",
        ""organization_guid"": ""a9a741a7-f324-4270-a016-ca3a4942c00d"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/a9a741a7-f324-4270-a016-ca3a4942c00d"",
        ""developers_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/developers"",
        ""managers_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/managers"",
        ""auditors_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/auditors"",
        ""apps_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/apps"",
        ""routes_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/routes"",
        ""domains_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/domains"",
        ""service_instances_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/service_instances"",
        ""app_events_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/app_events"",
        ""events_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/events"",
        ""security_groups_url"": ""/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesResponse> page = Utilities.DeserializePage<ListAllSpacesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0a3019ea-3208-4111-a27d-68a6643deeef", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:20+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-303", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("a9a741a7-f324-4270-a016-ca3a4942c00d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/a9a741a7-f324-4270-a016-ca3a4942c00d", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/0a3019ea-3208-4111-a27d-68a6643deeef/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b2311ef1-2ceb-4c2b-9982-1d06ac072b49"",
    ""url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49"",
    ""created_at"": ""2015-04-16T12:04:21+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-364"",
    ""organization_guid"": ""c583a53f-5154-415a-aeab-9a188378c4ad"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/c583a53f-5154-415a-aeab-9a188378c4ad"",
    ""developers_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/developers"",
    ""managers_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/managers"",
    ""auditors_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/auditors"",
    ""apps_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/apps"",
    ""routes_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/routes"",
    ""domains_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/domains"",
    ""service_instances_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/service_instances"",
    ""app_events_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/app_events"",
    ""events_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/events"",
    ""security_groups_url"": ""/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/security_groups""
  }
}";

            AssociateManagerWithSpaceResponse obj = Utilities.DeserializeJson<AssociateManagerWithSpaceResponse>(json);

            Assert.AreEqual("b2311ef1-2ceb-4c2b-9982-1d06ac072b49", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-364", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("c583a53f-5154-415a-aeab-9a188378c4ad", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/c583a53f-5154-415a-aeab-9a188378c4ad", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/b2311ef1-2ceb-4c2b-9982-1d06ac072b49/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""884413ad-f3ce-4e86-a10d-c94394b75183"",
    ""url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183"",
    ""created_at"": ""2015-04-16T12:04:20+00:00"",
    ""updated_at"": ""2015-04-16T12:04:20+00:00""
  },
  ""entity"": {
    ""name"": ""New Space Name"",
    ""organization_guid"": ""f6c2a150-7bc0-40f2-a057-5d40752f4166"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/f6c2a150-7bc0-40f2-a057-5d40752f4166"",
    ""developers_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/developers"",
    ""managers_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/managers"",
    ""auditors_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/auditors"",
    ""apps_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/apps"",
    ""routes_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/routes"",
    ""domains_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/domains"",
    ""service_instances_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/service_instances"",
    ""app_events_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/app_events"",
    ""events_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/events"",
    ""security_groups_url"": ""/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/security_groups""
  }
}";

            UpdateSpaceResponse obj = Utilities.DeserializeJson<UpdateSpaceResponse>(json);

            Assert.AreEqual("884413ad-f3ce-4e86-a10d-c94394b75183", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-16T12:04:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Space Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("f6c2a150-7bc0-40f2-a057-5d40752f4166", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/f6c2a150-7bc0-40f2-a057-5d40752f4166", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/884413ad-f3ce-4e86-a10d-c94394b75183/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-139"",
        ""url"": ""/v2/users/uaa-id-139"",
        ""created_at"": ""2015-04-16T12:04:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-139/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-139/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-139/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-139/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-139/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-139/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-139/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForSpaceResponse> page = Utilities.DeserializePage<ListAllAuditorsForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-139", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-139", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-16T12:04:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-139/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }
    }
}
