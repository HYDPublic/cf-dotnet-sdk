//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpacesTest
    {


        [TestMethod]
        public void TestGetSpaceSummaryResponse()
        {
            string json = @"{
  ""guid"": ""a388dcc6-03f0-47c1-8d6b-539ecdd2f04f"",
  ""name"": ""name-30"",
  ""apps"": [
    {
      ""guid"": ""53c9e5d6-6731-4927-a3ce-dfcccbb4165d"",
      ""urls"": [
        ""host-1.domain-1.example.com""
      ],
      ""routes"": [
        {
          ""guid"": ""dacde2d9-869e-414d-92a4-5d65afe92967"",
          ""host"": ""host-1"",
          ""domain"": {
            ""guid"": ""07b515d5-181d-403b-ba88-cdb57a386437"",
            ""name"": ""domain-1.example.com""
          }
        }
      ],
      ""service_count"": 1,
      ""service_names"": [
        ""name-35""
      ],
      ""running_instances"": 0,
      ""name"": ""name-33"",
      ""production"": false,
      ""space_guid"": ""a388dcc6-03f0-47c1-8d6b-539ecdd2f04f"",
      ""stack_guid"": ""7f83434f-e0ba-4502-888c-ddecb2a64767"",
      ""buildpack"": null,
      ""detected_buildpack"": null,
      ""environment_json"": null,
      ""memory"": 1024,
      ""instances"": 1,
      ""disk_quota"": 1024,
      ""state"": ""STOPPED"",
      ""version"": ""043bf832-6a63-4282-88be-ff7c6d9e20ca"",
      ""command"": null,
      ""console"": false,
      ""debug"": null,
      ""staging_task_id"": null,
      ""package_state"": ""PENDING"",
      ""health_check_type"": ""port"",
      ""health_check_timeout"": null,
      ""staging_failed_reason"": null,
      ""docker_image"": null,
      ""package_updated_at"": ""2015-05-19T15:27:02+00:00"",
      ""detected_start_command"": """"
    }
  ],
  ""services"": [
    {
      ""guid"": ""7d707c03-4a84-4987-93da-2d26b9217849"",
      ""name"": ""name-35"",
      ""bound_app_count"": 1,
      ""dashboard_url"": null,
      ""service_plan"": {
        ""guid"": ""34b8864d-f53b-4ae5-9efc-7204b155e554"",
        ""name"": ""name-36"",
        ""service"": {
          ""guid"": ""c121abe3-3bbf-4161-b11e-53d4400f2443"",
          ""label"": ""label-17"",
          ""provider"": ""provider-17"",
          ""version"": ""version-1""
        }
      }
    }
  ]
}";

            GetSpaceSummaryResponse obj = Utilities.DeserializeJson<GetSpaceSummaryResponse>(json);

            Assert.AreEqual("a388dcc6-03f0-47c1-8d6b-539ecdd2f04f", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-30", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f9cb5229-d87d-4624-9dc3-7503be07f3a4"",
    ""url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4"",
    ""created_at"": ""2015-05-19T15:27:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-488"",
    ""organization_guid"": ""c76d4c69-0406-4737-b460-3b26135f02c2"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/c76d4c69-0406-4737-b460-3b26135f02c2"",
    ""developers_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/developers"",
    ""managers_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/managers"",
    ""auditors_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/auditors"",
    ""apps_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/apps"",
    ""routes_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/routes"",
    ""domains_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/domains"",
    ""service_instances_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/service_instances"",
    ""app_events_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/app_events"",
    ""events_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/events"",
    ""security_groups_url"": ""/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/security_groups""
  }
}";

            AssociateAuditorWithSpaceResponse obj = Utilities.DeserializeJson<AssociateAuditorWithSpaceResponse>(json);

            Assert.AreEqual("f9cb5229-d87d-4624-9dc3-7503be07f3a4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-488", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("c76d4c69-0406-4737-b460-3b26135f02c2", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/c76d4c69-0406-4737-b460-3b26135f02c2", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/f9cb5229-d87d-4624-9dc3-7503be07f3a4/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllDevelopersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-116"",
        ""url"": ""/v2/users/uaa-id-116"",
        ""created_at"": ""2015-05-19T15:27:10+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-116/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-116/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-116/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-116/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-116/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-116/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-116/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDevelopersForSpaceResponse> page = Utilities.DeserializePage<ListAllDevelopersForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-116", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-116", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-116/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-116/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-116/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-116/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-116/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-116/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-116/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSecurityGroupFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4600d70c-beff-4817-bf6a-28b19804ecfa"",
    ""url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa"",
    ""created_at"": ""2015-05-19T15:27:10+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-508"",
    ""organization_guid"": ""8c3c6da6-a913-44ff-825d-65902086eb39"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/8c3c6da6-a913-44ff-825d-65902086eb39"",
    ""developers_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/developers"",
    ""managers_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/managers"",
    ""auditors_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/auditors"",
    ""apps_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/apps"",
    ""routes_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/routes"",
    ""domains_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/domains"",
    ""service_instances_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/service_instances"",
    ""app_events_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/app_events"",
    ""events_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/events"",
    ""security_groups_url"": ""/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/security_groups""
  }
}";

            RemoveSecurityGroupFromSpaceResponse obj = Utilities.DeserializeJson<RemoveSecurityGroupFromSpaceResponse>(json);

            Assert.AreEqual("4600d70c-beff-4817-bf6a-28b19804ecfa", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-508", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("8c3c6da6-a913-44ff-825d-65902086eb39", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/8c3c6da6-a913-44ff-825d-65902086eb39", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/4600d70c-beff-4817-bf6a-28b19804ecfa/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestCreateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bc34f67b-742f-4c95-ba35-6339b4856911"",
    ""url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911"",
    ""created_at"": ""2015-05-19T15:27:11+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""development"",
    ""organization_guid"": ""df7cbf3b-1933-4deb-ae48-16457b60f772"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/df7cbf3b-1933-4deb-ae48-16457b60f772"",
    ""developers_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/developers"",
    ""managers_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/managers"",
    ""auditors_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/auditors"",
    ""apps_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/apps"",
    ""routes_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/routes"",
    ""domains_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/domains"",
    ""service_instances_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/service_instances"",
    ""app_events_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/app_events"",
    ""events_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/events"",
    ""security_groups_url"": ""/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/security_groups""
  }
}";

            CreateSpaceResponse obj = Utilities.DeserializeJson<CreateSpaceResponse>(json);

            Assert.AreEqual("bc34f67b-742f-4c95-ba35-6339b4856911", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("development", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("df7cbf3b-1933-4deb-ae48-16457b60f772", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/df7cbf3b-1933-4deb-ae48-16457b60f772", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/bc34f67b-742f-4c95-ba35-6339b4856911/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveDeveloperFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1f91fbcc-a873-44fb-af03-0ead6a00953b"",
    ""url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b"",
    ""created_at"": ""2015-05-19T15:27:10+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-526"",
    ""organization_guid"": ""630efe3e-dafb-4879-9468-c5e450b7cc69"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/630efe3e-dafb-4879-9468-c5e450b7cc69"",
    ""developers_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/developers"",
    ""managers_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/managers"",
    ""auditors_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/auditors"",
    ""apps_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/apps"",
    ""routes_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/routes"",
    ""domains_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/domains"",
    ""service_instances_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/service_instances"",
    ""app_events_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/app_events"",
    ""events_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/events"",
    ""security_groups_url"": ""/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/security_groups""
  }
}";

            RemoveDeveloperFromSpaceResponse obj = Utilities.DeserializeJson<RemoveDeveloperFromSpaceResponse>(json);

            Assert.AreEqual("1f91fbcc-a873-44fb-af03-0ead6a00953b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-526", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("630efe3e-dafb-4879-9468-c5e450b7cc69", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/630efe3e-dafb-4879-9468-c5e450b7cc69", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/1f91fbcc-a873-44fb-af03-0ead6a00953b/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-126"",
        ""url"": ""/v2/users/uaa-id-126"",
        ""created_at"": ""2015-05-19T15:27:10+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-126/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-126/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-126/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-126/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-126/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-126/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-126/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForSpaceResponse> page = Utilities.DeserializePage<ListAllManagersForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-126", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-126", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-126/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-126/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a651acff-b400-49c7-ac71-2262ec99203b"",
        ""url"": ""/v2/service_instances/a651acff-b400-49c7-ac71-2262ec99203b"",
        ""created_at"": ""2015-05-19T15:27:10+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-535"",
        ""credentials"": {
          ""creds-key-235"": ""creds-val-235""
        },
        ""service_plan_guid"": ""ebef8951-7f43-4ed5-925f-b0b238f193dd"",
        ""space_guid"": ""4be7de1f-8723-42fa-a996-c91bc7e92217"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/4be7de1f-8723-42fa-a996-c91bc7e92217"",
        ""service_plan_url"": ""/v2/service_plans/ebef8951-7f43-4ed5-925f-b0b238f193dd"",
        ""service_bindings_url"": ""/v2/service_instances/a651acff-b400-49c7-ac71-2262ec99203b/service_bindings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForSpaceResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a651acff-b400-49c7-ac71-2262ec99203b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/a651acff-b400-49c7-ac71-2262ec99203b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-535", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("ebef8951-7f43-4ed5-925f-b0b238f193dd", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("4be7de1f-8723-42fa-a996-c91bc7e92217", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/4be7de1f-8723-42fa-a996-c91bc7e92217", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/ebef8951-7f43-4ed5-925f-b0b238f193dd", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/a651acff-b400-49c7-ac71-2262ec99203b/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditorFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""747c2068-c96a-4f60-ac85-178a8bc707b4"",
    ""url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4"",
    ""created_at"": ""2015-05-19T15:27:09+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-491"",
    ""organization_guid"": ""242689b4-23f5-4fb5-bc95-d5862e0a2640"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/242689b4-23f5-4fb5-bc95-d5862e0a2640"",
    ""developers_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/developers"",
    ""managers_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/managers"",
    ""auditors_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/auditors"",
    ""apps_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/apps"",
    ""routes_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/routes"",
    ""domains_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/domains"",
    ""service_instances_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/service_instances"",
    ""app_events_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/app_events"",
    ""events_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/events"",
    ""security_groups_url"": ""/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/security_groups""
  }
}";

            RemoveAuditorFromSpaceResponse obj = Utilities.DeserializeJson<RemoveAuditorFromSpaceResponse>(json);

            Assert.AreEqual("747c2068-c96a-4f60-ac85-178a8bc707b4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:09+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-491", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("242689b4-23f5-4fb5-bc95-d5862e0a2640", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/242689b4-23f5-4fb5-bc95-d5862e0a2640", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/747c2068-c96a-4f60-ac85-178a8bc707b4/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""40bf294c-759a-46c7-b93f-5b3943f997d9"",
        ""url"": ""/v2/apps/40bf294c-759a-46c7-b93f-5b3943f997d9"",
        ""created_at"": ""2015-05-19T15:27:11+00:00"",
        ""updated_at"": ""2015-05-19T15:27:11+00:00""
      },
      ""entity"": {
        ""name"": ""name-549"",
        ""production"": false,
        ""space_guid"": ""afce959d-713a-4a6a-8ee3-8c511b674678"",
        ""stack_guid"": ""3435e1db-fd24-4a5c-86e8-50d3472975a6"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""11b0f67a-df9b-4f32-9c37-e6fb151f8c2f"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-05-19T15:27:11+00:00"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/afce959d-713a-4a6a-8ee3-8c511b674678"",
        ""stack_url"": ""/v2/stacks/3435e1db-fd24-4a5c-86e8-50d3472975a6"",
        ""events_url"": ""/v2/apps/40bf294c-759a-46c7-b93f-5b3943f997d9/events"",
        ""service_bindings_url"": ""/v2/apps/40bf294c-759a-46c7-b93f-5b3943f997d9/service_bindings"",
        ""routes_url"": ""/v2/apps/40bf294c-759a-46c7-b93f-5b3943f997d9/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsForSpaceResponse> page = Utilities.DeserializePage<ListAllAppsForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("40bf294c-759a-46c7-b93f-5b3943f997d9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/40bf294c-759a-46c7-b93f-5b3943f997d9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-549", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("afce959d-713a-4a6a-8ee3-8c511b674678", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("3435e1db-fd24-4a5c-86e8-50d3472975a6", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("11b0f67a-df9b-4f32-9c37-e6fb151f8c2f", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/afce959d-713a-4a6a-8ee3-8c511b674678", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/3435e1db-fd24-4a5c-86e8-50d3472975a6", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/40bf294c-759a-46c7-b93f-5b3943f997d9/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/40bf294c-759a-46c7-b93f-5b3943f997d9/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/40bf294c-759a-46c7-b93f-5b3943f997d9/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""46ba50e9-4abb-45ad-8422-00390a5317d8"",
    ""url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8"",
    ""created_at"": ""2015-05-19T15:27:11+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-554"",
    ""organization_guid"": ""6d931e66-ea2c-4a1a-8d12-418ebd0902b2"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/6d931e66-ea2c-4a1a-8d12-418ebd0902b2"",
    ""developers_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/developers"",
    ""managers_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/managers"",
    ""auditors_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/auditors"",
    ""apps_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/apps"",
    ""routes_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/routes"",
    ""domains_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/domains"",
    ""service_instances_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/service_instances"",
    ""app_events_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/app_events"",
    ""events_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/events"",
    ""security_groups_url"": ""/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/security_groups""
  }
}";

            RetrieveSpaceResponse obj = Utilities.DeserializeJson<RetrieveSpaceResponse>(json);

            Assert.AreEqual("46ba50e9-4abb-45ad-8422-00390a5317d8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-554", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("6d931e66-ea2c-4a1a-8d12-418ebd0902b2", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/6d931e66-ea2c-4a1a-8d12-418ebd0902b2", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/46ba50e9-4abb-45ad-8422-00390a5317d8/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllEventsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""781309a3-fab9-46d4-8c81-65c721b7e73e"",
        ""url"": ""/v2/events/781309a3-fab9-46d4-8c81-65c721b7e73e"",
        ""created_at"": ""2015-05-19T15:27:10+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-107"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""05072295-cfab-45d9-8190-126f616f6a82"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-516"",
        ""timestamp"": ""2015-05-19T15:27:10+00:00"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new_name""
          }
        },
        ""space_guid"": ""05072295-cfab-45d9-8190-126f616f6a82"",
        ""organization_guid"": ""c5864fb7-5769-4689-bf72-f59f1eb5673d""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsForSpaceResponse> page = Utilities.DeserializePage<ListAllEventsForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("781309a3-fab9-46d4-8c81-65c721b7e73e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/781309a3-fab9-46d4-8c81-65c721b7e73e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-107", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("05072295-cfab-45d9-8190-126f616f6a82", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-516", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("05072295-cfab-45d9-8190-126f616f6a82", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c5864fb7-5769-4689-bf72-f59f1eb5673d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestAssociateSecurityGroupWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c560f558-e175-4009-b4ad-d6a66fa268c9"",
    ""url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9"",
    ""created_at"": ""2015-05-19T15:27:10+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-503"",
    ""organization_guid"": ""71817946-c2e2-4523-a59b-e0cc628b021c"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/71817946-c2e2-4523-a59b-e0cc628b021c"",
    ""developers_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/developers"",
    ""managers_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/managers"",
    ""auditors_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/auditors"",
    ""apps_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/apps"",
    ""routes_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/routes"",
    ""domains_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/domains"",
    ""service_instances_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/service_instances"",
    ""app_events_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/app_events"",
    ""events_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/events"",
    ""security_groups_url"": ""/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/security_groups""
  }
}";

            AssociateSecurityGroupWithSpaceResponse obj = Utilities.DeserializeJson<AssociateSecurityGroupWithSpaceResponse>(json);

            Assert.AreEqual("c560f558-e175-4009-b4ad-d6a66fa268c9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-503", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("71817946-c2e2-4523-a59b-e0cc628b021c", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/71817946-c2e2-4523-a59b-e0cc628b021c", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/c560f558-e175-4009-b4ad-d6a66fa268c9/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagerFromSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5bd87bce-8576-47c9-9f59-377739f7ebda"",
    ""url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda"",
    ""created_at"": ""2015-05-19T15:27:10+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-540"",
    ""organization_guid"": ""ea766afd-ce26-4ecd-bb10-6b993d0798a0"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/ea766afd-ce26-4ecd-bb10-6b993d0798a0"",
    ""developers_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/developers"",
    ""managers_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/managers"",
    ""auditors_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/auditors"",
    ""apps_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/apps"",
    ""routes_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/routes"",
    ""domains_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/domains"",
    ""service_instances_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/service_instances"",
    ""app_events_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/app_events"",
    ""events_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/events"",
    ""security_groups_url"": ""/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/security_groups""
  }
}";

            RemoveManagerFromSpaceResponse obj = Utilities.DeserializeJson<RemoveManagerFromSpaceResponse>(json);

            Assert.AreEqual("5bd87bce-8576-47c9-9f59-377739f7ebda", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-540", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ea766afd-ce26-4ecd-bb10-6b993d0798a0", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/ea766afd-ce26-4ecd-bb10-6b993d0798a0", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/5bd87bce-8576-47c9-9f59-377739f7ebda/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6e9c730e-390f-44c5-bafc-6ff2cd850a2d"",
        ""url"": ""/v2/services/6e9c730e-390f-44c5-bafc-6ff2cd850a2d"",
        ""created_at"": ""2015-05-19T15:27:10+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-37"",
        ""provider"": ""provider-28"",
        ""url"": ""https://foo.com/url-33"",
        ""description"": ""desc-81"",
        ""long_description"": null,
        ""version"": ""version-12"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""696178a6-b810-4d0a-8b9b-21e9447be77e"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/6e9c730e-390f-44c5-bafc-6ff2cd850a2d/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForSpaceResponse> page = Utilities.DeserializePage<ListAllServicesForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6e9c730e-390f-44c5-bafc-6ff2cd850a2d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/6e9c730e-390f-44c5-bafc-6ff2cd850a2d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-37", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-28", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("https://foo.com/url-33", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-81", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("version-12", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("696178a6-b810-4d0a-8b9b-21e9447be77e", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/6e9c730e-390f-44c5-bafc-6ff2cd850a2d/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestAssociateDeveloperWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""652278e6-80a1-4547-9e5f-e61319b680e5"",
    ""url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5"",
    ""created_at"": ""2015-05-19T15:27:10+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-523"",
    ""organization_guid"": ""4f12161d-d9f7-4ecd-a4b4-76f9b9a8d1e4"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/4f12161d-d9f7-4ecd-a4b4-76f9b9a8d1e4"",
    ""developers_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/developers"",
    ""managers_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/managers"",
    ""auditors_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/auditors"",
    ""apps_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/apps"",
    ""routes_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/routes"",
    ""domains_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/domains"",
    ""service_instances_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/service_instances"",
    ""app_events_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/app_events"",
    ""events_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/events"",
    ""security_groups_url"": ""/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/security_groups""
  }
}";

            AssociateDeveloperWithSpaceResponse obj = Utilities.DeserializeJson<AssociateDeveloperWithSpaceResponse>(json);

            Assert.AreEqual("652278e6-80a1-4547-9e5f-e61319b680e5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-523", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("4f12161d-d9f7-4ecd-a4b4-76f9b9a8d1e4", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/4f12161d-d9f7-4ecd-a4b4-76f9b9a8d1e4", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/652278e6-80a1-4547-9e5f-e61319b680e5/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllSecurityGroupsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""800df6bc-8374-4ab9-ba18-f29a3b0a5e66"",
        ""url"": ""/v2/security_groups/800df6bc-8374-4ab9-ba18-f29a3b0a5e66"",
        ""created_at"": ""2015-05-19T15:27:10+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-515"",
        ""rules"": [
          {
            ""protocol"": ""udp"",
            ""ports"": ""8080"",
            ""destination"": ""198.41.191.47/1""
          }
        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/800df6bc-8374-4ab9-ba18-f29a3b0a5e66/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSecurityGroupsForSpaceResponse> page = Utilities.DeserializePage<ListAllSecurityGroupsForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("800df6bc-8374-4ab9-ba18-f29a3b0a5e66", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/800df6bc-8374-4ab9-ba18-f29a3b0a5e66", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-515", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/800df6bc-8374-4ab9-ba18-f29a3b0a5e66/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForSpaceDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f649fd17-eec5-4402-902a-1715c9f7ec31"",
        ""url"": ""/v2/domains/f649fd17-eec5-4402-902a-1715c9f7ec31"",
        ""created_at"": ""2015-05-19T15:27:04+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f7380c81-e199-4a7d-86ec-6e1791326df3"",
        ""url"": ""/v2/domains/f7380c81-e199-4a7d-86ec-6e1791326df3"",
        ""created_at"": ""2015-05-19T15:27:04+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForSpaceDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForSpaceDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f649fd17-eec5-4402-902a-1715c9f7ec31", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/f649fd17-eec5-4402-902a-1715c9f7ec31", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:04+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("f7380c81-e199-4a7d-86ec-6e1791326df3", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/f7380c81-e199-4a7d-86ec-6e1791326df3", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:04+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
        }

        [TestMethod]
        public void TestListAllRoutesForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4b45a6d7-4c31-45c1-821e-af2b23eeb68c"",
        ""url"": ""/v2/routes/4b45a6d7-4c31-45c1-821e-af2b23eeb68c"",
        ""created_at"": ""2015-05-19T15:27:10+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-8"",
        ""domain_guid"": ""f372db75-8f62-496e-af9c-c96934e42a34"",
        ""space_guid"": ""978c4f7d-9ba5-4a8c-bc7c-3bca156711fc"",
        ""domain_url"": ""/v2/domains/f372db75-8f62-496e-af9c-c96934e42a34"",
        ""space_url"": ""/v2/spaces/978c4f7d-9ba5-4a8c-bc7c-3bca156711fc"",
        ""apps_url"": ""/v2/routes/4b45a6d7-4c31-45c1-821e-af2b23eeb68c/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForSpaceResponse> page = Utilities.DeserializePage<ListAllRoutesForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4b45a6d7-4c31-45c1-821e-af2b23eeb68c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/4b45a6d7-4c31-45c1-821e-af2b23eeb68c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-8", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("f372db75-8f62-496e-af9c-c96934e42a34", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("978c4f7d-9ba5-4a8c-bc7c-3bca156711fc", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/f372db75-8f62-496e-af9c-c96934e42a34", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/978c4f7d-9ba5-4a8c-bc7c-3bca156711fc", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/4b45a6d7-4c31-45c1-821e-af2b23eeb68c/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""be53c21d-79fb-4bcb-ba83-b46d2d0e851c"",
        ""url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c"",
        ""created_at"": ""2015-05-19T15:27:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-551"",
        ""organization_guid"": ""ace6c0e1-0fae-4f9a-a884-49d3c23836a4"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/ace6c0e1-0fae-4f9a-a884-49d3c23836a4"",
        ""developers_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/developers"",
        ""managers_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/managers"",
        ""auditors_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/auditors"",
        ""apps_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/apps"",
        ""routes_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/routes"",
        ""domains_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/domains"",
        ""service_instances_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/service_instances"",
        ""app_events_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/app_events"",
        ""events_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/events"",
        ""security_groups_url"": ""/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesResponse> page = Utilities.DeserializePage<ListAllSpacesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("be53c21d-79fb-4bcb-ba83-b46d2d0e851c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-551", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("ace6c0e1-0fae-4f9a-a884-49d3c23836a4", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/ace6c0e1-0fae-4f9a-a884-49d3c23836a4", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/be53c21d-79fb-4bcb-ba83-b46d2d0e851c/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a519bb5d-2428-4879-9f4a-d6038e4a9d16"",
    ""url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16"",
    ""created_at"": ""2015-05-19T15:27:10+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-537"",
    ""organization_guid"": ""40d7e4f8-6989-4f17-9412-1793c970ad0e"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/40d7e4f8-6989-4f17-9412-1793c970ad0e"",
    ""developers_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/developers"",
    ""managers_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/managers"",
    ""auditors_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/auditors"",
    ""apps_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/apps"",
    ""routes_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/routes"",
    ""domains_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/domains"",
    ""service_instances_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/service_instances"",
    ""app_events_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/app_events"",
    ""events_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/events"",
    ""security_groups_url"": ""/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/security_groups""
  }
}";

            AssociateManagerWithSpaceResponse obj = Utilities.DeserializeJson<AssociateManagerWithSpaceResponse>(json);

            Assert.AreEqual("a519bb5d-2428-4879-9f4a-d6038e4a9d16", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-537", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("40d7e4f8-6989-4f17-9412-1793c970ad0e", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/40d7e4f8-6989-4f17-9412-1793c970ad0e", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/a519bb5d-2428-4879-9f4a-d6038e4a9d16/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""325da25e-766b-4be8-95f6-8439db3a6c64"",
    ""url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64"",
    ""created_at"": ""2015-05-19T15:27:11+00:00"",
    ""updated_at"": ""2015-05-19T15:27:11+00:00""
  },
  ""entity"": {
    ""name"": ""New Space Name"",
    ""organization_guid"": ""5744739e-d413-4148-a79c-f71921993415"",
    ""space_quota_definition_guid"": null,
    ""organization_url"": ""/v2/organizations/5744739e-d413-4148-a79c-f71921993415"",
    ""developers_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/developers"",
    ""managers_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/managers"",
    ""auditors_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/auditors"",
    ""apps_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/apps"",
    ""routes_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/routes"",
    ""domains_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/domains"",
    ""service_instances_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/service_instances"",
    ""app_events_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/app_events"",
    ""events_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/events"",
    ""security_groups_url"": ""/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/security_groups""
  }
}";

            UpdateSpaceResponse obj = Utilities.DeserializeJson<UpdateSpaceResponse>(json);

            Assert.AreEqual("325da25e-766b-4be8-95f6-8439db3a6c64", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-05-19T15:27:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Space Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("5744739e-d413-4148-a79c-f71921993415", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/5744739e-d413-4148-a79c-f71921993415", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/developers", TestUtil.ToTestableString(obj.DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/apps", TestUtil.ToTestableString(obj.AppsUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/spaces/325da25e-766b-4be8-95f6-8439db3a6c64/security_groups", TestUtil.ToTestableString(obj.SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForSpaceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-99"",
        ""url"": ""/v2/users/uaa-id-99"",
        ""created_at"": ""2015-05-19T15:27:10+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-99/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-99/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-99/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-99/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-99/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-99/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-99/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForSpaceResponse> page = Utilities.DeserializePage<ListAllAuditorsForSpaceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-99", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-99", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-05-19T15:27:10+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-99/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-99/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-99/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-99/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-99/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-99/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-99/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }
    }
}
