//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ccc7f844-344d-4d83-9b31-eb0dbe79d1e7"",
        ""url"": ""/v2/space_quota_definitions/5bc67541-9d2d-4f68-bbe7-c93a67811d8e"",
        ""created_at"": ""2016-05-26T11:34:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-179"",
        ""organization_guid"": ""ccc7f844-344d-4d83-9b31-eb0dbe79d1e7"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""app_instance_limit"": -1,
        ""app_task_limit"": 5,
        ""total_service_keys"": 600,
        ""total_reserved_route_ports"": -1,
        ""organization_url"": ""/v2/organizations/fb9f3499-4245-439f-8e64-fc593303a608"",
        ""spaces_url"": ""/v2/space_quota_definitions/5bc67541-9d2d-4f68-bbe7-c93a67811d8e/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ccc7f844-344d-4d83-9b31-eb0dbe79d1e7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/5bc67541-9d2d-4f68-bbe7-c93a67811d8e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-179", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("ccc7f844-344d-4d83-9b31-eb0dbe79d1e7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(page[0].AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(page[0].TotalServiceKeys), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].TotalReservedRoutePorts), true);
            Assert.AreEqual("/v2/organizations/fb9f3499-4245-439f-8e64-fc593303a608", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/5bc67541-9d2d-4f68-bbe7-c93a67811d8e/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""26e325c5-997d-418d-bebc-3587c7bdea23"",
        ""url"": ""/v2/private_domains/fc39d1b0-da95-4e34-8f31-e12e60213794"",
        ""created_at"": ""2016-05-26T11:34:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-1.example.com"",
        ""owning_organization_guid"": ""26e325c5-997d-418d-bebc-3587c7bdea23"",
        ""owning_organization_url"": ""/v2/organizations/ac038837-fd67-4c9f-9c7a-24a86e1e83a8"",
        ""shared_organizations_url"": ""/v2/private_domains/fc39d1b0-da95-4e34-8f31-e12e60213794/shared_organizations""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("26e325c5-997d-418d-bebc-3587c7bdea23", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/fc39d1b0-da95-4e34-8f31-e12e60213794", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-1.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("26e325c5-997d-418d-bebc-3587c7bdea23", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/ac038837-fd67-4c9f-9c7a-24a86e1e83a8", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/fc39d1b0-da95-4e34-8f31-e12e60213794/shared_organizations", TestUtil.ToTestableString(page[0].SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1faf24b6-4b72-4821-a9e6-7112574d934e"",
        ""url"": ""/v2/services/bdef2491-e682-4db3-8b00-01d4f8dfa2cb"",
        ""created_at"": ""2016-05-26T11:34:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-18"",
        ""provider"": null,
        ""url"": null,
        ""description"": ""desc-45"",
        ""long_description"": null,
        ""version"": null,
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""ccb11f68-1ec0-4b35-9494-a473b6871902"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": ""1faf24b6-4b72-4821-a9e6-7112574d934e"",
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/bdef2491-e682-4db3-8b00-01d4f8dfa2cb/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1faf24b6-4b72-4821-a9e6-7112574d934e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/bdef2491-e682-4db3-8b00-01d4f8dfa2cb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-18", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-45", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("ccb11f68-1ec0-4b35-9494-a473b6871902", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("1faf24b6-4b72-4821-a9e6-7112574d934e", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/bdef2491-e682-4db3-8b00-01d4f8dfa2cb/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationInstanceUsageResponse()
        {
            string json = @"{
  ""instance_usage"": 3
}";

            RetrievingOrganizationInstanceUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationInstanceUsageResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(obj.InstanceUsage), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5d05075c-d830-4604-8ac7-64a0c8ba9109"",
    ""url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395"",
    ""created_at"": ""2016-05-26T11:34:25Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-198"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""5d05075c-d830-4604-8ac7-64a0c8ba9109"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/2f24a086-46e0-4fff-8c22-9f3a3d28dd60"",
    ""spaces_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/spaces"",
    ""domains_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/domains"",
    ""private_domains_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/private_domains"",
    ""users_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/users"",
    ""managers_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/managers"",
    ""billing_managers_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/billing_managers"",
    ""auditors_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/auditors"",
    ""app_events_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("5d05075c-d830-4604-8ac7-64a0c8ba9109", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-198", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("5d05075c-d830-4604-8ac7-64a0c8ba9109", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/2f24a086-46e0-4fff-8c22-9f3a3d28dd60", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/8dc4eb4b-2023-4e39-94e3-c3513ee0d395/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""89517094-903f-449d-96d2-0aa55e632ef0"",
    ""url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c"",
    ""created_at"": ""2016-05-26T11:34:27Z"",
    ""updated_at"": ""2016-05-26T11:34:27Z""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""89517094-903f-449d-96d2-0aa55e632ef0"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/fc113615-8973-4c3a-a510-8e1d51342e9d"",
    ""spaces_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/spaces"",
    ""domains_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/domains"",
    ""private_domains_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/private_domains"",
    ""users_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/users"",
    ""managers_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/managers"",
    ""billing_managers_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/billing_managers"",
    ""auditors_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/auditors"",
    ""app_events_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("89517094-903f-449d-96d2-0aa55e632ef0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-26T11:34:27Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("89517094-903f-449d-96d2-0aa55e632ef0", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/fc113615-8973-4c3a-a510-8e1d51342e9d", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/de94c72c-1ab4-4d9d-ab5e-482263784c5c/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4b4593fa-7d1f-4f11-a146-9a2e05b57476"",
    ""url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb"",
    ""created_at"": ""2016-05-26T11:34:25Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-192"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""4b4593fa-7d1f-4f11-a146-9a2e05b57476"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/471145df-21c8-48f9-96b0-a3fd0200f981"",
    ""spaces_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/spaces"",
    ""domains_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/domains"",
    ""private_domains_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/private_domains"",
    ""users_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/users"",
    ""managers_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/managers"",
    ""billing_managers_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/billing_managers"",
    ""auditors_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/auditors"",
    ""app_events_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("4b4593fa-7d1f-4f11-a146-9a2e05b57476", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-192", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("4b4593fa-7d1f-4f11-a146-9a2e05b57476", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/471145df-21c8-48f9-96b0-a3fd0200f981", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/0b78e527-bd0d-421e-b8a9-899da117bebb/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""74feca10-b90f-4782-bf5c-47936ca01f1b"",
    ""url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a"",
    ""created_at"": ""2016-05-26T11:34:25Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-182"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""74feca10-b90f-4782-bf5c-47936ca01f1b"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/5b568a84-152e-4469-83a9-48d71b7a80c2"",
    ""spaces_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/spaces"",
    ""domains_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/domains"",
    ""private_domains_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/private_domains"",
    ""users_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/users"",
    ""managers_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/managers"",
    ""billing_managers_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/auditors"",
    ""app_events_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("74feca10-b90f-4782-bf5c-47936ca01f1b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-182", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("74feca10-b90f-4782-bf5c-47936ca01f1b", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/5b568a84-152e-4469-83a9-48d71b7a80c2", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/9b5791e3-5ddd-41ae-9b6c-1469f38f825a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1612fc9e-507c-4e25-b5c7-925737868037"",
        ""url"": ""/v2/users/uaa-id-60"",
        ""created_at"": ""2016-05-26T11:34:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""auditor@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-60/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-60/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-60/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-60/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-60/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-60/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-60/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1612fc9e-507c-4e25-b5c7-925737868037", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-60", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("auditor@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-60/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-60/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-60/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-60/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-60/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-60/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-60/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e3b562e0-16cb-4242-9595-290aa5e7692b"",
        ""url"": ""/v2/users/uaa-id-76"",
        ""created_at"": ""2016-05-26T11:34:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""billing_manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-76/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-76/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-76/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-76/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-76/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-76/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-76/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e3b562e0-16cb-4242-9595-290aa5e7692b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-76", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("billing_manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-76/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-76/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-76/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-76/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-76/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-76/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-76/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""50618a00-ddf7-4d17-a181-965d860fd6db"",
    ""url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b"",
    ""created_at"": ""2016-05-26T11:34:26Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-237"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""50618a00-ddf7-4d17-a181-965d860fd6db"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/05230a20-4268-434b-a639-e1271efc3168"",
    ""spaces_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/spaces"",
    ""domains_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/domains"",
    ""private_domains_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/private_domains"",
    ""users_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/users"",
    ""managers_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/managers"",
    ""billing_managers_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/billing_managers"",
    ""auditors_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/auditors"",
    ""app_events_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("50618a00-ddf7-4d17-a181-965d860fd6db", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-237", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("50618a00-ddf7-4d17-a181-965d860fd6db", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/05230a20-4268-434b-a639-e1271efc3168", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/6c7e8f1b-4aed-40ea-8091-e99cd477601b/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{
  ""memory_usage_in_mb"": 0
}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""58112c22-51e4-458b-9c68-deb0db0e6da2"",
    ""url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8"",
    ""created_at"": ""2016-05-26T11:34:26Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-217"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""58112c22-51e4-458b-9c68-deb0db0e6da2"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/3c861792-3241-40bd-97d2-67d7cc8be0b7"",
    ""spaces_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/spaces"",
    ""domains_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/domains"",
    ""private_domains_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/private_domains"",
    ""users_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/users"",
    ""managers_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/managers"",
    ""billing_managers_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/billing_managers"",
    ""auditors_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/auditors"",
    ""app_events_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("58112c22-51e4-458b-9c68-deb0db0e6da2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-217", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("58112c22-51e4-458b-9c68-deb0db0e6da2", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/3c861792-3241-40bd-97d2-67d7cc8be0b7", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/3496013f-5285-4d4b-8a69-37f7cca237f8/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b6487d88-491e-4f5b-8d48-71e99b266cd8"",
    ""url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b"",
    ""created_at"": ""2016-05-26T11:34:25Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-186"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""b6487d88-491e-4f5b-8d48-71e99b266cd8"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/56f8be7e-6146-4503-af28-865c63cacfe5"",
    ""spaces_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/spaces"",
    ""domains_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/domains"",
    ""private_domains_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/private_domains"",
    ""users_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/users"",
    ""managers_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/managers"",
    ""billing_managers_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/billing_managers"",
    ""auditors_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/auditors"",
    ""app_events_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("b6487d88-491e-4f5b-8d48-71e99b266cd8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-186", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("b6487d88-491e-4f5b-8d48-71e99b266cd8", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/56f8be7e-6146-4503-af28-865c63cacfe5", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/4bc717c3-93b9-4b17-a499-c75af854600b/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""99f70460-b07c-4bfe-80c3-24a7a2b709e4"",
        ""url"": ""/v2/users/uaa-id-89"",
        ""created_at"": ""2016-05-26T11:34:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-89/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-89/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-89/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-89/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-89/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-89/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-89/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""99f70460-b07c-4bfe-80c3-24a7a2b709e4"",
        ""url"": ""/v2/users/uaa-id-90"",
        ""created_at"": ""2016-05-26T11:34:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-90/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-90/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-90/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-90/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-90/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-90/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-90/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("99f70460-b07c-4bfe-80c3-24a7a2b709e4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-89", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-89/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-89/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-89/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-89/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-89/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-89/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-89/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("99f70460-b07c-4bfe-80c3-24a7a2b709e4", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-90", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-90/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-90/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-90/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-90/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-90/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-90/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-90/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""910112ab-bd22-499a-8dd1-0179a9bfe00c"",
        ""url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703"",
        ""created_at"": ""2016-05-26T11:34:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""910112ab-bd22-499a-8dd1-0179a9bfe00c"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/9468d6ea-643c-463a-b650-20b969dc4c47"",
        ""spaces_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/spaces"",
        ""domains_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/domains"",
        ""private_domains_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/private_domains"",
        ""users_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/users"",
        ""managers_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/managers"",
        ""billing_managers_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/billing_managers"",
        ""auditors_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/auditors"",
        ""app_events_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("910112ab-bd22-499a-8dd1-0179a9bfe00c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("910112ab-bd22-499a-8dd1-0179a9bfe00c", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/9468d6ea-643c-463a-b650-20b969dc4c47", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/becdfbdd-24be-491c-8584-a08800295703/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""14f9a4d3-04c0-4334-91cd-46612a43bf40"",
        ""url"": ""/v2/users/uaa-id-48"",
        ""created_at"": ""2016-05-26T11:34:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""user@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-48/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-48/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-48/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-48/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-48/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-48/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-48/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("14f9a4d3-04c0-4334-91cd-46612a43bf40", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-48", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-48/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-48/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""78826105-e0b0-4d62-ac9f-84c3f77b91d9"",
        ""url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706"",
        ""created_at"": ""2016-05-26T11:34:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-206"",
        ""organization_guid"": ""78826105-e0b0-4d62-ac9f-84c3f77b91d9"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/e3644e7c-98d1-4201-9934-760358456fa9"",
        ""developers_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/developers"",
        ""managers_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/managers"",
        ""auditors_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/auditors"",
        ""apps_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/apps"",
        ""routes_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/routes"",
        ""domains_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/domains"",
        ""service_instances_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/service_instances"",
        ""app_events_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/app_events"",
        ""events_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/events"",
        ""security_groups_url"": ""/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("78826105-e0b0-4d62-ac9f-84c3f77b91d9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-206", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("78826105-e0b0-4d62-ac9f-84c3f77b91d9", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/e3644e7c-98d1-4201-9934-760358456fa9", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/f134ecca-973c-4537-afb4-78b5c02f0706/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingRolesOfAllUsersInOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 2,
  ""prev_url"": null,
  ""next_url"": ""/v2/organizations/8f7281f0-169d-4232-aa39-9cbab7e2072d/user_roles?order-direction=asc=2=1"",
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e18e8d91-af0c-42e5-aee3-805bb9a602f9"",
        ""url"": ""/v2/users/uaa-id-39"",
        ""created_at"": ""2016-05-26T11:34:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": 0,
        ""active"": 0,
        ""default_space_guid"": null,
        ""username"": ""everything@example.com"",
        ""organization_roles"": [
          ""org_user"",
          ""org_manager"",
          ""org_auditor"",
          ""billing_manager""
        ],
        ""spaces_url"": ""/v2/users/uaa-id-39/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-39/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-39/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-39/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-39/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-39/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-39/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<RetrievingRolesOfAllUsersInOrganizationResponse> page = Utilities.DeserializePage<RetrievingRolesOfAllUsersInOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("/v2/organizations/8f7281f0-169d-4232-aa39-9cbab7e2072d/user_roles?order-direction=asc=2=1", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e18e8d91-af0c-42e5-aee3-805bb9a602f9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-39", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("everything@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-39/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-39/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2cfc9516-f1df-4204-a829-94aae9140508"",
    ""url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973"",
    ""created_at"": ""2016-05-26T11:34:26Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-231"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""2cfc9516-f1df-4204-a829-94aae9140508"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/6a7ef0f0-4feb-4401-bbe2-175d452084f6"",
    ""spaces_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/spaces"",
    ""domains_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/domains"",
    ""private_domains_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/private_domains"",
    ""users_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/users"",
    ""managers_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/managers"",
    ""billing_managers_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/billing_managers"",
    ""auditors_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/auditors"",
    ""app_events_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("2cfc9516-f1df-4204-a829-94aae9140508", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-231", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("2cfc9516-f1df-4204-a829-94aae9140508", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/6a7ef0f0-4feb-4401-bbe2-175d452084f6", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/5871e501-8c6b-45be-8a2f-7b507d66f973/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8100a14d-0d73-46d4-b6ea-7fa4591548ec"",
    ""url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1"",
    ""created_at"": ""2016-05-26T11:34:26Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-225"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""8100a14d-0d73-46d4-b6ea-7fa4591548ec"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/36a45605-7a30-42bb-9c7f-0ec241a27ad3"",
    ""spaces_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/spaces"",
    ""domains_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/domains"",
    ""private_domains_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/private_domains"",
    ""users_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/users"",
    ""managers_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/managers"",
    ""billing_managers_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/billing_managers"",
    ""auditors_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/auditors"",
    ""app_events_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("8100a14d-0d73-46d4-b6ea-7fa4591548ec", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-225", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("8100a14d-0d73-46d4-b6ea-7fa4591548ec", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/36a45605-7a30-42bb-9c7f-0ec241a27ad3", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/2c1ddf6a-edfd-4853-820e-d16d09de94f1/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociatePrivateDomainWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a98c5243-0e9f-45f8-a341-4427f6d78730"",
    ""url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e"",
    ""created_at"": ""2016-05-26T11:34:26Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-211"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""a98c5243-0e9f-45f8-a341-4427f6d78730"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/f8cb111a-6612-4289-ad33-e0c61e782d24"",
    ""spaces_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/spaces"",
    ""domains_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/domains"",
    ""private_domains_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/private_domains"",
    ""users_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/users"",
    ""managers_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/managers"",
    ""billing_managers_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/billing_managers"",
    ""auditors_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/auditors"",
    ""app_events_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/space_quota_definitions""
  }
}";

            AssociatePrivateDomainWithOrganizationResponse obj = Utilities.DeserializeJson<AssociatePrivateDomainWithOrganizationResponse>(json);

            Assert.AreEqual("a98c5243-0e9f-45f8-a341-4427f6d78730", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:26Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-211", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("a98c5243-0e9f-45f8-a341-4427f6d78730", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/f8cb111a-6612-4289-ad33-e0c61e782d24", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/aab0a6ce-5f69-473b-8bf7-1e0e7133025e/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bc17e47a-f4b8-4c27-a349-707196ff6685"",
        ""url"": ""/v2/domains/df82cca4-899b-486f-b7d5-1973a315ebaa"",
        ""created_at"": ""2016-05-26T11:34:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""bc17e47a-f4b8-4c27-a349-707196ff6685"",
        ""url"": ""/v2/domains/2af1b8f4-744d-45cc-b2c5-fe501a424206"",
        ""created_at"": ""2016-05-26T11:34:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bc17e47a-f4b8-4c27-a349-707196ff6685", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/df82cca4-899b-486f-b7d5-1973a315ebaa", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupType), true);
            Assert.AreEqual("bc17e47a-f4b8-4c27-a349-707196ff6685", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/2af1b8f4-744d-45cc-b2c5-fe501a424206", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:21Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupType), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{
  ""guid"": ""0ef83825-d71f-49dd-bb31-09c41ed57b9c"",
  ""name"": ""name-143"",
  ""status"": ""active"",
  ""spaces"": [
    {
      ""guid"": ""0ef83825-d71f-49dd-bb31-09c41ed57b9c"",
      ""name"": ""name-145"",
      ""service_count"": 0,
      ""app_count"": 0,
      ""mem_dev_total"": 0,
      ""mem_prod_total"": 0
    }
  ]
}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("0ef83825-d71f-49dd-bb31-09c41ed57b9c", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-143", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bf902d62-a602-42a6-9a8e-84237e2103dd"",
    ""url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58"",
    ""created_at"": ""2016-05-26T11:34:27Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""bf902d62-a602-42a6-9a8e-84237e2103dd"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/b1ff67fe-a63d-4524-a8b5-0cec2bc59bd0"",
    ""spaces_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/spaces"",
    ""domains_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/domains"",
    ""private_domains_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/private_domains"",
    ""users_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/users"",
    ""managers_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/managers"",
    ""billing_managers_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/billing_managers"",
    ""auditors_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/auditors"",
    ""app_events_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("bf902d62-a602-42a6-9a8e-84237e2103dd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("bf902d62-a602-42a6-9a8e-84237e2103dd", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/b1ff67fe-a63d-4524-a8b5-0cec2bc59bd0", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/c284f9e3-b9af-4207-b01d-0f7fc5e02a58/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6a0597b2-7040-4ab5-bf2c-77f0b77af990"",
    ""url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc"",
    ""created_at"": ""2016-05-26T11:34:27Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-250"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""6a0597b2-7040-4ab5-bf2c-77f0b77af990"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/29c11cfb-02d7-47a3-a74a-8b9190c468f1"",
    ""spaces_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/spaces"",
    ""domains_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/domains"",
    ""private_domains_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/private_domains"",
    ""users_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/users"",
    ""managers_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/managers"",
    ""billing_managers_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/billing_managers"",
    ""auditors_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/auditors"",
    ""app_events_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("6a0597b2-7040-4ab5-bf2c-77f0b77af990", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-250", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("6a0597b2-7040-4ab5-bf2c-77f0b77af990", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/29c11cfb-02d7-47a3-a74a-8b9190c468f1", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/3aa0a523-8036-4b54-b782-19d388150dfc/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }
    }
}
