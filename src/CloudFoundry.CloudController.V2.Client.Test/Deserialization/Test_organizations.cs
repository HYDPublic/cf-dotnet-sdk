//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""32181b80-fc32-4d76-b6bd-e2c574fd2f40"",
        ""url"": ""/v2/space_quota_definitions/81bac838-d4f2-4dd3-b6cf-33a56c1d04d9"",
        ""created_at"": ""2016-03-21T10:59:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-188"",
        ""organization_guid"": ""32181b80-fc32-4d76-b6bd-e2c574fd2f40"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""app_instance_limit"": -1,
        ""app_task_limit"": 5,
        ""organization_url"": ""/v2/organizations/5b550028-2fef-4600-9346-b3d0901262be"",
        ""spaces_url"": ""/v2/space_quota_definitions/81bac838-d4f2-4dd3-b6cf-33a56c1d04d9/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("32181b80-fc32-4d76-b6bd-e2c574fd2f40", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/81bac838-d4f2-4dd3-b6cf-33a56c1d04d9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-188", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("32181b80-fc32-4d76-b6bd-e2c574fd2f40", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(page[0].AppTaskLimit), true);
            Assert.AreEqual("/v2/organizations/5b550028-2fef-4600-9346-b3d0901262be", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/81bac838-d4f2-4dd3-b6cf-33a56c1d04d9/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""650d164e-ef83-4375-bf61-4031fd7af4a4"",
        ""url"": ""/v2/private_domains/881d8ada-09f2-40a0-9a09-1573ee498280"",
        ""created_at"": ""2016-03-21T10:59:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-28.example.com"",
        ""owning_organization_guid"": ""650d164e-ef83-4375-bf61-4031fd7af4a4"",
        ""owning_organization_url"": ""/v2/organizations/090a5fe4-8314-4566-b0dc-7d80be9c20b9"",
        ""shared_organizations_url"": ""/v2/private_domains/881d8ada-09f2-40a0-9a09-1573ee498280/shared_organizations""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("650d164e-ef83-4375-bf61-4031fd7af4a4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/881d8ada-09f2-40a0-9a09-1573ee498280", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-28.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("650d164e-ef83-4375-bf61-4031fd7af4a4", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/090a5fe4-8314-4566-b0dc-7d80be9c20b9", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/881d8ada-09f2-40a0-9a09-1573ee498280/shared_organizations", TestUtil.ToTestableString(page[0].SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f1b6419e-3938-4c3f-a6ae-aa7b97e8d1cc"",
        ""url"": ""/v2/services/5389548e-7ac9-49dc-829d-66702de49a6b"",
        ""created_at"": ""2016-03-21T10:59:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-8"",
        ""provider"": null,
        ""url"": null,
        ""description"": ""desc-23"",
        ""long_description"": null,
        ""version"": null,
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""b4d66726-92ee-4f68-8e5a-6d57e1a719c8"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": ""f1b6419e-3938-4c3f-a6ae-aa7b97e8d1cc"",
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/5389548e-7ac9-49dc-829d-66702de49a6b/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f1b6419e-3938-4c3f-a6ae-aa7b97e8d1cc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/5389548e-7ac9-49dc-829d-66702de49a6b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-8", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-23", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("b4d66726-92ee-4f68-8e5a-6d57e1a719c8", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("f1b6419e-3938-4c3f-a6ae-aa7b97e8d1cc", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/5389548e-7ac9-49dc-829d-66702de49a6b/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationInstanceUsageResponse()
        {
            string json = @"{
  ""instance_usage"": 3
}";

            RetrievingOrganizationInstanceUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationInstanceUsageResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(obj.InstanceUsage), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ac1a5cea-ce80-485b-8310-59f67fde9071"",
    ""url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a"",
    ""created_at"": ""2016-03-21T10:59:21Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-195"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""ac1a5cea-ce80-485b-8310-59f67fde9071"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/53a3e075-b8fb-4b4c-8c19-fa778265c6c9"",
    ""spaces_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/spaces"",
    ""domains_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/domains"",
    ""private_domains_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/private_domains"",
    ""users_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/users"",
    ""managers_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/managers"",
    ""billing_managers_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/auditors"",
    ""app_events_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("ac1a5cea-ce80-485b-8310-59f67fde9071", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-195", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("ac1a5cea-ce80-485b-8310-59f67fde9071", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/53a3e075-b8fb-4b4c-8c19-fa778265c6c9", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/bb1c2821-5116-4671-84a5-642b3de5006a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""20fd2276-b306-4efa-bc2e-7de969f5bc0f"",
    ""url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a"",
    ""created_at"": ""2016-03-21T10:59:20Z"",
    ""updated_at"": ""2016-03-21T10:59:20Z""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""20fd2276-b306-4efa-bc2e-7de969f5bc0f"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/faeae0d7-70c2-46b6-a9d6-c23ab4d704d5"",
    ""spaces_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/spaces"",
    ""domains_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/domains"",
    ""private_domains_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/private_domains"",
    ""users_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/users"",
    ""managers_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/managers"",
    ""billing_managers_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/auditors"",
    ""app_events_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("20fd2276-b306-4efa-bc2e-7de969f5bc0f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-03-21T10:59:20Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("20fd2276-b306-4efa-bc2e-7de969f5bc0f", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/faeae0d7-70c2-46b6-a9d6-c23ab4d704d5", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/2503814e-dab5-4ee4-a541-c12a0a9d169a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7d35f2ca-1df2-4712-8f54-4de8ff071675"",
    ""url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5"",
    ""created_at"": ""2016-03-21T10:59:21Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-189"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""7d35f2ca-1df2-4712-8f54-4de8ff071675"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/5d883bb7-d62a-43f2-8e2f-085fab9195b9"",
    ""spaces_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/spaces"",
    ""domains_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/domains"",
    ""private_domains_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/private_domains"",
    ""users_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/users"",
    ""managers_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/managers"",
    ""billing_managers_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/billing_managers"",
    ""auditors_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/auditors"",
    ""app_events_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("7d35f2ca-1df2-4712-8f54-4de8ff071675", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-189", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("7d35f2ca-1df2-4712-8f54-4de8ff071675", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/5d883bb7-d62a-43f2-8e2f-085fab9195b9", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/256a55e5-0d87-4aaa-913d-12f951f9cbf5/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0f757304-a52c-4f3c-b660-e3292a285dc4"",
    ""url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac"",
    ""created_at"": ""2016-03-21T10:59:21Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-213"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""0f757304-a52c-4f3c-b660-e3292a285dc4"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/a21c705b-305b-4ea0-9bec-1bbdf87d0d3e"",
    ""spaces_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/spaces"",
    ""domains_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/domains"",
    ""private_domains_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/private_domains"",
    ""users_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/users"",
    ""managers_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/managers"",
    ""billing_managers_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/billing_managers"",
    ""auditors_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/auditors"",
    ""app_events_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("0f757304-a52c-4f3c-b660-e3292a285dc4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-213", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("0f757304-a52c-4f3c-b660-e3292a285dc4", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/a21c705b-305b-4ea0-9bec-1bbdf87d0d3e", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/9fa02eb3-92a5-4214-961a-6ba280e054ac/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ee989b95-49dd-43d6-81db-63294fbaec85"",
        ""url"": ""/v2/users/uaa-id-65"",
        ""created_at"": ""2016-03-21T10:59:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""auditor@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-65/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-65/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-65/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-65/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-65/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-65/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-65/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ee989b95-49dd-43d6-81db-63294fbaec85", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-65", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("auditor@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-65/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-65/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7eb05c40-efe4-4adb-9230-7d997609c4a5"",
        ""url"": ""/v2/users/uaa-id-77"",
        ""created_at"": ""2016-03-21T10:59:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""billing_manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-77/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-77/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-77/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-77/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-77/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-77/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-77/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7eb05c40-efe4-4adb-9230-7d997609c4a5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-77", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("billing_manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-77/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-77/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-77/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-77/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-77/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-77/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-77/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fe0e2f87-3547-488f-ab37-9baba342cd73"",
    ""url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679"",
    ""created_at"": ""2016-03-21T10:59:22Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-227"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""fe0e2f87-3547-488f-ab37-9baba342cd73"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/a4251842-9cfb-44dc-8065-4cc5d7092889"",
    ""spaces_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/spaces"",
    ""domains_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/domains"",
    ""private_domains_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/private_domains"",
    ""users_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/users"",
    ""managers_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/managers"",
    ""billing_managers_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/billing_managers"",
    ""auditors_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/auditors"",
    ""app_events_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("fe0e2f87-3547-488f-ab37-9baba342cd73", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:22Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-227", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("fe0e2f87-3547-488f-ab37-9baba342cd73", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/a4251842-9cfb-44dc-8065-4cc5d7092889", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/040ac261-5a4e-44cb-9b97-caaa5d65a679/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{
  ""memory_usage_in_mb"": 0
}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""46477b59-fbdc-4d57-bc34-e80fa5206034"",
    ""url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513"",
    ""created_at"": ""2016-03-21T10:59:21Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-209"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""46477b59-fbdc-4d57-bc34-e80fa5206034"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/59aa849f-83a0-4b66-8c3d-c2184ff64fe9"",
    ""spaces_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/spaces"",
    ""domains_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/domains"",
    ""private_domains_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/private_domains"",
    ""users_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/users"",
    ""managers_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/managers"",
    ""billing_managers_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/billing_managers"",
    ""auditors_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/auditors"",
    ""app_events_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("46477b59-fbdc-4d57-bc34-e80fa5206034", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-209", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("46477b59-fbdc-4d57-bc34-e80fa5206034", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/59aa849f-83a0-4b66-8c3d-c2184ff64fe9", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/9ef261a5-59ac-48b1-a4da-ab45a20d0513/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""630734ab-3fd8-4d8e-ac2c-501fc8109e5c"",
    ""url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633"",
    ""created_at"": ""2016-03-21T10:59:22Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-219"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""630734ab-3fd8-4d8e-ac2c-501fc8109e5c"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/b54d934f-ed50-463f-bfe9-eeb514a67a34"",
    ""spaces_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/spaces"",
    ""domains_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/domains"",
    ""private_domains_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/private_domains"",
    ""users_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/users"",
    ""managers_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/managers"",
    ""billing_managers_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/billing_managers"",
    ""auditors_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/auditors"",
    ""app_events_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("630734ab-3fd8-4d8e-ac2c-501fc8109e5c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:22Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-219", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("630734ab-3fd8-4d8e-ac2c-501fc8109e5c", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/b54d934f-ed50-463f-bfe9-eeb514a67a34", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/fcdc6bca-8307-43db-98d3-093515222633/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6c366d07-dc17-48f1-a86f-5bf89ae84157"",
        ""url"": ""/v2/users/uaa-id-101"",
        ""created_at"": ""2016-03-21T10:59:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-101/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-101/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-101/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-101/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-101/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-101/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-101/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""6c366d07-dc17-48f1-a86f-5bf89ae84157"",
        ""url"": ""/v2/users/uaa-id-102"",
        ""created_at"": ""2016-03-21T10:59:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-102/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-102/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-102/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-102/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-102/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-102/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-102/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6c366d07-dc17-48f1-a86f-5bf89ae84157", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-101", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-101/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-101/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-101/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-101/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-101/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-101/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-101/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("6c366d07-dc17-48f1-a86f-5bf89ae84157", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-102", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:22Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-102/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-102/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-102/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-102/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-102/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-102/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-102/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""faa2021f-b655-4e08-ae02-8a26306cbe39"",
        ""url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b"",
        ""created_at"": ""2016-03-21T10:59:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""faa2021f-b655-4e08-ae02-8a26306cbe39"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/51006f23-f996-47de-8210-d75a35f68165"",
        ""spaces_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/spaces"",
        ""domains_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/domains"",
        ""private_domains_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/private_domains"",
        ""users_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/users"",
        ""managers_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/managers"",
        ""billing_managers_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/billing_managers"",
        ""auditors_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/auditors"",
        ""app_events_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("faa2021f-b655-4e08-ae02-8a26306cbe39", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:15Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("faa2021f-b655-4e08-ae02-8a26306cbe39", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/51006f23-f996-47de-8210-d75a35f68165", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/440b21fc-29bf-4ba6-b8fd-86a0f376219b/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""52265fe7-5209-4444-b4ec-6cdbc2468147"",
        ""url"": ""/v2/users/uaa-id-88"",
        ""created_at"": ""2016-03-21T10:59:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""user@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-88/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-88/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-88/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-88/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-88/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-88/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-88/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("52265fe7-5209-4444-b4ec-6cdbc2468147", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-88", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-88/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-88/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c59166e5-5110-462a-b9fc-9d2d4d49cf04"",
        ""url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21"",
        ""created_at"": ""2016-03-21T10:59:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-185"",
        ""organization_guid"": ""c59166e5-5110-462a-b9fc-9d2d4d49cf04"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/dea83260-e66e-4f9a-8934-c3d573a586e7"",
        ""developers_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/developers"",
        ""managers_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/managers"",
        ""auditors_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/auditors"",
        ""apps_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/apps"",
        ""routes_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/routes"",
        ""domains_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/domains"",
        ""service_instances_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/service_instances"",
        ""app_events_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/app_events"",
        ""events_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/events"",
        ""security_groups_url"": ""/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c59166e5-5110-462a-b9fc-9d2d4d49cf04", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-185", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("c59166e5-5110-462a-b9fc-9d2d4d49cf04", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/dea83260-e66e-4f9a-8934-c3d573a586e7", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/21a2091a-a9be-4c23-a48e-d984da353b21/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingRolesOfAllUsersInOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 2,
  ""prev_url"": null,
  ""next_url"": ""/v2/organizations/71f0b6ab-5e37-4067-a2e5-9f6e5a7d0579/user_roles?order-direction=asc=2=1"",
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""40acbc6d-f79d-4f89-ad4a-88b7b2e85157"",
        ""url"": ""/v2/users/uaa-id-55"",
        ""created_at"": ""2016-03-21T10:59:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": 0,
        ""active"": 0,
        ""default_space_guid"": null,
        ""username"": ""everything@example.com"",
        ""organization_roles"": [
          ""org_user"",
          ""org_manager"",
          ""org_auditor"",
          ""billing_manager""
        ],
        ""spaces_url"": ""/v2/users/uaa-id-55/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-55/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-55/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-55/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-55/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-55/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-55/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<RetrievingRolesOfAllUsersInOrganizationResponse> page = Utilities.DeserializePage<RetrievingRolesOfAllUsersInOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("/v2/organizations/71f0b6ab-5e37-4067-a2e5-9f6e5a7d0579/user_roles?order-direction=asc=2=1", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("40acbc6d-f79d-4f89-ad4a-88b7b2e85157", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-55", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:20Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("everything@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-55/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-55/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""36d67084-e111-4037-873c-76fa5f9b6dce"",
    ""url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5"",
    ""created_at"": ""2016-03-21T10:59:22Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-223"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""36d67084-e111-4037-873c-76fa5f9b6dce"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/663abab8-8612-45cd-b9b4-7251243938bc"",
    ""spaces_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/spaces"",
    ""domains_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/domains"",
    ""private_domains_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/private_domains"",
    ""users_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/users"",
    ""managers_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/managers"",
    ""billing_managers_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/billing_managers"",
    ""auditors_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/auditors"",
    ""app_events_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("36d67084-e111-4037-873c-76fa5f9b6dce", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:22Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-223", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("36d67084-e111-4037-873c-76fa5f9b6dce", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/663abab8-8612-45cd-b9b4-7251243938bc", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a2776099-d01a-44bf-ab7b-49035a5e1de5/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""630847f3-d266-4881-82d4-96b7e88d52cc"",
    ""url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a"",
    ""created_at"": ""2016-03-21T10:59:21Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-203"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""630847f3-d266-4881-82d4-96b7e88d52cc"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/4a8663ba-1b36-482e-831b-8fd2ef43d864"",
    ""spaces_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/spaces"",
    ""domains_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/domains"",
    ""private_domains_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/private_domains"",
    ""users_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/users"",
    ""managers_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/managers"",
    ""billing_managers_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/auditors"",
    ""app_events_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("630847f3-d266-4881-82d4-96b7e88d52cc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:21Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-203", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("630847f3-d266-4881-82d4-96b7e88d52cc", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/4a8663ba-1b36-482e-831b-8fd2ef43d864", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/5a31e85f-c6e0-49e2-a5cf-2872c818689a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociatePrivateDomainWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""76a88233-8175-49d4-b72b-25665d3b5226"",
    ""url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95"",
    ""created_at"": ""2016-03-21T10:59:22Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-231"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""76a88233-8175-49d4-b72b-25665d3b5226"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/f19be95f-e49a-4c48-823f-6daab6467f9c"",
    ""spaces_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/spaces"",
    ""domains_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/domains"",
    ""private_domains_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/private_domains"",
    ""users_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/users"",
    ""managers_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/managers"",
    ""billing_managers_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/billing_managers"",
    ""auditors_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/auditors"",
    ""app_events_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/space_quota_definitions""
  }
}";

            AssociatePrivateDomainWithOrganizationResponse obj = Utilities.DeserializeJson<AssociatePrivateDomainWithOrganizationResponse>(json);

            Assert.AreEqual("76a88233-8175-49d4-b72b-25665d3b5226", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:22Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-231", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("76a88233-8175-49d4-b72b-25665d3b5226", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/f19be95f-e49a-4c48-823f-6daab6467f9c", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/d40bc7c2-7403-49b7-b6c1-2724a6501c95/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""44d7c331-5b47-48b3-b3d8-a4f98ece0cb0"",
        ""url"": ""/v2/domains/4ed51c43-bc9e-475b-b660-1dc385a60b14"",
        ""created_at"": ""2016-03-21T10:59:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""44d7c331-5b47-48b3-b3d8-a4f98ece0cb0"",
        ""url"": ""/v2/domains/0ec80919-6c1f-4c48-8122-18605b42ee8c"",
        ""created_at"": ""2016-03-21T10:59:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("44d7c331-5b47-48b3-b3d8-a4f98ece0cb0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/4ed51c43-bc9e-475b-b660-1dc385a60b14", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:15Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("44d7c331-5b47-48b3-b3d8-a4f98ece0cb0", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/0ec80919-6c1f-4c48-8122-18605b42ee8c", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:15Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{
  ""guid"": ""a37046e1-239d-4092-bf62-aea4e2ddad0c"",
  ""name"": ""name-137"",
  ""status"": ""active"",
  ""spaces"": [
    {
      ""guid"": ""a37046e1-239d-4092-bf62-aea4e2ddad0c"",
      ""name"": ""name-139"",
      ""service_count"": 0,
      ""app_count"": 0,
      ""mem_dev_total"": 0,
      ""mem_prod_total"": 0
    }
  ]
}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("a37046e1-239d-4092-bf62-aea4e2ddad0c", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-137", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""662c8c0b-f40c-4416-9c12-4c85f56224cc"",
    ""url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c"",
    ""created_at"": ""2016-03-21T10:59:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""662c8c0b-f40c-4416-9c12-4c85f56224cc"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/d44790c8-27aa-42e8-a933-6e8e5da3003c"",
    ""spaces_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/spaces"",
    ""domains_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/domains"",
    ""private_domains_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/private_domains"",
    ""users_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/users"",
    ""managers_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/managers"",
    ""billing_managers_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/billing_managers"",
    ""auditors_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/auditors"",
    ""app_events_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("662c8c0b-f40c-4416-9c12-4c85f56224cc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("662c8c0b-f40c-4416-9c12-4c85f56224cc", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/d44790c8-27aa-42e8-a933-6e8e5da3003c", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/4d49bc06-98e0-4db0-9841-ad322745a85c/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e9ccd712-7072-4351-83ac-836ea8f8e474"",
    ""url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a"",
    ""created_at"": ""2016-03-21T10:59:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-176"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""e9ccd712-7072-4351-83ac-836ea8f8e474"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/5d198717-d8e2-47f8-9366-fe2b9cdaef40"",
    ""spaces_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/spaces"",
    ""domains_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/domains"",
    ""private_domains_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/private_domains"",
    ""users_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/users"",
    ""managers_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/managers"",
    ""billing_managers_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/auditors"",
    ""app_events_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("e9ccd712-7072-4351-83ac-836ea8f8e474", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-176", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("e9ccd712-7072-4351-83ac-836ea8f8e474", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/5d198717-d8e2-47f8-9366-fe2b9cdaef40", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/46b50c55-088c-4533-bc15-e0ced2e32c3a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }
    }
}
