//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-302"",
        ""url"": ""/v2/users/uaa-id-302"",
        ""created_at"": ""2015-04-10T20:04:42+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-302/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-302/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-302/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-302/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-302/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-302/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-302/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-302", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-302", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-302/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-302/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-302/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-302/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-302/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-302/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-302/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8c827319-3606-4bae-9e9b-6816cde64a57"",
        ""url"": ""/v2/domains/8c827319-3606-4bae-9e9b-6816cde64a57"",
        ""created_at"": ""2015-04-10T20:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d616b632-3803-400c-b732-46a3709542fc"",
        ""url"": ""/v2/domains/d616b632-3803-400c-b732-46a3709542fc"",
        ""created_at"": ""2015-04-10T20:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8c827319-3606-4bae-9e9b-6816cde64a57", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/8c827319-3606-4bae-9e9b-6816cde64a57", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("d616b632-3803-400c-b732-46a3709542fc", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/d616b632-3803-400c-b732-46a3709542fc", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:27+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-329"",
        ""url"": ""/v2/users/uaa-id-329"",
        ""created_at"": ""2015-04-10T20:04:43+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-329/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-329/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-329/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-329/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-329/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-329/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-329/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-329", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-329", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-329/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-329/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-329/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-329/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-329/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-329/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-329/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-309"",
        ""url"": ""/v2/users/uaa-id-309"",
        ""created_at"": ""2015-04-10T20:04:42+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-309/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-309/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-309/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-309/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-309/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-309/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-309/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-309", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-309", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-309/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-309/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""51670da2-6460-4b1d-819b-b77a381f8b2f"",
        ""url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f"",
        ""created_at"": ""2015-04-10T20:04:42+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1781"",
        ""organization_guid"": ""2fa46a17-9e88-4f59-b931-3f06c5b4d198"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/2fa46a17-9e88-4f59-b931-3f06c5b4d198"",
        ""developers_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/developers"",
        ""managers_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/managers"",
        ""auditors_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/auditors"",
        ""apps_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/apps"",
        ""routes_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/routes"",
        ""domains_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/domains"",
        ""service_instances_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/service_instances"",
        ""app_events_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/app_events"",
        ""events_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/events"",
        ""security_groups_url"": ""/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("51670da2-6460-4b1d-819b-b77a381f8b2f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1781", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("2fa46a17-9e88-4f59-b931-3f06c5b4d198", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/2fa46a17-9e88-4f59-b931-3f06c5b4d198", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/51670da2-6460-4b1d-819b-b77a381f8b2f/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3b1ac182-9dfa-4c55-9512-28c61e1bf2e7"",
    ""url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7"",
    ""created_at"": ""2015-04-10T20:04:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1775"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""c67faa93-cc6e-479c-b987-c3e76aaa0335"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/c67faa93-cc6e-479c-b987-c3e76aaa0335"",
    ""spaces_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/spaces"",
    ""domains_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/domains"",
    ""private_domains_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/private_domains"",
    ""users_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/users"",
    ""managers_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/managers"",
    ""billing_managers_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/billing_managers"",
    ""auditors_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/auditors"",
    ""app_events_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("3b1ac182-9dfa-4c55-9512-28c61e1bf2e7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1775", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("c67faa93-cc6e-479c-b987-c3e76aaa0335", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/c67faa93-cc6e-479c-b987-c3e76aaa0335", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/3b1ac182-9dfa-4c55-9512-28c61e1bf2e7/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditorFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a0f15215-e072-43fb-816d-b3abc9d1011b"",
    ""url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b"",
    ""created_at"": ""2015-04-10T20:04:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1792"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""3280a706-c990-4345-81f9-fc8076596aa8"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/3280a706-c990-4345-81f9-fc8076596aa8"",
    ""spaces_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/spaces"",
    ""domains_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/domains"",
    ""private_domains_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/private_domains"",
    ""users_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/users"",
    ""managers_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/managers"",
    ""billing_managers_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/billing_managers"",
    ""auditors_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/auditors"",
    ""app_events_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/space_quota_definitions""
  }
}";

            RemoveAuditorFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveAuditorFromOrganizationResponse>(json);

            Assert.AreEqual("a0f15215-e072-43fb-816d-b3abc9d1011b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1792", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("3280a706-c990-4345-81f9-fc8076596aa8", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/3280a706-c990-4345-81f9-fc8076596aa8", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a0f15215-e072-43fb-816d-b3abc9d1011b/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9173c157-3a92-4997-acbc-98215507352a"",
        ""url"": ""/v2/space_quota_definitions/9173c157-3a92-4997-acbc-98215507352a"",
        ""created_at"": ""2015-04-10T20:04:42+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1760"",
        ""organization_guid"": ""141b03b5-a62b-487b-81b1-b46e2a6dac08"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/141b03b5-a62b-487b-81b1-b46e2a6dac08"",
        ""spaces_url"": ""/v2/space_quota_definitions/9173c157-3a92-4997-acbc-98215507352a/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9173c157-3a92-4997-acbc-98215507352a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/9173c157-3a92-4997-acbc-98215507352a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1760", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("141b03b5-a62b-487b-81b1-b46e2a6dac08", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/141b03b5-a62b-487b-81b1-b46e2a6dac08", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/9173c157-3a92-4997-acbc-98215507352a/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveUserFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""88e9ff38-c11d-438f-9d83-507347df8e96"",
    ""url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96"",
    ""created_at"": ""2015-04-10T20:04:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1771"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""eee18d2b-e54c-4c81-8871-18bdd13d1380"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/eee18d2b-e54c-4c81-8871-18bdd13d1380"",
    ""spaces_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/spaces"",
    ""domains_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/domains"",
    ""private_domains_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/private_domains"",
    ""users_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/users"",
    ""managers_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/managers"",
    ""billing_managers_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/billing_managers"",
    ""auditors_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/auditors"",
    ""app_events_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/space_quota_definitions""
  }
}";

            RemoveUserFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveUserFromOrganizationResponse>(json);

            Assert.AreEqual("88e9ff38-c11d-438f-9d83-507347df8e96", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1771", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("eee18d2b-e54c-4c81-8871-18bdd13d1380", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/eee18d2b-e54c-4c81-8871-18bdd13d1380", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/88e9ff38-c11d-438f-9d83-507347df8e96/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""14fcbeb0-1a9a-4031-81d5-bae9757037ff"",
    ""url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff"",
    ""created_at"": ""2015-04-10T20:04:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1790"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""ea79afd3-e5a2-419f-80d7-1725238d4689"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/ea79afd3-e5a2-419f-80d7-1725238d4689"",
    ""spaces_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/spaces"",
    ""domains_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/domains"",
    ""private_domains_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/private_domains"",
    ""users_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/users"",
    ""managers_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/managers"",
    ""billing_managers_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/billing_managers"",
    ""auditors_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/auditors"",
    ""app_events_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("14fcbeb0-1a9a-4031-81d5-bae9757037ff", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1790", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("ea79afd3-e5a2-419f-80d7-1725238d4689", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/ea79afd3-e5a2-419f-80d7-1725238d4689", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/14fcbeb0-1a9a-4031-81d5-bae9757037ff/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""057a36b5-d622-412a-a085-7271951a03c0"",
    ""url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0"",
    ""created_at"": ""2015-04-10T20:04:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1798"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""2ecb5235-3a41-4da4-82ae-89b07346126c"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/2ecb5235-3a41-4da4-82ae-89b07346126c"",
    ""spaces_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/spaces"",
    ""domains_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/domains"",
    ""private_domains_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/private_domains"",
    ""users_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/users"",
    ""managers_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/managers"",
    ""billing_managers_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/billing_managers"",
    ""auditors_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/auditors"",
    ""app_events_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("057a36b5-d622-412a-a085-7271951a03c0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1798", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("2ecb5235-3a41-4da4-82ae-89b07346126c", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/2ecb5235-3a41-4da4-82ae-89b07346126c", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/057a36b5-d622-412a-a085-7271951a03c0/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6adfb1ec-8271-4d84-a500-dcd3a96edece"",
    ""url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece"",
    ""created_at"": ""2015-04-10T20:04:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1769"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""098c48c4-615a-4063-8f5e-5cf391fa1ad3"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/098c48c4-615a-4063-8f5e-5cf391fa1ad3"",
    ""spaces_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/spaces"",
    ""domains_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/domains"",
    ""private_domains_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/private_domains"",
    ""users_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/users"",
    ""managers_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/managers"",
    ""billing_managers_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/billing_managers"",
    ""auditors_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/auditors"",
    ""app_events_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("6adfb1ec-8271-4d84-a500-dcd3a96edece", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1769", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("098c48c4-615a-4063-8f5e-5cf391fa1ad3", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/098c48c4-615a-4063-8f5e-5cf391fa1ad3", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/6adfb1ec-8271-4d84-a500-dcd3a96edece/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""cb2ca0af-5dc8-435f-b459-bc17da68146e"",
    ""url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e"",
    ""created_at"": ""2015-04-10T20:04:43+00:00"",
    ""updated_at"": ""2015-04-10T20:04:43+00:00""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""dcb2c75b-7602-4a37-a0e3-b3f4e4e4ff9b"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/dcb2c75b-7602-4a37-a0e3-b3f4e4e4ff9b"",
    ""spaces_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/spaces"",
    ""domains_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/domains"",
    ""private_domains_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/private_domains"",
    ""users_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/users"",
    ""managers_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/managers"",
    ""billing_managers_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/billing_managers"",
    ""auditors_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/auditors"",
    ""app_events_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("cb2ca0af-5dc8-435f-b459-bc17da68146e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("dcb2c75b-7602-4a37-a0e3-b3f4e4e4ff9b", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/dcb2c75b-7602-4a37-a0e3-b3f4e4e4ff9b", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/cb2ca0af-5dc8-435f-b459-bc17da68146e/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c139bd58-7ad2-41ba-9455-691bcee7f801"",
        ""url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801"",
        ""created_at"": ""2015-04-10T20:04:27+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""24d7d23c-7c73-498c-8bc6-1021014dbb75"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/24d7d23c-7c73-498c-8bc6-1021014dbb75"",
        ""spaces_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/spaces"",
        ""domains_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/domains"",
        ""private_domains_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/private_domains"",
        ""users_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/users"",
        ""managers_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/managers"",
        ""billing_managers_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/billing_managers"",
        ""auditors_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/auditors"",
        ""app_events_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c139bd58-7ad2-41ba-9455-691bcee7f801", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:27+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("24d7d23c-7c73-498c-8bc6-1021014dbb75", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/24d7d23c-7c73-498c-8bc6-1021014dbb75", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/c139bd58-7ad2-41ba-9455-691bcee7f801/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-316"",
        ""url"": ""/v2/users/uaa-id-316"",
        ""created_at"": ""2015-04-10T20:04:42+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-316/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-316/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-316/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-316/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-316/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-316/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-316/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""uaa-id-317"",
        ""url"": ""/v2/users/uaa-id-317"",
        ""created_at"": ""2015-04-10T20:04:42+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-317/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-317/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-317/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-317/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-317/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-317/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-317/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-316", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-316", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-316/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-316/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("uaa-id-317", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-317", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-317/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-317/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""13355d98-f86a-4d96-86b3-f2bdcf9cc22c"",
        ""url"": ""/v2/services/13355d98-f86a-4d96-86b3-f2bdcf9cc22c"",
        ""created_at"": ""2015-04-10T20:04:43+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-80"",
        ""provider"": ""provider-71"",
        ""url"": ""https://foo.com/url-101"",
        ""description"": ""desc-180"",
        ""long_description"": null,
        ""version"": ""version-55"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""6589a65d-723f-4d10-bd12-b80d445525c3"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/13355d98-f86a-4d96-86b3-f2bdcf9cc22c/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("13355d98-f86a-4d96-86b3-f2bdcf9cc22c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/13355d98-f86a-4d96-86b3-f2bdcf9cc22c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-80", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-71", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("https://foo.com/url-101", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-180", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("version-55", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("6589a65d-723f-4d10-bd12-b80d445525c3", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/13355d98-f86a-4d96-86b3-f2bdcf9cc22c/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestRemoveBillingManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""dfd71042-a929-417c-8eb0-5e94c014ca50"",
    ""url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50"",
    ""created_at"": ""2015-04-10T20:04:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1765"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""c64fc710-b64c-4315-8ecf-a21675b36077"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/c64fc710-b64c-4315-8ecf-a21675b36077"",
    ""spaces_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/spaces"",
    ""domains_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/domains"",
    ""private_domains_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/private_domains"",
    ""users_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/users"",
    ""managers_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/managers"",
    ""billing_managers_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/billing_managers"",
    ""auditors_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/auditors"",
    ""app_events_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/space_quota_definitions""
  }
}";

            RemoveBillingManagerFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveBillingManagerFromOrganizationResponse>(json);

            Assert.AreEqual("dfd71042-a929-417c-8eb0-5e94c014ca50", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1765", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("c64fc710-b64c-4315-8ecf-a21675b36077", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/c64fc710-b64c-4315-8ecf-a21675b36077", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/dfd71042-a929-417c-8eb0-5e94c014ca50/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{""memory_usage_in_mb"":0}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""08c9f799-b1cd-440a-ad9a-00cc01d45cf2"",
    ""url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2"",
    ""created_at"": ""2015-04-10T20:04:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""b034e305-f157-4442-a872-958e0387bda9"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/b034e305-f157-4442-a872-958e0387bda9"",
    ""spaces_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/spaces"",
    ""domains_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/domains"",
    ""private_domains_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/private_domains"",
    ""users_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/users"",
    ""managers_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/managers"",
    ""billing_managers_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/billing_managers"",
    ""auditors_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/auditors"",
    ""app_events_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("08c9f799-b1cd-440a-ad9a-00cc01d45cf2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("b034e305-f157-4442-a872-958e0387bda9", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/b034e305-f157-4442-a872-958e0387bda9", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/08c9f799-b1cd-440a-ad9a-00cc01d45cf2/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6b7285db-b9fb-46bc-a30a-512fad0f9330"",
        ""url"": ""/v2/private_domains/6b7285db-b9fb-46bc-a30a-512fad0f9330"",
        ""created_at"": ""2015-04-10T20:04:43+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-54.example.com"",
        ""owning_organization_guid"": ""2ff44cbb-8062-4dca-be76-d59442a9096b"",
        ""owning_organization_url"": ""/v2/organizations/2ff44cbb-8062-4dca-be76-d59442a9096b""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6b7285db-b9fb-46bc-a30a-512fad0f9330", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/6b7285db-b9fb-46bc-a30a-512fad0f9330", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:43+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-54.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("2ff44cbb-8062-4dca-be76-d59442a9096b", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/2ff44cbb-8062-4dca-be76-d59442a9096b", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{""guid"":""714e0421-eb41-49ce-964b-98900690bd52"",""name"":""name-1933"",""status"":""active"",""spaces"":[{""guid"":""a4087ee9-af05-430d-9952-f5d18044fb8f"",""name"":""name-1935"",""service_count"":0,""app_count"":0,""mem_dev_total"":0,""mem_prod_total"":0}]}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("714e0421-eb41-49ce-964b-98900690bd52", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1933", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestRemoveManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c5586c2a-5de8-4add-868f-11126b98c66e"",
    ""url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e"",
    ""created_at"": ""2015-04-10T20:04:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1777"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""d90e1c5b-f028-4242-b223-1930694e5d34"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/d90e1c5b-f028-4242-b223-1930694e5d34"",
    ""spaces_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/spaces"",
    ""domains_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/domains"",
    ""private_domains_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/private_domains"",
    ""users_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/users"",
    ""managers_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/managers"",
    ""billing_managers_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/billing_managers"",
    ""auditors_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/auditors"",
    ""app_events_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/space_quota_definitions""
  }
}";

            RemoveManagerFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveManagerFromOrganizationResponse>(json);

            Assert.AreEqual("c5586c2a-5de8-4add-868f-11126b98c66e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1777", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("d90e1c5b-f028-4242-b223-1930694e5d34", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/d90e1c5b-f028-4242-b223-1930694e5d34", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/c5586c2a-5de8-4add-868f-11126b98c66e/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""edf41f9f-2d29-49ac-b762-2173262a5e1a"",
    ""url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a"",
    ""created_at"": ""2015-04-10T20:04:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1763"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""a9a0d5bc-c016-42d5-8107-585175839800"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/a9a0d5bc-c016-42d5-8107-585175839800"",
    ""spaces_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/spaces"",
    ""domains_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/domains"",
    ""private_domains_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/private_domains"",
    ""users_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/users"",
    ""managers_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/managers"",
    ""billing_managers_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/auditors"",
    ""app_events_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("edf41f9f-2d29-49ac-b762-2173262a5e1a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T20:04:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1763", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("a9a0d5bc-c016-42d5-8107-585175839800", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/a9a0d5bc-c016-42d5-8107-585175839800", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/edf41f9f-2d29-49ac-b762-2173262a5e1a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }
    }
}
