//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-151"",
        ""url"": ""/v2/users/uaa-id-151"",
        ""created_at"": ""2015-03-23T16:53:22+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-151/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-151/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-151/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-151/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-151/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-151/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-151/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-151", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-151", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-151/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-151/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-151/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-151/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-151/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-151/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-151/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""78cde134-b278-4927-ba7a-6019472d7d61"",
        ""url"": ""/v2/domains/78cde134-b278-4927-ba7a-6019472d7d61"",
        ""created_at"": ""2015-03-23T16:53:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""b7e4aa07-da90-4ef0-849f-dc167b3dd875"",
        ""url"": ""/v2/domains/b7e4aa07-da90-4ef0-849f-dc167b3dd875"",
        ""created_at"": ""2015-03-23T16:53:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("78cde134-b278-4927-ba7a-6019472d7d61", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/78cde134-b278-4927-ba7a-6019472d7d61", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("b7e4aa07-da90-4ef0-849f-dc167b3dd875", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/b7e4aa07-da90-4ef0-849f-dc167b3dd875", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-144"",
        ""url"": ""/v2/users/uaa-id-144"",
        ""created_at"": ""2015-03-23T16:53:22+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-144/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-144/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-144/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-144/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-144/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-144/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-144/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-144", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-144", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-144/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-144/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-144/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-144/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-144/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-144/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-144/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-137"",
        ""url"": ""/v2/users/uaa-id-137"",
        ""created_at"": ""2015-03-23T16:53:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-137/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-137/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-137/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-137/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-137/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-137/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-137/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-137", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-137", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-137/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3d548220-06a7-48a6-bd80-ab97ad509ec6"",
        ""url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6"",
        ""created_at"": ""2015-03-23T16:53:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-554"",
        ""organization_guid"": ""72e84576-4e70-4c03-bc0d-43ec3910138e"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/72e84576-4e70-4c03-bc0d-43ec3910138e"",
        ""developers_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/developers"",
        ""managers_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/managers"",
        ""auditors_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/auditors"",
        ""apps_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/apps"",
        ""routes_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/routes"",
        ""domains_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/domains"",
        ""service_instances_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/service_instances"",
        ""app_events_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/app_events"",
        ""events_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/events"",
        ""security_groups_url"": ""/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3d548220-06a7-48a6-bd80-ab97ad509ec6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-554", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("72e84576-4e70-4c03-bc0d-43ec3910138e", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/72e84576-4e70-4c03-bc0d-43ec3910138e", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/3d548220-06a7-48a6-bd80-ab97ad509ec6/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d1d7aa06-3288-4bfa-b198-52c9dad920ef"",
    ""url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef"",
    ""created_at"": ""2015-03-23T16:53:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-588"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""93306b59-d6a5-4c45-993f-152e0b39aa33"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/93306b59-d6a5-4c45-993f-152e0b39aa33"",
    ""spaces_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/spaces"",
    ""domains_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/domains"",
    ""private_domains_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/private_domains"",
    ""users_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/users"",
    ""managers_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/managers"",
    ""billing_managers_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/billing_managers"",
    ""auditors_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/auditors"",
    ""app_events_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("d1d7aa06-3288-4bfa-b198-52c9dad920ef", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-588", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("93306b59-d6a5-4c45-993f-152e0b39aa33", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/93306b59-d6a5-4c45-993f-152e0b39aa33", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/d1d7aa06-3288-4bfa-b198-52c9dad920ef/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditorFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b0068201-1f81-4b0d-a19f-0b3b7ad44637"",
    ""url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637"",
    ""created_at"": ""2015-03-23T16:53:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-568"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""86b34ac5-0b51-4795-a352-1d83199d5fd7"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/86b34ac5-0b51-4795-a352-1d83199d5fd7"",
    ""spaces_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/spaces"",
    ""domains_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/domains"",
    ""private_domains_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/private_domains"",
    ""users_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/users"",
    ""managers_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/managers"",
    ""billing_managers_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/billing_managers"",
    ""auditors_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/auditors"",
    ""app_events_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/space_quota_definitions""
  }
}";

            RemoveAuditorFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveAuditorFromOrganizationResponse>(json);

            Assert.AreEqual("b0068201-1f81-4b0d-a19f-0b3b7ad44637", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-568", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("86b34ac5-0b51-4795-a352-1d83199d5fd7", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/86b34ac5-0b51-4795-a352-1d83199d5fd7", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/b0068201-1f81-4b0d-a19f-0b3b7ad44637/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""874a3c4f-8157-43c2-ab0b-5e397c10fbdf"",
        ""url"": ""/v2/space_quota_definitions/874a3c4f-8157-43c2-ab0b-5e397c10fbdf"",
        ""created_at"": ""2015-03-23T16:53:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-561"",
        ""organization_guid"": ""25b8e0c9-f92b-496f-99a8-22ac53c1b895"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/25b8e0c9-f92b-496f-99a8-22ac53c1b895"",
        ""spaces_url"": ""/v2/space_quota_definitions/874a3c4f-8157-43c2-ab0b-5e397c10fbdf/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("874a3c4f-8157-43c2-ab0b-5e397c10fbdf", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/874a3c4f-8157-43c2-ab0b-5e397c10fbdf", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-561", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("25b8e0c9-f92b-496f-99a8-22ac53c1b895", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/25b8e0c9-f92b-496f-99a8-22ac53c1b895", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/874a3c4f-8157-43c2-ab0b-5e397c10fbdf/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveUserFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1"",
    ""url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1"",
    ""created_at"": ""2015-03-23T16:53:21+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-562"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""f76dc75e-3171-4d0f-918c-40bc8b2dadcc"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/f76dc75e-3171-4d0f-918c-40bc8b2dadcc"",
    ""spaces_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/spaces"",
    ""domains_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/domains"",
    ""private_domains_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/private_domains"",
    ""users_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/users"",
    ""managers_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/managers"",
    ""billing_managers_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/billing_managers"",
    ""auditors_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/auditors"",
    ""app_events_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/space_quota_definitions""
  }
}";

            RemoveUserFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveUserFromOrganizationResponse>(json);

            Assert.AreEqual("8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-562", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("f76dc75e-3171-4d0f-918c-40bc8b2dadcc", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/f76dc75e-3171-4d0f-918c-40bc8b2dadcc", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/8d384fc1-61da-4a8c-8fd0-3d3b51ea7cf1/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""eee4e51c-78c3-4fe0-b0e8-dd109b7715f2"",
    ""url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2"",
    ""created_at"": ""2015-03-23T16:53:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-572"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""b0ed284f-fdea-41d8-a887-c7b0e7542e66"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/b0ed284f-fdea-41d8-a887-c7b0e7542e66"",
    ""spaces_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/spaces"",
    ""domains_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/domains"",
    ""private_domains_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/private_domains"",
    ""users_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/users"",
    ""managers_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/managers"",
    ""billing_managers_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/billing_managers"",
    ""auditors_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/auditors"",
    ""app_events_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("eee4e51c-78c3-4fe0-b0e8-dd109b7715f2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-572", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("b0ed284f-fdea-41d8-a887-c7b0e7542e66", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/b0ed284f-fdea-41d8-a887-c7b0e7542e66", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/eee4e51c-78c3-4fe0-b0e8-dd109b7715f2/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3b395adb-25d3-4496-a3a2-d99971496bba"",
    ""url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba"",
    ""created_at"": ""2015-03-23T16:53:21+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-542"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""8af4be0f-26d4-48ba-8986-3ac132ac7017"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/8af4be0f-26d4-48ba-8986-3ac132ac7017"",
    ""spaces_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/spaces"",
    ""domains_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/domains"",
    ""private_domains_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/private_domains"",
    ""users_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/users"",
    ""managers_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/managers"",
    ""billing_managers_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/billing_managers"",
    ""auditors_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/auditors"",
    ""app_events_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("3b395adb-25d3-4496-a3a2-d99971496bba", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-542", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("8af4be0f-26d4-48ba-8986-3ac132ac7017", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/8af4be0f-26d4-48ba-8986-3ac132ac7017", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/3b395adb-25d3-4496-a3a2-d99971496bba/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5b870934-0d6e-4f7c-99c6-94ad0d17595c"",
    ""url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c"",
    ""created_at"": ""2015-03-23T16:53:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-566"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""16e64867-e310-40a4-8241-e137249c56e8"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/16e64867-e310-40a4-8241-e137249c56e8"",
    ""spaces_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/spaces"",
    ""domains_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/domains"",
    ""private_domains_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/private_domains"",
    ""users_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/users"",
    ""managers_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/managers"",
    ""billing_managers_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/billing_managers"",
    ""auditors_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/auditors"",
    ""app_events_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("5b870934-0d6e-4f7c-99c6-94ad0d17595c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-566", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("16e64867-e310-40a4-8241-e137249c56e8", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/16e64867-e310-40a4-8241-e137249c56e8", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/5b870934-0d6e-4f7c-99c6-94ad0d17595c/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1668e494-0dd0-4847-a008-a059d196bb98"",
    ""url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98"",
    ""created_at"": ""2015-03-23T16:53:21+00:00"",
    ""updated_at"": ""2015-03-23T16:53:21+00:00""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""82e47960-78a7-462e-a0d3-2d1ba8b78c64"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/82e47960-78a7-462e-a0d3-2d1ba8b78c64"",
    ""spaces_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/spaces"",
    ""domains_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/domains"",
    ""private_domains_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/private_domains"",
    ""users_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/users"",
    ""managers_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/managers"",
    ""billing_managers_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/billing_managers"",
    ""auditors_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/auditors"",
    ""app_events_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("1668e494-0dd0-4847-a008-a059d196bb98", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("82e47960-78a7-462e-a0d3-2d1ba8b78c64", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/82e47960-78a7-462e-a0d3-2d1ba8b78c64", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/1668e494-0dd0-4847-a008-a059d196bb98/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2de3e326-b7ce-4efc-92c5-8a8de13ab8e9"",
        ""url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9"",
        ""created_at"": ""2015-03-23T16:53:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""3e1e55c9-dd7b-4aaf-90be-f865a445d6e2"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/3e1e55c9-dd7b-4aaf-90be-f865a445d6e2"",
        ""spaces_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/spaces"",
        ""domains_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/domains"",
        ""private_domains_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/private_domains"",
        ""users_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/users"",
        ""managers_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/managers"",
        ""billing_managers_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/billing_managers"",
        ""auditors_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/auditors"",
        ""app_events_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2de3e326-b7ce-4efc-92c5-8a8de13ab8e9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("3e1e55c9-dd7b-4aaf-90be-f865a445d6e2", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/3e1e55c9-dd7b-4aaf-90be-f865a445d6e2", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/2de3e326-b7ce-4efc-92c5-8a8de13ab8e9/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-160"",
        ""url"": ""/v2/users/uaa-id-160"",
        ""created_at"": ""2015-03-23T16:53:22+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-160/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-160/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-160/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-160/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-160/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-160/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-160/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""uaa-id-161"",
        ""url"": ""/v2/users/uaa-id-161"",
        ""created_at"": ""2015-03-23T16:53:22+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-161/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-161/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-161/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-161/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-161/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-161/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-161/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-160", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-160", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-160/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("uaa-id-161", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-161", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-161/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-161/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-161/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-161/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-161/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-161/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-161/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4f437dda-b4fe-4241-bb4b-b683d6035843"",
        ""url"": ""/v2/services/4f437dda-b4fe-4241-bb4b-b683d6035843"",
        ""created_at"": ""2015-03-23T16:53:22+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-17"",
        ""provider"": ""provider-17"",
        ""url"": ""https://foo.com/url-44"",
        ""description"": ""desc-80"",
        ""long_description"": null,
        ""version"": ""version-17"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""95101fad-fea0-4736-a93f-4d17ea43946d"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/4f437dda-b4fe-4241-bb4b-b683d6035843/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4f437dda-b4fe-4241-bb4b-b683d6035843", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/4f437dda-b4fe-4241-bb4b-b683d6035843", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-17", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-17", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("https://foo.com/url-44", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-80", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("version-17", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("95101fad-fea0-4736-a93f-4d17ea43946d", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/4f437dda-b4fe-4241-bb4b-b683d6035843/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestRemoveBillingManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e858c08c-955e-4941-b856-ea2f74f176a7"",
    ""url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7"",
    ""created_at"": ""2015-03-23T16:53:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-574"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""727650af-858d-4d9d-ae74-c89cfbb899ec"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/727650af-858d-4d9d-ae74-c89cfbb899ec"",
    ""spaces_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/spaces"",
    ""domains_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/domains"",
    ""private_domains_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/private_domains"",
    ""users_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/users"",
    ""managers_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/managers"",
    ""billing_managers_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/billing_managers"",
    ""auditors_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/auditors"",
    ""app_events_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/space_quota_definitions""
  }
}";

            RemoveBillingManagerFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveBillingManagerFromOrganizationResponse>(json);

            Assert.AreEqual("e858c08c-955e-4941-b856-ea2f74f176a7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-574", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("727650af-858d-4d9d-ae74-c89cfbb899ec", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/727650af-858d-4d9d-ae74-c89cfbb899ec", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/e858c08c-955e-4941-b856-ea2f74f176a7/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{""memory_usage_in_mb"":0}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3c495638-f047-4c4d-964f-ef2f8474ba6a"",
    ""url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a"",
    ""created_at"": ""2015-03-23T16:53:21+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""01427e39-ae80-4c6b-a5a3-9a467bc568dd"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/01427e39-ae80-4c6b-a5a3-9a467bc568dd"",
    ""spaces_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/spaces"",
    ""domains_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/domains"",
    ""private_domains_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/private_domains"",
    ""users_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/users"",
    ""managers_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/managers"",
    ""billing_managers_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/auditors"",
    ""app_events_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("3c495638-f047-4c4d-964f-ef2f8474ba6a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("01427e39-ae80-4c6b-a5a3-9a467bc568dd", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/01427e39-ae80-4c6b-a5a3-9a467bc568dd", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/3c495638-f047-4c4d-964f-ef2f8474ba6a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b2053652-43e6-4a9a-8869-30a784605969"",
        ""url"": ""/v2/private_domains/b2053652-43e6-4a9a-8869-30a784605969"",
        ""created_at"": ""2015-03-23T16:53:21+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-13.example.com"",
        ""owning_organization_guid"": ""f30b0893-ac25-49cd-990b-4481ccc78045"",
        ""owning_organization_url"": ""/v2/organizations/f30b0893-ac25-49cd-990b-4481ccc78045""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b2053652-43e6-4a9a-8869-30a784605969", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/b2053652-43e6-4a9a-8869-30a784605969", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:21+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-13.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("f30b0893-ac25-49cd-990b-4481ccc78045", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/f30b0893-ac25-49cd-990b-4481ccc78045", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{""guid"":""c0140137-1f11-4e8a-825d-fc4d0e28d89c"",""name"":""name-491"",""status"":""active"",""spaces"":[{""guid"":""f488c9dc-7463-4e07-b64d-d6810b0e7eaa"",""name"":""name-493"",""service_count"":0,""app_count"":0,""mem_dev_total"":0,""mem_prod_total"":0}]}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("c0140137-1f11-4e8a-825d-fc4d0e28d89c", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-491", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestRemoveManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3b9b1fa7-8380-457b-8233-d0d3e28f2a8b"",
    ""url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b"",
    ""created_at"": ""2015-03-23T16:53:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-584"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""38ed180e-00bc-4751-a238-9b5ace2d9f65"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/38ed180e-00bc-4751-a238-9b5ace2d9f65"",
    ""spaces_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/spaces"",
    ""domains_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/domains"",
    ""private_domains_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/private_domains"",
    ""users_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/users"",
    ""managers_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/managers"",
    ""billing_managers_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/billing_managers"",
    ""auditors_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/auditors"",
    ""app_events_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/space_quota_definitions""
  }
}";

            RemoveManagerFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveManagerFromOrganizationResponse>(json);

            Assert.AreEqual("3b9b1fa7-8380-457b-8233-d0d3e28f2a8b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-584", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("38ed180e-00bc-4751-a238-9b5ace2d9f65", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/38ed180e-00bc-4751-a238-9b5ace2d9f65", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/3b9b1fa7-8380-457b-8233-d0d3e28f2a8b/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""44297ea9-b00a-4486-8775-ce7f7a67c40e"",
    ""url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e"",
    ""created_at"": ""2015-03-23T16:53:22+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-578"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""85578983-fe33-4c7c-b83d-df999d4f1f2e"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/85578983-fe33-4c7c-b83d-df999d4f1f2e"",
    ""spaces_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/spaces"",
    ""domains_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/domains"",
    ""private_domains_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/private_domains"",
    ""users_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/users"",
    ""managers_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/managers"",
    ""billing_managers_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/billing_managers"",
    ""auditors_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/auditors"",
    ""app_events_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("44297ea9-b00a-4486-8775-ce7f7a67c40e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:22+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-578", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("85578983-fe33-4c7c-b83d-df999d4f1f2e", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/85578983-fe33-4c7c-b83d-df999d4f1f2e", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/44297ea9-b00a-4486-8775-ce7f7a67c40e/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }
    }
}
