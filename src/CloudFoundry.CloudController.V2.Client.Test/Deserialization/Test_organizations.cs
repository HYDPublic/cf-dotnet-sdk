//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by cf-sdk-builder
// 

using System;
using System.CodeDom.Compiler;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CloudFoundry.CloudController.V2.Client.Data;
using CloudFoundry.CloudController.V2;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {

    
        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-332"",
        ""url"": ""/v2/users/uaa-id-332"",
        ""created_at"": ""2015-02-19T03:53:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-332/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-332/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-332/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-332/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-332/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-332/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-332/audited_spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllUsersForOrganizationResponse> page = Util.DeserializePage<ListAllUsersForOrganizationResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("uaa-id-332", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/users/uaa-id-332", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
                  Assert.AreEqual("/v2/users/uaa-id-332/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-332/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-332/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-332/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-332/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-332/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-332/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ae005fa7-6f6a-4ea1-9eca-2d92e79c8115"",
        ""url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115"",
        ""created_at"": ""2015-02-19T03:53:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1908"",
        ""organization_guid"": ""7ec49fee-a6ec-470d-b429-6ec7e3a817dc"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/7ec49fee-a6ec-470d-b429-6ec7e3a817dc"",
        ""developers_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/developers"",
        ""managers_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/managers"",
        ""auditors_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/auditors"",
        ""apps_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/apps"",
        ""routes_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/routes"",
        ""domains_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/domains"",
        ""service_instances_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/service_instances"",
        ""app_events_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/app_events"",
        ""events_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/events"",
        ""security_groups_url"": ""/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/security_groups""
      }
    }
  ]
}";
    
            PagedResponse<ListAllSpacesForOrganizationResponse> page = Util.DeserializePage<ListAllSpacesForOrganizationResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("ae005fa7-6f6a-4ea1-9eca-2d92e79c8115", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-1908", TestUtil.ToTestableString(page[0].Name), true);
                  Assert.AreEqual("7ec49fee-a6ec-470d-b429-6ec7e3a817dc", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
                  Assert.AreEqual("/v2/organizations/7ec49fee-a6ec-470d-b429-6ec7e3a817dc", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
                  Assert.AreEqual("/v2/spaces/ae005fa7-6f6a-4ea1-9eca-2d92e79c8115/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f77c7187-f227-404b-ae95-682902869df1"",
    ""url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1"",
    ""created_at"": ""2015-02-19T03:53:11+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1900"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""aa9fcdfc-4330-4e03-ac5d-dd91404fba96"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/aa9fcdfc-4330-4e03-ac5d-dd91404fba96"",
    ""spaces_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/spaces"",
    ""domains_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/domains"",
    ""private_domains_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/private_domains"",
    ""users_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/users"",
    ""managers_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/managers"",
    ""billing_managers_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/billing_managers"",
    ""auditors_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/auditors"",
    ""app_events_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/space_quota_definitions""
  }
}";
    
            AssociateUserWithOrganizationResponse obj = Util.DeserializeJson<AssociateUserWithOrganizationResponse>(json);
        
            Assert.AreEqual("f77c7187-f227-404b-ae95-682902869df1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1900", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("aa9fcdfc-4330-4e03-ac5d-dd91404fba96", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/aa9fcdfc-4330-4e03-ac5d-dd91404fba96", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/f77c7187-f227-404b-ae95-682902869df1/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestRemoveManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""65c883a1-38a7-4914-b05d-a347e5624c7d"",
    ""url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d"",
    ""created_at"": ""2015-02-19T03:53:12+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1929"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""819e8815-34b9-4506-b03c-e4ba09ad8971"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/819e8815-34b9-4506-b03c-e4ba09ad8971"",
    ""spaces_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/spaces"",
    ""domains_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/domains"",
    ""private_domains_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/private_domains"",
    ""users_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/users"",
    ""managers_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/managers"",
    ""billing_managers_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/billing_managers"",
    ""auditors_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/auditors"",
    ""app_events_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/space_quota_definitions""
  }
}";
    
            RemoveManagerFromOrganizationResponse obj = Util.DeserializeJson<RemoveManagerFromOrganizationResponse>(json);
        
            Assert.AreEqual("65c883a1-38a7-4914-b05d-a347e5624c7d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:12+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1929", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("819e8815-34b9-4506-b03c-e4ba09ad8971", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/819e8815-34b9-4506-b03c-e4ba09ad8971", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/65c883a1-38a7-4914-b05d-a347e5624c7d/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestRemoveAuditorFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""853adf6d-afc1-4bbe-a010-3234306a62c2"",
    ""url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2"",
    ""created_at"": ""2015-02-19T03:53:12+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1923"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""85f19b6e-d2c4-4848-aa21-9380b7fd6e26"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/85f19b6e-d2c4-4848-aa21-9380b7fd6e26"",
    ""spaces_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/spaces"",
    ""domains_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/domains"",
    ""private_domains_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/private_domains"",
    ""users_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/users"",
    ""managers_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/managers"",
    ""billing_managers_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/billing_managers"",
    ""auditors_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/auditors"",
    ""app_events_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/space_quota_definitions""
  }
}";
    
            RemoveAuditorFromOrganizationResponse obj = Util.DeserializeJson<RemoveAuditorFromOrganizationResponse>(json);
        
            Assert.AreEqual("853adf6d-afc1-4bbe-a010-3234306a62c2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:12+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1923", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("85f19b6e-d2c4-4848-aa21-9380b7fd6e26", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/85f19b6e-d2c4-4848-aa21-9380b7fd6e26", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/853adf6d-afc1-4bbe-a010-3234306a62c2/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6803d808-8b55-4f60-834f-8d9dde7f975d"",
    ""url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d"",
    ""created_at"": ""2015-02-19T03:53:12+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1931"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""aea4e90b-81cf-44e8-aab5-dccfcb2d3c64"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/aea4e90b-81cf-44e8-aab5-dccfcb2d3c64"",
    ""spaces_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/spaces"",
    ""domains_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/domains"",
    ""private_domains_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/private_domains"",
    ""users_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/users"",
    ""managers_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/managers"",
    ""billing_managers_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/billing_managers"",
    ""auditors_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/auditors"",
    ""app_events_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/space_quota_definitions""
  }
}";
    
            AssociateManagerWithOrganizationResponse obj = Util.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);
        
            Assert.AreEqual("6803d808-8b55-4f60-834f-8d9dde7f975d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:12+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1931", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("aea4e90b-81cf-44e8-aab5-dccfcb2d3c64", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/aea4e90b-81cf-44e8-aab5-dccfcb2d3c64", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/6803d808-8b55-4f60-834f-8d9dde7f975d/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-344"",
        ""url"": ""/v2/users/uaa-id-344"",
        ""created_at"": ""2015-02-19T03:53:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-344/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-344/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-344/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-344/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-344/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-344/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-344/audited_spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllBillingManagersForOrganizationResponse> page = Util.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("uaa-id-344", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/users/uaa-id-344", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
                  Assert.AreEqual("/v2/users/uaa-id-344/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-344/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-344/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-344/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-344/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-344/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-344/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-351"",
        ""url"": ""/v2/users/uaa-id-351"",
        ""created_at"": ""2015-02-19T03:53:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-351/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-351/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-351/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-351/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-351/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-351/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-351/audited_spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllAuditorsForOrganizationResponse> page = Util.DeserializePage<ListAllAuditorsForOrganizationResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("uaa-id-351", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/users/uaa-id-351", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:12+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
                  Assert.AreEqual("/v2/users/uaa-id-351/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-351/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-351/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-351/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-351/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-351/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-351/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""10bb5190-a524-46ab-bceb-03ce29442376"",
        ""url"": ""/v2/services/10bb5190-a524-46ab-bceb-03ce29442376"",
        ""created_at"": ""2015-02-19T03:53:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-81"",
        ""provider"": ""provider-72"",
        ""url"": ""https://foo.com/url-102"",
        ""description"": ""desc-188"",
        ""long_description"": null,
        ""version"": ""version-56"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""c86a274b-230c-4d48-9706-473b3fe18668"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/10bb5190-a524-46ab-bceb-03ce29442376/service_plans""
      }
    }
  ]
}";
    
            PagedResponse<ListAllServicesForOrganizationResponse> page = Util.DeserializePage<ListAllServicesForOrganizationResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("10bb5190-a524-46ab-bceb-03ce29442376", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/services/10bb5190-a524-46ab-bceb-03ce29442376", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("label-81", TestUtil.ToTestableString(page[0].Label), true);
                  Assert.AreEqual("provider-72", TestUtil.ToTestableString(page[0].Provider), true);
                  Assert.AreEqual("https://foo.com/url-102", TestUtil.ToTestableString(page[0].Url), true);
                  Assert.AreEqual("desc-188", TestUtil.ToTestableString(page[0].Description), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
                  Assert.AreEqual("version-56", TestUtil.ToTestableString(page[0].Version), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
                  Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
                  Assert.AreEqual("c86a274b-230c-4d48-9706-473b3fe18668", TestUtil.ToTestableString(page[0].UniqueId), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
                  
                  
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
                  Assert.AreEqual("/v2/services/10bb5190-a524-46ab-bceb-03ce29442376/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6a35e49a-31b9-400f-9a42-6257396a435f"",
        ""url"": ""/v2/private_domains/6a35e49a-31b9-400f-9a42-6257396a435f"",
        ""created_at"": ""2015-02-19T03:53:11+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-55.example.com"",
        ""owning_organization_guid"": ""c5d26160-1a7b-4388-90aa-ed2927bbc458"",
        ""owning_organization_url"": ""/v2/organizations/c5d26160-1a7b-4388-90aa-ed2927bbc458""
      }
    }
  ]
}";
    
            PagedResponse<ListAllPrivateDomainsForOrganizationResponse> page = Util.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("6a35e49a-31b9-400f-9a42-6257396a435f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/private_domains/6a35e49a-31b9-400f-9a42-6257396a435f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("domain-55.example.com", TestUtil.ToTestableString(page[0].Name), true);
                  Assert.AreEqual("c5d26160-1a7b-4388-90aa-ed2927bbc458", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
                  Assert.AreEqual("/v2/organizations/c5d26160-1a7b-4388-90aa-ed2927bbc458", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bc273167-e5c2-4c31-b69c-d2b6a23dcc97"",
    ""url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97"",
    ""created_at"": ""2015-02-19T03:53:10+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""eab7f9e4-fa46-4742-b2ec-1e9bdfb08649"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/eab7f9e4-fa46-4742-b2ec-1e9bdfb08649"",
    ""spaces_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/spaces"",
    ""domains_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/domains"",
    ""private_domains_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/private_domains"",
    ""users_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/users"",
    ""managers_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/managers"",
    ""billing_managers_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/billing_managers"",
    ""auditors_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/auditors"",
    ""app_events_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/space_quota_definitions""
  }
}";
    
            CreateOrganizationResponse obj = Util.DeserializeJson<CreateOrganizationResponse>(json);
        
            Assert.AreEqual("bc273167-e5c2-4c31-b69c-d2b6a23dcc97", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("eab7f9e4-fa46-4742-b2ec-1e9bdfb08649", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/eab7f9e4-fa46-4742-b2ec-1e9bdfb08649", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/bc273167-e5c2-4c31-b69c-d2b6a23dcc97/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fd4449a2-4dd2-4105-947e-b820c3d83dfe"",
        ""url"": ""/v2/domains/fd4449a2-4dd2-4105-947e-b820c3d83dfe"",
        ""created_at"": ""2015-02-19T03:53:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""10ae00ff-371c-4fb1-949f-0a691cb423f8"",
        ""url"": ""/v2/domains/10ae00ff-371c-4fb1-949f-0a691cb423f8"",
        ""created_at"": ""2015-02-19T03:53:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";
    
            PagedResponse<ListAllDomainsForOrganizationDeprecatedResponse> page = Util.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json);
        
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("fd4449a2-4dd2-4105-947e-b820c3d83dfe", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/fd4449a2-4dd2-4105-947e-b820c3d83dfe", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:00+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
               
               
            
            
                Assert.AreEqual("10ae00ff-371c-4fb1-949f-0a691cb423f8", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/10ae00ff-371c-4fb1-949f-0a691cb423f8", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:00+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ae770bba-b930-43af-9e90-678653e3cf2e"",
    ""url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e"",
    ""created_at"": ""2015-02-19T03:53:12+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1925"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""9e291a65-fd66-4365-a26e-a160cc3f5273"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/9e291a65-fd66-4365-a26e-a160cc3f5273"",
    ""spaces_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/spaces"",
    ""domains_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/domains"",
    ""private_domains_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/private_domains"",
    ""users_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/users"",
    ""managers_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/managers"",
    ""billing_managers_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/billing_managers"",
    ""auditors_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/auditors"",
    ""app_events_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/space_quota_definitions""
  }
}";
    
            AssociateAuditorWithOrganizationResponse obj = Util.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);
        
            Assert.AreEqual("ae770bba-b930-43af-9e90-678653e3cf2e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:12+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1925", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("9e291a65-fd66-4365-a26e-a160cc3f5273", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/9e291a65-fd66-4365-a26e-a160cc3f5273", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ae770bba-b930-43af-9e90-678653e3cf2e/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{""guid"":""5b13e434-1f0f-42be-b42a-e64a91284abf"",""name"":""name-62"",""status"":""active"",""spaces"":[{""guid"":""49eab142-e52d-42be-864e-405f76511f8d"",""name"":""name-64"",""service_count"":0,""app_count"":0,""mem_dev_total"":0,""mem_prod_total"":0}]}";
    
            GetOrganizationSummaryResponse obj = Util.DeserializeJson<GetOrganizationSummaryResponse>(json);
        
            Assert.AreEqual("5b13e434-1f0f-42be-b42a-e64a91284abf", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-62", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            
        }

    
        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f7a46b2b-56d5-4cd8-995c-59c67f77ec9c"",
        ""url"": ""/v2/space_quota_definitions/f7a46b2b-56d5-4cd8-995c-59c67f77ec9c"",
        ""created_at"": ""2015-02-19T03:53:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1935"",
        ""organization_guid"": ""ce85ecc5-dc69-4a4f-abe8-6f8c38acca46"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/ce85ecc5-dc69-4a4f-abe8-6f8c38acca46"",
        ""spaces_url"": ""/v2/space_quota_definitions/f7a46b2b-56d5-4cd8-995c-59c67f77ec9c/spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Util.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("f7a46b2b-56d5-4cd8-995c-59c67f77ec9c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/space_quota_definitions/f7a46b2b-56d5-4cd8-995c-59c67f77ec9c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:12+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("name-1935", TestUtil.ToTestableString(page[0].Name), true);
                  Assert.AreEqual("ce85ecc5-dc69-4a4f-abe8-6f8c38acca46", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
                  Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
                  Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
                  Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
                  Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
                  Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
                  Assert.AreEqual("/v2/organizations/ce85ecc5-dc69-4a4f-abe8-6f8c38acca46", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
                  Assert.AreEqual("/v2/space_quota_definitions/f7a46b2b-56d5-4cd8-995c-59c67f77ec9c/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestRemoveBillingManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d"",
    ""url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d"",
    ""created_at"": ""2015-02-19T03:53:11+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1917"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""a2cdd9d3-5f9d-46c8-95f0-000b1f6c4125"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/a2cdd9d3-5f9d-46c8-95f0-000b1f6c4125"",
    ""spaces_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/spaces"",
    ""domains_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/domains"",
    ""private_domains_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/private_domains"",
    ""users_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/users"",
    ""managers_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/managers"",
    ""billing_managers_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/billing_managers"",
    ""auditors_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/auditors"",
    ""app_events_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/space_quota_definitions""
  }
}";
    
            RemoveBillingManagerFromOrganizationResponse obj = Util.DeserializeJson<RemoveBillingManagerFromOrganizationResponse>(json);
        
            Assert.AreEqual("e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1917", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("a2cdd9d3-5f9d-46c8-95f0-000b1f6c4125", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/a2cdd9d3-5f9d-46c8-95f0-000b1f6c4125", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/e5b097a2-db4e-494d-90ce-1b2fa2dd1f2d/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""84e63ab7-ffdb-4fa3-a762-e700089a90e7"",
    ""url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7"",
    ""created_at"": ""2015-02-19T03:53:11+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1894"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""1097096b-fd72-4396-87a9-dc01d0c29e93"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/1097096b-fd72-4396-87a9-dc01d0c29e93"",
    ""spaces_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/spaces"",
    ""domains_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/domains"",
    ""private_domains_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/private_domains"",
    ""users_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/users"",
    ""managers_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/managers"",
    ""billing_managers_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/billing_managers"",
    ""auditors_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/auditors"",
    ""app_events_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/space_quota_definitions""
  }
}";
    
            RetrieveOrganizationResponse obj = Util.DeserializeJson<RetrieveOrganizationResponse>(json);
        
            Assert.AreEqual("84e63ab7-ffdb-4fa3-a762-e700089a90e7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1894", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("1097096b-fd72-4396-87a9-dc01d0c29e93", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/1097096b-fd72-4396-87a9-dc01d0c29e93", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/84e63ab7-ffdb-4fa3-a762-e700089a90e7/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestRemoveUserFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""21f09800-d602-4e61-ac05-4ea452251076"",
    ""url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076"",
    ""created_at"": ""2015-02-19T03:53:11+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1898"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""5431fdb7-25a3-41c2-a5b3-ba14f5acfc1e"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/5431fdb7-25a3-41c2-a5b3-ba14f5acfc1e"",
    ""spaces_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/spaces"",
    ""domains_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/domains"",
    ""private_domains_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/private_domains"",
    ""users_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/users"",
    ""managers_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/managers"",
    ""billing_managers_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/billing_managers"",
    ""auditors_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/auditors"",
    ""app_events_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/space_quota_definitions""
  }
}";
    
            RemoveUserFromOrganizationResponse obj = Util.DeserializeJson<RemoveUserFromOrganizationResponse>(json);
        
            Assert.AreEqual("21f09800-d602-4e61-ac05-4ea452251076", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1898", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("5431fdb7-25a3-41c2-a5b3-ba14f5acfc1e", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/5431fdb7-25a3-41c2-a5b3-ba14f5acfc1e", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/21f09800-d602-4e61-ac05-4ea452251076/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-358"",
        ""url"": ""/v2/users/uaa-id-358"",
        ""created_at"": ""2015-02-19T03:53:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-358/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-358/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-358/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-358/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-358/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-358/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-358/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""uaa-id-359"",
        ""url"": ""/v2/users/uaa-id-359"",
        ""created_at"": ""2015-02-19T03:53:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-359/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-359/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-359/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-359/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-359/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-359/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-359/audited_spaces""
      }
    }
  ]
}";
    
            PagedResponse<ListAllManagersForOrganizationResponse> page = Util.DeserializePage<ListAllManagersForOrganizationResponse>(json);
        
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("uaa-id-358", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/users/uaa-id-358", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:12+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
                  Assert.AreEqual("/v2/users/uaa-id-358/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-358/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-358/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-358/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-358/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-358/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-358/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
               
               
            
            
                Assert.AreEqual("uaa-id-359", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/users/uaa-id-359", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:12+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
                  Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
                  Assert.AreEqual("/v2/users/uaa-id-359/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-359/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-359/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-359/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-359/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-359/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
                  Assert.AreEqual("/v2/users/uaa-id-359/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{""memory_usage_in_mb"":0}";
    
            RetrievingOrganizationMemoryUsageResponse obj = Util.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);
        
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

    
        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa"",
        ""url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa"",
        ""created_at"": ""2015-02-19T03:53:00+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""6e657d43-943d-484c-a69a-ae698e38837a"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/6e657d43-943d-484c-a69a-ae698e38837a"",
        ""spaces_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/spaces"",
        ""domains_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/domains"",
        ""private_domains_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/private_domains"",
        ""users_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/users"",
        ""managers_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/managers"",
        ""billing_managers_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/billing_managers"",
        ""auditors_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/auditors"",
        ""app_events_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/space_quota_definitions""
      }
    }
  ]
}";
    
            PagedResponse<ListAllOrganizationsResponse> page = Util.DeserializePage<ListAllOrganizationsResponse>(json);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
        
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PrevUrl), true);
        
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
        
            
        
            
            
                Assert.AreEqual("5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-02-19T03:53:00+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
                  Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
                  Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
                  Assert.AreEqual("6e657d43-943d-484c-a69a-ae698e38837a", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
                  Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
                  Assert.AreEqual("/v2/quota_definitions/6e657d43-943d-484c-a69a-ae698e38837a", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
                  Assert.AreEqual("/v2/organizations/5ef9ecfc-2387-4efb-86b5-87d4c4f39ffa/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
               
               
            
    
        }

    
        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9c17da5b-06f0-4143-a354-fb73b7312d93"",
    ""url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93"",
    ""created_at"": ""2015-02-19T03:53:10+00:00"",
    ""updated_at"": ""2015-02-19T03:53:10+00:00""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""dc9912c1-5957-4703-b569-a5ad1588824d"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/dc9912c1-5957-4703-b569-a5ad1588824d"",
    ""spaces_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/spaces"",
    ""domains_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/domains"",
    ""private_domains_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/private_domains"",
    ""users_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/users"",
    ""managers_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/managers"",
    ""billing_managers_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/billing_managers"",
    ""auditors_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/auditors"",
    ""app_events_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/space_quota_definitions""
  }
}";
    
            UpdateOrganizationResponse obj = Util.DeserializeJson<UpdateOrganizationResponse>(json);
        
            Assert.AreEqual("9c17da5b-06f0-4143-a354-fb73b7312d93", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-02-19T03:53:10+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("dc9912c1-5957-4703-b569-a5ad1588824d", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/dc9912c1-5957-4703-b569-a5ad1588824d", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/9c17da5b-06f0-4143-a354-fb73b7312d93/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    
        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""844a3cd6-a819-4b59-a8ab-c7b39a9bcef0"",
    ""url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0"",
    ""created_at"": ""2015-02-19T03:53:11+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1919"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""7193da28-534b-4945-9a4e-b4d1d97ee6fd"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/7193da28-534b-4945-9a4e-b4d1d97ee6fd"",
    ""spaces_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/spaces"",
    ""domains_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/domains"",
    ""private_domains_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/private_domains"",
    ""users_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/users"",
    ""managers_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/managers"",
    ""billing_managers_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/billing_managers"",
    ""auditors_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/auditors"",
    ""app_events_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/space_quota_definitions""
  }
}";
    
            AssociateBillingManagerWithOrganizationResponse obj = Util.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);
        
            Assert.AreEqual("844a3cd6-a819-4b59-a8ab-c7b39a9bcef0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:53:11+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1919", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("7193da28-534b-4945-9a4e-b4d1d97ee6fd", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/7193da28-534b-4945-9a4e-b4d1d97ee6fd", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/844a3cd6-a819-4b59-a8ab-c7b39a9bcef0/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
            
            
        }

    }
}
