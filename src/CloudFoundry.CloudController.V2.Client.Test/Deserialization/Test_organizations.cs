//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-106"",
        ""url"": ""/v2/users/uaa-id-106"",
        ""created_at"": ""2015-04-10T19:41:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-106/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-106/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-106/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-106/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-106/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-106/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-106/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-106", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-106", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-106/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-106/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-106/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-106/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-106/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-106/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-106/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9cc80b08-4f52-4ee2-9058-a361b4136bd2"",
        ""url"": ""/v2/domains/9cc80b08-4f52-4ee2-9058-a361b4136bd2"",
        ""created_at"": ""2015-04-10T19:41:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""5f99baca-eac0-4212-8de9-2596c82bdf31"",
        ""url"": ""/v2/domains/5f99baca-eac0-4212-8de9-2596c82bdf31"",
        ""created_at"": ""2015-04-10T19:41:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9cc80b08-4f52-4ee2-9058-a361b4136bd2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/9cc80b08-4f52-4ee2-9058-a361b4136bd2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:50+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("5f99baca-eac0-4212-8de9-2596c82bdf31", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/5f99baca-eac0-4212-8de9-2596c82bdf31", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:50+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-98"",
        ""url"": ""/v2/users/uaa-id-98"",
        ""created_at"": ""2015-04-10T19:41:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-98/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-98/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-98/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-98/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-98/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-98/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-98/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-98", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-98", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-98/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-98/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-98/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-98/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-98/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-98/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-98/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-115"",
        ""url"": ""/v2/users/uaa-id-115"",
        ""created_at"": ""2015-04-10T19:41:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-115/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-115/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-115/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-115/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-115/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-115/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-115/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-115", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-115", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-115/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""616c27c6-612b-4b4d-be9e-08a97d818803"",
        ""url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803"",
        ""created_at"": ""2015-04-10T19:41:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1043"",
        ""organization_guid"": ""b8b54e7b-cda0-439a-ab98-7a480cc672a5"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/b8b54e7b-cda0-439a-ab98-7a480cc672a5"",
        ""developers_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/developers"",
        ""managers_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/managers"",
        ""auditors_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/auditors"",
        ""apps_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/apps"",
        ""routes_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/routes"",
        ""domains_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/domains"",
        ""service_instances_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/service_instances"",
        ""app_events_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/app_events"",
        ""events_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/events"",
        ""security_groups_url"": ""/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("616c27c6-612b-4b4d-be9e-08a97d818803", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1043", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("b8b54e7b-cda0-439a-ab98-7a480cc672a5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/b8b54e7b-cda0-439a-ab98-7a480cc672a5", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/616c27c6-612b-4b4d-be9e-08a97d818803/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b4ac70e4-4798-4bfd-b3d2-cc49d9869b54"",
    ""url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54"",
    ""created_at"": ""2015-04-10T19:41:56+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1054"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""344714f8-b751-4416-8ebd-9b9723a43af0"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/344714f8-b751-4416-8ebd-9b9723a43af0"",
    ""spaces_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/spaces"",
    ""domains_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/domains"",
    ""private_domains_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/private_domains"",
    ""users_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/users"",
    ""managers_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/managers"",
    ""billing_managers_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/billing_managers"",
    ""auditors_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/auditors"",
    ""app_events_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("b4ac70e4-4798-4bfd-b3d2-cc49d9869b54", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:56+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1054", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("344714f8-b751-4416-8ebd-9b9723a43af0", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/344714f8-b751-4416-8ebd-9b9723a43af0", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/b4ac70e4-4798-4bfd-b3d2-cc49d9869b54/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditorFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bb54e220-dcda-45e2-9ef2-9b3b0e690807"",
    ""url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807"",
    ""created_at"": ""2015-04-10T19:41:55+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1024"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""0347d5b5-bf59-435b-b135-6bca507aa1c0"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/0347d5b5-bf59-435b-b135-6bca507aa1c0"",
    ""spaces_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/spaces"",
    ""domains_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/domains"",
    ""private_domains_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/private_domains"",
    ""users_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/users"",
    ""managers_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/managers"",
    ""billing_managers_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/billing_managers"",
    ""auditors_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/auditors"",
    ""app_events_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/space_quota_definitions""
  }
}";

            RemoveAuditorFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveAuditorFromOrganizationResponse>(json);

            Assert.AreEqual("bb54e220-dcda-45e2-9ef2-9b3b0e690807", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1024", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("0347d5b5-bf59-435b-b135-6bca507aa1c0", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/0347d5b5-bf59-435b-b135-6bca507aa1c0", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/bb54e220-dcda-45e2-9ef2-9b3b0e690807/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""30429956-ad11-4237-8b47-209716113233"",
        ""url"": ""/v2/space_quota_definitions/30429956-ad11-4237-8b47-209716113233"",
        ""created_at"": ""2015-04-10T19:41:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1040"",
        ""organization_guid"": ""cf9f71d5-a08c-4897-8899-4e4db32905af"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/cf9f71d5-a08c-4897-8899-4e4db32905af"",
        ""spaces_url"": ""/v2/space_quota_definitions/30429956-ad11-4237-8b47-209716113233/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("30429956-ad11-4237-8b47-209716113233", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/30429956-ad11-4237-8b47-209716113233", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1040", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("cf9f71d5-a08c-4897-8899-4e4db32905af", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/cf9f71d5-a08c-4897-8899-4e4db32905af", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/30429956-ad11-4237-8b47-209716113233/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveUserFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9"",
    ""url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9"",
    ""created_at"": ""2015-04-10T19:41:56+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1046"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""072b93c8-3073-45a1-9f51-b0d78fb6fda7"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/072b93c8-3073-45a1-9f51-b0d78fb6fda7"",
    ""spaces_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/spaces"",
    ""domains_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/domains"",
    ""private_domains_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/private_domains"",
    ""users_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/users"",
    ""managers_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/managers"",
    ""billing_managers_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/billing_managers"",
    ""auditors_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/auditors"",
    ""app_events_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/space_quota_definitions""
  }
}";

            RemoveUserFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveUserFromOrganizationResponse>(json);

            Assert.AreEqual("68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:56+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1046", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("072b93c8-3073-45a1-9f51-b0d78fb6fda7", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/072b93c8-3073-45a1-9f51-b0d78fb6fda7", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/68f692c5-eb40-4f35-9aeb-3f9e4fe5daf9/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d84fc8a4-ac41-4843-8d90-4774fb4bebf6"",
    ""url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6"",
    ""created_at"": ""2015-04-10T19:41:55+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1026"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""a4db0291-b2fa-4028-b993-6c92b3861d53"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/a4db0291-b2fa-4028-b993-6c92b3861d53"",
    ""spaces_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/spaces"",
    ""domains_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/domains"",
    ""private_domains_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/private_domains"",
    ""users_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/users"",
    ""managers_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/managers"",
    ""billing_managers_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/billing_managers"",
    ""auditors_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/auditors"",
    ""app_events_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("d84fc8a4-ac41-4843-8d90-4774fb4bebf6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1026", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("a4db0291-b2fa-4028-b993-6c92b3861d53", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/a4db0291-b2fa-4028-b993-6c92b3861d53", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/d84fc8a4-ac41-4843-8d90-4774fb4bebf6/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""38af95c1-26fc-4d3d-b697-28b6123cb31d"",
    ""url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d"",
    ""created_at"": ""2015-04-10T19:41:55+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1020"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""5403d3ba-c754-4e9e-a54b-c1817dc7cac5"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/5403d3ba-c754-4e9e-a54b-c1817dc7cac5"",
    ""spaces_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/spaces"",
    ""domains_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/domains"",
    ""private_domains_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/private_domains"",
    ""users_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/users"",
    ""managers_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/managers"",
    ""billing_managers_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/billing_managers"",
    ""auditors_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/auditors"",
    ""app_events_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("38af95c1-26fc-4d3d-b697-28b6123cb31d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1020", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("5403d3ba-c754-4e9e-a54b-c1817dc7cac5", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/5403d3ba-c754-4e9e-a54b-c1817dc7cac5", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/38af95c1-26fc-4d3d-b697-28b6123cb31d/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f5088db8-6324-4c4e-88d2-7a3c5f1df348"",
    ""url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348"",
    ""created_at"": ""2015-04-10T19:41:56+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1048"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""74835f2a-752f-4fa8-9190-f89c004ccc06"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/74835f2a-752f-4fa8-9190-f89c004ccc06"",
    ""spaces_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/spaces"",
    ""domains_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/domains"",
    ""private_domains_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/private_domains"",
    ""users_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/users"",
    ""managers_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/managers"",
    ""billing_managers_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/billing_managers"",
    ""auditors_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/auditors"",
    ""app_events_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("f5088db8-6324-4c4e-88d2-7a3c5f1df348", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:56+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1048", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("74835f2a-752f-4fa8-9190-f89c004ccc06", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/74835f2a-752f-4fa8-9190-f89c004ccc06", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/f5088db8-6324-4c4e-88d2-7a3c5f1df348/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9b3b5716-7c8a-43d6-9cd6-5e06be6eb626"",
    ""url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626"",
    ""created_at"": ""2015-04-10T19:41:55+00:00"",
    ""updated_at"": ""2015-04-10T19:41:55+00:00""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""4fd05ddd-4673-4463-a661-c207e5bd05ac"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/4fd05ddd-4673-4463-a661-c207e5bd05ac"",
    ""spaces_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/spaces"",
    ""domains_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/domains"",
    ""private_domains_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/private_domains"",
    ""users_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/users"",
    ""managers_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/managers"",
    ""billing_managers_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/billing_managers"",
    ""auditors_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/auditors"",
    ""app_events_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("9b3b5716-7c8a-43d6-9cd6-5e06be6eb626", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("4fd05ddd-4673-4463-a661-c207e5bd05ac", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/4fd05ddd-4673-4463-a661-c207e5bd05ac", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/9b3b5716-7c8a-43d6-9cd6-5e06be6eb626/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""928c1067-eb83-4e29-b419-a605085f1a27"",
        ""url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27"",
        ""created_at"": ""2015-04-10T19:41:50+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""a4480fcf-1934-441d-a0bb-7e9da05e9013"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/a4480fcf-1934-441d-a0bb-7e9da05e9013"",
        ""spaces_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/spaces"",
        ""domains_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/domains"",
        ""private_domains_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/private_domains"",
        ""users_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/users"",
        ""managers_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/managers"",
        ""billing_managers_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/billing_managers"",
        ""auditors_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/auditors"",
        ""app_events_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("928c1067-eb83-4e29-b419-a605085f1a27", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:50+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("a4480fcf-1934-441d-a0bb-7e9da05e9013", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/a4480fcf-1934-441d-a0bb-7e9da05e9013", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/928c1067-eb83-4e29-b419-a605085f1a27/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-122"",
        ""url"": ""/v2/users/uaa-id-122"",
        ""created_at"": ""2015-04-10T19:41:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-122/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-122/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-122/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-122/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-122/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-122/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-122/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""uaa-id-123"",
        ""url"": ""/v2/users/uaa-id-123"",
        ""created_at"": ""2015-04-10T19:41:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-123/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-123/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-123/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-123/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-123/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-123/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-123/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-122", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-122", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:56+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-122/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-122/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-122/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-122/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-122/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-122/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-122/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("uaa-id-123", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-123", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:56+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-123/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-123/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-123/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-123/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-123/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-123/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-123/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""deede1dd-9006-4b95-b535-c37cf8e0bad9"",
        ""url"": ""/v2/services/deede1dd-9006-4b95-b535-c37cf8e0bad9"",
        ""created_at"": ""2015-04-10T19:41:55+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-22"",
        ""provider"": ""provider-22"",
        ""url"": ""https://foo.com/url-40"",
        ""description"": ""desc-51"",
        ""long_description"": null,
        ""version"": ""version-22"",
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""111591d6-a9ea-48e5-a640-2012c230363f"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": null,
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/deede1dd-9006-4b95-b535-c37cf8e0bad9/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("deede1dd-9006-4b95-b535-c37cf8e0bad9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/deede1dd-9006-4b95-b535-c37cf8e0bad9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-22", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-22", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("https://foo.com/url-40", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-51", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("version-22", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("111591d6-a9ea-48e5-a640-2012c230363f", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/deede1dd-9006-4b95-b535-c37cf8e0bad9/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestRemoveBillingManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""097902e3-3187-4b18-b333-587fd8290914"",
    ""url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914"",
    ""created_at"": ""2015-04-10T19:41:55+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1034"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""d36c780a-fc2b-4e0e-a4f3-efff79619154"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/d36c780a-fc2b-4e0e-a4f3-efff79619154"",
    ""spaces_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/spaces"",
    ""domains_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/domains"",
    ""private_domains_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/private_domains"",
    ""users_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/users"",
    ""managers_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/managers"",
    ""billing_managers_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/billing_managers"",
    ""auditors_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/auditors"",
    ""app_events_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/space_quota_definitions""
  }
}";

            RemoveBillingManagerFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveBillingManagerFromOrganizationResponse>(json);

            Assert.AreEqual("097902e3-3187-4b18-b333-587fd8290914", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1034", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("d36c780a-fc2b-4e0e-a4f3-efff79619154", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/d36c780a-fc2b-4e0e-a4f3-efff79619154", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/097902e3-3187-4b18-b333-587fd8290914/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{""memory_usage_in_mb"":0}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""de8d2e2d-5257-4d3d-ae06-e6c682e429b0"",
    ""url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0"",
    ""created_at"": ""2015-04-10T19:41:55+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""d9e96901-46f5-487c-a8f5-3614b89e4ee5"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/d9e96901-46f5-487c-a8f5-3614b89e4ee5"",
    ""spaces_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/spaces"",
    ""domains_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/domains"",
    ""private_domains_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/private_domains"",
    ""users_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/users"",
    ""managers_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/managers"",
    ""billing_managers_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/billing_managers"",
    ""auditors_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/auditors"",
    ""app_events_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("de8d2e2d-5257-4d3d-ae06-e6c682e429b0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("d9e96901-46f5-487c-a8f5-3614b89e4ee5", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/d9e96901-46f5-487c-a8f5-3614b89e4ee5", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/de8d2e2d-5257-4d3d-ae06-e6c682e429b0/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c3aabd6a-97dc-495e-a3a7-04462675d5c1"",
        ""url"": ""/v2/private_domains/c3aabd6a-97dc-495e-a3a7-04462675d5c1"",
        ""created_at"": ""2015-04-10T19:41:56+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-25.example.com"",
        ""owning_organization_guid"": ""3c852781-5330-4593-b3e3-cf6df69eefdc"",
        ""owning_organization_url"": ""/v2/organizations/3c852781-5330-4593-b3e3-cf6df69eefdc""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c3aabd6a-97dc-495e-a3a7-04462675d5c1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/c3aabd6a-97dc-495e-a3a7-04462675d5c1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:56+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-25.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("3c852781-5330-4593-b3e3-cf6df69eefdc", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/3c852781-5330-4593-b3e3-cf6df69eefdc", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{""guid"":""c42f65b9-56d4-4bbb-b691-1a5bb64ef98e"",""name"":""name-1788"",""status"":""active"",""spaces"":[{""guid"":""da74c263-197a-46a3-851f-9b89905864a8"",""name"":""name-1790"",""service_count"":0,""app_count"":0,""mem_dev_total"":0,""mem_prod_total"":0}]}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("c42f65b9-56d4-4bbb-b691-1a5bb64ef98e", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1788", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestRemoveManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8926bb17-4f88-42ff-9291-2d5edc6fd3c6"",
    ""url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6"",
    ""created_at"": ""2015-04-10T19:41:56+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1052"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""e255ff28-7f18-475b-a23c-479511b132c2"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/e255ff28-7f18-475b-a23c-479511b132c2"",
    ""spaces_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/spaces"",
    ""domains_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/domains"",
    ""private_domains_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/private_domains"",
    ""users_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/users"",
    ""managers_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/managers"",
    ""billing_managers_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/billing_managers"",
    ""auditors_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/auditors"",
    ""app_events_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/space_quota_definitions""
  }
}";

            RemoveManagerFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveManagerFromOrganizationResponse>(json);

            Assert.AreEqual("8926bb17-4f88-42ff-9291-2d5edc6fd3c6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:56+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1052", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("e255ff28-7f18-475b-a23c-479511b132c2", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/e255ff28-7f18-475b-a23c-479511b132c2", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/8926bb17-4f88-42ff-9291-2d5edc6fd3c6/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""65347421-f82b-4625-87b3-9a7c464c6344"",
    ""url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344"",
    ""created_at"": ""2015-04-10T19:41:55+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1036"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""6af5a30c-916f-4c02-911b-36ea20b8b600"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/6af5a30c-916f-4c02-911b-36ea20b8b600"",
    ""spaces_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/spaces"",
    ""domains_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/domains"",
    ""private_domains_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/private_domains"",
    ""users_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/users"",
    ""managers_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/managers"",
    ""billing_managers_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/billing_managers"",
    ""auditors_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/auditors"",
    ""app_events_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("65347421-f82b-4625-87b3-9a7c464c6344", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:55+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1036", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("6af5a30c-916f-4c02-911b-36ea20b8b600", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/6af5a30c-916f-4c02-911b-36ea20b8b600", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/65347421-f82b-4625-87b3-9a7c464c6344/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }
    }
}
