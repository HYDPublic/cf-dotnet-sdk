//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedTest
    {


        [TestMethod]
        public void TestCreateDomainOwnedByGivenOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""73d1e0c9-5803-4784-ac0c-270d8880fdaf"",
    ""url"": ""/v2/domains/8e4caf61-bf6b-40cc-a1d7-3fb01500cfea"",
    ""created_at"": ""2016-07-07T09:16:47Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""73d1e0c9-5803-4784-ac0c-270d8880fdaf"",
    ""shared_organizations"": [

    ],
    ""owning_organization_url"": ""/v2/organizations/55050eaf-c984-43cd-a87b-060b34567e85"",
    ""spaces_url"": ""/v2/domains/8e4caf61-bf6b-40cc-a1d7-3fb01500cfea/spaces""
  }
}";

            CreateDomainOwnedByGivenOrganizationDeprecatedResponse obj = Utilities.DeserializeJson<CreateDomainOwnedByGivenOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("73d1e0c9-5803-4784-ac0c-270d8880fdaf", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/8e4caf61-bf6b-40cc-a1d7-3fb01500cfea", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("73d1e0c9-5803-4784-ac0c-270d8880fdaf", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/55050eaf-c984-43cd-a87b-060b34567e85", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/8e4caf61-bf6b-40cc-a1d7-3fb01500cfea/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2634c257-a2a5-4de7-866d-3972389d6a57"",
    ""url"": ""/v2/domains/ac52a398-1c16-48e9-aad5-79622bdb06a5"",
    ""created_at"": ""2016-07-07T09:16:47Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null,
    ""shared_organizations"": [

    ]
  }
}";

            CreateSharedDomainDeprecatedResponse obj = Utilities.DeserializeJson<CreateSharedDomainDeprecatedResponse>(json);

            Assert.AreEqual("2634c257-a2a5-4de7-866d-3972389d6a57", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/ac52a398-1c16-48e9-aad5-79622bdb06a5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllDomainsDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e1b94324-e44d-4ac0-bd9f-6a9681a55192"",
        ""url"": ""/v2/domains/99167dd2-45f8-412f-91f2-98ebe5377f75"",
        ""created_at"": ""2016-07-07T09:16:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""e1b94324-e44d-4ac0-bd9f-6a9681a55192"",
        ""url"": ""/v2/domains/d8a48531-e94e-4775-a90e-14a2a78e46da"",
        ""created_at"": ""2016-07-07T09:16:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""e1b94324-e44d-4ac0-bd9f-6a9681a55192"",
        ""url"": ""/v2/domains/038519dc-90b1-4091-8bc5-7bf2479d3ac9"",
        ""created_at"": ""2016-07-07T09:16:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""e1b94324-e44d-4ac0-bd9f-6a9681a55192"",
        ""owning_organization_url"": ""/v2/organizations/8779d448-89e5-4686-be4a-3477758ef414"",
        ""spaces_url"": ""/v2/domains/038519dc-90b1-4091-8bc5-7bf2479d3ac9/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""e1b94324-e44d-4ac0-bd9f-6a9681a55192"",
        ""url"": ""/v2/domains/c830a737-208d-4f80-8319-54701bba15f5"",
        ""created_at"": ""2016-07-07T09:16:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-3.example.com"",
        ""router_group_guid"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsDeprecatedResponse>(json, null);

            Assert.AreEqual("4", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e1b94324-e44d-4ac0-bd9f-6a9681a55192", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/99167dd2-45f8-412f-91f2-98ebe5377f75", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:45Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("e1b94324-e44d-4ac0-bd9f-6a9681a55192", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/d8a48531-e94e-4775-a90e-14a2a78e46da", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:45Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("e1b94324-e44d-4ac0-bd9f-6a9681a55192", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/038519dc-90b1-4091-8bc5-7bf2479d3ac9", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:45Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("e1b94324-e44d-4ac0-bd9f-6a9681a55192", TestUtil.ToTestableString(page[2].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/8779d448-89e5-4686-be4a-3477758ef414", TestUtil.ToTestableString(page[2].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/038519dc-90b1-4091-8bc5-7bf2479d3ac9/spaces", TestUtil.ToTestableString(page[2].SpacesUrl), true);
            Assert.AreEqual("e1b94324-e44d-4ac0-bd9f-6a9681a55192", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/c830a737-208d-4f80-8319-54701bba15f5", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:47Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-3.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupGuid), true);
        }

        [TestMethod]
        public void TestListAllSpacesForDomainDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""907f4cd1-71ea-4a87-9983-f88caf153329"",
        ""url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525"",
        ""created_at"": ""2016-07-07T09:16:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-35"",
        ""organization_guid"": ""907f4cd1-71ea-4a87-9983-f88caf153329"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/8850c68d-3b8d-43f6-ba98-d604a84227f4"",
        ""developers_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/developers"",
        ""managers_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/managers"",
        ""auditors_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/auditors"",
        ""apps_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/apps"",
        ""routes_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/routes"",
        ""domains_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/domains"",
        ""service_instances_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/service_instances"",
        ""app_events_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/app_events"",
        ""events_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/events"",
        ""security_groups_url"": ""/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForDomainDeprecatedResponse> page = Utilities.DeserializePage<ListAllSpacesForDomainDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("907f4cd1-71ea-4a87-9983-f88caf153329", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-35", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("907f4cd1-71ea-4a87-9983-f88caf153329", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/8850c68d-3b8d-43f6-ba98-d604a84227f4", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/6e23c8cc-d620-4004-a66a-f448b38a7525/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""af471e9a-a90f-4d6d-8ef1-ad3df31b7d99"",
    ""url"": ""/v2/domains/eaae7ce4-77bf-4b6d-978d-31e0ba809c1b"",
    ""created_at"": ""2016-07-07T09:16:47Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-2.example.com"",
    ""router_group_guid"": null
  }
}";

            RetrieveDomainDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveDomainDeprecatedResponse>(json);

            Assert.AreEqual("af471e9a-a90f-4d6d-8ef1-ad3df31b7d99", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/eaae7ce4-77bf-4b6d-978d-31e0ba809c1b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-2.example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
        }
    }
}
