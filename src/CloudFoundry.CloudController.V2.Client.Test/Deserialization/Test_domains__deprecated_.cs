//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedTest
    {


        [TestMethod]
        public void TestListAllSpacesForDomainDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0ec77ada-1055-4995-a1cf-42a7ee5dd37a"",
        ""url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a"",
        ""created_at"": ""2015-03-23T16:53:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-498"",
        ""organization_guid"": ""c1e5e948-b4dd-415e-a9de-ec504abe7253"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/c1e5e948-b4dd-415e-a9de-ec504abe7253"",
        ""developers_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/developers"",
        ""managers_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/managers"",
        ""auditors_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/auditors"",
        ""apps_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/apps"",
        ""routes_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/routes"",
        ""domains_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/domains"",
        ""service_instances_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/service_instances"",
        ""app_events_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/app_events"",
        ""events_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/events"",
        ""security_groups_url"": ""/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForDomainDeprecatedResponse> page = Utilities.DeserializePage<ListAllSpacesForDomainDeprecatedResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0ec77ada-1055-4995-a1cf-42a7ee5dd37a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-498", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("c1e5e948-b4dd-415e-a9de-ec504abe7253", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/c1e5e948-b4dd-415e-a9de-ec504abe7253", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/0ec77ada-1055-4995-a1cf-42a7ee5dd37a/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e87ae9f7-9aa2-4188-83d8-8ef4983266e8"",
        ""url"": ""/v2/domains/e87ae9f7-9aa2-4188-83d8-8ef4983266e8"",
        ""created_at"": ""2015-03-23T16:53:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""112aab7c-f6df-4471-98db-ba23e729f325"",
        ""url"": ""/v2/domains/112aab7c-f6df-4471-98db-ba23e729f325"",
        ""created_at"": ""2015-03-23T16:53:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""76e3d151-54cf-4d16-a3c5-751b92eb76e4"",
        ""url"": ""/v2/domains/76e3d151-54cf-4d16-a3c5-751b92eb76e4"",
        ""created_at"": ""2015-03-23T16:53:12+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""eae26d49-77f9-42aa-93a1-37369a6cc32c"",
        ""owning_organization_url"": ""/v2/organizations/eae26d49-77f9-42aa-93a1-37369a6cc32c"",
        ""spaces_url"": ""/v2/domains/76e3d151-54cf-4d16-a3c5-751b92eb76e4/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""09beb2db-a9d4-409d-a2be-34fbe692bad4"",
        ""url"": ""/v2/domains/09beb2db-a9d4-409d-a2be-34fbe692bad4"",
        ""created_at"": ""2015-03-23T16:53:20+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-10.example.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsDeprecatedResponse>(json);

            Assert.AreEqual("4", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e87ae9f7-9aa2-4188-83d8-8ef4983266e8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/e87ae9f7-9aa2-4188-83d8-8ef4983266e8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:12+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("112aab7c-f6df-4471-98db-ba23e729f325", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/112aab7c-f6df-4471-98db-ba23e729f325", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:12+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("76e3d151-54cf-4d16-a3c5-751b92eb76e4", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/76e3d151-54cf-4d16-a3c5-751b92eb76e4", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:12+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("eae26d49-77f9-42aa-93a1-37369a6cc32c", TestUtil.ToTestableString(page[2].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/eae26d49-77f9-42aa-93a1-37369a6cc32c", TestUtil.ToTestableString(page[2].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/76e3d151-54cf-4d16-a3c5-751b92eb76e4/spaces", TestUtil.ToTestableString(page[2].SpacesUrl), true);
            Assert.AreEqual("09beb2db-a9d4-409d-a2be-34fbe692bad4", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/09beb2db-a9d4-409d-a2be-34fbe692bad4", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-10.example.com", TestUtil.ToTestableString(page[3].Name), true);
        }

        [TestMethod]
        public void TestCreatesDomainOwnedByGivenOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""35f7c09a-5b08-4e69-bb56-aaa4c859d261"",
    ""url"": ""/v2/domains/35f7c09a-5b08-4e69-bb56-aaa4c859d261"",
    ""created_at"": ""2015-03-23T16:53:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""02949d7b-9524-4d1a-a606-cb59a68f7ef8"",
    ""owning_organization_url"": ""/v2/organizations/02949d7b-9524-4d1a-a606-cb59a68f7ef8"",
    ""spaces_url"": ""/v2/domains/35f7c09a-5b08-4e69-bb56-aaa4c859d261/spaces""
  }
}";

            CreatesDomainOwnedByGivenOrganizationDeprecatedResponse obj = Utilities.DeserializeJson<CreatesDomainOwnedByGivenOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("35f7c09a-5b08-4e69-bb56-aaa4c859d261", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/35f7c09a-5b08-4e69-bb56-aaa4c859d261", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("02949d7b-9524-4d1a-a606-cb59a68f7ef8", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/02949d7b-9524-4d1a-a606-cb59a68f7ef8", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/35f7c09a-5b08-4e69-bb56-aaa4c859d261/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""793e20e6-d6ba-4f64-b05b-4ee2386e1f18"",
    ""url"": ""/v2/domains/793e20e6-d6ba-4f64-b05b-4ee2386e1f18"",
    ""created_at"": ""2015-03-23T16:53:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-11.example.com""
  }
}";

            RetrieveDomainDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveDomainDeprecatedResponse>(json);

            Assert.AreEqual("793e20e6-d6ba-4f64-b05b-4ee2386e1f18", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/793e20e6-d6ba-4f64-b05b-4ee2386e1f18", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-11.example.com", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestCreatesSharedDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""eccc103d-e3b5-4fe0-9f5b-ebc699d77a0b"",
    ""url"": ""/v2/domains/eccc103d-e3b5-4fe0-9f5b-ebc699d77a0b"",
    ""created_at"": ""2015-03-23T16:53:20+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null
  }
}";

            CreatesSharedDomainDeprecatedResponse obj = Utilities.DeserializeJson<CreatesSharedDomainDeprecatedResponse>(json);

            Assert.AreEqual("eccc103d-e3b5-4fe0-9f5b-ebc699d77a0b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/eccc103d-e3b5-4fe0-9f5b-ebc699d77a0b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:20+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
        }
    }
}
