//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedTest
    {


        [TestMethod]
        public void TestCreateDomainOwnedByGivenOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""10ce8a94-eea3-4c4e-8663-38b7d1486c30"",
    ""url"": ""/v2/domains/3119abd5-750d-4ab4-a35f-f5e05d17a883"",
    ""created_at"": ""2016-03-21T10:59:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""10ce8a94-eea3-4c4e-8663-38b7d1486c30"",
    ""shared_organizations"": [

    ],
    ""owning_organization_url"": ""/v2/organizations/d153fbd1-f4bf-4231-b7bb-f5b3cf18ff95"",
    ""spaces_url"": ""/v2/domains/3119abd5-750d-4ab4-a35f-f5e05d17a883/spaces""
  }
}";

            CreateDomainOwnedByGivenOrganizationDeprecatedResponse obj = Utilities.DeserializeJson<CreateDomainOwnedByGivenOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("10ce8a94-eea3-4c4e-8663-38b7d1486c30", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/3119abd5-750d-4ab4-a35f-f5e05d17a883", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("10ce8a94-eea3-4c4e-8663-38b7d1486c30", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/d153fbd1-f4bf-4231-b7bb-f5b3cf18ff95", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/3119abd5-750d-4ab4-a35f-f5e05d17a883/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForDomainDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a27b3834-87dc-4aa1-8e63-a080652602f4"",
        ""url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134"",
        ""created_at"": ""2016-03-21T10:59:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-425"",
        ""organization_guid"": ""a27b3834-87dc-4aa1-8e63-a080652602f4"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/4f99e012-6cbd-4d28-a2f9-c2ff720761ae"",
        ""developers_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/developers"",
        ""managers_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/managers"",
        ""auditors_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/auditors"",
        ""apps_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/apps"",
        ""routes_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/routes"",
        ""domains_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/domains"",
        ""service_instances_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/service_instances"",
        ""app_events_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/app_events"",
        ""events_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/events"",
        ""security_groups_url"": ""/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForDomainDeprecatedResponse> page = Utilities.DeserializePage<ListAllSpacesForDomainDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a27b3834-87dc-4aa1-8e63-a080652602f4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-425", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("a27b3834-87dc-4aa1-8e63-a080652602f4", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/4f99e012-6cbd-4d28-a2f9-c2ff720761ae", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/a755b85a-1bc1-4c5a-b8a7-f9958a234134/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b5e5469b-57ea-476f-ab58-1acacd4b5f6d"",
    ""url"": ""/v2/domains/f3bd66f8-5c15-458a-b6c3-23ccc05a93b6"",
    ""created_at"": ""2016-03-21T10:59:27Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-35.example.com"",
    ""router_group_guid"": null
  }
}";

            RetrieveDomainDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveDomainDeprecatedResponse>(json);

            Assert.AreEqual("b5e5469b-57ea-476f-ab58-1acacd4b5f6d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/f3bd66f8-5c15-458a-b6c3-23ccc05a93b6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-35.example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b0ca640f-06e5-42ce-9f97-a57d61405c0c"",
    ""url"": ""/v2/domains/afc78458-adb0-4ea5-a96d-333ddce12cad"",
    ""created_at"": ""2016-03-21T10:59:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null,
    ""shared_organizations"": [

    ]
  }
}";

            CreateSharedDomainDeprecatedResponse obj = Utilities.DeserializeJson<CreateSharedDomainDeprecatedResponse>(json);

            Assert.AreEqual("b0ca640f-06e5-42ce-9f97-a57d61405c0c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/afc78458-adb0-4ea5-a96d-333ddce12cad", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllDomainsDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f113bb8d-0c11-49e9-b202-723776314023"",
        ""url"": ""/v2/domains/865d4490-4732-4ffc-902e-b3e4ca1e5c84"",
        ""created_at"": ""2016-03-21T10:59:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f113bb8d-0c11-49e9-b202-723776314023"",
        ""url"": ""/v2/domains/572e0541-2cf1-43a4-95c4-2dc021d95527"",
        ""created_at"": ""2016-03-21T10:59:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f113bb8d-0c11-49e9-b202-723776314023"",
        ""url"": ""/v2/domains/c072773b-706e-4fad-b186-c2be11a3f0c3"",
        ""created_at"": ""2016-03-21T10:59:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""f113bb8d-0c11-49e9-b202-723776314023"",
        ""owning_organization_url"": ""/v2/organizations/cc476713-65eb-4919-a7f5-55f43c8fd503"",
        ""spaces_url"": ""/v2/domains/c072773b-706e-4fad-b186-c2be11a3f0c3/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f113bb8d-0c11-49e9-b202-723776314023"",
        ""url"": ""/v2/domains/ef0c86ba-40f6-4ef5-a2b3-a223a9d3a704"",
        ""created_at"": ""2016-03-21T10:59:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-33.example.com"",
        ""router_group_guid"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsDeprecatedResponse>(json, null);

            Assert.AreEqual("4", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f113bb8d-0c11-49e9-b202-723776314023", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/865d4490-4732-4ffc-902e-b3e4ca1e5c84", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:24Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("f113bb8d-0c11-49e9-b202-723776314023", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/572e0541-2cf1-43a4-95c4-2dc021d95527", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:24Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("f113bb8d-0c11-49e9-b202-723776314023", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/c072773b-706e-4fad-b186-c2be11a3f0c3", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:24Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("f113bb8d-0c11-49e9-b202-723776314023", TestUtil.ToTestableString(page[2].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/cc476713-65eb-4919-a7f5-55f43c8fd503", TestUtil.ToTestableString(page[2].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/c072773b-706e-4fad-b186-c2be11a3f0c3/spaces", TestUtil.ToTestableString(page[2].SpacesUrl), true);
            Assert.AreEqual("f113bb8d-0c11-49e9-b202-723776314023", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/ef0c86ba-40f6-4ef5-a2b3-a223a9d3a704", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-21T10:59:27Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-33.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupGuid), true);
        }
    }
}
