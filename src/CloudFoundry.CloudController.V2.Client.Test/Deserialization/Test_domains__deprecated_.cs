//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedTest
    {


        [TestMethod]
        public void TestListAllSpacesForDomainDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8abc275f-bd55-4624-ac27-06281a7f2ce8"",
        ""url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8"",
        ""created_at"": ""2015-04-10T19:42:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1852"",
        ""organization_guid"": ""97449764-4bdf-4873-9d21-b1a935bda032"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/97449764-4bdf-4873-9d21-b1a935bda032"",
        ""developers_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/developers"",
        ""managers_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/managers"",
        ""auditors_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/auditors"",
        ""apps_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/apps"",
        ""routes_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/routes"",
        ""domains_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/domains"",
        ""service_instances_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/service_instances"",
        ""app_events_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/app_events"",
        ""events_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/events"",
        ""security_groups_url"": ""/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForDomainDeprecatedResponse> page = Utilities.DeserializePage<ListAllSpacesForDomainDeprecatedResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8abc275f-bd55-4624-ac27-06281a7f2ce8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1852", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("97449764-4bdf-4873-9d21-b1a935bda032", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/97449764-4bdf-4873-9d21-b1a935bda032", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/8abc275f-bd55-4624-ac27-06281a7f2ce8/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fff92d6c-ccb2-4b69-9416-4e474464feab"",
        ""url"": ""/v2/domains/fff92d6c-ccb2-4b69-9416-4e474464feab"",
        ""created_at"": ""2015-04-10T19:41:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d51e4ec4-ea5f-4899-94a9-589732072942"",
        ""url"": ""/v2/domains/d51e4ec4-ea5f-4899-94a9-589732072942"",
        ""created_at"": ""2015-04-10T19:41:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""be2153c9-a410-486f-865c-650ce5d77c84"",
        ""url"": ""/v2/domains/be2153c9-a410-486f-865c-650ce5d77c84"",
        ""created_at"": ""2015-04-10T19:41:57+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""92e170ee-52b5-401e-831f-92c9974f4220"",
        ""owning_organization_url"": ""/v2/organizations/92e170ee-52b5-401e-831f-92c9974f4220"",
        ""spaces_url"": ""/v2/domains/be2153c9-a410-486f-865c-650ce5d77c84/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""964a7cb8-50ed-457d-aa23-5f62e6857998"",
        ""url"": ""/v2/domains/964a7cb8-50ed-457d-aa23-5f62e6857998"",
        ""created_at"": ""2015-04-10T19:42:08+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-49.example.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsDeprecatedResponse>(json);

            Assert.AreEqual("4", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("fff92d6c-ccb2-4b69-9416-4e474464feab", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/fff92d6c-ccb2-4b69-9416-4e474464feab", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:57+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("d51e4ec4-ea5f-4899-94a9-589732072942", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/d51e4ec4-ea5f-4899-94a9-589732072942", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:57+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("be2153c9-a410-486f-865c-650ce5d77c84", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/be2153c9-a410-486f-865c-650ce5d77c84", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:41:57+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("92e170ee-52b5-401e-831f-92c9974f4220", TestUtil.ToTestableString(page[2].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/92e170ee-52b5-401e-831f-92c9974f4220", TestUtil.ToTestableString(page[2].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/be2153c9-a410-486f-865c-650ce5d77c84/spaces", TestUtil.ToTestableString(page[2].SpacesUrl), true);
            Assert.AreEqual("964a7cb8-50ed-457d-aa23-5f62e6857998", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/964a7cb8-50ed-457d-aa23-5f62e6857998", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-49.example.com", TestUtil.ToTestableString(page[3].Name), true);
        }

        [TestMethod]
        public void TestCreatesDomainOwnedByGivenOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d94f1622-40a2-43e8-9efa-3926d6d0b9b0"",
    ""url"": ""/v2/domains/d94f1622-40a2-43e8-9efa-3926d6d0b9b0"",
    ""created_at"": ""2015-04-10T19:42:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""4a98db9b-4b13-4f0c-a0ea-38302fb2507e"",
    ""owning_organization_url"": ""/v2/organizations/4a98db9b-4b13-4f0c-a0ea-38302fb2507e"",
    ""spaces_url"": ""/v2/domains/d94f1622-40a2-43e8-9efa-3926d6d0b9b0/spaces""
  }
}";

            CreatesDomainOwnedByGivenOrganizationDeprecatedResponse obj = Utilities.DeserializeJson<CreatesDomainOwnedByGivenOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("d94f1622-40a2-43e8-9efa-3926d6d0b9b0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/d94f1622-40a2-43e8-9efa-3926d6d0b9b0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("4a98db9b-4b13-4f0c-a0ea-38302fb2507e", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/4a98db9b-4b13-4f0c-a0ea-38302fb2507e", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/d94f1622-40a2-43e8-9efa-3926d6d0b9b0/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d3d58839-f12b-4c39-bbe0-0ea15f700f8e"",
    ""url"": ""/v2/domains/d3d58839-f12b-4c39-bbe0-0ea15f700f8e"",
    ""created_at"": ""2015-04-10T19:42:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-53.example.com""
  }
}";

            RetrieveDomainDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveDomainDeprecatedResponse>(json);

            Assert.AreEqual("d3d58839-f12b-4c39-bbe0-0ea15f700f8e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/d3d58839-f12b-4c39-bbe0-0ea15f700f8e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-53.example.com", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestCreatesSharedDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""08301a3b-ee47-4537-a330-230b07d84dc6"",
    ""url"": ""/v2/domains/08301a3b-ee47-4537-a330-230b07d84dc6"",
    ""created_at"": ""2015-04-10T19:42:08+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null
  }
}";

            CreatesSharedDomainDeprecatedResponse obj = Utilities.DeserializeJson<CreatesSharedDomainDeprecatedResponse>(json);

            Assert.AreEqual("08301a3b-ee47-4537-a330-230b07d84dc6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/08301a3b-ee47-4537-a330-230b07d84dc6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-04-10T19:42:08+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
        }
    }
}
