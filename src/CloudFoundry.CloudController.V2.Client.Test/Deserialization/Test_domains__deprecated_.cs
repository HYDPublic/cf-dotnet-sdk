//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedTest
    {


        [TestMethod]
        public void TestListAllSpacesForDomainDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ee81eeb7-d23c-4a14-903e-ad4c5ab93e51"",
        ""url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51"",
        ""created_at"": ""2015-03-19T13:19:38+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-72"",
        ""organization_guid"": ""5131d2d5-06bf-49fa-8263-edfb38e6a59a"",
        ""space_quota_definition_guid"": null,
        ""organization_url"": ""/v2/organizations/5131d2d5-06bf-49fa-8263-edfb38e6a59a"",
        ""developers_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/developers"",
        ""managers_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/managers"",
        ""auditors_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/auditors"",
        ""apps_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/apps"",
        ""routes_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/routes"",
        ""domains_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/domains"",
        ""service_instances_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/service_instances"",
        ""app_events_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/app_events"",
        ""events_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/events"",
        ""security_groups_url"": ""/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForDomainDeprecatedResponse> page = Utilities.DeserializePage<ListAllSpacesForDomainDeprecatedResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ee81eeb7-d23c-4a14-903e-ad4c5ab93e51", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:38+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-72", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("5131d2d5-06bf-49fa-8263-edfb38e6a59a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/5131d2d5-06bf-49fa-8263-edfb38e6a59a", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/ee81eeb7-d23c-4a14-903e-ad4c5ab93e51/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4aba772f-8b06-4a9a-8363-4fdda5440b31"",
        ""url"": ""/v2/domains/4aba772f-8b06-4a9a-8363-4fdda5440b31"",
        ""created_at"": ""2015-03-19T13:19:36+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""b00352d5-3cb6-4434-8818-33ebe7490864"",
        ""url"": ""/v2/domains/b00352d5-3cb6-4434-8818-33ebe7490864"",
        ""created_at"": ""2015-03-19T13:19:36+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d8679fc1-ba34-4687-9dd2-7d6fd59f413f"",
        ""url"": ""/v2/domains/d8679fc1-ba34-4687-9dd2-7d6fd59f413f"",
        ""created_at"": ""2015-03-19T13:19:36+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""aca19f37-15fa-437f-b0b5-db8bf4c00688"",
        ""owning_organization_url"": ""/v2/organizations/aca19f37-15fa-437f-b0b5-db8bf4c00688"",
        ""spaces_url"": ""/v2/domains/d8679fc1-ba34-4687-9dd2-7d6fd59f413f/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""1329b3a2-2b6d-4173-9ce4-f6def774a5f0"",
        ""url"": ""/v2/domains/1329b3a2-2b6d-4173-9ce4-f6def774a5f0"",
        ""created_at"": ""2015-03-19T13:19:38+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-30.example.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsDeprecatedResponse>(json);

            Assert.AreEqual("4", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4aba772f-8b06-4a9a-8363-4fdda5440b31", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/4aba772f-8b06-4a9a-8363-4fdda5440b31", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:36+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("b00352d5-3cb6-4434-8818-33ebe7490864", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/b00352d5-3cb6-4434-8818-33ebe7490864", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:36+00:00", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("d8679fc1-ba34-4687-9dd2-7d6fd59f413f", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/d8679fc1-ba34-4687-9dd2-7d6fd59f413f", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:36+00:00", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("aca19f37-15fa-437f-b0b5-db8bf4c00688", TestUtil.ToTestableString(page[2].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/aca19f37-15fa-437f-b0b5-db8bf4c00688", TestUtil.ToTestableString(page[2].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/d8679fc1-ba34-4687-9dd2-7d6fd59f413f/spaces", TestUtil.ToTestableString(page[2].SpacesUrl), true);
            Assert.AreEqual("1329b3a2-2b6d-4173-9ce4-f6def774a5f0", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/1329b3a2-2b6d-4173-9ce4-f6def774a5f0", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:38+00:00", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-30.example.com", TestUtil.ToTestableString(page[3].Name), true);
        }

        [TestMethod]
        public void TestCreatesDomainOwnedByGivenOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7b1e4e50-4058-4b95-9364-6aadf4757669"",
    ""url"": ""/v2/domains/7b1e4e50-4058-4b95-9364-6aadf4757669"",
    ""created_at"": ""2015-03-19T13:19:38+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""ceee56e0-dadc-4d1d-b188-6116eb0deb79"",
    ""owning_organization_url"": ""/v2/organizations/ceee56e0-dadc-4d1d-b188-6116eb0deb79"",
    ""spaces_url"": ""/v2/domains/7b1e4e50-4058-4b95-9364-6aadf4757669/spaces""
  }
}";

            CreatesDomainOwnedByGivenOrganizationDeprecatedResponse obj = Utilities.DeserializeJson<CreatesDomainOwnedByGivenOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("7b1e4e50-4058-4b95-9364-6aadf4757669", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/7b1e4e50-4058-4b95-9364-6aadf4757669", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:38+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ceee56e0-dadc-4d1d-b188-6116eb0deb79", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/ceee56e0-dadc-4d1d-b188-6116eb0deb79", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/7b1e4e50-4058-4b95-9364-6aadf4757669/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b59e8a05-8cbb-451f-b365-f94a40b4372e"",
    ""url"": ""/v2/domains/b59e8a05-8cbb-451f-b365-f94a40b4372e"",
    ""created_at"": ""2015-03-19T13:19:38+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-26.example.com""
  }
}";

            RetrieveDomainDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveDomainDeprecatedResponse>(json);

            Assert.AreEqual("b59e8a05-8cbb-451f-b365-f94a40b4372e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/b59e8a05-8cbb-451f-b365-f94a40b4372e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:38+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-26.example.com", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestCreatesSharedDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""da609e76-4407-4722-b3ab-adce87f0565d"",
    ""url"": ""/v2/domains/da609e76-4407-4722-b3ab-adce87f0565d"",
    ""created_at"": ""2015-03-19T13:19:38+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null
  }
}";

            CreatesSharedDomainDeprecatedResponse obj = Utilities.DeserializeJson<CreatesSharedDomainDeprecatedResponse>(json);

            Assert.AreEqual("da609e76-4407-4722-b3ab-adce87f0565d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/da609e76-4407-4722-b3ab-adce87f0565d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:38+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
        }
    }
}
