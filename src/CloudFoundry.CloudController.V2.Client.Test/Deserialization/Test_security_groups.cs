//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SecurityGroupsTest
    {


        [TestMethod]
        public void TestUpdateSecurityGroupResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""758f965e-d51f-4f1b-a1da-f66c5496d636"",
    ""url"": ""/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f"",
    ""created_at"": ""2016-09-02T11:52:05Z"",
    ""updated_at"": ""2016-09-02T11:52:10Z""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""rules"": [

    ],
    ""running_default"": false,
    ""staging_default"": false,
    ""spaces_url"": ""/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f/spaces""
  }
}";

            UpdateSecurityGroupResponse obj = Utilities.DeserializeJson<UpdateSecurityGroupResponse>(json);

            Assert.AreEqual("758f965e-d51f-4f1b-a1da-f66c5496d636", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:05Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-09-02T11:52:10Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSecurityGroupsResponse()
        {
            string json = @"{
  ""total_results"": 5,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ec01bafa-2fa2-4739-a113-a61a45c7a01c"",
        ""url"": ""/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f"",
        ""created_at"": ""2016-09-02T11:52:05Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""dummy1"",
        ""rules"": [

        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ec01bafa-2fa2-4739-a113-a61a45c7a01c"",
        ""url"": ""/v2/security_groups/e60881ac-027d-4d73-8e51-6f292d3e5d73"",
        ""created_at"": ""2016-09-02T11:52:05Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""dummy2"",
        ""rules"": [

        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/e60881ac-027d-4d73-8e51-6f292d3e5d73/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ec01bafa-2fa2-4739-a113-a61a45c7a01c"",
        ""url"": ""/v2/security_groups/57e21ef8-4574-451f-9299-4ce91ad337ff"",
        ""created_at"": ""2016-09-02T11:52:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-768"",
        ""rules"": [
          {
            ""protocol"": ""udp"",
            ""ports"": ""8080"",
            ""destination"": ""198.41.191.47/1""
          }
        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/57e21ef8-4574-451f-9299-4ce91ad337ff/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ec01bafa-2fa2-4739-a113-a61a45c7a01c"",
        ""url"": ""/v2/security_groups/e3a44028-fd7b-4e13-9f75-191f73c9bb2b"",
        ""created_at"": ""2016-09-02T11:52:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-769"",
        ""rules"": [
          {
            ""protocol"": ""udp"",
            ""ports"": ""8080"",
            ""destination"": ""198.41.191.47/1""
          }
        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/e3a44028-fd7b-4e13-9f75-191f73c9bb2b/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ec01bafa-2fa2-4739-a113-a61a45c7a01c"",
        ""url"": ""/v2/security_groups/326dd3a1-51fe-44e6-9e5d-5e3631b0bae7"",
        ""created_at"": ""2016-09-02T11:52:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-770"",
        ""rules"": [
          {
            ""protocol"": ""udp"",
            ""ports"": ""8080"",
            ""destination"": ""198.41.191.47/1""
          }
        ],
        ""running_default"": false,
        ""staging_default"": false,
        ""spaces_url"": ""/v2/security_groups/326dd3a1-51fe-44e6-9e5d-5e3631b0bae7/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSecurityGroupsResponse> page = Utilities.DeserializePage<ListAllSecurityGroupsResponse>(json, null);

            Assert.AreEqual("5", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ec01bafa-2fa2-4739-a113-a61a45c7a01c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:05Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("dummy1", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("ec01bafa-2fa2-4739-a113-a61a45c7a01c", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/e60881ac-027d-4d73-8e51-6f292d3e5d73", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:05Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("dummy2", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/e60881ac-027d-4d73-8e51-6f292d3e5d73/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("ec01bafa-2fa2-4739-a113-a61a45c7a01c", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/57e21ef8-4574-451f-9299-4ce91ad337ff", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:09Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-768", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/57e21ef8-4574-451f-9299-4ce91ad337ff/spaces", TestUtil.ToTestableString(page[2].SpacesUrl), true);
            Assert.AreEqual("ec01bafa-2fa2-4739-a113-a61a45c7a01c", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/e3a44028-fd7b-4e13-9f75-191f73c9bb2b", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:09Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-769", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[3].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[3].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/e3a44028-fd7b-4e13-9f75-191f73c9bb2b/spaces", TestUtil.ToTestableString(page[3].SpacesUrl), true);
            Assert.AreEqual("ec01bafa-2fa2-4739-a113-a61a45c7a01c", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/326dd3a1-51fe-44e6-9e5d-5e3631b0bae7", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:09Z", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-770", TestUtil.ToTestableString(page[4].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[4].RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[4].StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/326dd3a1-51fe-44e6-9e5d-5e3631b0bae7/spaces", TestUtil.ToTestableString(page[4].SpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSecurityGroupResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7bdd8ba4-0113-4851-bda2-87cb826f86b0"",
    ""url"": ""/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f"",
    ""created_at"": ""2016-09-02T11:52:05Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""dummy1"",
    ""rules"": [

    ],
    ""running_default"": false,
    ""staging_default"": false,
    ""spaces_url"": ""/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f/spaces""
  }
}";

            RetrieveSecurityGroupResponse obj = Utilities.DeserializeJson<RetrieveSecurityGroupResponse>(json);

            Assert.AreEqual("7bdd8ba4-0113-4851-bda2-87cb826f86b0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:05Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("dummy1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForSecurityGroupResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5b235a45-bb2b-490a-872c-0e13b862e710"",
        ""url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688"",
        ""created_at"": ""2016-09-02T11:52:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-744"",
        ""organization_guid"": ""5b235a45-bb2b-490a-872c-0e13b862e710"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/8a2d78ff-30b8-4a40-af17-f5df3d0efa80"",
        ""developers_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/developers"",
        ""managers_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/managers"",
        ""auditors_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/auditors"",
        ""apps_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/apps"",
        ""routes_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/routes"",
        ""domains_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/domains"",
        ""service_instances_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/service_instances"",
        ""app_events_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/app_events"",
        ""events_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/events"",
        ""security_groups_url"": ""/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForSecurityGroupResponse> page = Utilities.DeserializePage<ListAllSpacesForSecurityGroupResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5b235a45-bb2b-490a-872c-0e13b862e710", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:09Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-744", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("5b235a45-bb2b-490a-872c-0e13b862e710", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/8a2d78ff-30b8-4a40-af17-f5df3d0efa80", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/cab3c14c-900f-4c70-8b9e-79605f119688/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestCreateSecurityGroupResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1dbeeb23-0f06-4ec4-946d-cc1d7b04047a"",
    ""url"": ""/v2/security_groups/f49f4785-5217-4dab-b776-714a02515ef3"",
    ""created_at"": ""2016-09-02T11:52:09Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my_super_sec_group"",
    ""rules"": [
      {
        ""protocol"": ""icmp"",
        ""destination"": ""0.0.0.0/0"",
        ""type"": 0,
        ""code"": 1
      },
      {
        ""protocol"": ""tcp"",
        ""destination"": ""0.0.0.0/0"",
        ""ports"": ""2048-3000"",
        ""log"": true
      },
      {
        ""protocol"": ""udp"",
        ""destination"": ""0.0.0.0/0"",
        ""ports"": ""53, 5353""
      },
      {
        ""protocol"": ""all"",
        ""destination"": ""0.0.0.0/0"",
        ""description"": ""This rule allows access to all ips and protocols""
      }
    ],
    ""running_default"": false,
    ""staging_default"": false,
    ""spaces_url"": ""/v2/security_groups/f49f4785-5217-4dab-b776-714a02515ef3/spaces""
  }
}";

            CreateSecurityGroupResponse obj = Utilities.DeserializeJson<CreateSecurityGroupResponse>(json);

            Assert.AreEqual("1dbeeb23-0f06-4ec4-946d-cc1d7b04047a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/f49f4785-5217-4dab-b776-714a02515ef3", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:09Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my_super_sec_group", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/f49f4785-5217-4dab-b776-714a02515ef3/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithSecurityGroupResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ace5fdd7-13e9-4371-b822-b2dfa4e10aca"",
    ""url"": ""/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f"",
    ""created_at"": ""2016-09-02T11:52:05Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""dummy1"",
    ""rules"": [

    ],
    ""running_default"": false,
    ""staging_default"": false,
    ""spaces_url"": ""/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f/spaces""
  }
}";

            AssociateSpaceWithSecurityGroupResponse obj = Utilities.DeserializeJson<AssociateSpaceWithSecurityGroupResponse>(json);

            Assert.AreEqual("ace5fdd7-13e9-4371-b822-b2dfa4e10aca", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:05Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("dummy1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.RunningDefault), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.StagingDefault), true);
            Assert.AreEqual("/v2/security_groups/5ac7b406-c910-40d0-ac65-1fcae90a918f/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }
    }
}
