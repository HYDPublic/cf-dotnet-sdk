//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsTest
    {


        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b7389452-c150-4006-9800-f567c25c5161"",
        ""url"": ""/v2/space_quota_definitions/b7389452-c150-4006-9800-f567c25c5161"",
        ""created_at"": ""2015-02-19T03:52:58+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1483"",
        ""organization_guid"": ""98eaa42f-202b-4266-8208-e40b359888db"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/98eaa42f-202b-4266-8208-e40b359888db"",
        ""spaces_url"": ""/v2/space_quota_definitions/b7389452-c150-4006-9800-f567c25c5161/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b7389452-c150-4006-9800-f567c25c5161", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/b7389452-c150-4006-9800-f567c25c5161", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:58+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1483", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("98eaa42f-202b-4266-8208-e40b359888db", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/98eaa42f-202b-4266-8208-e40b359888db", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/b7389452-c150-4006-9800-f567c25c5161/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9929793d-5132-47c8-9d56-f2b09a7cb1f1"",
    ""url"": ""/v2/space_quota_definitions/9929793d-5132-47c8-9d56-f2b09a7cb1f1"",
    ""created_at"": ""2015-02-19T03:52:59+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1497"",
    ""organization_guid"": ""6c5f52b7-85a4-48bc-9acd-74262135dbf4"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/6c5f52b7-85a4-48bc-9acd-74262135dbf4"",
    ""spaces_url"": ""/v2/space_quota_definitions/9929793d-5132-47c8-9d56-f2b09a7cb1f1/spaces""
  }
}";

            RetrieveSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RetrieveSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("9929793d-5132-47c8-9d56-f2b09a7cb1f1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/9929793d-5132-47c8-9d56-f2b09a7cb1f1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1497", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("6c5f52b7-85a4-48bc-9acd-74262135dbf4", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/6c5f52b7-85a4-48bc-9acd-74262135dbf4", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/9929793d-5132-47c8-9d56-f2b09a7cb1f1/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5"",
        ""url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5"",
        ""created_at"": ""2015-02-19T03:52:59+00:00"",
        ""updated_at"": ""2015-02-19T03:52:59+00:00""
      },
      ""entity"": {
        ""name"": ""name-1503"",
        ""organization_guid"": ""bb795ef3-4902-434a-9aad-1231cd0a5b14"",
        ""space_quota_definition_guid"": ""66111c3b-1cc6-47e4-b0ae-a588c3c24374"",
        ""organization_url"": ""/v2/organizations/bb795ef3-4902-434a-9aad-1231cd0a5b14"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/66111c3b-1cc6-47e4-b0ae-a588c3c24374"",
        ""developers_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/developers"",
        ""managers_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/managers"",
        ""auditors_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/auditors"",
        ""apps_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/apps"",
        ""routes_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/routes"",
        ""domains_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/domains"",
        ""service_instances_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/service_instances"",
        ""app_events_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/app_events"",
        ""events_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/events"",
        ""security_groups_url"": ""/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForSpaceQuotaDefinitionResponse> page = Utilities.DeserializePage<ListAllSpacesForSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1503", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("bb795ef3-4902-434a-9aad-1231cd0a5b14", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("66111c3b-1cc6-47e4-b0ae-a588c3c24374", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/bb795ef3-4902-434a-9aad-1231cd0a5b14", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/66111c3b-1cc6-47e4-b0ae-a588c3c24374", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/f6989bd1-ea2b-4a08-8e7b-c335b0f4d1c5/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestCreateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0373b020-15be-43ff-9f55-2f36738414e7"",
    ""url"": ""/v2/space_quota_definitions/0373b020-15be-43ff-9f55-2f36738414e7"",
    ""created_at"": ""2015-02-19T03:52:59+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""aa069062-87e7-4c3f-b13e-0f2f0a6605ce"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 5,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/aa069062-87e7-4c3f-b13e-0f2f0a6605ce"",
    ""spaces_url"": ""/v2/space_quota_definitions/0373b020-15be-43ff-9f55-2f36738414e7/spaces""
  }
}";

            CreateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<CreateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("0373b020-15be-43ff-9f55-2f36738414e7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/0373b020-15be-43ff-9f55-2f36738414e7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("aa069062-87e7-4c3f-b13e-0f2f0a6605ce", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/aa069062-87e7-4c3f-b13e-0f2f0a6605ce", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/0373b020-15be-43ff-9f55-2f36738414e7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSpaceFromSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0018d817-659f-4149-b4e5-fb08b887e319"",
    ""url"": ""/v2/space_quota_definitions/0018d817-659f-4149-b4e5-fb08b887e319"",
    ""created_at"": ""2015-02-19T03:52:59+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1505"",
    ""organization_guid"": ""976d6492-6f24-4233-b644-3cf73992707e"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/976d6492-6f24-4233-b644-3cf73992707e"",
    ""spaces_url"": ""/v2/space_quota_definitions/0018d817-659f-4149-b4e5-fb08b887e319/spaces""
  }
}";

            RemoveSpaceFromSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RemoveSpaceFromSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("0018d817-659f-4149-b4e5-fb08b887e319", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/0018d817-659f-4149-b4e5-fb08b887e319", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1505", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("976d6492-6f24-4233-b644-3cf73992707e", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/976d6492-6f24-4233-b644-3cf73992707e", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/0018d817-659f-4149-b4e5-fb08b887e319/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1bfcf63e-c315-47d2-afa1-006d4ad78cfb"",
    ""url"": ""/v2/space_quota_definitions/1bfcf63e-c315-47d2-afa1-006d4ad78cfb"",
    ""created_at"": ""2015-02-19T03:52:59+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1510"",
    ""organization_guid"": ""8e44b516-b65e-4d0a-966e-720889f1696a"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/8e44b516-b65e-4d0a-966e-720889f1696a"",
    ""spaces_url"": ""/v2/space_quota_definitions/1bfcf63e-c315-47d2-afa1-006d4ad78cfb/spaces""
  }
}";

            AssociateSpaceWithSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<AssociateSpaceWithSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("1bfcf63e-c315-47d2-afa1-006d4ad78cfb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/1bfcf63e-c315-47d2-afa1-006d4ad78cfb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1510", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("8e44b516-b65e-4d0a-966e-720889f1696a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/8e44b516-b65e-4d0a-966e-720889f1696a", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/1bfcf63e-c315-47d2-afa1-006d4ad78cfb/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""43f5c28c-744b-4703-90e5-c2029c26db46"",
    ""url"": ""/v2/space_quota_definitions/43f5c28c-744b-4703-90e5-c2029c26db46"",
    ""created_at"": ""2015-02-19T03:52:59+00:00"",
    ""updated_at"": ""2015-02-19T03:52:59+00:00""
  },
  ""entity"": {
    ""name"": ""name-1494"",
    ""organization_guid"": ""8f39a145-3b4e-464c-97c1-c6bfc1981d22"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/8f39a145-3b4e-464c-97c1-c6bfc1981d22"",
    ""spaces_url"": ""/v2/space_quota_definitions/43f5c28c-744b-4703-90e5-c2029c26db46/spaces""
  }
}";

            UpdateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<UpdateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("43f5c28c-744b-4703-90e5-c2029c26db46", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/43f5c28c-744b-4703-90e5-c2029c26db46", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-02-19T03:52:59+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1494", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("8f39a145-3b4e-464c-97c1-c6bfc1981d22", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/8f39a145-3b4e-464c-97c1-c6bfc1981d22", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/43f5c28c-744b-4703-90e5-c2029c26db46/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }
    }
}
