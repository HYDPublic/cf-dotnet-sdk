//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsTest
    {


        [TestMethod]
        public void TestUpdateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""93e5b438-dc02-4516-9877-02ae1f5d536f"",
    ""url"": ""/v2/space_quota_definitions/93e5b438-dc02-4516-9877-02ae1f5d536f"",
    ""created_at"": ""2015-03-23T16:53:23+00:00"",
    ""updated_at"": ""2015-03-23T16:53:23+00:00""
  },
  ""entity"": {
    ""name"": ""name-633"",
    ""organization_guid"": ""7b37639f-3810-4cf2-a669-cd299069d3cc"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/7b37639f-3810-4cf2-a669-cd299069d3cc"",
    ""spaces_url"": ""/v2/space_quota_definitions/93e5b438-dc02-4516-9877-02ae1f5d536f/spaces""
  }
}";

            UpdateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<UpdateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("93e5b438-dc02-4516-9877-02ae1f5d536f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/93e5b438-dc02-4516-9877-02ae1f5d536f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-633", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("7b37639f-3810-4cf2-a669-cd299069d3cc", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/7b37639f-3810-4cf2-a669-cd299069d3cc", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/93e5b438-dc02-4516-9877-02ae1f5d536f/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""36a0d1e4-3791-467a-aab0-8034636a504a"",
    ""url"": ""/v2/space_quota_definitions/36a0d1e4-3791-467a-aab0-8034636a504a"",
    ""created_at"": ""2015-03-23T16:53:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""49b5a5d4-c046-447e-9b67-51b404e3df70"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 5,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/49b5a5d4-c046-447e-9b67-51b404e3df70"",
    ""spaces_url"": ""/v2/space_quota_definitions/36a0d1e4-3791-467a-aab0-8034636a504a/spaces""
  }
}";

            CreateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<CreateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("36a0d1e4-3791-467a-aab0-8034636a504a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/36a0d1e4-3791-467a-aab0-8034636a504a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("49b5a5d4-c046-447e-9b67-51b404e3df70", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/49b5a5d4-c046-447e-9b67-51b404e3df70", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/36a0d1e4-3791-467a-aab0-8034636a504a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4942dc16-a502-4817-9aca-e00493cbc86b"",
        ""url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b"",
        ""created_at"": ""2015-03-23T16:53:23+00:00"",
        ""updated_at"": ""2015-03-23T16:53:23+00:00""
      },
      ""entity"": {
        ""name"": ""name-655"",
        ""organization_guid"": ""46c0c950-b355-4323-8b38-de3a8abd7bb1"",
        ""space_quota_definition_guid"": ""51122bad-31e4-4e35-9860-caaab95c2440"",
        ""organization_url"": ""/v2/organizations/46c0c950-b355-4323-8b38-de3a8abd7bb1"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/51122bad-31e4-4e35-9860-caaab95c2440"",
        ""developers_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/developers"",
        ""managers_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/managers"",
        ""auditors_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/auditors"",
        ""apps_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/apps"",
        ""routes_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/routes"",
        ""domains_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/domains"",
        ""service_instances_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/service_instances"",
        ""app_events_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/app_events"",
        ""events_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/events"",
        ""security_groups_url"": ""/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForSpaceQuotaDefinitionResponse> page = Utilities.DeserializePage<ListAllSpacesForSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4942dc16-a502-4817-9aca-e00493cbc86b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-655", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("46c0c950-b355-4323-8b38-de3a8abd7bb1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("51122bad-31e4-4e35-9860-caaab95c2440", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/46c0c950-b355-4323-8b38-de3a8abd7bb1", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/51122bad-31e4-4e35-9860-caaab95c2440", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/4942dc16-a502-4817-9aca-e00493cbc86b/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9e4dc635-74ce-4507-a2be-6b486e6531e7"",
    ""url"": ""/v2/space_quota_definitions/9e4dc635-74ce-4507-a2be-6b486e6531e7"",
    ""created_at"": ""2015-03-23T16:53:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-657"",
    ""organization_guid"": ""a39eb83c-888d-4f69-a95d-d2fc0aa6e060"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/a39eb83c-888d-4f69-a95d-d2fc0aa6e060"",
    ""spaces_url"": ""/v2/space_quota_definitions/9e4dc635-74ce-4507-a2be-6b486e6531e7/spaces""
  }
}";

            AssociateSpaceWithSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<AssociateSpaceWithSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("9e4dc635-74ce-4507-a2be-6b486e6531e7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/9e4dc635-74ce-4507-a2be-6b486e6531e7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-657", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("a39eb83c-888d-4f69-a95d-d2fc0aa6e060", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/a39eb83c-888d-4f69-a95d-d2fc0aa6e060", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/9e4dc635-74ce-4507-a2be-6b486e6531e7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b7f2a707-7c3f-4617-a90a-87ee46ada92b"",
    ""url"": ""/v2/space_quota_definitions/b7f2a707-7c3f-4617-a90a-87ee46ada92b"",
    ""created_at"": ""2015-03-23T16:53:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-630"",
    ""organization_guid"": ""09c9e353-b388-4769-bd42-3962b0e4a636"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/09c9e353-b388-4769-bd42-3962b0e4a636"",
    ""spaces_url"": ""/v2/space_quota_definitions/b7f2a707-7c3f-4617-a90a-87ee46ada92b/spaces""
  }
}";

            RetrieveSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RetrieveSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("b7f2a707-7c3f-4617-a90a-87ee46ada92b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/b7f2a707-7c3f-4617-a90a-87ee46ada92b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-630", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("09c9e353-b388-4769-bd42-3962b0e4a636", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/09c9e353-b388-4769-bd42-3962b0e4a636", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/b7f2a707-7c3f-4617-a90a-87ee46ada92b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSpaceFromSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a55e0342-7645-4171-b442-9e66fc807d87"",
    ""url"": ""/v2/space_quota_definitions/a55e0342-7645-4171-b442-9e66fc807d87"",
    ""created_at"": ""2015-03-23T16:53:23+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-647"",
    ""organization_guid"": ""370af7ec-67ef-4c92-af85-61b2d8f989f9"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/370af7ec-67ef-4c92-af85-61b2d8f989f9"",
    ""spaces_url"": ""/v2/space_quota_definitions/a55e0342-7645-4171-b442-9e66fc807d87/spaces""
  }
}";

            RemoveSpaceFromSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RemoveSpaceFromSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("a55e0342-7645-4171-b442-9e66fc807d87", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/a55e0342-7645-4171-b442-9e66fc807d87", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-647", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("370af7ec-67ef-4c92-af85-61b2d8f989f9", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/370af7ec-67ef-4c92-af85-61b2d8f989f9", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/a55e0342-7645-4171-b442-9e66fc807d87/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""29b95307-850d-446e-80ed-2c921ee05be9"",
        ""url"": ""/v2/space_quota_definitions/29b95307-850d-446e-80ed-2c921ee05be9"",
        ""created_at"": ""2015-03-23T16:53:23+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-644"",
        ""organization_guid"": ""e8878363-b197-40fa-ac4e-6add9c70438a"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/e8878363-b197-40fa-ac4e-6add9c70438a"",
        ""spaces_url"": ""/v2/space_quota_definitions/29b95307-850d-446e-80ed-2c921ee05be9/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("29b95307-850d-446e-80ed-2c921ee05be9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/29b95307-850d-446e-80ed-2c921ee05be9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:23+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-644", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("e8878363-b197-40fa-ac4e-6add9c70438a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/e8878363-b197-40fa-ac4e-6add9c70438a", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/29b95307-850d-446e-80ed-2c921ee05be9/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }
    }
}
