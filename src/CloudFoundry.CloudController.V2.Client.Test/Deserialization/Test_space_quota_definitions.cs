//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsTest
    {


        [TestMethod]
        public void TestUpdateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d586b98e-8d63-4e5b-89ab-94b51032b6fe"",
    ""url"": ""/v2/space_quota_definitions/d586b98e-8d63-4e5b-89ab-94b51032b6fe"",
    ""created_at"": ""2015-03-19T13:19:42+00:00"",
    ""updated_at"": ""2015-03-19T13:19:42+00:00""
  },
  ""entity"": {
    ""name"": ""name-317"",
    ""organization_guid"": ""738617a8-7712-4529-96fc-16eb640deb65"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/738617a8-7712-4529-96fc-16eb640deb65"",
    ""spaces_url"": ""/v2/space_quota_definitions/d586b98e-8d63-4e5b-89ab-94b51032b6fe/spaces""
  }
}";

            UpdateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<UpdateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("d586b98e-8d63-4e5b-89ab-94b51032b6fe", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/d586b98e-8d63-4e5b-89ab-94b51032b6fe", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-19T13:19:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-317", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("738617a8-7712-4529-96fc-16eb640deb65", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/738617a8-7712-4529-96fc-16eb640deb65", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/d586b98e-8d63-4e5b-89ab-94b51032b6fe/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e392ec97-981a-4f91-b7a3-6c3ecc131fbb"",
    ""url"": ""/v2/space_quota_definitions/e392ec97-981a-4f91-b7a3-6c3ecc131fbb"",
    ""created_at"": ""2015-03-19T13:19:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""06a5bcd9-6bf5-48d7-b95d-14c12f550edf"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 5,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/06a5bcd9-6bf5-48d7-b95d-14c12f550edf"",
    ""spaces_url"": ""/v2/space_quota_definitions/e392ec97-981a-4f91-b7a3-6c3ecc131fbb/spaces""
  }
}";

            CreateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<CreateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("e392ec97-981a-4f91-b7a3-6c3ecc131fbb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/e392ec97-981a-4f91-b7a3-6c3ecc131fbb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("06a5bcd9-6bf5-48d7-b95d-14c12f550edf", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/06a5bcd9-6bf5-48d7-b95d-14c12f550edf", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/e392ec97-981a-4f91-b7a3-6c3ecc131fbb/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5348571e-4a15-4f67-807c-8392312cb7d7"",
        ""url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7"",
        ""created_at"": ""2015-03-19T13:19:43+00:00"",
        ""updated_at"": ""2015-03-19T13:19:43+00:00""
      },
      ""entity"": {
        ""name"": ""name-338"",
        ""organization_guid"": ""60b0ceef-2b12-4cf8-97cf-9fb8fb531a44"",
        ""space_quota_definition_guid"": ""7e66a5c5-3d2f-4b6f-bc63-57878ae6856d"",
        ""organization_url"": ""/v2/organizations/60b0ceef-2b12-4cf8-97cf-9fb8fb531a44"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/7e66a5c5-3d2f-4b6f-bc63-57878ae6856d"",
        ""developers_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/developers"",
        ""managers_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/managers"",
        ""auditors_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/auditors"",
        ""apps_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/apps"",
        ""routes_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/routes"",
        ""domains_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/domains"",
        ""service_instances_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/service_instances"",
        ""app_events_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/app_events"",
        ""events_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/events"",
        ""security_groups_url"": ""/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForSpaceQuotaDefinitionResponse> page = Utilities.DeserializePage<ListAllSpacesForSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5348571e-4a15-4f67-807c-8392312cb7d7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:43+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-19T13:19:43+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-338", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("60b0ceef-2b12-4cf8-97cf-9fb8fb531a44", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("7e66a5c5-3d2f-4b6f-bc63-57878ae6856d", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/60b0ceef-2b12-4cf8-97cf-9fb8fb531a44", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/7e66a5c5-3d2f-4b6f-bc63-57878ae6856d", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/5348571e-4a15-4f67-807c-8392312cb7d7/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a472355f-4700-4d76-934a-e24a74602bd4"",
    ""url"": ""/v2/space_quota_definitions/a472355f-4700-4d76-934a-e24a74602bd4"",
    ""created_at"": ""2015-03-19T13:19:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-325"",
    ""organization_guid"": ""08c6ee28-303b-4db8-9427-6ba6107a3668"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/08c6ee28-303b-4db8-9427-6ba6107a3668"",
    ""spaces_url"": ""/v2/space_quota_definitions/a472355f-4700-4d76-934a-e24a74602bd4/spaces""
  }
}";

            AssociateSpaceWithSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<AssociateSpaceWithSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("a472355f-4700-4d76-934a-e24a74602bd4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/a472355f-4700-4d76-934a-e24a74602bd4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-325", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("08c6ee28-303b-4db8-9427-6ba6107a3668", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/08c6ee28-303b-4db8-9427-6ba6107a3668", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/a472355f-4700-4d76-934a-e24a74602bd4/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b76c2569-ac97-453e-93e2-be2f1d8efbdc"",
    ""url"": ""/v2/space_quota_definitions/b76c2569-ac97-453e-93e2-be2f1d8efbdc"",
    ""created_at"": ""2015-03-19T13:19:42+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-314"",
    ""organization_guid"": ""4dede000-85b1-47bb-9ef8-be7c381504dc"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/4dede000-85b1-47bb-9ef8-be7c381504dc"",
    ""spaces_url"": ""/v2/space_quota_definitions/b76c2569-ac97-453e-93e2-be2f1d8efbdc/spaces""
  }
}";

            RetrieveSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RetrieveSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("b76c2569-ac97-453e-93e2-be2f1d8efbdc", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/b76c2569-ac97-453e-93e2-be2f1d8efbdc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:42+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-314", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("4dede000-85b1-47bb-9ef8-be7c381504dc", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/4dede000-85b1-47bb-9ef8-be7c381504dc", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/b76c2569-ac97-453e-93e2-be2f1d8efbdc/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSpaceFromSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""efcd6301-ea0e-465a-8c04-c05db107a040"",
    ""url"": ""/v2/space_quota_definitions/efcd6301-ea0e-465a-8c04-c05db107a040"",
    ""created_at"": ""2015-03-19T13:19:43+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-330"",
    ""organization_guid"": ""00bc2f2f-0a40-4d98-9a8a-0e267d997cb2"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/00bc2f2f-0a40-4d98-9a8a-0e267d997cb2"",
    ""spaces_url"": ""/v2/space_quota_definitions/efcd6301-ea0e-465a-8c04-c05db107a040/spaces""
  }
}";

            RemoveSpaceFromSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RemoveSpaceFromSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("efcd6301-ea0e-465a-8c04-c05db107a040", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/efcd6301-ea0e-465a-8c04-c05db107a040", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:43+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-330", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("00bc2f2f-0a40-4d98-9a8a-0e267d997cb2", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/00bc2f2f-0a40-4d98-9a8a-0e267d997cb2", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/efcd6301-ea0e-465a-8c04-c05db107a040/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cefc4aa2-3510-4619-a4d7-c69bae5f97e2"",
        ""url"": ""/v2/space_quota_definitions/cefc4aa2-3510-4619-a4d7-c69bae5f97e2"",
        ""created_at"": ""2015-03-19T13:19:43+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-343"",
        ""organization_guid"": ""b091cbf5-3221-4e9a-828d-dd1e5b69383f"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/b091cbf5-3221-4e9a-828d-dd1e5b69383f"",
        ""spaces_url"": ""/v2/space_quota_definitions/cefc4aa2-3510-4619-a4d7-c69bae5f97e2/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cefc4aa2-3510-4619-a4d7-c69bae5f97e2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/cefc4aa2-3510-4619-a4d7-c69bae5f97e2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:43+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-343", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("b091cbf5-3221-4e9a-828d-dd1e5b69383f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/b091cbf5-3221-4e9a-828d-dd1e5b69383f", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/cefc4aa2-3510-4619-a4d7-c69bae5f97e2/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }
    }
}
