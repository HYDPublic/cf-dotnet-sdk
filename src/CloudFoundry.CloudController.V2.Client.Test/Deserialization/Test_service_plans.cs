//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlansTest
    {


        [TestMethod]
        public void TestRetrieveServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""87635452-5f4a-4aa5-955c-84e216486630"",
    ""url"": ""/v2/service_plans/52e3e482-c0e9-4b18-ae32-e72e1649f5a6"",
    ""created_at"": ""2016-09-02T11:52:11Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-839"",
    ""free"": false,
    ""description"": ""desc-127"",
    ""service_guid"": ""87635452-5f4a-4aa5-955c-84e216486630"",
    ""extra"": null,
    ""unique_id"": ""3b82fb3e-4e88-4502-8a53-f988def9e187"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/0e1df40a-ec31-4136-ad26-4a4ebe473e42"",
    ""service_instances_url"": ""/v2/service_plans/52e3e482-c0e9-4b18-ae32-e72e1649f5a6/service_instances""
  }
}";

            RetrieveServicePlanResponse obj = Utilities.DeserializeJson<RetrieveServicePlanResponse>(json);

            Assert.AreEqual("87635452-5f4a-4aa5-955c-84e216486630", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/52e3e482-c0e9-4b18-ae32-e72e1649f5a6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:11Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-839", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-127", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("87635452-5f4a-4aa5-955c-84e216486630", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("3b82fb3e-4e88-4502-8a53-f988def9e187", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/0e1df40a-ec31-4136-ad26-4a4ebe473e42", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/52e3e482-c0e9-4b18-ae32-e72e1649f5a6/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicePlansResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6e264fbd-fffd-4875-9477-afb33d7a2fac"",
        ""url"": ""/v2/service_plans/9e68af4a-1cfb-4ec7-9a8c-ed6e4920e4b0"",
        ""created_at"": ""2016-09-02T11:52:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-835"",
        ""free"": false,
        ""description"": ""desc-123"",
        ""service_guid"": ""6e264fbd-fffd-4875-9477-afb33d7a2fac"",
        ""extra"": null,
        ""unique_id"": ""25c450cf-b1f6-40f2-a4bf-43eca6e97d0b"",
        ""public"": true,
        ""active"": true,
        ""service_url"": ""/v2/services/ac5d3650-c740-41e0-9bf1-408ccaa575f2"",
        ""service_instances_url"": ""/v2/service_plans/9e68af4a-1cfb-4ec7-9a8c-ed6e4920e4b0/service_instances""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicePlansResponse> page = Utilities.DeserializePage<ListAllServicePlansResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6e264fbd-fffd-4875-9477-afb33d7a2fac", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/9e68af4a-1cfb-4ec7-9a8c-ed6e4920e4b0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:11Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-835", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Free), true);
            Assert.AreEqual("desc-123", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("6e264fbd-fffd-4875-9477-afb33d7a2fac", TestUtil.ToTestableString(page[0].ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("25c450cf-b1f6-40f2-a4bf-43eca6e97d0b", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("/v2/services/ac5d3650-c740-41e0-9bf1-408ccaa575f2", TestUtil.ToTestableString(page[0].ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/9e68af4a-1cfb-4ec7-9a8c-ed6e4920e4b0/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForServicePlanResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c798e5cf-2911-41f9-8bcd-a985bcae8230"",
        ""url"": ""/v2/service_instances/0c60d298-5a49-4d78-a32a-524c36a2187f"",
        ""created_at"": ""2016-09-02T11:52:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-831"",
        ""credentials"": {
          ""creds-key-31"": ""creds-val-31""
        },
        ""service_plan_guid"": ""c798e5cf-2911-41f9-8bcd-a985bcae8230"",
        ""space_guid"": ""c798e5cf-2911-41f9-8bcd-a985bcae8230"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": null,
        ""tags"": [

        ],
        ""space_url"": ""/v2/spaces/4129899c-1b4c-4dac-90ce-136dec00ad7f"",
        ""service_plan_url"": ""/v2/service_plans/b5eccd59-3606-4179-aa1e-b7e2b484a2e5"",
        ""service_bindings_url"": ""/v2/service_instances/0c60d298-5a49-4d78-a32a-524c36a2187f/service_bindings"",
        ""service_keys_url"": ""/v2/service_instances/0c60d298-5a49-4d78-a32a-524c36a2187f/service_keys"",
        ""routes_url"": ""/v2/service_instances/0c60d298-5a49-4d78-a32a-524c36a2187f/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForServicePlanResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForServicePlanResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c798e5cf-2911-41f9-8bcd-a985bcae8230", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/0c60d298-5a49-4d78-a32a-524c36a2187f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:11Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-831", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("c798e5cf-2911-41f9-8bcd-a985bcae8230", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("c798e5cf-2911-41f9-8bcd-a985bcae8230", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LastOperation), true);
            Assert.AreEqual("/v2/spaces/4129899c-1b4c-4dac-90ce-136dec00ad7f", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/b5eccd59-3606-4179-aa1e-b7e2b484a2e5", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/0c60d298-5a49-4d78-a32a-524c36a2187f/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/0c60d298-5a49-4d78-a32a-524c36a2187f/service_keys", TestUtil.ToTestableString(page[0].ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/0c60d298-5a49-4d78-a32a-524c36a2187f/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""078b2ddc-6834-4282-bbef-172a9fef10d8"",
    ""url"": ""/v2/service_plans/b493aa60-723e-4bed-813e-4b86fc9ae1ca"",
    ""created_at"": ""2016-09-02T11:52:11Z"",
    ""updated_at"": ""2016-09-02T11:52:11Z""
  },
  ""entity"": {
    ""name"": ""name-837"",
    ""free"": false,
    ""description"": ""desc-125"",
    ""service_guid"": ""078b2ddc-6834-4282-bbef-172a9fef10d8"",
    ""extra"": null,
    ""unique_id"": ""2df607f1-6fbd-4e0f-b2c8-1a443317c270"",
    ""public"": false,
    ""active"": true,
    ""service_url"": ""/v2/services/5678b4eb-ce85-4082-852c-922fdb81066e"",
    ""service_instances_url"": ""/v2/service_plans/b493aa60-723e-4bed-813e-4b86fc9ae1ca/service_instances""
  }
}";

            UpdateServicePlanResponse obj = Utilities.DeserializeJson<UpdateServicePlanResponse>(json);

            Assert.AreEqual("078b2ddc-6834-4282-bbef-172a9fef10d8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/b493aa60-723e-4bed-813e-4b86fc9ae1ca", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-09-02T11:52:11Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-09-02T11:52:11Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-837", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-125", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("078b2ddc-6834-4282-bbef-172a9fef10d8", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("2df607f1-6fbd-4e0f-b2c8-1a443317c270", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/5678b4eb-ce85-4082-852c-922fdb81066e", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/b493aa60-723e-4bed-813e-4b86fc9ae1ca/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }
    }
}
