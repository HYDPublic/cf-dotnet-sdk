//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlansTest
    {


        [TestMethod]
        public void TestUpdateServicePlanDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""90a761eb-f744-480c-aeba-0e1b35c1af21"",
    ""url"": ""/v2/service_plans/90a761eb-f744-480c-aeba-0e1b35c1af21"",
    ""created_at"": ""2015-03-23T16:53:13+00:00"",
    ""updated_at"": ""2015-03-23T16:53:13+00:00""
  },
  ""entity"": {
    ""name"": ""100mb"",
    ""free"": true,
    ""description"": ""Let's you put data in your database!"",
    ""service_guid"": ""1a2c2f76-11d7-48e4-b561-2cc5484ccfcd"",
    ""extra"": null,
    ""unique_id"": ""c01338b1-0a31-466b-84b2-51d1262d5539"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/1a2c2f76-11d7-48e4-b561-2cc5484ccfcd"",
    ""service_instances_url"": ""/v2/service_plans/90a761eb-f744-480c-aeba-0e1b35c1af21/service_instances""
  }
}";

            UpdateServicePlanDeprecatedResponse obj = Utilities.DeserializeJson<UpdateServicePlanDeprecatedResponse>(json);

            Assert.AreEqual("90a761eb-f744-480c-aeba-0e1b35c1af21", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/90a761eb-f744-480c-aeba-0e1b35c1af21", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("100mb", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("Let's you put data in your database!", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("1a2c2f76-11d7-48e4-b561-2cc5484ccfcd", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("c01338b1-0a31-466b-84b2-51d1262d5539", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/1a2c2f76-11d7-48e4-b561-2cc5484ccfcd", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/90a761eb-f744-480c-aeba-0e1b35c1af21/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestCreateServicePlanDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f5ac004f-2ca8-45bb-9f4d-c01c91113bdb"",
    ""url"": ""/v2/service_plans/f5ac004f-2ca8-45bb-9f4d-c01c91113bdb"",
    ""created_at"": ""2015-03-23T16:53:13+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""100mb"",
    ""free"": true,
    ""description"": ""Let's you put data in your database!"",
    ""service_guid"": ""1503705f-4201-4f81-9236-032561c686f2"",
    ""extra"": null,
    ""unique_id"": ""fd03fa51-d922-4806-96f0-c4ed12422c44"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/1503705f-4201-4f81-9236-032561c686f2"",
    ""service_instances_url"": ""/v2/service_plans/f5ac004f-2ca8-45bb-9f4d-c01c91113bdb/service_instances""
  }
}";

            CreateServicePlanDeprecatedResponse obj = Utilities.DeserializeJson<CreateServicePlanDeprecatedResponse>(json);

            Assert.AreEqual("f5ac004f-2ca8-45bb-9f4d-c01c91113bdb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/f5ac004f-2ca8-45bb-9f4d-c01c91113bdb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("100mb", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("Let's you put data in your database!", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("1503705f-4201-4f81-9236-032561c686f2", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("fd03fa51-d922-4806-96f0-c4ed12422c44", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/1503705f-4201-4f81-9236-032561c686f2", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/f5ac004f-2ca8-45bb-9f4d-c01c91113bdb/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForServicePlanResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""985e9319-daf7-487b-a02f-138c1c0c081c"",
        ""url"": ""/v2/service_instances/985e9319-daf7-487b-a02f-138c1c0c081c"",
        ""created_at"": ""2015-03-23T16:53:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-7"",
        ""credentials"": {
          ""creds-key-13"": ""creds-val-13""
        },
        ""service_plan_guid"": ""0d474ee7-91ce-457f-9834-0bf3f8c42bb6"",
        ""space_guid"": ""e174f112-8e82-42df-ac47-5a5fa42e5671"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/e174f112-8e82-42df-ac47-5a5fa42e5671"",
        ""service_plan_url"": ""/v2/service_plans/0d474ee7-91ce-457f-9834-0bf3f8c42bb6"",
        ""service_bindings_url"": ""/v2/service_instances/985e9319-daf7-487b-a02f-138c1c0c081c/service_bindings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForServicePlanResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForServicePlanResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("985e9319-daf7-487b-a02f-138c1c0c081c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/985e9319-daf7-487b-a02f-138c1c0c081c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-7", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("0d474ee7-91ce-457f-9834-0bf3f8c42bb6", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("e174f112-8e82-42df-ac47-5a5fa42e5671", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/e174f112-8e82-42df-ac47-5a5fa42e5671", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/0d474ee7-91ce-457f-9834-0bf3f8c42bb6", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/985e9319-daf7-487b-a02f-138c1c0c081c/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""96fb286c-8738-4396-a9f9-db329a20c960"",
    ""url"": ""/v2/service_plans/96fb286c-8738-4396-a9f9-db329a20c960"",
    ""created_at"": ""2015-03-23T16:53:13+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1"",
    ""free"": false,
    ""description"": ""desc-2"",
    ""service_guid"": ""f5753798-5b5e-47db-8ca9-248552703d5c"",
    ""extra"": null,
    ""unique_id"": ""8912daf2-4583-44c8-8f87-cfbbac174877"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/f5753798-5b5e-47db-8ca9-248552703d5c"",
    ""service_instances_url"": ""/v2/service_plans/96fb286c-8738-4396-a9f9-db329a20c960/service_instances""
  }
}";

            RetrieveServicePlanResponse obj = Utilities.DeserializeJson<RetrieveServicePlanResponse>(json);

            Assert.AreEqual("96fb286c-8738-4396-a9f9-db329a20c960", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/96fb286c-8738-4396-a9f9-db329a20c960", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-2", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("f5753798-5b5e-47db-8ca9-248552703d5c", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("8912daf2-4583-44c8-8f87-cfbbac174877", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/f5753798-5b5e-47db-8ca9-248552703d5c", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/96fb286c-8738-4396-a9f9-db329a20c960/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicePlansResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""593678bb-7cd9-4f57-9403-a9160c74894c"",
        ""url"": ""/v2/service_plans/593678bb-7cd9-4f57-9403-a9160c74894c"",
        ""created_at"": ""2015-03-23T16:53:13+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-5"",
        ""free"": false,
        ""description"": ""desc-10"",
        ""service_guid"": ""a41df51d-2146-4580-bce1-2bdac4d4bc60"",
        ""extra"": null,
        ""unique_id"": ""72c5d03a-2d14-4070-9c56-10e16a14bb6a"",
        ""public"": true,
        ""active"": true,
        ""service_url"": ""/v2/services/a41df51d-2146-4580-bce1-2bdac4d4bc60"",
        ""service_instances_url"": ""/v2/service_plans/593678bb-7cd9-4f57-9403-a9160c74894c/service_instances""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicePlansResponse> page = Utilities.DeserializePage<ListAllServicePlansResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("593678bb-7cd9-4f57-9403-a9160c74894c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/593678bb-7cd9-4f57-9403-a9160c74894c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-23T16:53:13+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-5", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Free), true);
            Assert.AreEqual("desc-10", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("a41df51d-2146-4580-bce1-2bdac4d4bc60", TestUtil.ToTestableString(page[0].ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("72c5d03a-2d14-4070-9c56-10e16a14bb6a", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("/v2/services/a41df51d-2146-4580-bce1-2bdac4d4bc60", TestUtil.ToTestableString(page[0].ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/593678bb-7cd9-4f57-9403-a9160c74894c/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
        }
    }
}
