//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlansTest
    {


        [TestMethod]
        public void TestUpdateServicePlanDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""24a256c2-0e51-4a33-9a83-38e1e38f35b5"",
    ""url"": ""/v2/service_plans/24a256c2-0e51-4a33-9a83-38e1e38f35b5"",
    ""created_at"": ""2015-03-19T13:19:45+00:00"",
    ""updated_at"": ""2015-03-19T13:19:45+00:00""
  },
  ""entity"": {
    ""name"": ""100mb"",
    ""free"": true,
    ""description"": ""Let's you put data in your database!"",
    ""service_guid"": ""bccdc3a8-65ee-41c5-9dbc-1cb159c11d8b"",
    ""extra"": null,
    ""unique_id"": ""2337c170-b8f5-45fc-a931-466c066cc554"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/bccdc3a8-65ee-41c5-9dbc-1cb159c11d8b"",
    ""service_instances_url"": ""/v2/service_plans/24a256c2-0e51-4a33-9a83-38e1e38f35b5/service_instances""
  }
}";

            UpdateServicePlanDeprecatedResponse obj = Utilities.DeserializeJson<UpdateServicePlanDeprecatedResponse>(json);

            Assert.AreEqual("24a256c2-0e51-4a33-9a83-38e1e38f35b5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/24a256c2-0e51-4a33-9a83-38e1e38f35b5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("100mb", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("Let's you put data in your database!", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("bccdc3a8-65ee-41c5-9dbc-1cb159c11d8b", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("2337c170-b8f5-45fc-a931-466c066cc554", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/bccdc3a8-65ee-41c5-9dbc-1cb159c11d8b", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/24a256c2-0e51-4a33-9a83-38e1e38f35b5/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestCreateServicePlanDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3f723234-c7c9-41cb-8344-b5c1d2237d19"",
    ""url"": ""/v2/service_plans/3f723234-c7c9-41cb-8344-b5c1d2237d19"",
    ""created_at"": ""2015-03-19T13:19:45+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""100mb"",
    ""free"": true,
    ""description"": ""Let's you put data in your database!"",
    ""service_guid"": ""3327f1f3-c208-4ccc-a07a-14651076234d"",
    ""extra"": null,
    ""unique_id"": ""c4a65d7b-0d86-4a8b-b0d0-f14c3bdebbfa"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/3327f1f3-c208-4ccc-a07a-14651076234d"",
    ""service_instances_url"": ""/v2/service_plans/3f723234-c7c9-41cb-8344-b5c1d2237d19/service_instances""
  }
}";

            CreateServicePlanDeprecatedResponse obj = Utilities.DeserializeJson<CreateServicePlanDeprecatedResponse>(json);

            Assert.AreEqual("3f723234-c7c9-41cb-8344-b5c1d2237d19", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/3f723234-c7c9-41cb-8344-b5c1d2237d19", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("100mb", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("Let's you put data in your database!", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("3327f1f3-c208-4ccc-a07a-14651076234d", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("c4a65d7b-0d86-4a8b-b0d0-f14c3bdebbfa", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/3327f1f3-c208-4ccc-a07a-14651076234d", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/3f723234-c7c9-41cb-8344-b5c1d2237d19/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForServicePlanResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""26d31b7d-0a7b-4707-9bbf-05712274c074"",
        ""url"": ""/v2/service_instances/26d31b7d-0a7b-4707-9bbf-05712274c074"",
        ""created_at"": ""2015-03-19T13:19:45+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-420"",
        ""credentials"": {
          ""creds-key-274"": ""creds-val-274""
        },
        ""service_plan_guid"": ""19ec2e66-c971-47e3-9956-d3a8131eee2f"",
        ""space_guid"": ""467ba97d-64c7-421c-bb9b-581c6367fc69"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""space_url"": ""/v2/spaces/467ba97d-64c7-421c-bb9b-581c6367fc69"",
        ""service_plan_url"": ""/v2/service_plans/19ec2e66-c971-47e3-9956-d3a8131eee2f"",
        ""service_bindings_url"": ""/v2/service_instances/26d31b7d-0a7b-4707-9bbf-05712274c074/service_bindings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForServicePlanResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForServicePlanResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("26d31b7d-0a7b-4707-9bbf-05712274c074", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/26d31b7d-0a7b-4707-9bbf-05712274c074", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-420", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("19ec2e66-c971-47e3-9956-d3a8131eee2f", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("467ba97d-64c7-421c-bb9b-581c6367fc69", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("/v2/spaces/467ba97d-64c7-421c-bb9b-581c6367fc69", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/19ec2e66-c971-47e3-9956-d3a8131eee2f", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/26d31b7d-0a7b-4707-9bbf-05712274c074/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bd5935a8-8423-40fa-8c3b-29f0e89fe1e7"",
    ""url"": ""/v2/service_plans/bd5935a8-8423-40fa-8c3b-29f0e89fe1e7"",
    ""created_at"": ""2015-03-19T13:19:45+00:00"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-424"",
    ""free"": false,
    ""description"": ""desc-72"",
    ""service_guid"": ""a60274ec-8046-4103-b5d1-e99487003cac"",
    ""extra"": null,
    ""unique_id"": ""0adf4b74-cf9b-4ae1-8470-3c469d59417a"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/a60274ec-8046-4103-b5d1-e99487003cac"",
    ""service_instances_url"": ""/v2/service_plans/bd5935a8-8423-40fa-8c3b-29f0e89fe1e7/service_instances""
  }
}";

            RetrieveServicePlanResponse obj = Utilities.DeserializeJson<RetrieveServicePlanResponse>(json);

            Assert.AreEqual("bd5935a8-8423-40fa-8c3b-29f0e89fe1e7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/bd5935a8-8423-40fa-8c3b-29f0e89fe1e7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-424", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-72", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("a60274ec-8046-4103-b5d1-e99487003cac", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("0adf4b74-cf9b-4ae1-8470-3c469d59417a", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/a60274ec-8046-4103-b5d1-e99487003cac", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/bd5935a8-8423-40fa-8c3b-29f0e89fe1e7/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicePlansResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""94bf2421-ba63-4297-ab2b-972c71dd6437"",
        ""url"": ""/v2/service_plans/94bf2421-ba63-4297-ab2b-972c71dd6437"",
        ""created_at"": ""2015-03-19T13:19:45+00:00"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-428"",
        ""free"": false,
        ""description"": ""desc-80"",
        ""service_guid"": ""dc8f4de2-7732-4198-98ef-f3d248c2b515"",
        ""extra"": null,
        ""unique_id"": ""8b8ff111-6da0-4b00-8a63-2daaba643574"",
        ""public"": true,
        ""active"": true,
        ""service_url"": ""/v2/services/dc8f4de2-7732-4198-98ef-f3d248c2b515"",
        ""service_instances_url"": ""/v2/service_plans/94bf2421-ba63-4297-ab2b-972c71dd6437/service_instances""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicePlansResponse> page = Utilities.DeserializePage<ListAllServicePlansResponse>(json);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("94bf2421-ba63-4297-ab2b-972c71dd6437", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/94bf2421-ba63-4297-ab2b-972c71dd6437", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-03-19T13:19:45+00:00", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-428", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Free), true);
            Assert.AreEqual("desc-80", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("dc8f4de2-7732-4198-98ef-f3d248c2b515", TestUtil.ToTestableString(page[0].ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("8b8ff111-6da0-4b00-8a63-2daaba643574", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("/v2/services/dc8f4de2-7732-4198-98ef-f3d248c2b515", TestUtil.ToTestableString(page[0].ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/94bf2421-ba63-4297-ab2b-972c71dd6437/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
        }
    }
}
