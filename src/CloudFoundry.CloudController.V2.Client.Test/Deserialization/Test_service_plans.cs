//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlansTest
    {


        [TestMethod]
        public void TestRetrieveServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c25f2537-dd47-4dbe-b673-9e6ea63cef2c"",
    ""url"": ""/v2/service_plans/8f13a57d-7020-4b2f-86c1-d200ab714eaf"",
    ""created_at"": ""2016-03-30T10:15:14Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-431"",
    ""free"": false,
    ""description"": ""desc-44"",
    ""service_guid"": ""c25f2537-dd47-4dbe-b673-9e6ea63cef2c"",
    ""extra"": null,
    ""unique_id"": ""8051827e-c968-4333-bf02-619d7d931df4"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/facc325a-d24f-4898-860a-76ce025c41ca"",
    ""service_instances_url"": ""/v2/service_plans/8f13a57d-7020-4b2f-86c1-d200ab714eaf/service_instances""
  }
}";

            RetrieveServicePlanResponse obj = Utilities.DeserializeJson<RetrieveServicePlanResponse>(json);

            Assert.AreEqual("c25f2537-dd47-4dbe-b673-9e6ea63cef2c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/8f13a57d-7020-4b2f-86c1-d200ab714eaf", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:14Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-431", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-44", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("c25f2537-dd47-4dbe-b673-9e6ea63cef2c", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("8051827e-c968-4333-bf02-619d7d931df4", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/facc325a-d24f-4898-860a-76ce025c41ca", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/8f13a57d-7020-4b2f-86c1-d200ab714eaf/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicePlansResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""013b2c82-5dda-4a8e-ad42-cac90349f7ae"",
        ""url"": ""/v2/service_plans/b439a1ec-8ebd-45f0-9bb6-f3ab1efc943f"",
        ""created_at"": ""2016-03-30T10:15:14Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-435"",
        ""free"": false,
        ""description"": ""desc-48"",
        ""service_guid"": ""013b2c82-5dda-4a8e-ad42-cac90349f7ae"",
        ""extra"": null,
        ""unique_id"": ""0876bc22-0629-4730-b375-7a40232f8426"",
        ""public"": true,
        ""active"": true,
        ""service_url"": ""/v2/services/b1e96674-19bf-43dc-a029-345569e119a9"",
        ""service_instances_url"": ""/v2/service_plans/b439a1ec-8ebd-45f0-9bb6-f3ab1efc943f/service_instances""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicePlansResponse> page = Utilities.DeserializePage<ListAllServicePlansResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("013b2c82-5dda-4a8e-ad42-cac90349f7ae", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/b439a1ec-8ebd-45f0-9bb6-f3ab1efc943f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:14Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-435", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Free), true);
            Assert.AreEqual("desc-48", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("013b2c82-5dda-4a8e-ad42-cac90349f7ae", TestUtil.ToTestableString(page[0].ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("0876bc22-0629-4730-b375-7a40232f8426", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("/v2/services/b1e96674-19bf-43dc-a029-345569e119a9", TestUtil.ToTestableString(page[0].ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/b439a1ec-8ebd-45f0-9bb6-f3ab1efc943f/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForServicePlanResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""908470c1-ea53-4879-b5ee-80cdf8eea455"",
        ""url"": ""/v2/service_instances/18933cba-ef67-447d-a485-267a975efc02"",
        ""created_at"": ""2016-03-30T10:15:14Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-439"",
        ""credentials"": {
          ""creds-key-13"": ""creds-val-13""
        },
        ""service_plan_guid"": ""908470c1-ea53-4879-b5ee-80cdf8eea455"",
        ""space_guid"": ""908470c1-ea53-4879-b5ee-80cdf8eea455"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": null,
        ""tags"": [

        ],
        ""space_url"": ""/v2/spaces/a91b3e2d-68a0-4e79-a177-6b540f0af023"",
        ""service_plan_url"": ""/v2/service_plans/debb2d9a-79db-4e56-b78d-0c7f43f7d813"",
        ""service_bindings_url"": ""/v2/service_instances/18933cba-ef67-447d-a485-267a975efc02/service_bindings"",
        ""service_keys_url"": ""/v2/service_instances/18933cba-ef67-447d-a485-267a975efc02/service_keys"",
        ""routes_url"": ""/v2/service_instances/18933cba-ef67-447d-a485-267a975efc02/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForServicePlanResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForServicePlanResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("908470c1-ea53-4879-b5ee-80cdf8eea455", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/18933cba-ef67-447d-a485-267a975efc02", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:14Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-439", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("908470c1-ea53-4879-b5ee-80cdf8eea455", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("908470c1-ea53-4879-b5ee-80cdf8eea455", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LastOperation), true);
            Assert.AreEqual("/v2/spaces/a91b3e2d-68a0-4e79-a177-6b540f0af023", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/debb2d9a-79db-4e56-b78d-0c7f43f7d813", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/18933cba-ef67-447d-a485-267a975efc02/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/18933cba-ef67-447d-a485-267a975efc02/service_keys", TestUtil.ToTestableString(page[0].ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/18933cba-ef67-447d-a485-267a975efc02/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""31d0c67b-b679-4a8c-9654-096cd4818a6d"",
    ""url"": ""/v2/service_plans/fc016509-ef55-4d46-a538-a430c809f03f"",
    ""created_at"": ""2016-03-30T10:15:14Z"",
    ""updated_at"": ""2016-03-30T10:15:14Z""
  },
  ""entity"": {
    ""name"": ""name-433"",
    ""free"": false,
    ""description"": ""desc-46"",
    ""service_guid"": ""31d0c67b-b679-4a8c-9654-096cd4818a6d"",
    ""extra"": null,
    ""unique_id"": ""beb6174c-73a5-4abf-9ddc-429d25981003"",
    ""public"": false,
    ""active"": true,
    ""service_url"": ""/v2/services/0f9730a2-61b3-4de7-9685-1d314ac7d44b"",
    ""service_instances_url"": ""/v2/service_plans/fc016509-ef55-4d46-a538-a430c809f03f/service_instances""
  }
}";

            UpdateServicePlanResponse obj = Utilities.DeserializeJson<UpdateServicePlanResponse>(json);

            Assert.AreEqual("31d0c67b-b679-4a8c-9654-096cd4818a6d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/fc016509-ef55-4d46-a538-a430c809f03f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:14Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-03-30T10:15:14Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-433", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-46", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("31d0c67b-b679-4a8c-9654-096cd4818a6d", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("beb6174c-73a5-4abf-9ddc-429d25981003", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/0f9730a2-61b3-4de7-9685-1d314ac7d44b", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/fc016509-ef55-4d46-a538-a430c809f03f/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }
    }
}
