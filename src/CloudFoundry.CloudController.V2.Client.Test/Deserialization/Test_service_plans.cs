//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlansTest
    {


        [TestMethod]
        public void TestRetrieveServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d3af4f92-6ba0-4595-a59a-437614b5834d"",
    ""url"": ""/v2/service_plans/6d1a1c86-5197-423e-9470-cc9d5eea28d4"",
    ""created_at"": ""2016-07-27T14:02:27Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1"",
    ""free"": false,
    ""description"": ""desc-1"",
    ""service_guid"": ""d3af4f92-6ba0-4595-a59a-437614b5834d"",
    ""extra"": null,
    ""unique_id"": ""204bb36a-c2b2-4c2b-a5e6-1f5ec01d91ac"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/96ee1eb9-4f21-45dc-8fe9-d3157be57426"",
    ""service_instances_url"": ""/v2/service_plans/6d1a1c86-5197-423e-9470-cc9d5eea28d4/service_instances""
  }
}";

            RetrieveServicePlanResponse obj = Utilities.DeserializeJson<RetrieveServicePlanResponse>(json);

            Assert.AreEqual("d3af4f92-6ba0-4595-a59a-437614b5834d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/6d1a1c86-5197-423e-9470-cc9d5eea28d4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-1", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("d3af4f92-6ba0-4595-a59a-437614b5834d", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("204bb36a-c2b2-4c2b-a5e6-1f5ec01d91ac", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/96ee1eb9-4f21-45dc-8fe9-d3157be57426", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/6d1a1c86-5197-423e-9470-cc9d5eea28d4/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicePlansResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3e079fc3-c483-4513-8374-0d4fe6603f51"",
        ""url"": ""/v2/service_plans/ecd7b874-f2de-4b3b-a743-f7f03b18bd0e"",
        ""created_at"": ""2016-07-27T14:02:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-3"",
        ""free"": false,
        ""description"": ""desc-3"",
        ""service_guid"": ""3e079fc3-c483-4513-8374-0d4fe6603f51"",
        ""extra"": null,
        ""unique_id"": ""49ad3f56-c963-4a68-bcfe-9e31591e689e"",
        ""public"": true,
        ""active"": true,
        ""service_url"": ""/v2/services/84a78d14-c049-41e3-b77f-2c37a07595ca"",
        ""service_instances_url"": ""/v2/service_plans/ecd7b874-f2de-4b3b-a743-f7f03b18bd0e/service_instances""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicePlansResponse> page = Utilities.DeserializePage<ListAllServicePlansResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3e079fc3-c483-4513-8374-0d4fe6603f51", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/ecd7b874-f2de-4b3b-a743-f7f03b18bd0e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-3", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Free), true);
            Assert.AreEqual("desc-3", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("3e079fc3-c483-4513-8374-0d4fe6603f51", TestUtil.ToTestableString(page[0].ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("49ad3f56-c963-4a68-bcfe-9e31591e689e", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("/v2/services/84a78d14-c049-41e3-b77f-2c37a07595ca", TestUtil.ToTestableString(page[0].ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/ecd7b874-f2de-4b3b-a743-f7f03b18bd0e/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForServicePlanResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e9a92ee7-338e-46e6-a5eb-9d7542b1e1f4"",
        ""url"": ""/v2/service_instances/b8e926bb-f24e-4661-a654-5fbfb78dd824"",
        ""created_at"": ""2016-07-27T14:02:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-11"",
        ""credentials"": {
          ""creds-key-1"": ""creds-val-1""
        },
        ""service_plan_guid"": ""e9a92ee7-338e-46e6-a5eb-9d7542b1e1f4"",
        ""space_guid"": ""e9a92ee7-338e-46e6-a5eb-9d7542b1e1f4"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": null,
        ""tags"": [

        ],
        ""space_url"": ""/v2/spaces/78ce60c3-36c0-433d-9688-f2cde95c2d3a"",
        ""service_plan_url"": ""/v2/service_plans/225d6c31-57d4-4b73-9c6d-c2181ffde395"",
        ""service_bindings_url"": ""/v2/service_instances/b8e926bb-f24e-4661-a654-5fbfb78dd824/service_bindings"",
        ""service_keys_url"": ""/v2/service_instances/b8e926bb-f24e-4661-a654-5fbfb78dd824/service_keys"",
        ""routes_url"": ""/v2/service_instances/b8e926bb-f24e-4661-a654-5fbfb78dd824/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForServicePlanResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForServicePlanResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e9a92ee7-338e-46e6-a5eb-9d7542b1e1f4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/b8e926bb-f24e-4661-a654-5fbfb78dd824", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-11", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("e9a92ee7-338e-46e6-a5eb-9d7542b1e1f4", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("e9a92ee7-338e-46e6-a5eb-9d7542b1e1f4", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LastOperation), true);
            Assert.AreEqual("/v2/spaces/78ce60c3-36c0-433d-9688-f2cde95c2d3a", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/225d6c31-57d4-4b73-9c6d-c2181ffde395", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/b8e926bb-f24e-4661-a654-5fbfb78dd824/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/b8e926bb-f24e-4661-a654-5fbfb78dd824/service_keys", TestUtil.ToTestableString(page[0].ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/b8e926bb-f24e-4661-a654-5fbfb78dd824/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""594e51a2-d9d2-45b8-b519-fb98909f2f73"",
    ""url"": ""/v2/service_plans/fd6a8005-1b80-4cb4-b762-45f643e369cd"",
    ""created_at"": ""2016-07-27T14:02:27Z"",
    ""updated_at"": ""2016-07-27T14:02:27Z""
  },
  ""entity"": {
    ""name"": ""name-5"",
    ""free"": false,
    ""description"": ""desc-5"",
    ""service_guid"": ""594e51a2-d9d2-45b8-b519-fb98909f2f73"",
    ""extra"": null,
    ""unique_id"": ""2a1b4ca3-6f4f-42ae-89ab-bb1aa49f33aa"",
    ""public"": false,
    ""active"": true,
    ""service_url"": ""/v2/services/5ba2d720-4383-4fed-b042-013f8fbd9c69"",
    ""service_instances_url"": ""/v2/service_plans/fd6a8005-1b80-4cb4-b762-45f643e369cd/service_instances""
  }
}";

            UpdateServicePlanResponse obj = Utilities.DeserializeJson<UpdateServicePlanResponse>(json);

            Assert.AreEqual("594e51a2-d9d2-45b8-b519-fb98909f2f73", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/fd6a8005-1b80-4cb4-b762-45f643e369cd", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-27T14:02:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-27T14:02:27Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-5", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-5", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("594e51a2-d9d2-45b8-b519-fb98909f2f73", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("2a1b4ca3-6f4f-42ae-89ab-bb1aa49f33aa", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/5ba2d720-4383-4fed-b042-013f8fbd9c69", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/fd6a8005-1b80-4cb4-b762-45f643e369cd/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }
    }
}
