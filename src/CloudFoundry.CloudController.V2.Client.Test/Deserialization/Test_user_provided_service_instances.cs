//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UserProvidedServiceInstancesTest
    {


        [TestMethod]
        public void TestRetrieveUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3f043268-18a9-42cd-8b95-3d24810d3d37"",
    ""url"": ""/v2/user_provided_service_instances/bd128c9b-3dd3-41ee-921c-f5d64172c16b"",
    ""created_at"": ""2016-05-26T11:34:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-337"",
    ""credentials"": {
      ""creds-key-30"": ""creds-val-30""
    },
    ""space_guid"": ""3f043268-18a9-42cd-8b95-3d24810d3d37"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-31"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/05f56211-2796-4752-ae97-d22c2befea75"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/bd128c9b-3dd3-41ee-921c-f5d64172c16b/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/bd128c9b-3dd3-41ee-921c-f5d64172c16b/routes""
  }
}";

            RetrieveUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<RetrieveUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("3f043268-18a9-42cd-8b95-3d24810d3d37", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bd128c9b-3dd3-41ee-921c-f5d64172c16b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-337", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("3f043268-18a9-42cd-8b95-3d24810d3d37", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-31", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/05f56211-2796-4752-ae97-d22c2befea75", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bd128c9b-3dd3-41ee-921c-f5d64172c16b/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bd128c9b-3dd3-41ee-921c-f5d64172c16b/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ebe3f029-2010-4122-8afb-57f8ff3f63c7"",
    ""url"": ""/v2/user_provided_service_instances/2bf6aac3-ceec-4eb8-bc2e-8da42e7f6239"",
    ""created_at"": ""2016-05-26T11:34:29Z"",
    ""updated_at"": ""2016-05-26T11:34:29Z""
  },
  ""entity"": {
    ""name"": ""name-345"",
    ""credentials"": {
      ""somekey"": ""somenewvalue""
    },
    ""space_guid"": ""ebe3f029-2010-4122-8afb-57f8ff3f63c7"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-33"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/995de13c-822e-41a9-a089-62160364268f"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/2bf6aac3-ceec-4eb8-bc2e-8da42e7f6239/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/2bf6aac3-ceec-4eb8-bc2e-8da42e7f6239/routes""
  }
}";

            UpdateUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<UpdateUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("ebe3f029-2010-4122-8afb-57f8ff3f63c7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/2bf6aac3-ceec-4eb8-bc2e-8da42e7f6239", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-26T11:34:29Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-345", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ebe3f029-2010-4122-8afb-57f8ff3f63c7", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-33", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/995de13c-822e-41a9-a089-62160364268f", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/2bf6aac3-ceec-4eb8-bc2e-8da42e7f6239/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/2bf6aac3-ceec-4eb8-bc2e-8da42e7f6239/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllRoutesForUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""91708e26-d65c-42ba-bd8e-bcdfd2d1c5b6"",
        ""url"": ""/v2/routes/3ef7541b-963a-400c-9ebb-c5bdf1d8bcce"",
        ""created_at"": ""2016-05-26T11:34:28Z"",
        ""updated_at"": ""2016-05-26T11:34:28Z""
      },
      ""entity"": {
        ""host"": ""host-1"",
        ""path"": """",
        ""domain_guid"": ""91708e26-d65c-42ba-bd8e-bcdfd2d1c5b6"",
        ""space_guid"": ""91708e26-d65c-42ba-bd8e-bcdfd2d1c5b6"",
        ""service_instance_guid"": ""91708e26-d65c-42ba-bd8e-bcdfd2d1c5b6"",
        ""port"": null,
        ""domain_url"": ""/v2/domains/6dad4fa2-25c1-4c37-9427-5c694b959eba"",
        ""space_url"": ""/v2/spaces/54df4d1b-4265-4afa-8d3e-c46567357adb"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/276871d7-9c02-4370-94a8-ed25001971fe"",
        ""apps_url"": ""/v2/routes/3ef7541b-963a-400c-9ebb-c5bdf1d8bcce/apps"",
        ""route_mappings_url"": ""/v2/routes/3ef7541b-963a-400c-9ebb-c5bdf1d8bcce/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForUserProvidedServiceInstanceResponse> page = Utilities.DeserializePage<ListAllRoutesForUserProvidedServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("91708e26-d65c-42ba-bd8e-bcdfd2d1c5b6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/3ef7541b-963a-400c-9ebb-c5bdf1d8bcce", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-1", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("91708e26-d65c-42ba-bd8e-bcdfd2d1c5b6", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("91708e26-d65c-42ba-bd8e-bcdfd2d1c5b6", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("91708e26-d65c-42ba-bd8e-bcdfd2d1c5b6", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/domains/6dad4fa2-25c1-4c37-9427-5c694b959eba", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/54df4d1b-4265-4afa-8d3e-c46567357adb", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/276871d7-9c02-4370-94a8-ed25001971fe", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/3ef7541b-963a-400c-9ebb-c5bdf1d8bcce/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/routes/3ef7541b-963a-400c-9ebb-c5bdf1d8bcce/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestListAllUserProvidedServiceInstancesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bdce3942-054f-49c5-82f4-c034659491e2"",
        ""url"": ""/v2/user_provided_service_instances/4ea5fff8-2899-45fb-a4c2-af1a08204012"",
        ""created_at"": ""2016-05-26T11:34:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-326"",
        ""credentials"": {
          ""creds-key-28"": ""creds-val-28""
        },
        ""space_guid"": ""bdce3942-054f-49c5-82f4-c034659491e2"",
        ""type"": ""user_provided_service_instance"",
        ""syslog_drain_url"": ""https://foo.com/url-29"",
        ""route_service_url"": null,
        ""space_url"": ""/v2/spaces/be2394ec-6f02-40b9-89eb-78d8d80bc512"",
        ""service_bindings_url"": ""/v2/user_provided_service_instances/4ea5fff8-2899-45fb-a4c2-af1a08204012/service_bindings"",
        ""routes_url"": ""/v2/user_provided_service_instances/4ea5fff8-2899-45fb-a4c2-af1a08204012/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUserProvidedServiceInstancesResponse> page = Utilities.DeserializePage<ListAllUserProvidedServiceInstancesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bdce3942-054f-49c5-82f4-c034659491e2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/4ea5fff8-2899-45fb-a4c2-af1a08204012", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-326", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("bdce3942-054f-49c5-82f4-c034659491e2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("https://foo.com/url-29", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/be2394ec-6f02-40b9-89eb-78d8d80bc512", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/4ea5fff8-2899-45fb-a4c2-af1a08204012/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/4ea5fff8-2899-45fb-a4c2-af1a08204012/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8311e899-a7eb-4290-81b0-8f2e350e0a28"",
        ""url"": ""/v2/service_bindings/8b3be96b-9a65-4b14-9c5a-a260dc4737f1"",
        ""created_at"": ""2016-05-26T11:34:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""8311e899-a7eb-4290-81b0-8f2e350e0a28"",
        ""service_instance_guid"": ""8311e899-a7eb-4290-81b0-8f2e350e0a28"",
        ""credentials"": {
          ""creds-key-27"": ""creds-val-27""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""volume_mounts"": [

        ],
        ""app_url"": ""/v2/apps/44ded124-2e8f-4da0-b449-dcd7588c9e5f"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/dec23d52-9ffe-4ddd-8dbe-9f77809e5dd7""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForUserProvidedServiceInstanceResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForUserProvidedServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8311e899-a7eb-4290-81b0-8f2e350e0a28", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/8b3be96b-9a65-4b14-9c5a-a260dc4737f1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("8311e899-a7eb-4290-81b0-8f2e350e0a28", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("8311e899-a7eb-4290-81b0-8f2e350e0a28", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/44ded124-2e8f-4da0-b449-dcd7588c9e5f", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/dec23d52-9ffe-4ddd-8dbe-9f77809e5dd7", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""eaf08a07-d3c0-4abc-a7f6-edabb01643cb"",
    ""url"": ""/v2/user_provided_service_instances/a6041ed3-2402-4909-afdd-e0bb4fb89bca"",
    ""created_at"": ""2016-05-26T11:34:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-311"",
    ""credentials"": {
      ""creds-key-24"": ""creds-val-24""
    },
    ""space_guid"": ""eaf08a07-d3c0-4abc-a7f6-edabb01643cb"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-23"",
    ""route_service_url"": ""https://foo.com/url-22"",
    ""space_url"": ""/v2/spaces/7708a965-e2a2-4fb8-b559-2e09b87a66ac"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/a6041ed3-2402-4909-afdd-e0bb4fb89bca/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/a6041ed3-2402-4909-afdd-e0bb4fb89bca/routes""
  }
}";

            AssociateRouteWithUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<AssociateRouteWithUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("eaf08a07-d3c0-4abc-a7f6-edabb01643cb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/a6041ed3-2402-4909-afdd-e0bb4fb89bca", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-311", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("eaf08a07-d3c0-4abc-a7f6-edabb01643cb", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-23", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("https://foo.com/url-22", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/7708a965-e2a2-4fb8-b559-2e09b87a66ac", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/a6041ed3-2402-4909-afdd-e0bb4fb89bca/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/a6041ed3-2402-4909-afdd-e0bb4fb89bca/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""704337aa-a8e5-48cb-8f1b-c190eedb3df2"",
    ""url"": ""/v2/user_provided_service_instances/bbf9f31f-6162-4a78-96d2-beecd1670243"",
    ""created_at"": ""2016-05-26T11:34:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-user-provided-instance"",
    ""credentials"": {
      ""somekey"": ""somevalue""
    },
    ""space_guid"": ""704337aa-a8e5-48cb-8f1b-c190eedb3df2"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""syslog://example.com"",
    ""route_service_url"": ""https://logger.example.com"",
    ""space_url"": ""/v2/spaces/2a4b4a08-4a0a-464f-a889-067948d3e0c7"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/bbf9f31f-6162-4a78-96d2-beecd1670243/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/bbf9f31f-6162-4a78-96d2-beecd1670243/routes""
  }
}";

            CreateUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<CreateUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("704337aa-a8e5-48cb-8f1b-c190eedb3df2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bbf9f31f-6162-4a78-96d2-beecd1670243", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-26T11:34:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-user-provided-instance", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("704337aa-a8e5-48cb-8f1b-c190eedb3df2", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("syslog://example.com", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("https://logger.example.com", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/2a4b4a08-4a0a-464f-a889-067948d3e0c7", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bbf9f31f-6162-4a78-96d2-beecd1670243/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bbf9f31f-6162-4a78-96d2-beecd1670243/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }
    }
}
