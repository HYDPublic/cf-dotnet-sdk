//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UserProvidedServiceInstancesTest
    {


        [TestMethod]
        public void TestRetrieveUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e3461901-1727-4b73-81c4-2ce9515dd8d0"",
    ""url"": ""/v2/user_provided_service_instances/b85fca1f-71b2-4fc7-85f0-6dcad0a51152"",
    ""created_at"": ""2016-03-30T10:15:09Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-182"",
    ""credentials"": {
      ""creds-key-1"": ""creds-val-1""
    },
    ""space_guid"": ""e3461901-1727-4b73-81c4-2ce9515dd8d0"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-17"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/ea8a0c8e-c592-488a-b7de-a4f4afd282eb"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/b85fca1f-71b2-4fc7-85f0-6dcad0a51152/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/b85fca1f-71b2-4fc7-85f0-6dcad0a51152/routes""
  }
}";

            RetrieveUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<RetrieveUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("e3461901-1727-4b73-81c4-2ce9515dd8d0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/b85fca1f-71b2-4fc7-85f0-6dcad0a51152", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:09Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-182", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("e3461901-1727-4b73-81c4-2ce9515dd8d0", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-17", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/ea8a0c8e-c592-488a-b7de-a4f4afd282eb", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/b85fca1f-71b2-4fc7-85f0-6dcad0a51152/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/b85fca1f-71b2-4fc7-85f0-6dcad0a51152/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c5fd89ab-afcd-483d-8534-32b8455e7408"",
    ""url"": ""/v2/user_provided_service_instances/667c0bfd-20b2-4f8a-bf22-17c7563c9721"",
    ""created_at"": ""2016-03-30T10:15:09Z"",
    ""updated_at"": ""2016-03-30T10:15:09Z""
  },
  ""entity"": {
    ""name"": ""name-201"",
    ""credentials"": {
      ""somekey"": ""somenewvalue""
    },
    ""space_guid"": ""c5fd89ab-afcd-483d-8534-32b8455e7408"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-21"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/f52b78d6-db7f-4254-af92-68e1619473ae"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/667c0bfd-20b2-4f8a-bf22-17c7563c9721/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/667c0bfd-20b2-4f8a-bf22-17c7563c9721/routes""
  }
}";

            UpdateUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<UpdateUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("c5fd89ab-afcd-483d-8534-32b8455e7408", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/667c0bfd-20b2-4f8a-bf22-17c7563c9721", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:09Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-03-30T10:15:09Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-201", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("c5fd89ab-afcd-483d-8534-32b8455e7408", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-21", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/f52b78d6-db7f-4254-af92-68e1619473ae", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/667c0bfd-20b2-4f8a-bf22-17c7563c9721/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/667c0bfd-20b2-4f8a-bf22-17c7563c9721/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllRoutesForUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""15553b9f-012a-4301-93a9-43aa19ce8d1a"",
        ""url"": ""/v2/routes/bbdddd8f-16a4-449e-bb41-abf816dd317d"",
        ""created_at"": ""2016-03-30T10:15:09Z"",
        ""updated_at"": ""2016-03-30T10:15:09Z""
      },
      ""entity"": {
        ""host"": ""host-1"",
        ""path"": """",
        ""domain_guid"": ""15553b9f-012a-4301-93a9-43aa19ce8d1a"",
        ""space_guid"": ""15553b9f-012a-4301-93a9-43aa19ce8d1a"",
        ""service_instance_guid"": ""15553b9f-012a-4301-93a9-43aa19ce8d1a"",
        ""port"": 0,
        ""domain_url"": ""/v2/domains/44aaaed2-00b7-4e21-88f9-5ea96638366a"",
        ""space_url"": ""/v2/spaces/2cc865bb-e2eb-4100-8aeb-16ff997c98ca"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/d1d9a801-c4a1-4abf-8bdb-778035e0ea0a"",
        ""apps_url"": ""/v2/routes/bbdddd8f-16a4-449e-bb41-abf816dd317d/apps"",
        ""route_mappings_url"": ""/v2/routes/bbdddd8f-16a4-449e-bb41-abf816dd317d/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForUserProvidedServiceInstanceResponse> page = Utilities.DeserializePage<ListAllRoutesForUserProvidedServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("15553b9f-012a-4301-93a9-43aa19ce8d1a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/bbdddd8f-16a4-449e-bb41-abf816dd317d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:09Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-03-30T10:15:09Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-1", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("15553b9f-012a-4301-93a9-43aa19ce8d1a", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("15553b9f-012a-4301-93a9-43aa19ce8d1a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("15553b9f-012a-4301-93a9-43aa19ce8d1a", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/domains/44aaaed2-00b7-4e21-88f9-5ea96638366a", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/2cc865bb-e2eb-4100-8aeb-16ff997c98ca", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/d1d9a801-c4a1-4abf-8bdb-778035e0ea0a", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/bbdddd8f-16a4-449e-bb41-abf816dd317d/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/routes/bbdddd8f-16a4-449e-bb41-abf816dd317d/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestListAllUserProvidedServiceInstancesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b65e50c1-a551-41aa-8928-8820a248b579"",
        ""url"": ""/v2/user_provided_service_instances/d2e24539-99c9-4872-a026-4791f825f7b4"",
        ""created_at"": ""2016-03-30T10:15:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-190"",
        ""credentials"": {
          ""creds-key-3"": ""creds-val-3""
        },
        ""space_guid"": ""b65e50c1-a551-41aa-8928-8820a248b579"",
        ""type"": ""user_provided_service_instance"",
        ""syslog_drain_url"": ""https://foo.com/url-19"",
        ""route_service_url"": null,
        ""space_url"": ""/v2/spaces/3e70b000-a536-4376-8570-ac7e644dbe71"",
        ""service_bindings_url"": ""/v2/user_provided_service_instances/d2e24539-99c9-4872-a026-4791f825f7b4/service_bindings"",
        ""routes_url"": ""/v2/user_provided_service_instances/d2e24539-99c9-4872-a026-4791f825f7b4/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUserProvidedServiceInstancesResponse> page = Utilities.DeserializePage<ListAllUserProvidedServiceInstancesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b65e50c1-a551-41aa-8928-8820a248b579", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/d2e24539-99c9-4872-a026-4791f825f7b4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:09Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-190", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("b65e50c1-a551-41aa-8928-8820a248b579", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("https://foo.com/url-19", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/3e70b000-a536-4376-8570-ac7e644dbe71", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/d2e24539-99c9-4872-a026-4791f825f7b4/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/d2e24539-99c9-4872-a026-4791f825f7b4/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c6a25dd0-9224-47c4-ac7f-6375ee8662ab"",
        ""url"": ""/v2/service_bindings/5b074892-ba97-47c0-88fa-7e697ebcc5df"",
        ""created_at"": ""2016-03-30T10:15:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""c6a25dd0-9224-47c4-ac7f-6375ee8662ab"",
        ""service_instance_guid"": ""c6a25dd0-9224-47c4-ac7f-6375ee8662ab"",
        ""credentials"": {
          ""creds-key-10"": ""creds-val-10""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/fdbc6ed7-ee57-40a9-91f3-940047b4c748"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/c04f521e-bb63-46aa-9f38-28afa3fc6af0""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForUserProvidedServiceInstanceResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForUserProvidedServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c6a25dd0-9224-47c4-ac7f-6375ee8662ab", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/5b074892-ba97-47c0-88fa-7e697ebcc5df", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:10Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("c6a25dd0-9224-47c4-ac7f-6375ee8662ab", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("c6a25dd0-9224-47c4-ac7f-6375ee8662ab", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/fdbc6ed7-ee57-40a9-91f3-940047b4c748", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/c04f521e-bb63-46aa-9f38-28afa3fc6af0", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""28c90170-d0b3-4407-afc0-acdf3327337f"",
    ""url"": ""/v2/user_provided_service_instances/89a7e2ec-94ab-42ae-825e-06765a9007fc"",
    ""created_at"": ""2016-03-30T10:15:10Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-213"",
    ""credentials"": {
      ""creds-key-8"": ""creds-val-8""
    },
    ""space_guid"": ""28c90170-d0b3-4407-afc0-acdf3327337f"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-29"",
    ""route_service_url"": ""https://foo.com/url-28"",
    ""space_url"": ""/v2/spaces/7791dac4-730f-4079-a950-f6585f702b04"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/89a7e2ec-94ab-42ae-825e-06765a9007fc/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/89a7e2ec-94ab-42ae-825e-06765a9007fc/routes""
  }
}";

            AssociateRouteWithUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<AssociateRouteWithUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("28c90170-d0b3-4407-afc0-acdf3327337f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/89a7e2ec-94ab-42ae-825e-06765a9007fc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:10Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-213", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("28c90170-d0b3-4407-afc0-acdf3327337f", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-29", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("https://foo.com/url-28", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/7791dac4-730f-4079-a950-f6585f702b04", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/89a7e2ec-94ab-42ae-825e-06765a9007fc/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/89a7e2ec-94ab-42ae-825e-06765a9007fc/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2377ef8c-05ad-4727-a736-d4bd55bcad3d"",
    ""url"": ""/v2/user_provided_service_instances/a2517ae5-58fc-4a0d-8787-05fd75e10bb9"",
    ""created_at"": ""2016-03-30T10:15:09Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-user-provided-instance"",
    ""credentials"": {
      ""somekey"": ""somevalue""
    },
    ""space_guid"": ""2377ef8c-05ad-4727-a736-d4bd55bcad3d"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""syslog://example.com"",
    ""route_service_url"": ""https://logger.example.com"",
    ""space_url"": ""/v2/spaces/2e24aefb-06c2-4e6f-b25d-e8846fc5e071"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/a2517ae5-58fc-4a0d-8787-05fd75e10bb9/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/a2517ae5-58fc-4a0d-8787-05fd75e10bb9/routes""
  }
}";

            CreateUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<CreateUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("2377ef8c-05ad-4727-a736-d4bd55bcad3d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/a2517ae5-58fc-4a0d-8787-05fd75e10bb9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-03-30T10:15:09Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-user-provided-instance", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("2377ef8c-05ad-4727-a736-d4bd55bcad3d", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("syslog://example.com", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("https://logger.example.com", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/2e24aefb-06c2-4e6f-b25d-e8846fc5e071", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/a2517ae5-58fc-4a0d-8787-05fd75e10bb9/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/a2517ae5-58fc-4a0d-8787-05fd75e10bb9/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }
    }
}
