//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UserProvidedServiceInstancesTest
    {


        [TestMethod]
        public void TestAssociateRouteWithUserProvidedServiceInstanceExperimentalResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1ff578d4-2fce-42dd-92c1-616cb3ec1940"",
    ""url"": ""/v2/user_provided_service_instances/6468951f-3a34-4e28-bb0a-cb2fcd28b9f8"",
    ""created_at"": ""2016-07-07T09:16:58Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1371"",
    ""credentials"": {
      ""creds-key-245"": ""creds-val-245""
    },
    ""space_guid"": ""1ff578d4-2fce-42dd-92c1-616cb3ec1940"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-60"",
    ""route_service_url"": ""https://foo.com/url-59"",
    ""space_url"": ""/v2/spaces/4dfbdb9d-3bc0-4f5e-8e06-c21641ade8d8"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/6468951f-3a34-4e28-bb0a-cb2fcd28b9f8/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/6468951f-3a34-4e28-bb0a-cb2fcd28b9f8/routes""
  }
}";

            AssociateRouteWithUserProvidedServiceInstanceExperimentalResponse obj = Utilities.DeserializeJson<AssociateRouteWithUserProvidedServiceInstanceExperimentalResponse>(json);

            Assert.AreEqual("1ff578d4-2fce-42dd-92c1-616cb3ec1940", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/6468951f-3a34-4e28-bb0a-cb2fcd28b9f8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1371", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1ff578d4-2fce-42dd-92c1-616cb3ec1940", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-60", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("https://foo.com/url-59", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/4dfbdb9d-3bc0-4f5e-8e06-c21641ade8d8", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/6468951f-3a34-4e28-bb0a-cb2fcd28b9f8/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/6468951f-3a34-4e28-bb0a-cb2fcd28b9f8/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""31fa1102-7ab7-468b-b62a-7b6f61a8a94a"",
    ""url"": ""/v2/user_provided_service_instances/b33ffc4d-7c62-4f8f-b0b0-2e2bb833f49a"",
    ""created_at"": ""2016-07-07T09:16:58Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-user-provided-instance"",
    ""credentials"": {
      ""somekey"": ""somevalue""
    },
    ""space_guid"": ""31fa1102-7ab7-468b-b62a-7b6f61a8a94a"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""syslog://example.com"",
    ""route_service_url"": ""https://logger.example.com"",
    ""space_url"": ""/v2/spaces/c7b695eb-5356-41f4-a6f7-a6e1a3db18b5"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/b33ffc4d-7c62-4f8f-b0b0-2e2bb833f49a/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/b33ffc4d-7c62-4f8f-b0b0-2e2bb833f49a/routes""
  }
}";

            CreateUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<CreateUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("31fa1102-7ab7-468b-b62a-7b6f61a8a94a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/b33ffc4d-7c62-4f8f-b0b0-2e2bb833f49a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-user-provided-instance", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("31fa1102-7ab7-468b-b62a-7b6f61a8a94a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("syslog://example.com", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("https://logger.example.com", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/c7b695eb-5356-41f4-a6f7-a6e1a3db18b5", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/b33ffc4d-7c62-4f8f-b0b0-2e2bb833f49a/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/b33ffc4d-7c62-4f8f-b0b0-2e2bb833f49a/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllRoutesForUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8c931218-32b4-4a06-8ab8-216383240e9d"",
        ""url"": ""/v2/routes/eac4c298-bcd3-4fab-ba57-74cbd23b833c"",
        ""created_at"": ""2016-07-07T09:16:58Z"",
        ""updated_at"": ""2016-07-07T09:16:58Z""
      },
      ""entity"": {
        ""host"": ""host-8"",
        ""path"": """",
        ""domain_guid"": ""8c931218-32b4-4a06-8ab8-216383240e9d"",
        ""space_guid"": ""8c931218-32b4-4a06-8ab8-216383240e9d"",
        ""service_instance_guid"": ""8c931218-32b4-4a06-8ab8-216383240e9d"",
        ""port"": 0,
        ""domain_url"": ""/v2/domains/e0d03ffe-d95c-4ec6-9b8c-77dd2865ad47"",
        ""space_url"": ""/v2/spaces/f68578e1-ea0c-41c7-bc9f-6555f24433ad"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/e3596dd0-5c7e-46bd-99ba-436d4da94e37"",
        ""apps_url"": ""/v2/routes/eac4c298-bcd3-4fab-ba57-74cbd23b833c/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForUserProvidedServiceInstanceResponse> page = Utilities.DeserializePage<ListAllRoutesForUserProvidedServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8c931218-32b4-4a06-8ab8-216383240e9d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/eac4c298-bcd3-4fab-ba57-74cbd23b833c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-8", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("8c931218-32b4-4a06-8ab8-216383240e9d", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("8c931218-32b4-4a06-8ab8-216383240e9d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8c931218-32b4-4a06-8ab8-216383240e9d", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/domains/e0d03ffe-d95c-4ec6-9b8c-77dd2865ad47", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/f68578e1-ea0c-41c7-bc9f-6555f24433ad", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/e3596dd0-5c7e-46bd-99ba-436d4da94e37", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/eac4c298-bcd3-4fab-ba57-74cbd23b833c/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""94601e58-4404-4600-a019-081834afea49"",
        ""url"": ""/v2/service_bindings/92fd94b3-292f-4e1d-9798-41fc8ffbeaf9"",
        ""created_at"": ""2016-07-07T09:16:58Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""94601e58-4404-4600-a019-081834afea49"",
        ""service_instance_guid"": ""94601e58-4404-4600-a019-081834afea49"",
        ""credentials"": {
          ""creds-key-255"": ""creds-val-255""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/701c574d-33de-4a77-9397-7b99bd6557a7"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/e4034ad2-0880-40c1-9bee-16732c1d1ff3""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForUserProvidedServiceInstanceResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForUserProvidedServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("94601e58-4404-4600-a019-081834afea49", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/92fd94b3-292f-4e1d-9798-41fc8ffbeaf9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("94601e58-4404-4600-a019-081834afea49", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("94601e58-4404-4600-a019-081834afea49", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/701c574d-33de-4a77-9397-7b99bd6557a7", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/e4034ad2-0880-40c1-9bee-16732c1d1ff3", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestListAllUserProvidedServiceInstancesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1665b613-db2e-49ef-b5e1-4e35ecfaeff6"",
        ""url"": ""/v2/user_provided_service_instances/e3436fdd-424b-4d55-bb5f-ddabed9b273b"",
        ""created_at"": ""2016-07-07T09:16:57Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1348"",
        ""credentials"": {
          ""creds-key-230"": ""creds-val-230""
        },
        ""space_guid"": ""1665b613-db2e-49ef-b5e1-4e35ecfaeff6"",
        ""type"": ""user_provided_service_instance"",
        ""syslog_drain_url"": ""https://foo.com/url-54"",
        ""route_service_url"": null,
        ""space_url"": ""/v2/spaces/339deb63-3121-46df-8d7a-6af7e9704678"",
        ""service_bindings_url"": ""/v2/user_provided_service_instances/e3436fdd-424b-4d55-bb5f-ddabed9b273b/service_bindings"",
        ""routes_url"": ""/v2/user_provided_service_instances/e3436fdd-424b-4d55-bb5f-ddabed9b273b/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUserProvidedServiceInstancesResponse> page = Utilities.DeserializePage<ListAllUserProvidedServiceInstancesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1665b613-db2e-49ef-b5e1-4e35ecfaeff6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/e3436fdd-424b-4d55-bb5f-ddabed9b273b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:57Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1348", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("1665b613-db2e-49ef-b5e1-4e35ecfaeff6", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("https://foo.com/url-54", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/339deb63-3121-46df-8d7a-6af7e9704678", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/e3436fdd-424b-4d55-bb5f-ddabed9b273b/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/e3436fdd-424b-4d55-bb5f-ddabed9b273b/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d3a03391-5229-434e-afd4-f60b396d2151"",
    ""url"": ""/v2/user_provided_service_instances/13845f22-d717-4c76-9adc-c6f7aeea3c16"",
    ""created_at"": ""2016-07-07T09:16:58Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1367"",
    ""credentials"": {
      ""creds-key-242"": ""creds-val-242""
    },
    ""space_guid"": ""d3a03391-5229-434e-afd4-f60b396d2151"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-58"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/fb97b49f-42e1-4518-acb8-4b7ddd0af7f3"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/13845f22-d717-4c76-9adc-c6f7aeea3c16/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/13845f22-d717-4c76-9adc-c6f7aeea3c16/routes""
  }
}";

            RetrieveUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<RetrieveUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("d3a03391-5229-434e-afd4-f60b396d2151", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/13845f22-d717-4c76-9adc-c6f7aeea3c16", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:58Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1367", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("d3a03391-5229-434e-afd4-f60b396d2151", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-58", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/fb97b49f-42e1-4518-acb8-4b7ddd0af7f3", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/13845f22-d717-4c76-9adc-c6f7aeea3c16/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/13845f22-d717-4c76-9adc-c6f7aeea3c16/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""da10a034-dfbe-463c-8cc7-495667abe7fd"",
    ""url"": ""/v2/user_provided_service_instances/1fbb5504-b131-42ab-8719-aecae241ac8b"",
    ""created_at"": ""2016-07-07T09:16:57Z"",
    ""updated_at"": ""2016-07-07T09:16:57Z""
  },
  ""entity"": {
    ""name"": ""name-1352"",
    ""credentials"": {
      ""somekey"": ""somenewvalue""
    },
    ""space_guid"": ""da10a034-dfbe-463c-8cc7-495667abe7fd"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-55"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/ec1477e4-1e5c-4ebb-ada0-3728d358a8df"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/1fbb5504-b131-42ab-8719-aecae241ac8b/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/1fbb5504-b131-42ab-8719-aecae241ac8b/routes""
  }
}";

            UpdateUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<UpdateUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("da10a034-dfbe-463c-8cc7-495667abe7fd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/1fbb5504-b131-42ab-8719-aecae241ac8b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-07-07T09:16:57Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-07-07T09:16:57Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1352", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("da10a034-dfbe-463c-8cc7-495667abe7fd", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-55", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/ec1477e4-1e5c-4ebb-ada0-3728d358a8df", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/1fbb5504-b131-42ab-8719-aecae241ac8b/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/1fbb5504-b131-42ab-8719-aecae241ac8b/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }
    }
}
