//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V3.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V3.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DropletsExperimentalEndpoint
{
        [TestMethod]
        public void ListAllDropletsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 2,
    ""first"": {
      ""href"": ""/v3/droplets?order_by=-created_at=1=2""
    },
    ""last"": {
      ""href"": ""/v3/droplets?order_by=-created_at=1=2""
    },
    ""next"": null,
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""5cd09151-4788-4893-9884-f6b7ca9e9669"",
      ""state"": ""STAGED"",
      ""error"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-2578"",
          ""stack"": ""name-2579""
        }
      },
      ""memory_limit"": 123,
      ""disk_limit"": 456,
      ""result"": {
        ""execution_metadata"": ""black-box-secrets"",
        ""process_types"": {
          ""web"": ""started""
        },
        ""hash"": {
          ""type"": ""sha1"",
          ""value"": ""my-hash""
        },
        ""buildpack"": ""https://github.com/cloudfoundry/detected-buildpack.git"",
        ""stack"": null
      },
      ""environment_variables"": {

      },
      ""created_at"": ""1970-01-01T00:00:02Z"",
      ""updated_at"": ""2016-03-30T10:15:43Z"",
      ""links"": {
        ""self"": {
          ""href"": ""/v3/droplets/330082f9-333e-40ff-90ed-825d7d99f538""
        },
        ""package"": {
          ""href"": ""/v3/packages/e3d2b552-64f1-49d8-925d-79ae406b6e0d""
        },
        ""app"": {
          ""href"": ""/v3/apps/0c1e5481-5141-4ad9-9c40-746e344947d6""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/0c1e5481-5141-4ad9-9c40-746e344947d6/current_droplet"",
          ""method"": ""PUT""
        }
      }
    },
    {
      ""guid"": ""5cd09151-4788-4893-9884-f6b7ca9e9669"",
      ""state"": ""STAGING"",
      ""error"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-2576"",
          ""stack"": ""name-2577""
        }
      },
      ""memory_limit"": 123,
      ""disk_limit"": null,
      ""result"": null,
      ""environment_variables"": {
        ""yuu"": ""huuu""
      },
      ""created_at"": ""1970-01-01T00:00:01Z"",
      ""updated_at"": ""2016-03-30T10:15:43Z"",
      ""links"": {
        ""self"": {
          ""href"": ""/v3/droplets/b0ce5e1c-4a8c-4555-841c-91ef3b258bbf""
        },
        ""package"": {
          ""href"": ""/v3/packages/e3d2b552-64f1-49d8-925d-79ae406b6e0d""
        },
        ""app"": {
          ""href"": ""/v3/apps/0c1e5481-5141-4ad9-9c40-746e344947d6""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/0c1e5481-5141-4ad9-9c40-746e344947d6/current_droplet"",
          ""method"": ""PUT""
        },
        ""buildpack"": {
          ""href"": ""/v2/buildpacks/a258b059-f2b9-44d7-b8a7-a9978ea2f99f""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.DropletsExperimental.ListAllDroplets().Result;

                Assert.AreEqual("5cd09151-4788-4893-9884-f6b7ca9e9669", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("STAGED", TestUtil.ToTestableString(obj[0].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj[0].MemoryLimit), true);
                Assert.AreEqual("456", TestUtil.ToTestableString(obj[0].DiskLimit), true);
                Assert.AreEqual("1970-01-01T00:00:02Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:43Z", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("5cd09151-4788-4893-9884-f6b7ca9e9669", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("STAGING", TestUtil.ToTestableString(obj[1].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj[1].MemoryLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].DiskLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].Result), true);
                Assert.AreEqual("1970-01-01T00:00:01Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:43Z", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void FiltersDropletsByStatesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 2,
    ""first"": {
      ""href"": ""/v3/apps/fe20f701-296d-47f8-af3f-5543c2b11fc7/droplets?order_by=-created_at=1=2=STAGED%2CFAILED""
    },
    ""last"": {
      ""href"": ""/v3/apps/fe20f701-296d-47f8-af3f-5543c2b11fc7/droplets?order_by=-created_at=1=2=STAGED%2CFAILED""
    },
    ""next"": null,
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""5fbb0d70-3e79-4ef4-b34e-a8900d52be5e"",
      ""state"": ""STAGED"",
      ""error"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-2550"",
          ""stack"": ""name-2551""
        }
      },
      ""memory_limit"": 123,
      ""disk_limit"": null,
      ""result"": {
        ""execution_metadata"": null,
        ""process_types"": ""{\""web\"":\""started\""}"",
        ""hash"": {
          ""type"": ""sha1"",
          ""value"": ""my-hash""
        },
        ""buildpack"": ""https://github.com/cloudfoundry/my-buildpack.git"",
        ""stack"": null
      },
      ""environment_variables"": {

      },
      ""created_at"": ""1970-01-01T00:00:02Z"",
      ""updated_at"": ""2016-03-30T10:15:43Z"",
      ""links"": {
        ""self"": {
          ""href"": ""/v3/droplets/94fde537-ee2c-4b24-a320-c53dc88bb206""
        },
        ""package"": {
          ""href"": ""/v3/packages/746e0e54-63a7-4820-bf61-8d0bcd676530""
        },
        ""app"": {
          ""href"": ""/v3/apps/fe20f701-296d-47f8-af3f-5543c2b11fc7""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/fe20f701-296d-47f8-af3f-5543c2b11fc7/current_droplet"",
          ""method"": ""PUT""
        }
      }
    },
    {
      ""guid"": ""5fbb0d70-3e79-4ef4-b34e-a8900d52be5e"",
      ""state"": ""FAILED"",
      ""error"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-2566"",
          ""stack"": ""name-2567""
        }
      },
      ""memory_limit"": 123,
      ""disk_limit"": null,
      ""result"": {
        ""execution_metadata"": null,
        ""process_types"": null,
        ""hash"": {
          ""type"": ""sha1"",
          ""value"": ""my-hash""
        },
        ""buildpack"": ""https://github.com/cloudfoundry/my-buildpack.git"",
        ""stack"": null
      },
      ""environment_variables"": {

      },
      ""created_at"": ""1970-01-01T00:00:02Z"",
      ""updated_at"": ""2016-03-30T10:15:43Z"",
      ""links"": {
        ""self"": {
          ""href"": ""/v3/droplets/71ff9b74-d2cf-4101-9e60-d65e32860063""
        },
        ""package"": {
          ""href"": ""/v3/packages/746e0e54-63a7-4820-bf61-8d0bcd676530""
        },
        ""app"": {
          ""href"": ""/v3/apps/fe20f701-296d-47f8-af3f-5543c2b11fc7""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/fe20f701-296d-47f8-af3f-5543c2b11fc7/current_droplet"",
          ""method"": ""PUT""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DropletsExperimental.FiltersDropletsByStates(guid).Result;

                Assert.AreEqual("5fbb0d70-3e79-4ef4-b34e-a8900d52be5e", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("STAGED", TestUtil.ToTestableString(obj[0].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj[0].MemoryLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DiskLimit), true);
                Assert.AreEqual("1970-01-01T00:00:02Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:43Z", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("5fbb0d70-3e79-4ef4-b34e-a8900d52be5e", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("FAILED", TestUtil.ToTestableString(obj[1].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj[1].MemoryLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].DiskLimit), true);
                Assert.AreEqual("1970-01-01T00:00:02Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:43Z", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void ListAssociatedDropletsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 2,
    ""first"": {
      ""href"": ""/v3/apps/ed5bf1f6-8c4a-489d-930e-b408b57ed80a/droplets?order_by=-created_at=1=2""
    },
    ""last"": {
      ""href"": ""/v3/apps/ed5bf1f6-8c4a-489d-930e-b408b57ed80a/droplets?order_by=-created_at=1=2""
    },
    ""next"": null,
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""8d5d8c0b-c86d-45b0-a51f-a45a017ab8ba"",
      ""state"": ""STAGED"",
      ""error"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-2526"",
          ""stack"": ""name-2527""
        }
      },
      ""memory_limit"": 123,
      ""disk_limit"": null,
      ""result"": {
        ""execution_metadata"": null,
        ""process_types"": ""{\""web\"":\""started\""}"",
        ""hash"": {
          ""type"": ""sha1"",
          ""value"": ""my-hash""
        },
        ""buildpack"": ""https://github.com/cloudfoundry/my-buildpack.git"",
        ""stack"": null
      },
      ""environment_variables"": {

      },
      ""created_at"": ""1970-01-01T00:00:02Z"",
      ""updated_at"": ""2016-03-30T10:15:42Z"",
      ""links"": {
        ""self"": {
          ""href"": ""/v3/droplets/35544dea-f422-4c51-8cf2-6830e54e45ae""
        },
        ""package"": {
          ""href"": ""/v3/packages/0d55573e-8f25-4df8-b96d-772958724bb7""
        },
        ""app"": {
          ""href"": ""/v3/apps/ed5bf1f6-8c4a-489d-930e-b408b57ed80a""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/ed5bf1f6-8c4a-489d-930e-b408b57ed80a/current_droplet"",
          ""method"": ""PUT""
        }
      }
    },
    {
      ""guid"": ""8d5d8c0b-c86d-45b0-a51f-a45a017ab8ba"",
      ""state"": ""STAGING"",
      ""error"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-2524"",
          ""stack"": ""name-2525""
        }
      },
      ""memory_limit"": 123,
      ""disk_limit"": null,
      ""result"": null,
      ""environment_variables"": {
        ""yuu"": ""huuu""
      },
      ""created_at"": ""1970-01-01T00:00:01Z"",
      ""updated_at"": ""2016-03-30T10:15:42Z"",
      ""links"": {
        ""self"": {
          ""href"": ""/v3/droplets/5a9915af-a03b-45e0-9372-504c3c5faf3d""
        },
        ""package"": {
          ""href"": ""/v3/packages/0d55573e-8f25-4df8-b96d-772958724bb7""
        },
        ""app"": {
          ""href"": ""/v3/apps/ed5bf1f6-8c4a-489d-930e-b408b57ed80a""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/ed5bf1f6-8c4a-489d-930e-b408b57ed80a/current_droplet"",
          ""method"": ""PUT""
        },
        ""buildpack"": {
          ""href"": ""/v2/buildpacks/d46a9b26-2066-480e-8ee2-b38d914e1eb7""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DropletsExperimental.ListAssociatedDroplets(guid).Result;

                Assert.AreEqual("8d5d8c0b-c86d-45b0-a51f-a45a017ab8ba", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("STAGED", TestUtil.ToTestableString(obj[0].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj[0].MemoryLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DiskLimit), true);
                Assert.AreEqual("1970-01-01T00:00:02Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:42Z", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("8d5d8c0b-c86d-45b0-a51f-a45a017ab8ba", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("STAGING", TestUtil.ToTestableString(obj[1].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj[1].MemoryLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].DiskLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].Result), true);
                Assert.AreEqual("1970-01-01T00:00:01Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:42Z", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void FiltersDropletsByStatesAppGuidsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 2,
    ""first"": {
      ""href"": ""/v3/droplets?app_guids=c5280bb6-55fa-4778-a39b-dda430e7ee59=-created_at=1=2=STAGED%2CFAILED""
    },
    ""last"": {
      ""href"": ""/v3/droplets?app_guids=c5280bb6-55fa-4778-a39b-dda430e7ee59=-created_at=1=2=STAGED%2CFAILED""
    },
    ""next"": null,
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""5b108d02-609d-4ac1-b392-6ac3c83fe048"",
      ""state"": ""STAGED"",
      ""error"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-2602"",
          ""stack"": ""name-2603""
        }
      },
      ""memory_limit"": 123,
      ""disk_limit"": 456,
      ""result"": {
        ""execution_metadata"": ""black-box-secrets"",
        ""process_types"": {
          ""web"": ""started""
        },
        ""hash"": {
          ""type"": ""sha1"",
          ""value"": ""my-hash""
        },
        ""buildpack"": ""https://github.com/cloudfoundry/detected-buildpack.git"",
        ""stack"": null
      },
      ""environment_variables"": {

      },
      ""created_at"": ""1970-01-01T00:00:02Z"",
      ""updated_at"": ""2016-03-30T10:15:43Z"",
      ""links"": {
        ""self"": {
          ""href"": ""/v3/droplets/6aea573d-e467-4669-be9e-1f16ba5ec2e5""
        },
        ""package"": {
          ""href"": ""/v3/packages/058d9d09-6a5e-40e6-aaf5-48e55a2fed8d""
        },
        ""app"": {
          ""href"": ""/v3/apps/c5280bb6-55fa-4778-a39b-dda430e7ee59""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/c5280bb6-55fa-4778-a39b-dda430e7ee59/current_droplet"",
          ""method"": ""PUT""
        }
      }
    },
    {
      ""guid"": ""5b108d02-609d-4ac1-b392-6ac3c83fe048"",
      ""state"": ""FAILED"",
      ""error"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-2618"",
          ""stack"": ""name-2619""
        }
      },
      ""memory_limit"": 123,
      ""disk_limit"": null,
      ""result"": {
        ""execution_metadata"": null,
        ""process_types"": null,
        ""hash"": {
          ""type"": ""sha1"",
          ""value"": ""my-hash""
        },
        ""buildpack"": ""https://github.com/cloudfoundry/my-buildpack.git"",
        ""stack"": null
      },
      ""environment_variables"": {

      },
      ""created_at"": ""1970-01-01T00:00:02Z"",
      ""updated_at"": ""2016-03-30T10:15:43Z"",
      ""links"": {
        ""self"": {
          ""href"": ""/v3/droplets/6ea06e82-c105-41d4-be67-c478b2646b0a""
        },
        ""package"": {
          ""href"": ""/v3/packages/058d9d09-6a5e-40e6-aaf5-48e55a2fed8d""
        },
        ""app"": {
          ""href"": ""/v3/apps/c5280bb6-55fa-4778-a39b-dda430e7ee59""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/c5280bb6-55fa-4778-a39b-dda430e7ee59/current_droplet"",
          ""method"": ""PUT""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.DropletsExperimental.FiltersDropletsByStatesAppGuids().Result;

                Assert.AreEqual("5b108d02-609d-4ac1-b392-6ac3c83fe048", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("STAGED", TestUtil.ToTestableString(obj[0].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj[0].MemoryLimit), true);
                Assert.AreEqual("456", TestUtil.ToTestableString(obj[0].DiskLimit), true);
                Assert.AreEqual("1970-01-01T00:00:02Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:43Z", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("5b108d02-609d-4ac1-b392-6ac3c83fe048", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("FAILED", TestUtil.ToTestableString(obj[1].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj[1].MemoryLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].DiskLimit), true);
                Assert.AreEqual("1970-01-01T00:00:02Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:43Z", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void GetDropletTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""85a6c88f-0a7f-4c47-9e18-942cf01b43b1"",
  ""state"": ""STAGED"",
  ""error"": ""example error"",
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""name-2626"",
      ""stack"": ""name-2627""
    }
  },
  ""memory_limit"": 123,
  ""disk_limit"": null,
  ""result"": {
    ""execution_metadata"": null,
    ""process_types"": null,
    ""hash"": {
      ""type"": ""sha1"",
      ""value"": null
    },
    ""buildpack"": ""http://buildpack.git.url.com"",
    ""stack"": null
  },
  ""environment_variables"": {
    ""cloud"": ""foundry""
  },
  ""created_at"": ""2016-03-30T10:15:43Z"",
  ""updated_at"": ""2016-03-30T10:15:43Z"",
  ""links"": {
    ""self"": {
      ""href"": ""/v3/droplets/6829eed6-9d3f-4847-9870-89f6c4923e1d""
    },
    ""package"": {
      ""href"": ""/v3/packages/5c3d90cc-03af-4a3f-a954-822d219b3e4e""
    },
    ""app"": {
      ""href"": ""/v3/apps/30ce0dc7-3c30-4259-9234-69ad5aa529ca""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/30ce0dc7-3c30-4259-9234-69ad5aa529ca/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DropletsExperimental.GetDroplet(guid).Result;


                Assert.AreEqual("85a6c88f-0a7f-4c47-9e18-942cf01b43b1", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("STAGED", TestUtil.ToTestableString(obj.State), true);
                Assert.AreEqual("example error", TestUtil.ToTestableString(obj.Error), true);
                Assert.AreEqual("123", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DiskLimit), true);
                Assert.AreEqual("2016-03-30T10:15:43Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:43Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void DeleteDropletTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.DropletsExperimental.DeleteDroplet(guid).Wait();

            }
        }

        [TestMethod]
        public void StagePackageTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""20cde9f5-2e90-4af4-9863-a04a58ee3f5a"",
  ""state"": ""PENDING"",
  ""error"": null,
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""http://github.com/myorg/awesome-buildpack"",
      ""stack"": ""cflinuxfs2""
    }
  },
  ""memory_limit"": 1024,
  ""disk_limit"": 4096,
  ""result"": null,
  ""environment_variables"": {
    ""CUSTOM_ENV_VAR"": ""hello"",
    ""CF_STACK"": ""cflinuxfs2"",
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""mem"": 1024,
        ""disk"": 4096,
        ""fds"": 16384
      },
      ""application_id"": ""b7f4ea14-7144-4938-89c0-f6da0197b5de"",
      ""application_version"": ""whatuuid"",
      ""application_name"": ""name-2517"",
      ""application_uris"": [

      ],
      ""version"": ""whatuuid"",
      ""name"": ""name-2517"",
      ""space_name"": ""name-2514"",
      ""space_id"": ""cc42b369-9754-4eb1-885f-e4c8fc2fb069"",
      ""uris"": [

      ],
      ""users"": null
    },
    ""MEMORY_LIMIT"": 1024,
    ""VCAP_SERVICES"": {

    }
  },
  ""created_at"": ""2016-03-30T10:15:42Z"",
  ""updated_at"": null,
  ""links"": {
    ""self"": {
      ""href"": ""/v3/droplets/whatuuid""
    },
    ""package"": {
      ""href"": ""/v3/packages/cb421c71-b721-4988-bd36-94138ae04c9c""
    },
    ""app"": {
      ""href"": ""/v3/apps/b7f4ea14-7144-4938-89c0-f6da0197b5de""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/b7f4ea14-7144-4938-89c0-f6da0197b5de/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                StagePackageRequest value = new StagePackageRequest();


                var obj = cfClient.DropletsExperimental.StagePackage(guid, value).Result;


                Assert.AreEqual("20cde9f5-2e90-4af4-9863-a04a58ee3f5a", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Error), true);
                Assert.AreEqual("1024", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("4096", TestUtil.ToTestableString(obj.DiskLimit), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Result), true);
                Assert.AreEqual("2016-03-30T10:15:42Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

    }
}