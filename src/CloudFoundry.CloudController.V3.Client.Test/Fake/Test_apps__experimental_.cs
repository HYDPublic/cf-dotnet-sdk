//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V3.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V3.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsExperimentalEndpoint
{
        [TestMethod]
        public void GetEnvForAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""environment_variables"": {
    ""SOME_KEY"": ""some_val""
  },
  ""staging_env_json"": {
    ""STAGING_ENV"": ""staging_value""
  },
  ""running_env_json"": {
    ""RUNNING_ENV"": ""running_value""
  },
  ""system_env_json"": {
    ""VCAP_SERVICES"": {
      ""label-10"": [
        {
          ""credentials"": {
            ""creds-key-12"": ""creds-val-12""
          },
          ""syslog_drain_url"": ""https://syslog.example.com/drain"",
          ""label"": ""label-10"",
          ""provider"": null,
          ""plan"": ""name-357"",
          ""name"": ""name-356"",
          ""tags"": [
            ""50% off""
          ]
        }
      ]
    }
  },
  ""application_env_json"": {
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""fds"": 16384
      },
      ""application_name"": ""app_name"",
      ""application_uris"": [

      ],
      ""name"": ""app_name"",
      ""space_name"": ""some_space"",
      ""space_id"": ""f8b5df4a-9dd7-4be0-8520-4f920a59dfcc"",
      ""uris"": [

      ],
      ""users"": null
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.GetEnvForApp(guid).Result;



            }
        }

        [TestMethod]
        public void DeleteAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.AppsExperimental.DeleteApp(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllAppsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 3,
    ""first"": {
      ""href"": ""/v3/apps?order_by=-created_at=1=2""
    },
    ""last"": {
      ""href"": ""/v3/apps?order_by=-created_at=2=2""
    },
    ""next"": {
      ""href"": ""/v3/apps?order_by=-created_at=2=2""
    },
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""70fbb043-c03c-45c8-af94-03a9a6dc895c"",
      ""name"": ""my_app3"",
      ""desired_state"": ""STOPPED"",
      ""total_desired_instances"": 0,
      ""created_at"": ""1970-01-01T00:00:03Z"",
      ""updated_at"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-400"",
          ""stack"": ""name-401""
        }
      },
      ""environment_variables"": {
        ""magic"": ""beautiful""
      },
      ""links"": {
        ""self"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2""
        },
        ""space"": {
          ""href"": ""/v2/spaces/130ba254-7876-449e-8617-61cb4caab148""
        },
        ""processes"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2/processes""
        },
        ""route_mappings"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2/route_mappings""
        },
        ""packages"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2/packages""
        },
        ""droplets"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2/droplets""
        },
        ""tasks"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2/tasks""
        },
        ""start"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2/start"",
          ""method"": ""PUT""
        },
        ""stop"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2/stop"",
          ""method"": ""PUT""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/c0d5fd01-d9f1-417c-855a-ad35d144efc2/current_droplet"",
          ""method"": ""PUT""
        }
      }
    },
    {
      ""guid"": ""70fbb043-c03c-45c8-af94-03a9a6dc895c"",
      ""name"": ""my_app2"",
      ""desired_state"": ""STOPPED"",
      ""total_desired_instances"": 0,
      ""created_at"": ""1970-01-01T00:00:02Z"",
      ""updated_at"": null,
      ""lifecycle"": {
        ""type"": ""buildpack"",
        ""data"": {
          ""buildpack"": ""name-398"",
          ""stack"": ""name-399""
        }
      },
      ""environment_variables"": {

      },
      ""links"": {
        ""self"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8""
        },
        ""space"": {
          ""href"": ""/v2/spaces/130ba254-7876-449e-8617-61cb4caab148""
        },
        ""processes"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8/processes""
        },
        ""route_mappings"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8/route_mappings""
        },
        ""packages"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8/packages""
        },
        ""droplets"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8/droplets""
        },
        ""tasks"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8/tasks""
        },
        ""start"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8/start"",
          ""method"": ""PUT""
        },
        ""stop"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8/stop"",
          ""method"": ""PUT""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/84faef3b-4b52-4deb-96b1-23f7718220d8/current_droplet"",
          ""method"": ""PUT""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.AppsExperimental.ListAllApps().Result;

                Assert.AreEqual("70fbb043-c03c-45c8-af94-03a9a6dc895c", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("my_app3", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj[0].DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj[0].TotalDesiredInstances), true);
                Assert.AreEqual("1970-01-01T00:00:03Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("70fbb043-c03c-45c8-af94-03a9a6dc895c", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("my_app2", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj[1].DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj[1].TotalDesiredInstances), true);
                Assert.AreEqual("1970-01-01T00:00:02Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void StoppingAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""e1589056-baf9-4ca4-b205-7a52440933a6"",
  ""name"": ""original_name"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2016-03-30T10:15:13Z"",
  ""updated_at"": ""2016-03-30T10:15:13Z"",
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""name-373"",
      ""stack"": ""name-374""
    }
  },
  ""environment_variables"": {

  },
  ""links"": {
    ""self"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38""
    },
    ""space"": {
      ""href"": ""/v2/spaces/e5fd6c88-ea41-498e-a5b6-6b4bfc6be548""
    },
    ""processes"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38/processes""
    },
    ""route_mappings"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38/route_mappings""
    },
    ""packages"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38/packages""
    },
    ""droplet"": {
      ""href"": ""/v3/droplets/c6369c52-e222-4937-a090-ac7f91f2e1a9""
    },
    ""droplets"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38/droplets""
    },
    ""tasks"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38/tasks""
    },
    ""start"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/3c72e117-83aa-45dc-85d3-5e7eeeb6ab38/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.StoppingApp(guid).Result;


                Assert.AreEqual("e1589056-baf9-4ca4-b205-7a52440933a6", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("original_name", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void AssignDropletAsAppsCurrentDropletTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""727745b5-8216-41f4-8ef9-cd118c6d0a20"",
  ""name"": ""name1"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 1,
  ""created_at"": ""2016-03-30T10:15:13Z"",
  ""updated_at"": ""2016-03-30T10:15:13Z"",
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""name-378"",
      ""stack"": ""name-379""
    }
  },
  ""environment_variables"": {

  },
  ""links"": {
    ""self"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4""
    },
    ""space"": {
      ""href"": ""/v2/spaces/c0a0ce73-a09f-471f-a1e6-0ffb59e543b4""
    },
    ""processes"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4/processes""
    },
    ""route_mappings"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4/route_mappings""
    },
    ""packages"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4/packages""
    },
    ""droplet"": {
      ""href"": ""/v3/droplets/c5063b0e-8e37-40ea-8ada-5db516afe178""
    },
    ""droplets"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4/droplets""
    },
    ""tasks"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4/tasks""
    },
    ""start"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/cb9a113a-5bdc-4a66-828b-7dfaff1a76b4/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                AssignDropletAsAppsCurrentDropletRequest value = new AssignDropletAsAppsCurrentDropletRequest();


                var obj = cfClient.AppsExperimental.AssignDropletAsAppsCurrentDroplet(guid, value).Result;


                Assert.AreEqual("727745b5-8216-41f4-8ef9-cd118c6d0a20", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("name1", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void GetDetailedStatsForAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""processes"": [
    {
      ""type"": ""web"",
      ""index"": 0,
      ""state"": ""RUNNING"",
      ""usage"": {
        ""time"": ""2016-03-30 10:15:12 UTC"",
        ""cpu"": 80,
        ""mem"": 128,
        ""disk"": 1024
      },
      ""host"": ""toast"",
      ""port"": 8080,
      ""uptime"": 1,
      ""mem_quota"": 1073741824,
      ""disk_quota"": 1073741824,
      ""fds_quota"": 16384
    },
    {
      ""type"": ""web"",
      ""index"": 1,
      ""state"": ""RUNNING"",
      ""usage"": {
        ""time"": ""2016-03-30 10:15:12 UTC"",
        ""cpu"": 80,
        ""mem"": 128,
        ""disk"": 1024
      },
      ""host"": ""toast"",
      ""port"": 8080,
      ""uptime"": 1,
      ""mem_quota"": 1073741824,
      ""disk_quota"": 1073741824,
      ""fds_quota"": 16384
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.GetDetailedStatsForApp(guid).Result;



            }
        }

        [TestMethod]
        public void UpdateAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""e99f15ce-8408-4f2d-b08a-5f18b7f3461c"",
  ""name"": ""new_name"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2016-03-30T10:15:13Z"",
  ""updated_at"": ""2016-03-30T10:15:13Z"",
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""http://gitwheel.org/my-app"",
      ""stack"": ""redhat""
    }
  },
  ""environment_variables"": {
    ""MY_ENV_VAR"": ""foobar"",
    ""FOOBAR"": ""MY_ENV_VAR""
  },
  ""links"": {
    ""self"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794""
    },
    ""space"": {
      ""href"": ""/v2/spaces/081b7d8d-b054-4a53-97d8-97ce13f74453""
    },
    ""processes"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794/processes""
    },
    ""route_mappings"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794/route_mappings""
    },
    ""packages"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794/packages""
    },
    ""droplets"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794/droplets""
    },
    ""tasks"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794/tasks""
    },
    ""start"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/0336859e-457c-427a-ab47-0a73c472d794/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateAppRequest value = new UpdateAppRequest();


                var obj = cfClient.AppsExperimental.UpdateApp(guid, value).Result;


                Assert.AreEqual("e99f15ce-8408-4f2d-b08a-5f18b7f3461c", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void CreateDockerAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""54cc3ba3-191c-4b50-8a74-1d70c32030a1"",
  ""name"": ""my_app"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2016-03-30T10:15:13Z"",
  ""updated_at"": null,
  ""lifecycle"": {
    ""type"": ""docker"",
    ""data"": {

    }
  },
  ""environment_variables"": {
    ""open"": ""source""
  },
  ""links"": {
    ""self"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051""
    },
    ""space"": {
      ""href"": ""/v2/spaces/35043e48-ef58-4d78-b546-3dcc8b03b9b5""
    },
    ""processes"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051/processes""
    },
    ""route_mappings"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051/route_mappings""
    },
    ""packages"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051/packages""
    },
    ""droplets"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051/droplets""
    },
    ""tasks"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051/tasks""
    },
    ""start"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/ff732f04-8f26-4a09-9545-4bb9de953051/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateDockerAppRequest value = new CreateDockerAppRequest();


                var obj = cfClient.AppsExperimental.CreateDockerApp(value).Result;


                Assert.AreEqual("54cc3ba3-191c-4b50-8a74-1d70c32030a1", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("my_app", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void StartingAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""7e9e4958-1298-4aca-9d42-ec256ab0e514"",
  ""name"": ""original_name"",
  ""desired_state"": ""STARTED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2016-03-30T10:15:12Z"",
  ""updated_at"": ""2016-03-30T10:15:12Z"",
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""name-352"",
      ""stack"": ""name-353""
    }
  },
  ""environment_variables"": {

  },
  ""links"": {
    ""self"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d""
    },
    ""space"": {
      ""href"": ""/v2/spaces/1c86e17a-c20f-4a0f-b2a4-b263ac01dd10""
    },
    ""processes"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d/processes""
    },
    ""route_mappings"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d/route_mappings""
    },
    ""packages"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d/packages""
    },
    ""droplet"": {
      ""href"": ""/v3/droplets/337be933-eec0-42b4-ab75-5289d9c55c39""
    },
    ""droplets"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d/droplets""
    },
    ""tasks"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d/tasks""
    },
    ""start"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/fb8075c7-fe92-4f50-bba1-4fdf005aa19d/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.StartingApp(guid).Result;


                Assert.AreEqual("7e9e4958-1298-4aca-9d42-ec256ab0e514", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("original_name", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2016-03-30T10:15:12Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2016-03-30T10:15:12Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void GetAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""bf612188-bc6f-4346-abee-0ebfa6e30998"",
  ""name"": ""my_app"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 3,
  ""created_at"": ""2016-03-30T10:15:13Z"",
  ""updated_at"": null,
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""name-387"",
      ""stack"": ""name-388""
    }
  },
  ""environment_variables"": {
    ""unicorn"": ""horn""
  },
  ""links"": {
    ""self"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec""
    },
    ""space"": {
      ""href"": ""/v2/spaces/a70cf46a-a130-46a2-b714-811884b76f8b""
    },
    ""processes"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec/processes""
    },
    ""route_mappings"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec/route_mappings""
    },
    ""packages"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec/packages""
    },
    ""droplet"": {
      ""href"": ""/v3/droplets/a-droplet-guid""
    },
    ""droplets"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec/droplets""
    },
    ""tasks"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec/tasks""
    },
    ""start"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/6fdd3d2c-a56a-4765-a3fd-2c379d1c2eec/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.GetApp(guid).Result;


                Assert.AreEqual("bf612188-bc6f-4346-abee-0ebfa6e30998", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("my_app", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("3", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void CreateAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""df7e1575-3415-4dfa-9832-5574d79a223b"",
  ""name"": ""my_app"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2016-03-30T10:15:13Z"",
  ""updated_at"": null,
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""name-365"",
      ""stack"": ""default-stack-name""
    }
  },
  ""environment_variables"": {
    ""open"": ""source""
  },
  ""links"": {
    ""self"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044""
    },
    ""space"": {
      ""href"": ""/v2/spaces/b4a598ef-a8d1-4481-9eda-2540429094c8""
    },
    ""processes"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044/processes""
    },
    ""route_mappings"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044/route_mappings""
    },
    ""packages"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044/packages""
    },
    ""droplets"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044/droplets""
    },
    ""tasks"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044/tasks""
    },
    ""start"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/ef844e65-2504-4f43-adcc-7997be7b0044/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateAppRequest value = new CreateAppRequest();


                var obj = cfClient.AppsExperimental.CreateApp(value).Result;


                Assert.AreEqual("df7e1575-3415-4dfa-9832-5574d79a223b", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("my_app", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2016-03-30T10:15:13Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

    }
}