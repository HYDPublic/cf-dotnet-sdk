//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V3.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V3.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class PackagesExperimentalEndpoint
{
        [TestMethod]
        public void CopyPackageTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""9283ab6e-9ef9-46a1-b1ad-c4ec525608ad"",
  ""type"": ""docker"",
  ""data"": {
    ""hash"": {
      ""type"": ""sha1"",
      ""value"": null
    },
    ""error"": null,
    ""image"": ""http://awesome-sauce.com"",
    ""credentials"": {

    },
    ""store_image"": false
  },
  ""state"": ""READY"",
  ""created_at"": ""2016-07-07T09:17:16Z"",
  ""updated_at"": null,
  ""links"": {
    ""self"": {
      ""href"": ""/v3/packages/d541ebdf-186b-4f74-8d2c-50931d704ce6""
    },
    ""app"": {
      ""href"": ""/v3/apps/4cdce3c2-09d7-4826-aa12-0de8e95c3c61""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.PackagesExperimental.CopyPackage(guid).Result;


                Assert.AreEqual("9283ab6e-9ef9-46a1-b1ad-c4ec525608ad", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("docker", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("READY", TestUtil.ToTestableString(obj.State), true);
                Assert.AreEqual("2016-07-07T09:17:16Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void CreatePackageTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""84120290-c0fd-4de6-bad5-baf52d968fd0"",
  ""type"": ""docker"",
  ""data"": {
    ""hash"": {
      ""type"": ""sha1"",
      ""value"": null
    },
    ""error"": null,
    ""image"": ""registry/image:latest"",
    ""credentials"": {
      ""user"": ""user name"",
      ""email"": ""root@admin.example.com"",
      ""password"": ""very secret password"",
      ""login_server"": ""https://index.docker.io/v1""
    },
    ""store_image"": true
  },
  ""state"": ""READY"",
  ""created_at"": ""2016-07-07T09:17:16Z"",
  ""updated_at"": null,
  ""links"": {
    ""self"": {
      ""href"": ""/v3/packages/749fa305-e31b-4a77-b649-be9efabe82d9""
    },
    ""app"": {
      ""href"": ""/v3/apps/553def5a-3c79-4878-af65-8065994d9c5a""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                CreatePackageRequest value = new CreatePackageRequest();


                var obj = cfClient.PackagesExperimental.CreatePackage(guid, value).Result;


                Assert.AreEqual("84120290-c0fd-4de6-bad5-baf52d968fd0", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("docker", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("READY", TestUtil.ToTestableString(obj.State), true);
                Assert.AreEqual("2016-07-07T09:17:16Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void DeletePackageTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.PackagesExperimental.DeletePackage(guid).Wait();

            }
        }

        [TestMethod]
        public void GetPackageTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""67bfc1f1-46b1-4240-92cb-b7589a5a95ec"",
  ""type"": ""bits"",
  ""data"": {
    ""hash"": {
      ""type"": ""sha1"",
      ""value"": null
    },
    ""error"": null
  },
  ""state"": ""AWAITING_UPLOAD"",
  ""created_at"": ""2016-07-07T09:17:16Z"",
  ""updated_at"": null,
  ""links"": {
    ""self"": {
      ""href"": ""/v3/packages/7c838f50-6511-49c5-a5d1-2f923a0035b7""
    },
    ""upload"": {
      ""href"": ""/v3/packages/7c838f50-6511-49c5-a5d1-2f923a0035b7/upload"",
      ""method"": ""POST""
    },
    ""download"": {
      ""href"": ""/v3/packages/7c838f50-6511-49c5-a5d1-2f923a0035b7/download"",
      ""method"": ""GET""
    },
    ""stage"": {
      ""href"": ""/v3/packages/7c838f50-6511-49c5-a5d1-2f923a0035b7/droplets"",
      ""method"": ""POST""
    },
    ""app"": {
      ""href"": ""/v3/apps/c481c8ec-b1ac-4f81-8b0b-9a7f0e06cdff""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.PackagesExperimental.GetPackage(guid).Result;


                Assert.AreEqual("67bfc1f1-46b1-4240-92cb-b7589a5a95ec", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("bits", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("AWAITING_UPLOAD", TestUtil.ToTestableString(obj.State), true);
                Assert.AreEqual("2016-07-07T09:17:16Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void ListAllPackagesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 3,
    ""first"": {
      ""href"": ""/v3/packages?page=1=2""
    },
    ""last"": {
      ""href"": ""/v3/packages?page=2=2""
    },
    ""next"": {
      ""href"": ""/v3/packages?page=2=2""
    },
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""95d16faf-7a70-4c40-8bfc-abcebef23ba8"",
      ""type"": ""bits"",
      ""data"": {
        ""hash"": {
          ""type"": ""sha1"",
          ""value"": null
        },
        ""error"": null
      },
      ""state"": ""AWAITING_UPLOAD"",
      ""created_at"": ""2016-07-07T09:17:16Z"",
      ""updated_at"": null,
      ""links"": {
        ""self"": {
          ""href"": ""/v3/packages/04151e70-a031-49b8-b6b8-0b54bbd800ea""
        },
        ""upload"": {
          ""href"": ""/v3/packages/04151e70-a031-49b8-b6b8-0b54bbd800ea/upload"",
          ""method"": ""POST""
        },
        ""download"": {
          ""href"": ""/v3/packages/04151e70-a031-49b8-b6b8-0b54bbd800ea/download"",
          ""method"": ""GET""
        },
        ""stage"": {
          ""href"": ""/v3/packages/04151e70-a031-49b8-b6b8-0b54bbd800ea/droplets"",
          ""method"": ""POST""
        },
        ""app"": {
          ""href"": ""/v3/apps/db506ca4-9491-4ed9-8124-f9578c1dd8be""
        }
      }
    },
    {
      ""guid"": ""95d16faf-7a70-4c40-8bfc-abcebef23ba8"",
      ""type"": ""docker"",
      ""data"": {
        ""hash"": {
          ""type"": ""sha1"",
          ""value"": null
        },
        ""error"": null,
        ""image"": ""http://location-of-image.com"",
        ""credentials"": {

        },
        ""store_image"": false
      },
      ""state"": ""READY"",
      ""created_at"": ""2016-07-07T09:17:16Z"",
      ""updated_at"": null,
      ""links"": {
        ""self"": {
          ""href"": ""/v3/packages/16a7c9bc-67df-49b5-a04b-51e5dc13e5ca""
        },
        ""app"": {
          ""href"": ""/v3/apps/db506ca4-9491-4ed9-8124-f9578c1dd8be""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.PackagesExperimental.ListAllPackages().Result;

                Assert.AreEqual("95d16faf-7a70-4c40-8bfc-abcebef23ba8", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("bits", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("AWAITING_UPLOAD", TestUtil.ToTestableString(obj[0].State), true);
                Assert.AreEqual("2016-07-07T09:17:16Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("95d16faf-7a70-4c40-8bfc-abcebef23ba8", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("docker", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("READY", TestUtil.ToTestableString(obj[1].State), true);
                Assert.AreEqual("2016-07-07T09:17:16Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void StagePackageTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""9f486b79-1c04-47f2-976f-ec4a020ff378"",
  ""state"": ""PENDING"",
  ""error"": null,
  ""lifecycle"": {
    ""type"": ""buildpack"",
    ""data"": {
      ""buildpack"": ""http://github.com/myorg/awesome-buildpack"",
      ""stack"": ""cflinuxfs2""
    }
  },
  ""memory_limit"": 1024,
  ""disk_limit"": 4096,
  ""result"": {
    ""buildpack"": null,
    ""stack"": ""cflinuxfs2"",
    ""process_types"": null,
    ""hash"": {
      ""type"": ""sha1"",
      ""value"": null
    },
    ""execution_metadata"": null
  },
  ""environment_variables"": {
    ""CUSTOM_ENV_VAR"": ""hello"",
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""mem"": 1024,
        ""disk"": 4096,
        ""fds"": 16384
      },
      ""application_id"": ""1f9169b7-6640-4fc0-b135-917a5ba40b97"",
      ""application_version"": ""whatuuid"",
      ""application_name"": ""name-2404"",
      ""application_uris"": [

      ],
      ""version"": ""whatuuid"",
      ""name"": ""name-2404"",
      ""space_name"": ""name-2401"",
      ""space_id"": ""06bc564d-ae95-46d7-be69-91079fa1952f"",
      ""uris"": [

      ],
      ""users"": null
    },
    ""CF_STACK"": ""cflinuxfs2"",
    ""MEMORY_LIMIT"": 1024,
    ""VCAP_SERVICES"": {

    }
  },
  ""created_at"": ""2016-07-07T09:17:16Z"",
  ""updated_at"": null,
  ""links"": {
    ""self"": {
      ""href"": ""/v3/droplets/whatuuid""
    },
    ""package"": {
      ""href"": ""/v3/packages/092c3d83-1000-4924-a2ac-62eb6c2dfa9e""
    },
    ""app"": {
      ""href"": ""/v3/apps/1f9169b7-6640-4fc0-b135-917a5ba40b97""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/1f9169b7-6640-4fc0-b135-917a5ba40b97/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                StagePackageRequest value = new StagePackageRequest();


                var obj = cfClient.PackagesExperimental.StagePackage(guid, value).Result;


                Assert.AreEqual("9f486b79-1c04-47f2-976f-ec4a020ff378", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Error), true);
                Assert.AreEqual("1024", TestUtil.ToTestableString(obj.MemoryLimit), true);
                Assert.AreEqual("4096", TestUtil.ToTestableString(obj.DiskLimit), true);
                Assert.AreEqual("2016-07-07T09:17:16Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

    }
}